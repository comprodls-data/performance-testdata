<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="ComproDLS Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - Azgard" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="appid" elementType="Argument">
            <stringProp name="Argument.name">appid</stringProp>
            <stringProp name="Argument.value">default</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="startTime" elementType="Argument">
            <stringProp name="Argument.name">startTime</stringProp>
            <stringProp name="Argument.value">1504224000000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sectionCounter" elementType="Argument">
            <stringProp name="Argument.name">sectionCounter</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="minWait" elementType="Argument">
            <stringProp name="Argument.name">minWait</stringProp>
            <stringProp name="Argument.value">2000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="productSummary_max" elementType="Argument">
            <stringProp name="Argument.name">productSummary_max</stringProp>
            <stringProp name="Argument.value">8000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="productToc_max" elementType="Argument">
            <stringProp name="Argument.name">productToc_max</stringProp>
            <stringProp name="Argument.value">3000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="productRightpane_max" elementType="Argument">
            <stringProp name="Argument.name">productRightpane_max</stringProp>
            <stringProp name="Argument.value">8000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="activityStream_max" elementType="Argument">
            <stringProp name="Argument.name">activityStream_max</stringProp>
            <stringProp name="Argument.value">3000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="reader_max" elementType="Argument">
            <stringProp name="Argument.name">reader_max</stringProp>
            <stringProp name="Argument.value">8000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="dashboard_max" elementType="Argument">
            <stringProp name="Argument.name">dashboard_max</stringProp>
            <stringProp name="Argument.value">8000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="postComment_max" elementType="Argument">
            <stringProp name="Argument.name">postComment_max</stringProp>
            <stringProp name="Argument.value">2500</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="userProgress_max" elementType="Argument">
            <stringProp name="Argument.name">userProgress_max</stringProp>
            <stringProp name="Argument.value">3000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="auth_url" elementType="Argument">
            <stringProp name="Argument.name">auth_url</stringProp>
            <stringProp name="Argument.value">${__P(auth_url,dls-cup-staging1-960553130.us-east-1.elb.amazonaws.com/lb-auth)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="product_url" elementType="Argument">
            <stringProp name="Argument.name">product_url</stringProp>
            <stringProp name="Argument.value">${__P(product_url,dls-cup-staging1-960553130.us-east-1.elb.amazonaws.com/lb-product)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="collab_url" elementType="Argument">
            <stringProp name="Argument.name">collab_url</stringProp>
            <stringProp name="Argument.value">${__P(collab_url,dls-cup-staging1-960553130.us-east-1.elb.amazonaws.com/lb-collab)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="xapi_url" elementType="Argument">
            <stringProp name="Argument.name">xapi_url</stringProp>
            <stringProp name="Argument.value">${__P(xapi_url,dls-cup-staging1-960553130.us-east-1.elb.amazonaws.com/lb-xapi)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="analytics_url" elementType="Argument">
            <stringProp name="Argument.name">analytics_url</stringProp>
            <stringProp name="Argument.value">${__P(analytics_url,dls-cup-staging1-960553130.us-east-1.elb.amazonaws.com/lb-analytics)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="activity_url" elementType="Argument">
            <stringProp name="Argument.name">activity_url</stringProp>
            <stringProp name="Argument.value">${__P(activity_url,dls-cup-staging1-960553130.us-east-1.elb.amazonaws.com/lb-activity)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="chapter_num" elementType="Argument">
            <stringProp name="Argument.name">chapter_num</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="section_num" elementType="Argument">
            <stringProp name="Argument.name">section_num</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="accountid" elementType="Argument">
            <stringProp name="Argument.name">accountid</stringProp>
            <stringProp name="Argument.value">${__P(Account_id,jaskaran)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="classcode" elementType="Argument">
            <stringProp name="Argument.name">classcode</stringProp>
            <stringProp name="Argument.value">${__P(class_code,TD2J-MNb2)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="productcode" elementType="Argument">
            <stringProp name="Argument.name">productcode</stringProp>
            <stringProp name="Argument.value">${__P(product_code,evolve_14)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ext_product_id" elementType="Argument">
            <stringProp name="Argument.name">ext_product_id</stringProp>
            <stringProp name="Argument.value">${__P(product_code,14-evolve-14)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="task" elementType="Argument">
            <stringProp name="Argument.name">task</stringProp>
            <stringProp name="Argument.value">${__P(task_code,1528190348277/1528190372600/1528190482680)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="verb" elementType="Argument">
            <stringProp name="Argument.name">verb</stringProp>
            <stringProp name="Argument.value">${__P(verb_type,launched)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="classcode2" elementType="Argument">
            <stringProp name="Argument.name">classcode2</stringProp>
            <stringProp name="Argument.value">${__P(class_code,ZTbg-fcFB)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="spacecode" elementType="Argument">
            <stringProp name="Argument.name">spacecode</stringProp>
            <stringProp name="Argument.value">${__P(space_code,AAA-BBB-CCC)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - Azgard Updated" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="appid" elementType="Argument">
            <stringProp name="Argument.name">appid</stringProp>
            <stringProp name="Argument.value">default</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="startTime" elementType="Argument">
            <stringProp name="Argument.name">startTime</stringProp>
            <stringProp name="Argument.value">1504224000000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sectionCounter" elementType="Argument">
            <stringProp name="Argument.name">sectionCounter</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="minWait" elementType="Argument">
            <stringProp name="Argument.name">minWait</stringProp>
            <stringProp name="Argument.value">2000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="productSummary_max" elementType="Argument">
            <stringProp name="Argument.name">productSummary_max</stringProp>
            <stringProp name="Argument.value">8000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="productToc_max" elementType="Argument">
            <stringProp name="Argument.name">productToc_max</stringProp>
            <stringProp name="Argument.value">3000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="productRightpane_max" elementType="Argument">
            <stringProp name="Argument.name">productRightpane_max</stringProp>
            <stringProp name="Argument.value">8000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="activityStream_max" elementType="Argument">
            <stringProp name="Argument.name">activityStream_max</stringProp>
            <stringProp name="Argument.value">3000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="reader_max" elementType="Argument">
            <stringProp name="Argument.name">reader_max</stringProp>
            <stringProp name="Argument.value">8000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="dashboard_max" elementType="Argument">
            <stringProp name="Argument.name">dashboard_max</stringProp>
            <stringProp name="Argument.value">8000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="postComment_max" elementType="Argument">
            <stringProp name="Argument.name">postComment_max</stringProp>
            <stringProp name="Argument.value">2500</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="userProgress_max" elementType="Argument">
            <stringProp name="Argument.name">userProgress_max</stringProp>
            <stringProp name="Argument.value">3000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="auth_url" elementType="Argument">
            <stringProp name="Argument.name">auth_url</stringProp>
            <stringProp name="Argument.value">${__P(auth_url,dls-cup-staging1-960553130.us-east-1.elb.amazonaws.com/lb-auth)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="product_url" elementType="Argument">
            <stringProp name="Argument.name">product_url</stringProp>
            <stringProp name="Argument.value">${__P(product_url,dls-cup-staging1-960553130.us-east-1.elb.amazonaws.com/lb-product)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="collab_url" elementType="Argument">
            <stringProp name="Argument.name">collab_url</stringProp>
            <stringProp name="Argument.value">${__P(collab_url,dls-cup-staging1-960553130.us-east-1.elb.amazonaws.com/lb-collab)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="xapi_url" elementType="Argument">
            <stringProp name="Argument.name">xapi_url</stringProp>
            <stringProp name="Argument.value">${__P(xapi_url,dls-cup-staging1-960553130.us-east-1.elb.amazonaws.com/lb-xapi)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="analytics_url" elementType="Argument">
            <stringProp name="Argument.name">analytics_url</stringProp>
            <stringProp name="Argument.value">${__P(analytics_url,dls-cup-staging1-960553130.us-east-1.elb.amazonaws.com/lb-analytics)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="activity_url" elementType="Argument">
            <stringProp name="Argument.name">activity_url</stringProp>
            <stringProp name="Argument.value">${__P(activity_url,dls-cup-staging1-960553130.us-east-1.elb.amazonaws.com/lb-activity)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="chapter_num" elementType="Argument">
            <stringProp name="Argument.name">chapter_num</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="section_num" elementType="Argument">
            <stringProp name="Argument.name">section_num</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="accountid" elementType="Argument">
            <stringProp name="Argument.name">accountid</stringProp>
            <stringProp name="Argument.value">${__P(Account_id,jaskaran)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="productcode" elementType="Argument">
            <stringProp name="Argument.name">productcode</stringProp>
            <stringProp name="Argument.value">${__P(product_code,evolve_12)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ext_product_id" elementType="Argument">
            <stringProp name="Argument.name">ext_product_id</stringProp>
            <stringProp name="Argument.value">${__P(product_code,12-evolve-12)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="spacecode" elementType="Argument">
            <stringProp name="Argument.name">spacecode</stringProp>
            <stringProp name="Argument.value">${__P(space_code,AAA-BBB-CCC)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="task" elementType="Argument">
            <stringProp name="Argument.name">task</stringProp>
            <stringProp name="Argument.value">${__P(task_code,1528190348277/1528190372600/1528190482680)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="productid" elementType="Argument">
            <stringProp name="Argument.name">productid</stringProp>
            <stringProp name="Argument.value">${__P(productid,f4b98d53-b822-11e8-bfe1-0ac1053f7f68)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - Azgard Updated" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="appid" elementType="Argument">
            <stringProp name="Argument.name">appid</stringProp>
            <stringProp name="Argument.value">default</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="startTime" elementType="Argument">
            <stringProp name="Argument.name">startTime</stringProp>
            <stringProp name="Argument.value">1504224000000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sectionCounter" elementType="Argument">
            <stringProp name="Argument.name">sectionCounter</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="minWait" elementType="Argument">
            <stringProp name="Argument.name">minWait</stringProp>
            <stringProp name="Argument.value">2000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="productSummary_max" elementType="Argument">
            <stringProp name="Argument.name">productSummary_max</stringProp>
            <stringProp name="Argument.value">8000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="productToc_max" elementType="Argument">
            <stringProp name="Argument.name">productToc_max</stringProp>
            <stringProp name="Argument.value">3000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="productRightpane_max" elementType="Argument">
            <stringProp name="Argument.name">productRightpane_max</stringProp>
            <stringProp name="Argument.value">8000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="activityStream_max" elementType="Argument">
            <stringProp name="Argument.name">activityStream_max</stringProp>
            <stringProp name="Argument.value">3000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="reader_max" elementType="Argument">
            <stringProp name="Argument.name">reader_max</stringProp>
            <stringProp name="Argument.value">8000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="dashboard_max" elementType="Argument">
            <stringProp name="Argument.name">dashboard_max</stringProp>
            <stringProp name="Argument.value">8000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="postComment_max" elementType="Argument">
            <stringProp name="Argument.name">postComment_max</stringProp>
            <stringProp name="Argument.value">2500</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="userProgress_max" elementType="Argument">
            <stringProp name="Argument.name">userProgress_max</stringProp>
            <stringProp name="Argument.value">3000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="auth_url" elementType="Argument">
            <stringProp name="Argument.name">auth_url</stringProp>
            <stringProp name="Argument.value">${__P(auth_url,dls-cup-staging1-960553130.us-east-1.elb.amazonaws.com/lb-auth)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="product_url" elementType="Argument">
            <stringProp name="Argument.name">product_url</stringProp>
            <stringProp name="Argument.value">${__P(product_url,dls-cup-staging1-960553130.us-east-1.elb.amazonaws.com/lb-product)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="collab_url" elementType="Argument">
            <stringProp name="Argument.name">collab_url</stringProp>
            <stringProp name="Argument.value">${__P(collab_url,dls-cup-staging1-960553130.us-east-1.elb.amazonaws.com/lb-collab)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="xapi_url" elementType="Argument">
            <stringProp name="Argument.name">xapi_url</stringProp>
            <stringProp name="Argument.value">${__P(xapi_url,dls-cup-staging1-960553130.us-east-1.elb.amazonaws.com/lb-xapi)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="analytics_url" elementType="Argument">
            <stringProp name="Argument.name">analytics_url</stringProp>
            <stringProp name="Argument.value">${__P(analytics_url,dls-cup-staging1-960553130.us-east-1.elb.amazonaws.com/lb-analytics)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="activity_url" elementType="Argument">
            <stringProp name="Argument.name">activity_url</stringProp>
            <stringProp name="Argument.value">${__P(activity_url,dls-cup-staging1-960553130.us-east-1.elb.amazonaws.com/lb-activity)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="chapter_num" elementType="Argument">
            <stringProp name="Argument.name">chapter_num</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="section_num" elementType="Argument">
            <stringProp name="Argument.name">section_num</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="accountid" elementType="Argument">
            <stringProp name="Argument.name">accountid</stringProp>
            <stringProp name="Argument.value">${__P(Account_id,jaskaran)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="productcode" elementType="Argument">
            <stringProp name="Argument.name">productcode</stringProp>
            <stringProp name="Argument.value">${__P(product_code,evolve_12)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ext_product_id" elementType="Argument">
            <stringProp name="Argument.name">ext_product_id</stringProp>
            <stringProp name="Argument.value">${__P(product_code,12-evolve-12)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="spacecode" elementType="Argument">
            <stringProp name="Argument.name">spacecode</stringProp>
            <stringProp name="Argument.value">${__P(space_code,AAA-BBB-CCC)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="task" elementType="Argument">
            <stringProp name="Argument.name">task</stringProp>
            <stringProp name="Argument.value">${__P(task_code,1528190348277/1528190372600/1528190482680)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="productid" elementType="Argument">
            <stringProp name="Argument.name">productid</stringProp>
            <stringProp name="Argument.value">${__P(productid,f4b98d53-b822-11e8-bfe1-0ac1053f7f68)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - NEMO STG" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="appid" elementType="Argument">
            <stringProp name="Argument.name">appid</stringProp>
            <stringProp name="Argument.value">default</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="startTime" elementType="Argument">
            <stringProp name="Argument.name">startTime</stringProp>
            <stringProp name="Argument.value">1504224000000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sectionCounter" elementType="Argument">
            <stringProp name="Argument.name">sectionCounter</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="minWait" elementType="Argument">
            <stringProp name="Argument.name">minWait</stringProp>
            <stringProp name="Argument.value">2000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="productSummary_max" elementType="Argument">
            <stringProp name="Argument.name">productSummary_max</stringProp>
            <stringProp name="Argument.value">8000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="productToc_max" elementType="Argument">
            <stringProp name="Argument.name">productToc_max</stringProp>
            <stringProp name="Argument.value">3000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="productRightpane_max" elementType="Argument">
            <stringProp name="Argument.name">productRightpane_max</stringProp>
            <stringProp name="Argument.value">8000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="activityStream_max" elementType="Argument">
            <stringProp name="Argument.name">activityStream_max</stringProp>
            <stringProp name="Argument.value">3000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="reader_max" elementType="Argument">
            <stringProp name="Argument.name">reader_max</stringProp>
            <stringProp name="Argument.value">8000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="dashboard_max" elementType="Argument">
            <stringProp name="Argument.name">dashboard_max</stringProp>
            <stringProp name="Argument.value">8000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="postComment_max" elementType="Argument">
            <stringProp name="Argument.name">postComment_max</stringProp>
            <stringProp name="Argument.value">2500</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="userProgress_max" elementType="Argument">
            <stringProp name="Argument.name">userProgress_max</stringProp>
            <stringProp name="Argument.value">30000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="auth_url" elementType="Argument">
            <stringProp name="Argument.name">auth_url</stringProp>
            <stringProp name="Argument.value">${__P(auth_url,auth-staging1.comprodls.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="product_url" elementType="Argument">
            <stringProp name="Argument.name">product_url</stringProp>
            <stringProp name="Argument.value">${__P(product_url,product-staging1.comprodls.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="collab_url" elementType="Argument">
            <stringProp name="Argument.name">collab_url</stringProp>
            <stringProp name="Argument.value">${__P(collab_url,collab-staging1.comprodls.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="xapi_url" elementType="Argument">
            <stringProp name="Argument.name">xapi_url</stringProp>
            <stringProp name="Argument.value">${__P(xapi_url,xapi-staging1.comprodls.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="analytics_url" elementType="Argument">
            <stringProp name="Argument.name">analytics_url</stringProp>
            <stringProp name="Argument.value">${__P(analytics_url,analytics-staging1.comprodls.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="activity_url" elementType="Argument">
            <stringProp name="Argument.name">activity_url</stringProp>
            <stringProp name="Argument.value">${__P(activity_url,activity-staging1.comprodls.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="chapter_num" elementType="Argument">
            <stringProp name="Argument.name">chapter_num</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="section_num" elementType="Argument">
            <stringProp name="Argument.name">section_num</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="accountid" elementType="Argument">
            <stringProp name="Argument.name">accountid</stringProp>
            <stringProp name="Argument.value">${__P(Account_id,compro)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="classcode" elementType="Argument">
            <stringProp name="Argument.name">classcode</stringProp>
            <stringProp name="Argument.value">${__P(class_code,ca3C-jW4B)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="productcode" elementType="Argument">
            <stringProp name="Argument.name">productcode</stringProp>
            <stringProp name="Argument.value">${__P(product_code,evolve_l2)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ext_product_id" elementType="Argument">
            <stringProp name="Argument.name">ext_product_id</stringProp>
            <stringProp name="Argument.value">${__P(product_code,compro444555666)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="task" elementType="Argument">
            <stringProp name="Argument.name">task</stringProp>
            <stringProp name="Argument.value">${__P(task_code,1528190348277/1528190372600/1528190508292)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="verb" elementType="Argument">
            <stringProp name="Argument.name">verb</stringProp>
            <stringProp name="Argument.value">${__P(verb_type,launched)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="classcode2" elementType="Argument">
            <stringProp name="Argument.name">classcode2</stringProp>
            <stringProp name="Argument.value">${__P(class_code,ehaF-g2j7)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="spacecode" elementType="Argument">
            <stringProp name="Argument.name">spacecode</stringProp>
            <stringProp name="Argument.value">${__P(space_code,ABC-DEF-GHI)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - NEMO STG" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="appid" elementType="Argument">
            <stringProp name="Argument.name">appid</stringProp>
            <stringProp name="Argument.value">default</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="startTime" elementType="Argument">
            <stringProp name="Argument.name">startTime</stringProp>
            <stringProp name="Argument.value">1504224000000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sectionCounter" elementType="Argument">
            <stringProp name="Argument.name">sectionCounter</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="minWait" elementType="Argument">
            <stringProp name="Argument.name">minWait</stringProp>
            <stringProp name="Argument.value">2000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="productSummary_max" elementType="Argument">
            <stringProp name="Argument.name">productSummary_max</stringProp>
            <stringProp name="Argument.value">8000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="productToc_max" elementType="Argument">
            <stringProp name="Argument.name">productToc_max</stringProp>
            <stringProp name="Argument.value">3000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="productRightpane_max" elementType="Argument">
            <stringProp name="Argument.name">productRightpane_max</stringProp>
            <stringProp name="Argument.value">8000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="activityStream_max" elementType="Argument">
            <stringProp name="Argument.name">activityStream_max</stringProp>
            <stringProp name="Argument.value">3000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="reader_max" elementType="Argument">
            <stringProp name="Argument.name">reader_max</stringProp>
            <stringProp name="Argument.value">8000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="dashboard_max" elementType="Argument">
            <stringProp name="Argument.name">dashboard_max</stringProp>
            <stringProp name="Argument.value">8000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="postComment_max" elementType="Argument">
            <stringProp name="Argument.name">postComment_max</stringProp>
            <stringProp name="Argument.value">2500</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="userProgress_max" elementType="Argument">
            <stringProp name="Argument.name">userProgress_max</stringProp>
            <stringProp name="Argument.value">30000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="auth_url" elementType="Argument">
            <stringProp name="Argument.name">auth_url</stringProp>
            <stringProp name="Argument.value">${__P(auth_url,auth-staging1.comprodls.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="product_url" elementType="Argument">
            <stringProp name="Argument.name">product_url</stringProp>
            <stringProp name="Argument.value">${__P(product_url,product-staging1.comprodls.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="collab_url" elementType="Argument">
            <stringProp name="Argument.name">collab_url</stringProp>
            <stringProp name="Argument.value">${__P(collab_url,collab-staging1.comprodls.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="xapi_url" elementType="Argument">
            <stringProp name="Argument.name">xapi_url</stringProp>
            <stringProp name="Argument.value">${__P(xapi_url,xapi-staging1.comprodls.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="analytics_url" elementType="Argument">
            <stringProp name="Argument.name">analytics_url</stringProp>
            <stringProp name="Argument.value">${__P(analytics_url,analytics-staging1.comprodls.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="activity_url" elementType="Argument">
            <stringProp name="Argument.name">activity_url</stringProp>
            <stringProp name="Argument.value">${__P(activity_url,activity-staging1.comprodls.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="chapter_num" elementType="Argument">
            <stringProp name="Argument.name">chapter_num</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="section_num" elementType="Argument">
            <stringProp name="Argument.name">section_num</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="accountid" elementType="Argument">
            <stringProp name="Argument.name">accountid</stringProp>
            <stringProp name="Argument.value">${__P(Account_id,compro)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="productcode" elementType="Argument">
            <stringProp name="Argument.name">productcode</stringProp>
            <stringProp name="Argument.value">${__P(product_code,evolve_l2)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ext_product_id" elementType="Argument">
            <stringProp name="Argument.name">ext_product_id</stringProp>
            <stringProp name="Argument.value">${__P(product_code,compro444555666)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="task" elementType="Argument">
            <stringProp name="Argument.name">task</stringProp>
            <stringProp name="Argument.value">${__P(task_code,1528190348277/1528190372600/1528190508292)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="verb" elementType="Argument">
            <stringProp name="Argument.name">verb</stringProp>
            <stringProp name="Argument.value">${__P(verb_type,launched)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="spacecode" elementType="Argument">
            <stringProp name="Argument.name">spacecode</stringProp>
            <stringProp name="Argument.value">${__P(space_code,ABC-DEF-GHI)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Performance Test Data Setup" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">800</stringProp>
        <stringProp name="ThreadGroup.ramp_time">900</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - Azgard Updated" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="appid" elementType="Argument">
              <stringProp name="Argument.name">appid</stringProp>
              <stringProp name="Argument.value">default</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="startTime" elementType="Argument">
              <stringProp name="Argument.name">startTime</stringProp>
              <stringProp name="Argument.value">1504224000000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sectionCounter" elementType="Argument">
              <stringProp name="Argument.name">sectionCounter</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="minWait" elementType="Argument">
              <stringProp name="Argument.name">minWait</stringProp>
              <stringProp name="Argument.value">2000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="productSummary_max" elementType="Argument">
              <stringProp name="Argument.name">productSummary_max</stringProp>
              <stringProp name="Argument.value">8000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="productToc_max" elementType="Argument">
              <stringProp name="Argument.name">productToc_max</stringProp>
              <stringProp name="Argument.value">3000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="productRightpane_max" elementType="Argument">
              <stringProp name="Argument.name">productRightpane_max</stringProp>
              <stringProp name="Argument.value">8000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="activityStream_max" elementType="Argument">
              <stringProp name="Argument.name">activityStream_max</stringProp>
              <stringProp name="Argument.value">3000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="reader_max" elementType="Argument">
              <stringProp name="Argument.name">reader_max</stringProp>
              <stringProp name="Argument.value">8000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="dashboard_max" elementType="Argument">
              <stringProp name="Argument.name">dashboard_max</stringProp>
              <stringProp name="Argument.value">8000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="postComment_max" elementType="Argument">
              <stringProp name="Argument.name">postComment_max</stringProp>
              <stringProp name="Argument.value">2500</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userProgress_max" elementType="Argument">
              <stringProp name="Argument.name">userProgress_max</stringProp>
              <stringProp name="Argument.value">3000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="auth_url" elementType="Argument">
              <stringProp name="Argument.name">auth_url</stringProp>
              <stringProp name="Argument.value">${__P(auth_url,dls-cup-staging1-960553130.us-east-1.elb.amazonaws.com/lb-auth)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="product_url" elementType="Argument">
              <stringProp name="Argument.name">product_url</stringProp>
              <stringProp name="Argument.value">${__P(product_url,dls-cup-staging1-960553130.us-east-1.elb.amazonaws.com/lb-product)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="collab_url" elementType="Argument">
              <stringProp name="Argument.name">collab_url</stringProp>
              <stringProp name="Argument.value">${__P(collab_url,dls-cup-staging1-960553130.us-east-1.elb.amazonaws.com/lb-collab)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="xapi_url" elementType="Argument">
              <stringProp name="Argument.name">xapi_url</stringProp>
              <stringProp name="Argument.value">${__P(xapi_url,dls-cup-staging1-960553130.us-east-1.elb.amazonaws.com/lb-xapi)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="analytics_url" elementType="Argument">
              <stringProp name="Argument.name">analytics_url</stringProp>
              <stringProp name="Argument.value">${__P(analytics_url,dls-cup-staging1-960553130.us-east-1.elb.amazonaws.com/lb-analytics)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="activity_url" elementType="Argument">
              <stringProp name="Argument.name">activity_url</stringProp>
              <stringProp name="Argument.value">${__P(activity_url,dls-cup-staging1-960553130.us-east-1.elb.amazonaws.com/lb-activity)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="chapter_num" elementType="Argument">
              <stringProp name="Argument.name">chapter_num</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="section_num" elementType="Argument">
              <stringProp name="Argument.name">section_num</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="accountid" elementType="Argument">
              <stringProp name="Argument.name">accountid</stringProp>
              <stringProp name="Argument.value">${__P(Account_id,jaskaran)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="productcode" elementType="Argument">
              <stringProp name="Argument.name">productcode</stringProp>
              <stringProp name="Argument.value">${__P(product_code,evolve_12)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ext_product_id" elementType="Argument">
              <stringProp name="Argument.name">ext_product_id</stringProp>
              <stringProp name="Argument.value">${__P(product_code,12-evolve-12)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="spacecode" elementType="Argument">
              <stringProp name="Argument.name">spacecode</stringProp>
              <stringProp name="Argument.value">${__P(space_code,AAA-BBB-CCC)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="task" elementType="Argument">
              <stringProp name="Argument.name">task</stringProp>
              <stringProp name="Argument.value">${__P(task_code,1528190348277/1528190372600/1528190482680)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="productid" elementType="Argument">
              <stringProp name="Argument.name">productid</stringProp>
              <stringProp name="Argument.value">${__P(productid,f4b98d53-b822-11e8-bfe1-0ac1053f7f68)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1003" enabled="false"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Setup teacher accounts, create classes and associate a product" enabled="true"/>
          <hashTree>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="startdate" elementType="Argument">
                  <stringProp name="Argument.name">startdate</stringProp>
                  <stringProp name="Argument.value">${__P(Start_Date,1535799974000)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="enddate" elementType="Argument">
                  <stringProp name="Argument.name">enddate</stringProp>
                  <stringProp name="Argument.value">${__P(End_Date,1567335974000)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="delimiter">,</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="filename">Testdata\2set_1014.csv</stringProp>
              <boolProp name="ignoreFirstLine">true</boolProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <stringProp name="shareMode">shareMode.group</stringProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="variableNames">extuserid,classname</stringProp>
            </CSVDataSet>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get All the User Spaces" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Get_all_the_User_Spaces.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Join_a_space_with_space_code.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">60000</stringProp>
                <stringProp name="RandomTimer.range">40000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Get_all_the_User_Spaces.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Get_an_access_token_for_an_external_user.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/data_create_new_instructor_led_class.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">FileOutputStream out = new FileOutputStream(&quot;F:/apache-jmeter-4/bin/teacher_class1.csv&quot;, true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
fstream.close();

</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
                <stringProp name="RandomTimer.range">10000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Products of first space" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Get_products_of_first_space.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/associate_a_product_with_class.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
                <stringProp name="RandomTimer.range">5000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Setup students account in a institution space with class and product" enabled="true"/>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="delimiter">,</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="filename">Testdata\dataset\Existing _Student_Class_Product1.csv</stringProp>
              <boolProp name="ignoreFirstLine">true</boolProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <stringProp name="shareMode">shareMode.group</stringProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="variableNames">extuserid,classcode</stringProp>
            </CSVDataSet>
            <hashTree/>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
              <collectionProp name="Arguments.arguments">
                <elementProp name="appid" elementType="Argument">
                  <stringProp name="Argument.name">appid</stringProp>
                  <stringProp name="Argument.value">default</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="startTime" elementType="Argument">
                  <stringProp name="Argument.name">startTime</stringProp>
                  <stringProp name="Argument.value">1504224000000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sectionCounter" elementType="Argument">
                  <stringProp name="Argument.name">sectionCounter</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="minWait" elementType="Argument">
                  <stringProp name="Argument.name">minWait</stringProp>
                  <stringProp name="Argument.value">2000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="productSummary_max" elementType="Argument">
                  <stringProp name="Argument.name">productSummary_max</stringProp>
                  <stringProp name="Argument.value">8000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="productToc_max" elementType="Argument">
                  <stringProp name="Argument.name">productToc_max</stringProp>
                  <stringProp name="Argument.value">3000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="productRightpane_max" elementType="Argument">
                  <stringProp name="Argument.name">productRightpane_max</stringProp>
                  <stringProp name="Argument.value">8000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="activityStream_max" elementType="Argument">
                  <stringProp name="Argument.name">activityStream_max</stringProp>
                  <stringProp name="Argument.value">3000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="reader_max" elementType="Argument">
                  <stringProp name="Argument.name">reader_max</stringProp>
                  <stringProp name="Argument.value">8000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dashboard_max" elementType="Argument">
                  <stringProp name="Argument.name">dashboard_max</stringProp>
                  <stringProp name="Argument.value">8000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="postComment_max" elementType="Argument">
                  <stringProp name="Argument.name">postComment_max</stringProp>
                  <stringProp name="Argument.value">2500</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userProgress_max" elementType="Argument">
                  <stringProp name="Argument.name">userProgress_max</stringProp>
                  <stringProp name="Argument.value">30000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth_url" elementType="Argument">
                  <stringProp name="Argument.name">auth_url</stringProp>
                  <stringProp name="Argument.value">${__P(auth_url,auth-staging1.comprodls.com)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="product_url" elementType="Argument">
                  <stringProp name="Argument.name">product_url</stringProp>
                  <stringProp name="Argument.value">${__P(product_url,product-staging1.comprodls.com)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="collab_url" elementType="Argument">
                  <stringProp name="Argument.name">collab_url</stringProp>
                  <stringProp name="Argument.value">${__P(collab_url,collab-staging1.comprodls.com)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="xapi_url" elementType="Argument">
                  <stringProp name="Argument.name">xapi_url</stringProp>
                  <stringProp name="Argument.value">${__P(xapi_url,xapi-staging1.comprodls.com)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="analytics_url" elementType="Argument">
                  <stringProp name="Argument.name">analytics_url</stringProp>
                  <stringProp name="Argument.value">${__P(analytics_url,analytics-staging1.comprodls.com)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="activity_url" elementType="Argument">
                  <stringProp name="Argument.name">activity_url</stringProp>
                  <stringProp name="Argument.value">${__P(activity_url,activity-staging1.comprodls.com)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="chapter_num" elementType="Argument">
                  <stringProp name="Argument.name">chapter_num</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="section_num" elementType="Argument">
                  <stringProp name="Argument.name">section_num</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="accountid" elementType="Argument">
                  <stringProp name="Argument.name">accountid</stringProp>
                  <stringProp name="Argument.value">${__P(Account_id,compro)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="classcode" elementType="Argument">
                  <stringProp name="Argument.name">classcode</stringProp>
                  <stringProp name="Argument.value">${__P(class_code,ca3C-jW4B)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="productcode" elementType="Argument">
                  <stringProp name="Argument.name">productcode</stringProp>
                  <stringProp name="Argument.value">${__P(product_code,evolve_l2)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ext_product_id" elementType="Argument">
                  <stringProp name="Argument.name">ext_product_id</stringProp>
                  <stringProp name="Argument.value">${__P(product_code,compro444555666)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="task" elementType="Argument">
                  <stringProp name="Argument.name">task</stringProp>
                  <stringProp name="Argument.value">${__P(task_code,1528190348277/1528190372600/1528190508292)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with product_code and class_code" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Join_Spaces_with_product_code and_class_code.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">30000</stringProp>
            </TestAction>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">10</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Get_all_the_User_Spaces.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1014" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__P(Start_Date,1535799974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__P(End_Date,1567335974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\2set_1014.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid,classname</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get All the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Join_a_space_with_space_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">60000</stringProp>
              <stringProp name="RandomTimer.range">40000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller" enabled="false"/>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/data_create_new_instructor_led_class.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="false">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">FileOutputStream out = new FileOutputStream(&quot;F:/apache-jmeter-4/bin/teacher_class1.csv&quot;, true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
fstream.close();

</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class" enabled="false">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">10000</stringProp>
              <stringProp name="RandomTimer.range">10000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Products of first space" enabled="false">
            <stringProp name="IncludeController.includepath">Fragements/Get_products_of_first_space.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class" enabled="false">
            <stringProp name="IncludeController.includepath">Fragements/associate_a_product_with_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class" enabled="false">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">10000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get details for a specific class" enabled="false">
            <stringProp name="IncludeController.includepath">Fragements/Get_details_for_a_specific_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Setup teacher accounts, create classes and associate a product" enabled="true"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__P(Start_Date,1535799974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__P(End_Date,1567335974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\2set_1014.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid,classname</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get All the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Join_a_space_with_space_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">60000</stringProp>
              <stringProp name="RandomTimer.range">40000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller" enabled="true"/>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/data_create_new_instructor_led_class.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">FileOutputStream out = new FileOutputStream(&quot;F:/apache-jmeter-4/bin/teacher_class1.csv&quot;, true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
fstream.close();

</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">10000</stringProp>
              <stringProp name="RandomTimer.range">10000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Products of first space" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_products_of_first_space.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/associate_a_product_with_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">10000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get details for a specific class" enabled="false">
            <stringProp name="IncludeController.includepath">Fragements/Get_details_for_a_specific_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Setup students account in a private space with private product " enabled="true"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\dataset\Existing _Student_Product.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
            <collectionProp name="Arguments.arguments">
              <elementProp name="appid" elementType="Argument">
                <stringProp name="Argument.name">appid</stringProp>
                <stringProp name="Argument.value">default</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startTime" elementType="Argument">
                <stringProp name="Argument.name">startTime</stringProp>
                <stringProp name="Argument.value">1504224000000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sectionCounter" elementType="Argument">
                <stringProp name="Argument.name">sectionCounter</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="minWait" elementType="Argument">
                <stringProp name="Argument.name">minWait</stringProp>
                <stringProp name="Argument.value">2000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productSummary_max" elementType="Argument">
                <stringProp name="Argument.name">productSummary_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productToc_max" elementType="Argument">
                <stringProp name="Argument.name">productToc_max</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productRightpane_max" elementType="Argument">
                <stringProp name="Argument.name">productRightpane_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="activityStream_max" elementType="Argument">
                <stringProp name="Argument.name">activityStream_max</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="reader_max" elementType="Argument">
                <stringProp name="Argument.name">reader_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="dashboard_max" elementType="Argument">
                <stringProp name="Argument.name">dashboard_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="postComment_max" elementType="Argument">
                <stringProp name="Argument.name">postComment_max</stringProp>
                <stringProp name="Argument.value">2500</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="userProgress_max" elementType="Argument">
                <stringProp name="Argument.name">userProgress_max</stringProp>
                <stringProp name="Argument.value">30000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="auth_url" elementType="Argument">
                <stringProp name="Argument.name">auth_url</stringProp>
                <stringProp name="Argument.value">${__P(auth_url,auth-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="product_url" elementType="Argument">
                <stringProp name="Argument.name">product_url</stringProp>
                <stringProp name="Argument.value">${__P(product_url,product-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="collab_url" elementType="Argument">
                <stringProp name="Argument.name">collab_url</stringProp>
                <stringProp name="Argument.value">${__P(collab_url,collab-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="xapi_url" elementType="Argument">
                <stringProp name="Argument.name">xapi_url</stringProp>
                <stringProp name="Argument.value">${__P(xapi_url,xapi-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="analytics_url" elementType="Argument">
                <stringProp name="Argument.name">analytics_url</stringProp>
                <stringProp name="Argument.value">${__P(analytics_url,analytics-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="activity_url" elementType="Argument">
                <stringProp name="Argument.name">activity_url</stringProp>
                <stringProp name="Argument.value">${__P(activity_url,activity-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="chapter_num" elementType="Argument">
                <stringProp name="Argument.name">chapter_num</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="section_num" elementType="Argument">
                <stringProp name="Argument.name">section_num</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="accountid" elementType="Argument">
                <stringProp name="Argument.name">accountid</stringProp>
                <stringProp name="Argument.value">${__P(Account_id,compro)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="classcode" elementType="Argument">
                <stringProp name="Argument.name">classcode</stringProp>
                <stringProp name="Argument.value">${__P(class_code,ca3C-jW4B)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productcode" elementType="Argument">
                <stringProp name="Argument.name">productcode</stringProp>
                <stringProp name="Argument.value">${__P(product_code,evolve_l2)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_product_id" elementType="Argument">
                <stringProp name="Argument.name">ext_product_id</stringProp>
                <stringProp name="Argument.value">${__P(product_code,compro444555666)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="task" elementType="Argument">
                <stringProp name="Argument.name">task</stringProp>
                <stringProp name="Argument.value">${__P(task_code,1528190348277/1528190372600/1528190508292)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join_Spaces_with_product_code and_class_code_private" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Join_Spaces_with_product_code and_class_code_private.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">30000</stringProp>
          </TestAction>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">10</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Setup students account in a institution space with class and product" enabled="true"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\dataset\Existing _Student_Class_Product1.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid,classcode</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
            <collectionProp name="Arguments.arguments">
              <elementProp name="appid" elementType="Argument">
                <stringProp name="Argument.name">appid</stringProp>
                <stringProp name="Argument.value">default</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startTime" elementType="Argument">
                <stringProp name="Argument.name">startTime</stringProp>
                <stringProp name="Argument.value">1504224000000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sectionCounter" elementType="Argument">
                <stringProp name="Argument.name">sectionCounter</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="minWait" elementType="Argument">
                <stringProp name="Argument.name">minWait</stringProp>
                <stringProp name="Argument.value">2000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productSummary_max" elementType="Argument">
                <stringProp name="Argument.name">productSummary_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productToc_max" elementType="Argument">
                <stringProp name="Argument.name">productToc_max</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productRightpane_max" elementType="Argument">
                <stringProp name="Argument.name">productRightpane_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="activityStream_max" elementType="Argument">
                <stringProp name="Argument.name">activityStream_max</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="reader_max" elementType="Argument">
                <stringProp name="Argument.name">reader_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="dashboard_max" elementType="Argument">
                <stringProp name="Argument.name">dashboard_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="postComment_max" elementType="Argument">
                <stringProp name="Argument.name">postComment_max</stringProp>
                <stringProp name="Argument.value">2500</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="userProgress_max" elementType="Argument">
                <stringProp name="Argument.name">userProgress_max</stringProp>
                <stringProp name="Argument.value">30000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="auth_url" elementType="Argument">
                <stringProp name="Argument.name">auth_url</stringProp>
                <stringProp name="Argument.value">${__P(auth_url,auth-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="product_url" elementType="Argument">
                <stringProp name="Argument.name">product_url</stringProp>
                <stringProp name="Argument.value">${__P(product_url,product-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="collab_url" elementType="Argument">
                <stringProp name="Argument.name">collab_url</stringProp>
                <stringProp name="Argument.value">${__P(collab_url,collab-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="xapi_url" elementType="Argument">
                <stringProp name="Argument.name">xapi_url</stringProp>
                <stringProp name="Argument.value">${__P(xapi_url,xapi-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="analytics_url" elementType="Argument">
                <stringProp name="Argument.name">analytics_url</stringProp>
                <stringProp name="Argument.value">${__P(analytics_url,analytics-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="activity_url" elementType="Argument">
                <stringProp name="Argument.name">activity_url</stringProp>
                <stringProp name="Argument.value">${__P(activity_url,activity-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="chapter_num" elementType="Argument">
                <stringProp name="Argument.name">chapter_num</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="section_num" elementType="Argument">
                <stringProp name="Argument.name">section_num</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="accountid" elementType="Argument">
                <stringProp name="Argument.name">accountid</stringProp>
                <stringProp name="Argument.value">${__P(Account_id,compro)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="classcode" elementType="Argument">
                <stringProp name="Argument.name">classcode</stringProp>
                <stringProp name="Argument.value">${__P(class_code,ca3C-jW4B)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productcode" elementType="Argument">
                <stringProp name="Argument.name">productcode</stringProp>
                <stringProp name="Argument.value">${__P(product_code,evolve_l2)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_product_id" elementType="Argument">
                <stringProp name="Argument.name">ext_product_id</stringProp>
                <stringProp name="Argument.value">${__P(product_code,compro444555666)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="task" elementType="Argument">
                <stringProp name="Argument.name">task</stringProp>
                <stringProp name="Argument.value">${__P(task_code,1528190348277/1528190372600/1528190508292)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with product_code and class_code" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Join_Spaces_with_product_code and_class_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">30000</stringProp>
          </TestAction>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">10</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Setup class aggregation and submitted productive skills to prepare data for teacher views" enabled="true"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">Testdata\1012_2.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">extuserid</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
            <collectionProp name="Arguments.arguments">
              <elementProp name="appid" elementType="Argument">
                <stringProp name="Argument.name">appid</stringProp>
                <stringProp name="Argument.value">default</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startTime" elementType="Argument">
                <stringProp name="Argument.name">startTime</stringProp>
                <stringProp name="Argument.value">1504224000000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sectionCounter" elementType="Argument">
                <stringProp name="Argument.name">sectionCounter</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="minWait" elementType="Argument">
                <stringProp name="Argument.name">minWait</stringProp>
                <stringProp name="Argument.value">2000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productSummary_max" elementType="Argument">
                <stringProp name="Argument.name">productSummary_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productToc_max" elementType="Argument">
                <stringProp name="Argument.name">productToc_max</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productRightpane_max" elementType="Argument">
                <stringProp name="Argument.name">productRightpane_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="activityStream_max" elementType="Argument">
                <stringProp name="Argument.name">activityStream_max</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="reader_max" elementType="Argument">
                <stringProp name="Argument.name">reader_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="dashboard_max" elementType="Argument">
                <stringProp name="Argument.name">dashboard_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="postComment_max" elementType="Argument">
                <stringProp name="Argument.name">postComment_max</stringProp>
                <stringProp name="Argument.value">2500</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="userProgress_max" elementType="Argument">
                <stringProp name="Argument.name">userProgress_max</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="auth_url" elementType="Argument">
                <stringProp name="Argument.name">auth_url</stringProp>
                <stringProp name="Argument.value">${__P(auth_url,auth-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="product_url" elementType="Argument">
                <stringProp name="Argument.name">product_url</stringProp>
                <stringProp name="Argument.value">${__P(product_url,product-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="collab_url" elementType="Argument">
                <stringProp name="Argument.name">collab_url</stringProp>
                <stringProp name="Argument.value">${__P(collab_url,collab-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="xapi_url" elementType="Argument">
                <stringProp name="Argument.name">xapi_url</stringProp>
                <stringProp name="Argument.value">${__P(xapi_url,xapi-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="analytics_url" elementType="Argument">
                <stringProp name="Argument.name">analytics_url</stringProp>
                <stringProp name="Argument.value">${__P(analytics_url,analytics-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="activity_url" elementType="Argument">
                <stringProp name="Argument.name">activity_url</stringProp>
                <stringProp name="Argument.value">${__P(activity_url,activity-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="chapter_num" elementType="Argument">
                <stringProp name="Argument.name">chapter_num</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="section_num" elementType="Argument">
                <stringProp name="Argument.name">section_num</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="accountid" elementType="Argument">
                <stringProp name="Argument.name">accountid</stringProp>
                <stringProp name="Argument.value">${__P(Account_id,compro)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="classcode" elementType="Argument">
                <stringProp name="Argument.name">classcode</stringProp>
                <stringProp name="Argument.value">${__P(class_code,ca3C-jW4B)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productcode" elementType="Argument">
                <stringProp name="Argument.name">productcode</stringProp>
                <stringProp name="Argument.value">${__P(product_code,evolve_l2)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_product_id" elementType="Argument">
                <stringProp name="Argument.name">ext_product_id</stringProp>
                <stringProp name="Argument.value">${__P(product_code,compro444555666)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="task" elementType="Argument">
                <stringProp name="Argument.name">task</stringProp>
                <stringProp name="Argument.value">${__P(task_code,1528190348277/1528190372600/1528190454820)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1003: Student logs in and accesses the dashboard" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1003-Student_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1009:Student accesses the learning path of a product as part of a teacher-led class " enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1009-Student_accesses_the_learning_path_of_a_product_as_part_of_a_teacher-led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="A Student simulating reading (Multiple pages) and post the statements" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">3</stringProp>
          </LoopController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">Testdata\p.csv</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="variableNames">task,verb</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.group</stringProp>
            </CSVDataSet>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time Before Posting statement" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">${userProgress_max}</stringProp>
                <stringProp name="RandomTimer.range">${userProgress_max}</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add a new statement" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Add_statements.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update user&apos;s application state for a product or class (product)" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Update_user&apos;s_application_state_for_a_product_or_class(product).jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="A Student simulating reading (Multiple pages) and post the statements" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">3</stringProp>
          </LoopController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">Testdata\product_sections_pskills.csv</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="variableNames">task,verb</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.thread</stringProp>
            </CSVDataSet>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time Before Posting statement" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">${userProgress_max}</stringProp>
                <stringProp name="RandomTimer.range">${userProgress_max}</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add a new statement" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Add_statements.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update user&apos;s application state for a product or class (product)" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Update_user&apos;s_application_state_for_a_product_or_class(product).jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="comproDLS New Users" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">200</stringProp>
        <stringProp name="ThreadGroup.ramp_time">40</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">1800</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1001: Student registers using a access code (and access default or first time dashboard) - New Users" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">2</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>1.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1001.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
            <collectionProp name="Arguments.arguments">
              <elementProp name="appid" elementType="Argument">
                <stringProp name="Argument.name">appid</stringProp>
                <stringProp name="Argument.value">default</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startTime" elementType="Argument">
                <stringProp name="Argument.name">startTime</stringProp>
                <stringProp name="Argument.value">1504224000000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sectionCounter" elementType="Argument">
                <stringProp name="Argument.name">sectionCounter</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="minWait" elementType="Argument">
                <stringProp name="Argument.name">minWait</stringProp>
                <stringProp name="Argument.value">2000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productSummary_max" elementType="Argument">
                <stringProp name="Argument.name">productSummary_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productToc_max" elementType="Argument">
                <stringProp name="Argument.name">productToc_max</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productRightpane_max" elementType="Argument">
                <stringProp name="Argument.name">productRightpane_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="activityStream_max" elementType="Argument">
                <stringProp name="Argument.name">activityStream_max</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="reader_max" elementType="Argument">
                <stringProp name="Argument.name">reader_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="dashboard_max" elementType="Argument">
                <stringProp name="Argument.name">dashboard_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="postComment_max" elementType="Argument">
                <stringProp name="Argument.name">postComment_max</stringProp>
                <stringProp name="Argument.value">2500</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="userProgress_max" elementType="Argument">
                <stringProp name="Argument.name">userProgress_max</stringProp>
                <stringProp name="Argument.value">30000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="auth_url" elementType="Argument">
                <stringProp name="Argument.name">auth_url</stringProp>
                <stringProp name="Argument.value">${__P(auth_url,auth-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="product_url" elementType="Argument">
                <stringProp name="Argument.name">product_url</stringProp>
                <stringProp name="Argument.value">${__P(product_url,product-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="collab_url" elementType="Argument">
                <stringProp name="Argument.name">collab_url</stringProp>
                <stringProp name="Argument.value">${__P(collab_url,collab-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="xapi_url" elementType="Argument">
                <stringProp name="Argument.name">xapi_url</stringProp>
                <stringProp name="Argument.value">${__P(xapi_url,xapi-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="analytics_url" elementType="Argument">
                <stringProp name="Argument.name">analytics_url</stringProp>
                <stringProp name="Argument.value">${__P(analytics_url,analytics-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="activity_url" elementType="Argument">
                <stringProp name="Argument.name">activity_url</stringProp>
                <stringProp name="Argument.value">${__P(activity_url,activity-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="chapter_num" elementType="Argument">
                <stringProp name="Argument.name">chapter_num</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="section_num" elementType="Argument">
                <stringProp name="Argument.name">section_num</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="accountid" elementType="Argument">
                <stringProp name="Argument.name">accountid</stringProp>
                <stringProp name="Argument.value">${__P(Account_id,compro)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="classcode" elementType="Argument">
                <stringProp name="Argument.name">classcode</stringProp>
                <stringProp name="Argument.value">${__P(class_code,ca3C-jW4B)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productcode" elementType="Argument">
                <stringProp name="Argument.name">productcode</stringProp>
                <stringProp name="Argument.value">${__P(product_code,evolve_l2)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_product_id" elementType="Argument">
                <stringProp name="Argument.name">ext_product_id</stringProp>
                <stringProp name="Argument.value">${__P(product_code,compro444555666)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="task" elementType="Argument">
                <stringProp name="Argument.name">task</stringProp>
                <stringProp name="Argument.value">${__P(task_code,1528190348277/1528190372600/1528190508292)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get All the User Spaces" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Get_all_the_User_Spaces.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join_Spaces_with_product_code and_class_code_private" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Join_Spaces_with_product_code and_class_code_private.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">30000</stringProp>
            </TestAction>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">60000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Get_all_the_User_Spaces.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Get_an_access_token_for_an_external_user.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Product details using ISBN" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Get_product_details_by_isbn.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get list of all products for a user" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Get_list_of_all_products_for_a_user.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1002: Student registers using a class key &amp; access code  (and access default or first time dashboard) - New Users" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">2</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>1.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1002.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
            <collectionProp name="Arguments.arguments">
              <elementProp name="appid" elementType="Argument">
                <stringProp name="Argument.name">appid</stringProp>
                <stringProp name="Argument.value">default</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startTime" elementType="Argument">
                <stringProp name="Argument.name">startTime</stringProp>
                <stringProp name="Argument.value">1504224000000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sectionCounter" elementType="Argument">
                <stringProp name="Argument.name">sectionCounter</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="minWait" elementType="Argument">
                <stringProp name="Argument.name">minWait</stringProp>
                <stringProp name="Argument.value">2000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productSummary_max" elementType="Argument">
                <stringProp name="Argument.name">productSummary_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productToc_max" elementType="Argument">
                <stringProp name="Argument.name">productToc_max</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productRightpane_max" elementType="Argument">
                <stringProp name="Argument.name">productRightpane_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="activityStream_max" elementType="Argument">
                <stringProp name="Argument.name">activityStream_max</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="reader_max" elementType="Argument">
                <stringProp name="Argument.name">reader_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="dashboard_max" elementType="Argument">
                <stringProp name="Argument.name">dashboard_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="postComment_max" elementType="Argument">
                <stringProp name="Argument.name">postComment_max</stringProp>
                <stringProp name="Argument.value">2500</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="userProgress_max" elementType="Argument">
                <stringProp name="Argument.name">userProgress_max</stringProp>
                <stringProp name="Argument.value">30000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="auth_url" elementType="Argument">
                <stringProp name="Argument.name">auth_url</stringProp>
                <stringProp name="Argument.value">${__P(auth_url,auth-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="product_url" elementType="Argument">
                <stringProp name="Argument.name">product_url</stringProp>
                <stringProp name="Argument.value">${__P(product_url,product-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="collab_url" elementType="Argument">
                <stringProp name="Argument.name">collab_url</stringProp>
                <stringProp name="Argument.value">${__P(collab_url,collab-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="xapi_url" elementType="Argument">
                <stringProp name="Argument.name">xapi_url</stringProp>
                <stringProp name="Argument.value">${__P(xapi_url,xapi-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="analytics_url" elementType="Argument">
                <stringProp name="Argument.name">analytics_url</stringProp>
                <stringProp name="Argument.value">${__P(analytics_url,analytics-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="activity_url" elementType="Argument">
                <stringProp name="Argument.name">activity_url</stringProp>
                <stringProp name="Argument.value">${__P(activity_url,activity-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="chapter_num" elementType="Argument">
                <stringProp name="Argument.name">chapter_num</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="section_num" elementType="Argument">
                <stringProp name="Argument.name">section_num</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="accountid" elementType="Argument">
                <stringProp name="Argument.name">accountid</stringProp>
                <stringProp name="Argument.value">${__P(Account_id,compro)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="classcode" elementType="Argument">
                <stringProp name="Argument.name">classcode</stringProp>
                <stringProp name="Argument.value">${__P(class_code,ca3C-jW4B)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productcode" elementType="Argument">
                <stringProp name="Argument.name">productcode</stringProp>
                <stringProp name="Argument.value">${__P(product_code,evolve_l2)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_product_id" elementType="Argument">
                <stringProp name="Argument.name">ext_product_id</stringProp>
                <stringProp name="Argument.value">${__P(product_code,compro444555666)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="task" elementType="Argument">
                <stringProp name="Argument.name">task</stringProp>
                <stringProp name="Argument.value">${__P(task_code,1528190348277/1528190372600/1528190508292)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get All the User Spaces" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Get_all_the_User_Spaces.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with product_code and class_code" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Join_Spaces_with_product_code and_class_code.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">30000</stringProp>
            </TestAction>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">60000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
              <stringProp name="ConstantTimer.delay">60000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Get_all_the_User_Spaces.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">30000</stringProp>
            </TestAction>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Get_an_access_token_for_an_external_user.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Product details using ISBN" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Get_product_details_by_isbn.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get classes of an user" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Get_classes_of_an_user.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get list of all products for a user" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Get_list_of_all_products_for_a_user.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1003: Student logs in and accesses the dashboard" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>30.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1003.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
            <collectionProp name="Arguments.arguments">
              <elementProp name="appid" elementType="Argument">
                <stringProp name="Argument.name">appid</stringProp>
                <stringProp name="Argument.value">default</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startTime" elementType="Argument">
                <stringProp name="Argument.name">startTime</stringProp>
                <stringProp name="Argument.value">1504224000000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sectionCounter" elementType="Argument">
                <stringProp name="Argument.name">sectionCounter</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="minWait" elementType="Argument">
                <stringProp name="Argument.name">minWait</stringProp>
                <stringProp name="Argument.value">2000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productSummary_max" elementType="Argument">
                <stringProp name="Argument.name">productSummary_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productToc_max" elementType="Argument">
                <stringProp name="Argument.name">productToc_max</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productRightpane_max" elementType="Argument">
                <stringProp name="Argument.name">productRightpane_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="activityStream_max" elementType="Argument">
                <stringProp name="Argument.name">activityStream_max</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="reader_max" elementType="Argument">
                <stringProp name="Argument.name">reader_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="dashboard_max" elementType="Argument">
                <stringProp name="Argument.name">dashboard_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="postComment_max" elementType="Argument">
                <stringProp name="Argument.name">postComment_max</stringProp>
                <stringProp name="Argument.value">2500</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="userProgress_max" elementType="Argument">
                <stringProp name="Argument.name">userProgress_max</stringProp>
                <stringProp name="Argument.value">30000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="auth_url" elementType="Argument">
                <stringProp name="Argument.name">auth_url</stringProp>
                <stringProp name="Argument.value">${__P(auth_url,auth-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="product_url" elementType="Argument">
                <stringProp name="Argument.name">product_url</stringProp>
                <stringProp name="Argument.value">${__P(product_url,product-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="collab_url" elementType="Argument">
                <stringProp name="Argument.name">collab_url</stringProp>
                <stringProp name="Argument.value">${__P(collab_url,collab-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="xapi_url" elementType="Argument">
                <stringProp name="Argument.name">xapi_url</stringProp>
                <stringProp name="Argument.value">${__P(xapi_url,xapi-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="analytics_url" elementType="Argument">
                <stringProp name="Argument.name">analytics_url</stringProp>
                <stringProp name="Argument.value">${__P(analytics_url,analytics-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="activity_url" elementType="Argument">
                <stringProp name="Argument.name">activity_url</stringProp>
                <stringProp name="Argument.value">${__P(activity_url,activity-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="chapter_num" elementType="Argument">
                <stringProp name="Argument.name">chapter_num</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="section_num" elementType="Argument">
                <stringProp name="Argument.name">section_num</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="accountid" elementType="Argument">
                <stringProp name="Argument.name">accountid</stringProp>
                <stringProp name="Argument.value">${__P(Account_id,compro)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="classcode" elementType="Argument">
                <stringProp name="Argument.name">classcode</stringProp>
                <stringProp name="Argument.value">${__P(class_code,ca3C-jW4B)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productcode" elementType="Argument">
                <stringProp name="Argument.name">productcode</stringProp>
                <stringProp name="Argument.value">${__P(product_code,evolve_l2)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_product_id" elementType="Argument">
                <stringProp name="Argument.name">ext_product_id</stringProp>
                <stringProp name="Argument.value">${__P(product_code,compro444555666)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="task" elementType="Argument">
                <stringProp name="Argument.name">task</stringProp>
                <stringProp name="Argument.value">${__P(task_code,1528190348277/1528190372600/1528190508292)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">30000</stringProp>
          </TestAction>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">30000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get classes of an user" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_classes_of_an_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get list of all products for a user" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_list_of_all_products_for_a_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1004: Student enrolls into a new class using class key - New Users (Already access to Evolve 2 product and a Evolve 2 related class)" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>1.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1004.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
            <collectionProp name="Arguments.arguments">
              <elementProp name="appid" elementType="Argument">
                <stringProp name="Argument.name">appid</stringProp>
                <stringProp name="Argument.value">default</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startTime" elementType="Argument">
                <stringProp name="Argument.name">startTime</stringProp>
                <stringProp name="Argument.value">1504224000000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sectionCounter" elementType="Argument">
                <stringProp name="Argument.name">sectionCounter</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="minWait" elementType="Argument">
                <stringProp name="Argument.name">minWait</stringProp>
                <stringProp name="Argument.value">2000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productSummary_max" elementType="Argument">
                <stringProp name="Argument.name">productSummary_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productToc_max" elementType="Argument">
                <stringProp name="Argument.name">productToc_max</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productRightpane_max" elementType="Argument">
                <stringProp name="Argument.name">productRightpane_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="activityStream_max" elementType="Argument">
                <stringProp name="Argument.name">activityStream_max</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="reader_max" elementType="Argument">
                <stringProp name="Argument.name">reader_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="dashboard_max" elementType="Argument">
                <stringProp name="Argument.name">dashboard_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="postComment_max" elementType="Argument">
                <stringProp name="Argument.name">postComment_max</stringProp>
                <stringProp name="Argument.value">2500</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="userProgress_max" elementType="Argument">
                <stringProp name="Argument.name">userProgress_max</stringProp>
                <stringProp name="Argument.value">30000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="auth_url" elementType="Argument">
                <stringProp name="Argument.name">auth_url</stringProp>
                <stringProp name="Argument.value">${__P(auth_url,auth-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="product_url" elementType="Argument">
                <stringProp name="Argument.name">product_url</stringProp>
                <stringProp name="Argument.value">${__P(product_url,product-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="collab_url" elementType="Argument">
                <stringProp name="Argument.name">collab_url</stringProp>
                <stringProp name="Argument.value">${__P(collab_url,collab-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="xapi_url" elementType="Argument">
                <stringProp name="Argument.name">xapi_url</stringProp>
                <stringProp name="Argument.value">${__P(xapi_url,xapi-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="analytics_url" elementType="Argument">
                <stringProp name="Argument.name">analytics_url</stringProp>
                <stringProp name="Argument.value">${__P(analytics_url,analytics-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="activity_url" elementType="Argument">
                <stringProp name="Argument.name">activity_url</stringProp>
                <stringProp name="Argument.value">${__P(activity_url,activity-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="chapter_num" elementType="Argument">
                <stringProp name="Argument.name">chapter_num</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="section_num" elementType="Argument">
                <stringProp name="Argument.name">section_num</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="accountid" elementType="Argument">
                <stringProp name="Argument.name">accountid</stringProp>
                <stringProp name="Argument.value">${__P(Account_id,compro)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="classcode" elementType="Argument">
                <stringProp name="Argument.name">classcode</stringProp>
                <stringProp name="Argument.value">${__P(class_code,ehaF-g2j7)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productcode" elementType="Argument">
                <stringProp name="Argument.name">productcode</stringProp>
                <stringProp name="Argument.value">${__P(product_code,evolve_l2)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_product_id" elementType="Argument">
                <stringProp name="Argument.name">ext_product_id</stringProp>
                <stringProp name="Argument.value">${__P(product_code,compro444555666)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="task" elementType="Argument">
                <stringProp name="Argument.name">task</stringProp>
                <stringProp name="Argument.value">${__P(task_code,1528190348277/1528190372600/1528190508292)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="classcode2" elementType="Argument">
                <stringProp name="Argument.name">classcode2</stringProp>
                <stringProp name="Argument.value">${__P(class_code,ehaF-g2j7)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1003: Student logs in and accesses the dashboard" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1003-Student_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with class_code" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Join_Spaces_with_class_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">30000</stringProp>
          </TestAction>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">60000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get classes of an user" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_classes_of_an_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get list of all products for a user" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_list_of_all_products_for_a_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1005: Student enrolls into a new class using class key  &amp; activates a new product - New Users (Having access to Evolve 4 and Evolve 4 related class)" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>1.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1005.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
            <collectionProp name="Arguments.arguments">
              <elementProp name="classcode" elementType="Argument">
                <stringProp name="Argument.name">classcode</stringProp>
                <stringProp name="Argument.value">${__P(class_code,ehaF-g2j7)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productcode" elementType="Argument">
                <stringProp name="Argument.name">productcode</stringProp>
                <stringProp name="Argument.value">${__P(product_code,evolve_l4)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_product_id" elementType="Argument">
                <stringProp name="Argument.name">ext_product_id</stringProp>
                <stringProp name="Argument.value">${__P(product_code,compro444555666)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1003: Student logs in and accesses the dashboard" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1003-Student_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with class_code" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Join_Spaces_with_class_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">30000</stringProp>
          </TestAction>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">60000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Product details using ISBN" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Get_product_details_by_isbn.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Entitle User With Product Code" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Entitle_User_With_Product_Code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">30000</stringProp>
          </TestAction>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">60000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get classes of an user" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_classes_of_an_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get list of all products for a user" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_list_of_all_products_for_a_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1006: Student activates a new product - New Users (Student having access of Evolve 4 product only)" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>1.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1006.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="productcode" elementType="Argument">
                <stringProp name="Argument.name">productcode</stringProp>
                <stringProp name="Argument.value">${__P(product_code,evolve_l4)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_product_id" elementType="Argument">
                <stringProp name="Argument.name">ext_product_id</stringProp>
                <stringProp name="Argument.value">${__P(product_code,comproprod333444555)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Pre-requisite - 1001: Student registers using a access code (and access default or first time dashboard)" enabled="false"/>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="delimiter">,</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="filename">newstudent.csv</stringProp>
              <boolProp name="ignoreFirstLine">true</boolProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <stringProp name="shareMode">shareMode.group</stringProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="variableNames">extuserid</stringProp>
            </CSVDataSet>
            <hashTree/>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="appid" elementType="Argument">
                  <stringProp name="Argument.name">appid</stringProp>
                  <stringProp name="Argument.value">default</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="startTime" elementType="Argument">
                  <stringProp name="Argument.name">startTime</stringProp>
                  <stringProp name="Argument.value">1504224000000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sectionCounter" elementType="Argument">
                  <stringProp name="Argument.name">sectionCounter</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="minWait" elementType="Argument">
                  <stringProp name="Argument.name">minWait</stringProp>
                  <stringProp name="Argument.value">2000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="productSummary_max" elementType="Argument">
                  <stringProp name="Argument.name">productSummary_max</stringProp>
                  <stringProp name="Argument.value">8000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="productToc_max" elementType="Argument">
                  <stringProp name="Argument.name">productToc_max</stringProp>
                  <stringProp name="Argument.value">3000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="productRightpane_max" elementType="Argument">
                  <stringProp name="Argument.name">productRightpane_max</stringProp>
                  <stringProp name="Argument.value">8000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="activityStream_max" elementType="Argument">
                  <stringProp name="Argument.name">activityStream_max</stringProp>
                  <stringProp name="Argument.value">3000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="reader_max" elementType="Argument">
                  <stringProp name="Argument.name">reader_max</stringProp>
                  <stringProp name="Argument.value">8000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dashboard_max" elementType="Argument">
                  <stringProp name="Argument.name">dashboard_max</stringProp>
                  <stringProp name="Argument.value">8000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="postComment_max" elementType="Argument">
                  <stringProp name="Argument.name">postComment_max</stringProp>
                  <stringProp name="Argument.value">2500</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userProgress_max" elementType="Argument">
                  <stringProp name="Argument.name">userProgress_max</stringProp>
                  <stringProp name="Argument.value">30000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth_url" elementType="Argument">
                  <stringProp name="Argument.name">auth_url</stringProp>
                  <stringProp name="Argument.value">${__P(auth_url,auth-staging1.comprodls.com)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="product_url" elementType="Argument">
                  <stringProp name="Argument.name">product_url</stringProp>
                  <stringProp name="Argument.value">${__P(product_url,product-staging1.comprodls.com)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="collab_url" elementType="Argument">
                  <stringProp name="Argument.name">collab_url</stringProp>
                  <stringProp name="Argument.value">${__P(collab_url,collab-staging1.comprodls.com)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="xapi_url" elementType="Argument">
                  <stringProp name="Argument.name">xapi_url</stringProp>
                  <stringProp name="Argument.value">${__P(xapi_url,xapi-staging1.comprodls.com)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="analytics_url" elementType="Argument">
                  <stringProp name="Argument.name">analytics_url</stringProp>
                  <stringProp name="Argument.value">${__P(analytics_url,analytics-staging1.comprodls.com)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="activity_url" elementType="Argument">
                  <stringProp name="Argument.name">activity_url</stringProp>
                  <stringProp name="Argument.value">${__P(activity_url,activity-staging1.comprodls.com)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="chapter_num" elementType="Argument">
                  <stringProp name="Argument.name">chapter_num</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="section_num" elementType="Argument">
                  <stringProp name="Argument.name">section_num</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="accountid" elementType="Argument">
                  <stringProp name="Argument.name">accountid</stringProp>
                  <stringProp name="Argument.value">${__P(Account_id,compro)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="classcode" elementType="Argument">
                  <stringProp name="Argument.name">classcode</stringProp>
                  <stringProp name="Argument.value">${__P(class_code,ca3C-jW4B)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="productcode" elementType="Argument">
                  <stringProp name="Argument.name">productcode</stringProp>
                  <stringProp name="Argument.value">${__P(product_code,evolve_l2)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ext_product_id" elementType="Argument">
                  <stringProp name="Argument.name">ext_product_id</stringProp>
                  <stringProp name="Argument.value">${__P(product_code,compro444555666)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="task" elementType="Argument">
                  <stringProp name="Argument.name">task</stringProp>
                  <stringProp name="Argument.value">${__P(task_code,1528190348277/1528190372600/1528190508292)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get All the User Spaces" enabled="true">
                <stringProp name="IncludeController.includepath">Fragements/Get_all_the_User_Spaces.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join_Spaces_with_product_code and_class_code_private" enabled="true">
                <stringProp name="IncludeController.includepath">Fragements/Join_Spaces_with_product_code and_class_code_private.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">30000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
                <stringProp name="IncludeController.includepath">Fragements/Get_all_the_User_Spaces.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
                <stringProp name="IncludeController.includepath">Fragements/Get_an_access_token_for_an_external_user.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Product details using ISBN" enabled="true">
                <stringProp name="IncludeController.includepath">Fragements/Get_product_details_by_isbn.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get list of all products for a user" enabled="true">
                <stringProp name="IncludeController.includepath">Fragements/Get_list_of_all_products_for_a_user.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
              <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugSampler>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1003: Student logs in and accesses the dashboard (My Private Learning)" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1003-Student_logs_in_and_accesses_the_dashboard_private.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Product details using ISBN" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Get_product_details_by_isbn.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Entitle User With Product Code" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Entitle_User_With_Product_Code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">30000</stringProp>
          </TestAction>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">60000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get list of all products for a user" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_list_of_all_products_for_a_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1007: Student accesses his profile (My Profile) and updates information" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>1.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="role" elementType="Argument">
                <stringProp name="Argument.name">role</stringProp>
                <stringProp name="Argument.value">${__P(Role,student)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="firstname" elementType="Argument">
                <stringProp name="Argument.name">firstname</stringProp>
                <stringProp name="Argument.value">${__P(First_name,Compro)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1011.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1003: Student logs in and accesses the dashboard" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1003-Student_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get All the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Updates the user information in all the spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/update_user_information.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1008: Student accesses the learning path of a product (self-paced or private learning)" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>12.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1008.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
            <collectionProp name="Arguments.arguments">
              <elementProp name="appid" elementType="Argument">
                <stringProp name="Argument.name">appid</stringProp>
                <stringProp name="Argument.value">default</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startTime" elementType="Argument">
                <stringProp name="Argument.name">startTime</stringProp>
                <stringProp name="Argument.value">1504224000000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sectionCounter" elementType="Argument">
                <stringProp name="Argument.name">sectionCounter</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="minWait" elementType="Argument">
                <stringProp name="Argument.name">minWait</stringProp>
                <stringProp name="Argument.value">2000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productSummary_max" elementType="Argument">
                <stringProp name="Argument.name">productSummary_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productToc_max" elementType="Argument">
                <stringProp name="Argument.name">productToc_max</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productRightpane_max" elementType="Argument">
                <stringProp name="Argument.name">productRightpane_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="activityStream_max" elementType="Argument">
                <stringProp name="Argument.name">activityStream_max</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="reader_max" elementType="Argument">
                <stringProp name="Argument.name">reader_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="dashboard_max" elementType="Argument">
                <stringProp name="Argument.name">dashboard_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="postComment_max" elementType="Argument">
                <stringProp name="Argument.name">postComment_max</stringProp>
                <stringProp name="Argument.value">2500</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="userProgress_max" elementType="Argument">
                <stringProp name="Argument.name">userProgress_max</stringProp>
                <stringProp name="Argument.value">30000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="auth_url" elementType="Argument">
                <stringProp name="Argument.name">auth_url</stringProp>
                <stringProp name="Argument.value">${__P(auth_url,auth-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="product_url" elementType="Argument">
                <stringProp name="Argument.name">product_url</stringProp>
                <stringProp name="Argument.value">${__P(product_url,product-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="collab_url" elementType="Argument">
                <stringProp name="Argument.name">collab_url</stringProp>
                <stringProp name="Argument.value">${__P(collab_url,collab-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="xapi_url" elementType="Argument">
                <stringProp name="Argument.name">xapi_url</stringProp>
                <stringProp name="Argument.value">${__P(xapi_url,xapi-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="analytics_url" elementType="Argument">
                <stringProp name="Argument.name">analytics_url</stringProp>
                <stringProp name="Argument.value">${__P(analytics_url,analytics-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="activity_url" elementType="Argument">
                <stringProp name="Argument.name">activity_url</stringProp>
                <stringProp name="Argument.value">${__P(activity_url,activity-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="chapter_num" elementType="Argument">
                <stringProp name="Argument.name">chapter_num</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="section_num" elementType="Argument">
                <stringProp name="Argument.name">section_num</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="accountid" elementType="Argument">
                <stringProp name="Argument.name">accountid</stringProp>
                <stringProp name="Argument.value">${__P(Account_id,compro)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="classcode" elementType="Argument">
                <stringProp name="Argument.name">classcode</stringProp>
                <stringProp name="Argument.value">${__P(class_code,ca3C-jW4B)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productcode" elementType="Argument">
                <stringProp name="Argument.name">productcode</stringProp>
                <stringProp name="Argument.value">${__P(product_code,evolve_l2)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_product_id" elementType="Argument">
                <stringProp name="Argument.name">ext_product_id</stringProp>
                <stringProp name="Argument.value">${__P(product_code,compro444555666)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="task" elementType="Argument">
                <stringProp name="Argument.name">task</stringProp>
                <stringProp name="Argument.value">${__P(task_code,1528190348277/1528190372600/1528190508292)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="verb" elementType="Argument">
                <stringProp name="Argument.name">verb</stringProp>
                <stringProp name="Argument.value">${__P(verb_type,launched)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1003: Student logs in and accesses the dashboard (My Private Learning)" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1003-Student_logs_in_and_accesses_the_dashboard_private.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get product by product id" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_product_by_product_id.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product items and their progress analytic (default) (My Private Learning)" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Product_items_and_their_progress_analytic(default)_private.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get user&apos;s application state for a product or class (product) (My Private Learning)" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_user&apos;s_application_state_for_a_product_or_class(product)_private.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">30000</stringProp>
          </TestAction>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">30000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get user&apos;s application state for a product or class (product)(My Private Learning)" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_user&apos;s_application_state_for_a_product_or_class(product)_private.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update user&apos;s application state for a product or class (product)(My Private Learning)" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Update_user&apos;s_application_state_for_a_product_or_class(product)_private.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statements(My Private Learning)" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Add_statements_private.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1009: Student accesses the learning path of a product as part of a teacher-led class " enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>12.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1009.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
            <collectionProp name="Arguments.arguments">
              <elementProp name="appid" elementType="Argument">
                <stringProp name="Argument.name">appid</stringProp>
                <stringProp name="Argument.value">default</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startTime" elementType="Argument">
                <stringProp name="Argument.name">startTime</stringProp>
                <stringProp name="Argument.value">1504224000000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sectionCounter" elementType="Argument">
                <stringProp name="Argument.name">sectionCounter</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="minWait" elementType="Argument">
                <stringProp name="Argument.name">minWait</stringProp>
                <stringProp name="Argument.value">2000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productSummary_max" elementType="Argument">
                <stringProp name="Argument.name">productSummary_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productToc_max" elementType="Argument">
                <stringProp name="Argument.name">productToc_max</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productRightpane_max" elementType="Argument">
                <stringProp name="Argument.name">productRightpane_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="activityStream_max" elementType="Argument">
                <stringProp name="Argument.name">activityStream_max</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="reader_max" elementType="Argument">
                <stringProp name="Argument.name">reader_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="dashboard_max" elementType="Argument">
                <stringProp name="Argument.name">dashboard_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="postComment_max" elementType="Argument">
                <stringProp name="Argument.name">postComment_max</stringProp>
                <stringProp name="Argument.value">2500</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="userProgress_max" elementType="Argument">
                <stringProp name="Argument.name">userProgress_max</stringProp>
                <stringProp name="Argument.value">30000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="auth_url" elementType="Argument">
                <stringProp name="Argument.name">auth_url</stringProp>
                <stringProp name="Argument.value">${__P(auth_url,auth-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="product_url" elementType="Argument">
                <stringProp name="Argument.name">product_url</stringProp>
                <stringProp name="Argument.value">${__P(product_url,product-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="collab_url" elementType="Argument">
                <stringProp name="Argument.name">collab_url</stringProp>
                <stringProp name="Argument.value">${__P(collab_url,collab-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="xapi_url" elementType="Argument">
                <stringProp name="Argument.name">xapi_url</stringProp>
                <stringProp name="Argument.value">${__P(xapi_url,xapi-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="analytics_url" elementType="Argument">
                <stringProp name="Argument.name">analytics_url</stringProp>
                <stringProp name="Argument.value">${__P(analytics_url,analytics-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="activity_url" elementType="Argument">
                <stringProp name="Argument.name">activity_url</stringProp>
                <stringProp name="Argument.value">${__P(activity_url,activity-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="chapter_num" elementType="Argument">
                <stringProp name="Argument.name">chapter_num</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="section_num" elementType="Argument">
                <stringProp name="Argument.name">section_num</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="accountid" elementType="Argument">
                <stringProp name="Argument.name">accountid</stringProp>
                <stringProp name="Argument.value">${__P(Account_id,compro)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="classcode" elementType="Argument">
                <stringProp name="Argument.name">classcode</stringProp>
                <stringProp name="Argument.value">${__P(class_code,ca3C-jW4B)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productcode" elementType="Argument">
                <stringProp name="Argument.name">productcode</stringProp>
                <stringProp name="Argument.value">${__P(product_code,evolve_l2)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_product_id" elementType="Argument">
                <stringProp name="Argument.name">ext_product_id</stringProp>
                <stringProp name="Argument.value">${__P(product_code,compro444555666)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="task" elementType="Argument">
                <stringProp name="Argument.name">task</stringProp>
                <stringProp name="Argument.value">${__P(task_code,1528190348277/1528190372600/1528190508292)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="verb" elementType="Argument">
                <stringProp name="Argument.name">verb</stringProp>
                <stringProp name="Argument.value">${__P(verb_type,launched)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1003: Student logs in and accesses the dashboard" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1003-Student_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get details for a specific class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_details_for_a_specific_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get product by product id" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_product_by_product_id.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product items and their progress analytic (default)" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Product_items_and_their_progress_analytic(default)..jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get user&apos;s application state for a product or class (product)" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_user&apos;s_application_state_for_a_product_or_class(product).jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">30000</stringProp>
          </TestAction>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">30000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get user&apos;s application state for a product or class (product)" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_user&apos;s_application_state_for_a_product_or_class(product).jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">30000</stringProp>
          </TestAction>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">30000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update user&apos;s application state for a product or class (product)" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Update_user&apos;s_application_state_for_a_product_or_class(product).jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statements" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Add_statements.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1010: Student works/studies  on the learning path  (self-paced)" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>12.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1010.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
            <collectionProp name="Arguments.arguments">
              <elementProp name="appid" elementType="Argument">
                <stringProp name="Argument.name">appid</stringProp>
                <stringProp name="Argument.value">default</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startTime" elementType="Argument">
                <stringProp name="Argument.name">startTime</stringProp>
                <stringProp name="Argument.value">1504224000000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sectionCounter" elementType="Argument">
                <stringProp name="Argument.name">sectionCounter</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="minWait" elementType="Argument">
                <stringProp name="Argument.name">minWait</stringProp>
                <stringProp name="Argument.value">2000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productSummary_max" elementType="Argument">
                <stringProp name="Argument.name">productSummary_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productToc_max" elementType="Argument">
                <stringProp name="Argument.name">productToc_max</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productRightpane_max" elementType="Argument">
                <stringProp name="Argument.name">productRightpane_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="activityStream_max" elementType="Argument">
                <stringProp name="Argument.name">activityStream_max</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="reader_max" elementType="Argument">
                <stringProp name="Argument.name">reader_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="dashboard_max" elementType="Argument">
                <stringProp name="Argument.name">dashboard_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="postComment_max" elementType="Argument">
                <stringProp name="Argument.name">postComment_max</stringProp>
                <stringProp name="Argument.value">2500</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="userProgress_max" elementType="Argument">
                <stringProp name="Argument.name">userProgress_max</stringProp>
                <stringProp name="Argument.value">30000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="auth_url" elementType="Argument">
                <stringProp name="Argument.name">auth_url</stringProp>
                <stringProp name="Argument.value">${__P(auth_url,auth-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="product_url" elementType="Argument">
                <stringProp name="Argument.name">product_url</stringProp>
                <stringProp name="Argument.value">${__P(product_url,product-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="collab_url" elementType="Argument">
                <stringProp name="Argument.name">collab_url</stringProp>
                <stringProp name="Argument.value">${__P(collab_url,collab-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="xapi_url" elementType="Argument">
                <stringProp name="Argument.name">xapi_url</stringProp>
                <stringProp name="Argument.value">${__P(xapi_url,xapi-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="analytics_url" elementType="Argument">
                <stringProp name="Argument.name">analytics_url</stringProp>
                <stringProp name="Argument.value">${__P(analytics_url,analytics-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="activity_url" elementType="Argument">
                <stringProp name="Argument.name">activity_url</stringProp>
                <stringProp name="Argument.value">${__P(activity_url,activity-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="chapter_num" elementType="Argument">
                <stringProp name="Argument.name">chapter_num</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="section_num" elementType="Argument">
                <stringProp name="Argument.name">section_num</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="accountid" elementType="Argument">
                <stringProp name="Argument.name">accountid</stringProp>
                <stringProp name="Argument.value">${__P(Account_id,compro)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="classcode" elementType="Argument">
                <stringProp name="Argument.name">classcode</stringProp>
                <stringProp name="Argument.value">${__P(class_code,ca3C-jW4B)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productcode" elementType="Argument">
                <stringProp name="Argument.name">productcode</stringProp>
                <stringProp name="Argument.value">${__P(product_code,evolve_l2)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_product_id" elementType="Argument">
                <stringProp name="Argument.name">ext_product_id</stringProp>
                <stringProp name="Argument.value">${__P(product_code,compro444555666)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="task" elementType="Argument">
                <stringProp name="Argument.name">task</stringProp>
                <stringProp name="Argument.value">${__P(task_code,1528190348277/1528190372600/1528190508292)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="verb" elementType="Argument">
                <stringProp name="Argument.name">verb</stringProp>
                <stringProp name="Argument.value">${__P(verb_type,launched)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1003: Student logs in and accesses the dashboard (My Private Learning)" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1003-Student_logs_in_and_accesses_the_dashboard_private.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1008: Student accesses the learning path of a product (self-paced or private learning)" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1008-Student_accesses_the_learning_path_of_a_product_(self-paced).jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="A Student simulating reading (Multiple pages) and post the statements" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">7</stringProp>
          </LoopController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">Testdata\product_sections_unit3.csv</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="variableNames">task,verb</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.thread</stringProp>
            </CSVDataSet>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time Before Posting statement" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">${userProgress_max}</stringProp>
                <stringProp name="RandomTimer.range">${userProgress_max}</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add a new statement" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Add_statements_private.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update user&apos;s application state for a product or class (product)" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Update_user&apos;s_application_state_for_a_product_or_class(product)_private.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get users application state for a product or class(product) " enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_user&apos;s_application_state_for_a_product_or_class(product)_private.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1011: Student works/studies  on the learning path  (teacher-led) &amp; views their grades and scores" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>12.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">Testdata\1011.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">extuserid</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
            <collectionProp name="Arguments.arguments">
              <elementProp name="appid" elementType="Argument">
                <stringProp name="Argument.name">appid</stringProp>
                <stringProp name="Argument.value">default</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startTime" elementType="Argument">
                <stringProp name="Argument.name">startTime</stringProp>
                <stringProp name="Argument.value">1504224000000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sectionCounter" elementType="Argument">
                <stringProp name="Argument.name">sectionCounter</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="minWait" elementType="Argument">
                <stringProp name="Argument.name">minWait</stringProp>
                <stringProp name="Argument.value">2000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productSummary_max" elementType="Argument">
                <stringProp name="Argument.name">productSummary_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productToc_max" elementType="Argument">
                <stringProp name="Argument.name">productToc_max</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productRightpane_max" elementType="Argument">
                <stringProp name="Argument.name">productRightpane_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="activityStream_max" elementType="Argument">
                <stringProp name="Argument.name">activityStream_max</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="reader_max" elementType="Argument">
                <stringProp name="Argument.name">reader_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="dashboard_max" elementType="Argument">
                <stringProp name="Argument.name">dashboard_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="postComment_max" elementType="Argument">
                <stringProp name="Argument.name">postComment_max</stringProp>
                <stringProp name="Argument.value">2500</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="userProgress_max" elementType="Argument">
                <stringProp name="Argument.name">userProgress_max</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="auth_url" elementType="Argument">
                <stringProp name="Argument.name">auth_url</stringProp>
                <stringProp name="Argument.value">${__P(auth_url,auth-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="product_url" elementType="Argument">
                <stringProp name="Argument.name">product_url</stringProp>
                <stringProp name="Argument.value">${__P(product_url,product-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="collab_url" elementType="Argument">
                <stringProp name="Argument.name">collab_url</stringProp>
                <stringProp name="Argument.value">${__P(collab_url,collab-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="xapi_url" elementType="Argument">
                <stringProp name="Argument.name">xapi_url</stringProp>
                <stringProp name="Argument.value">${__P(xapi_url,xapi-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="analytics_url" elementType="Argument">
                <stringProp name="Argument.name">analytics_url</stringProp>
                <stringProp name="Argument.value">${__P(analytics_url,analytics-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="activity_url" elementType="Argument">
                <stringProp name="Argument.name">activity_url</stringProp>
                <stringProp name="Argument.value">${__P(activity_url,activity-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="chapter_num" elementType="Argument">
                <stringProp name="Argument.name">chapter_num</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="section_num" elementType="Argument">
                <stringProp name="Argument.name">section_num</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="accountid" elementType="Argument">
                <stringProp name="Argument.name">accountid</stringProp>
                <stringProp name="Argument.value">${__P(Account_id,compro)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="classcode" elementType="Argument">
                <stringProp name="Argument.name">classcode</stringProp>
                <stringProp name="Argument.value">${__P(class_code,ca3C-jW4B)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productcode" elementType="Argument">
                <stringProp name="Argument.name">productcode</stringProp>
                <stringProp name="Argument.value">${__P(product_code,evolve_l2)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_product_id" elementType="Argument">
                <stringProp name="Argument.name">ext_product_id</stringProp>
                <stringProp name="Argument.value">${__P(product_code,compro444555666)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="task" elementType="Argument">
                <stringProp name="Argument.name">task</stringProp>
                <stringProp name="Argument.value">${__P(task_code,1528190348277/1528190372600/1528190454820)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1003: Student logs in and accesses the dashboard" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1003-Student_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1009:Student accesses the learning path of a product as part of a teacher-led class " enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1009-Student_accesses_the_learning_path_of_a_product_as_part_of_a_teacher-led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get statements in tincan compliant format" enabled="false">
            <stringProp name="IncludeController.includepath"></stringProp>
          </IncludeController>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="A Student simulating reading (Multiple pages) and post the statements" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">7</stringProp>
          </LoopController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">Testdata\product_sections_unit3.csv</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="variableNames">task,verb</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.group</stringProp>
            </CSVDataSet>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time Before Posting statement" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">${userProgress_max}</stringProp>
                <stringProp name="RandomTimer.range">${userProgress_max}</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add a new statement" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Add_statements.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update user&apos;s application state for a product or class (product)" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Update_user&apos;s_application_state_for_a_product_or_class(product).jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get users application state for a product or class(product) " enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_user&apos;s_application_state_for_a_product_or_class(product).jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1012: Student works/studies on productive skills" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>12.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">Testdata\1012.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">extuserid</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
            <collectionProp name="Arguments.arguments">
              <elementProp name="appid" elementType="Argument">
                <stringProp name="Argument.name">appid</stringProp>
                <stringProp name="Argument.value">default</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startTime" elementType="Argument">
                <stringProp name="Argument.name">startTime</stringProp>
                <stringProp name="Argument.value">1504224000000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sectionCounter" elementType="Argument">
                <stringProp name="Argument.name">sectionCounter</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="minWait" elementType="Argument">
                <stringProp name="Argument.name">minWait</stringProp>
                <stringProp name="Argument.value">2000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productSummary_max" elementType="Argument">
                <stringProp name="Argument.name">productSummary_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productToc_max" elementType="Argument">
                <stringProp name="Argument.name">productToc_max</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productRightpane_max" elementType="Argument">
                <stringProp name="Argument.name">productRightpane_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="activityStream_max" elementType="Argument">
                <stringProp name="Argument.name">activityStream_max</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="reader_max" elementType="Argument">
                <stringProp name="Argument.name">reader_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="dashboard_max" elementType="Argument">
                <stringProp name="Argument.name">dashboard_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="postComment_max" elementType="Argument">
                <stringProp name="Argument.name">postComment_max</stringProp>
                <stringProp name="Argument.value">2500</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="userProgress_max" elementType="Argument">
                <stringProp name="Argument.name">userProgress_max</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="auth_url" elementType="Argument">
                <stringProp name="Argument.name">auth_url</stringProp>
                <stringProp name="Argument.value">${__P(auth_url,auth-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="product_url" elementType="Argument">
                <stringProp name="Argument.name">product_url</stringProp>
                <stringProp name="Argument.value">${__P(product_url,product-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="collab_url" elementType="Argument">
                <stringProp name="Argument.name">collab_url</stringProp>
                <stringProp name="Argument.value">${__P(collab_url,collab-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="xapi_url" elementType="Argument">
                <stringProp name="Argument.name">xapi_url</stringProp>
                <stringProp name="Argument.value">${__P(xapi_url,xapi-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="analytics_url" elementType="Argument">
                <stringProp name="Argument.name">analytics_url</stringProp>
                <stringProp name="Argument.value">${__P(analytics_url,analytics-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="activity_url" elementType="Argument">
                <stringProp name="Argument.name">activity_url</stringProp>
                <stringProp name="Argument.value">${__P(activity_url,activity-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="chapter_num" elementType="Argument">
                <stringProp name="Argument.name">chapter_num</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="section_num" elementType="Argument">
                <stringProp name="Argument.name">section_num</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="accountid" elementType="Argument">
                <stringProp name="Argument.name">accountid</stringProp>
                <stringProp name="Argument.value">${__P(Account_id,compro)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="classcode" elementType="Argument">
                <stringProp name="Argument.name">classcode</stringProp>
                <stringProp name="Argument.value">${__P(class_code,ca3C-jW4B)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productcode" elementType="Argument">
                <stringProp name="Argument.name">productcode</stringProp>
                <stringProp name="Argument.value">${__P(product_code,evolve_l2)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_product_id" elementType="Argument">
                <stringProp name="Argument.name">ext_product_id</stringProp>
                <stringProp name="Argument.value">${__P(product_code,compro444555666)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="task" elementType="Argument">
                <stringProp name="Argument.name">task</stringProp>
                <stringProp name="Argument.value">${__P(task_code,1528190348277/1528190372600/1528190454820)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1003: Student logs in and accesses the dashboard" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1003-Student_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1009:Student accesses the learning path of a product as part of a teacher-led class " enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1009-Student_accesses_the_learning_path_of_a_product_as_part_of_a_teacher-led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="A Student simulating reading (Multiple pages) and post the statements" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">7</stringProp>
          </LoopController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">Testdata\product_sections_pskills.csv</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="variableNames">task,verb</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.thread</stringProp>
            </CSVDataSet>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time Before Posting statement" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">${userProgress_max}</stringProp>
                <stringProp name="RandomTimer.range">${userProgress_max}</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add a new statement" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Add_statements.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update user&apos;s application state for a product or class (product)" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Update_user&apos;s_application_state_for_a_product_or_class(product).jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get users application state for a product or class(product) " enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_user&apos;s_application_state_for_a_product_or_class(product).jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1013: Teacher registers using a Institution code and accesses first time / default dashboard, get access to products in that institution" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>100.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1013.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
            <collectionProp name="Arguments.arguments">
              <elementProp name="appid" elementType="Argument">
                <stringProp name="Argument.name">appid</stringProp>
                <stringProp name="Argument.value">default</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startTime" elementType="Argument">
                <stringProp name="Argument.name">startTime</stringProp>
                <stringProp name="Argument.value">1504224000000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sectionCounter" elementType="Argument">
                <stringProp name="Argument.name">sectionCounter</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="minWait" elementType="Argument">
                <stringProp name="Argument.name">minWait</stringProp>
                <stringProp name="Argument.value">2000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productSummary_max" elementType="Argument">
                <stringProp name="Argument.name">productSummary_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productToc_max" elementType="Argument">
                <stringProp name="Argument.name">productToc_max</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productRightpane_max" elementType="Argument">
                <stringProp name="Argument.name">productRightpane_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="activityStream_max" elementType="Argument">
                <stringProp name="Argument.name">activityStream_max</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="reader_max" elementType="Argument">
                <stringProp name="Argument.name">reader_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="dashboard_max" elementType="Argument">
                <stringProp name="Argument.name">dashboard_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="postComment_max" elementType="Argument">
                <stringProp name="Argument.name">postComment_max</stringProp>
                <stringProp name="Argument.value">2500</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="userProgress_max" elementType="Argument">
                <stringProp name="Argument.name">userProgress_max</stringProp>
                <stringProp name="Argument.value">30000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="auth_url" elementType="Argument">
                <stringProp name="Argument.name">auth_url</stringProp>
                <stringProp name="Argument.value">${__P(auth_url,auth-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="product_url" elementType="Argument">
                <stringProp name="Argument.name">product_url</stringProp>
                <stringProp name="Argument.value">${__P(product_url,product-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="collab_url" elementType="Argument">
                <stringProp name="Argument.name">collab_url</stringProp>
                <stringProp name="Argument.value">${__P(collab_url,collab-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="xapi_url" elementType="Argument">
                <stringProp name="Argument.name">xapi_url</stringProp>
                <stringProp name="Argument.value">${__P(xapi_url,xapi-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="analytics_url" elementType="Argument">
                <stringProp name="Argument.name">analytics_url</stringProp>
                <stringProp name="Argument.value">${__P(analytics_url,analytics-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="activity_url" elementType="Argument">
                <stringProp name="Argument.name">activity_url</stringProp>
                <stringProp name="Argument.value">${__P(activity_url,activity-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="chapter_num" elementType="Argument">
                <stringProp name="Argument.name">chapter_num</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="section_num" elementType="Argument">
                <stringProp name="Argument.name">section_num</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="accountid" elementType="Argument">
                <stringProp name="Argument.name">accountid</stringProp>
                <stringProp name="Argument.value">${__P(Account_id,compro)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="classcode" elementType="Argument">
                <stringProp name="Argument.name">classcode</stringProp>
                <stringProp name="Argument.value">${__P(class_code,ca3C-jW4B)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productcode" elementType="Argument">
                <stringProp name="Argument.name">productcode</stringProp>
                <stringProp name="Argument.value">${__P(product_code,evolve_l2)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_product_id" elementType="Argument">
                <stringProp name="Argument.name">ext_product_id</stringProp>
                <stringProp name="Argument.value">${__P(product_code,compro444555666)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="task" elementType="Argument">
                <stringProp name="Argument.name">task</stringProp>
                <stringProp name="Argument.value">${__P(task_code,1528190348277/1528190372600/1528190508292)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get All the User Spaces" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Get_all_the_User_Spaces.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Join_a_space_with_space_code.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">30000</stringProp>
            </TestAction>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">60000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
              <stringProp name="ConstantTimer.delay">60000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Get_all_the_User_Spaces.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">30000</stringProp>
            </TestAction>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">60000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Get_an_access_token_for_an_external_user.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get classes of an user" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Get_classes_of_an_user.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Products of first space" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Get_products_of_first_space.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1014: Teacher logs in (and accesses dashboard)" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>33.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1014.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get All the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get classes of an user" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_classes_of_an_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Products of first space" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_products_of_first_space.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1015: Teacher joins another institution/school using institution key" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>1.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1015.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
            <collectionProp name="Arguments.arguments">
              <elementProp name="appid" elementType="Argument">
                <stringProp name="Argument.name">appid</stringProp>
                <stringProp name="Argument.value">default</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startTime" elementType="Argument">
                <stringProp name="Argument.name">startTime</stringProp>
                <stringProp name="Argument.value">1504224000000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sectionCounter" elementType="Argument">
                <stringProp name="Argument.name">sectionCounter</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="minWait" elementType="Argument">
                <stringProp name="Argument.name">minWait</stringProp>
                <stringProp name="Argument.value">2000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productSummary_max" elementType="Argument">
                <stringProp name="Argument.name">productSummary_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productToc_max" elementType="Argument">
                <stringProp name="Argument.name">productToc_max</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productRightpane_max" elementType="Argument">
                <stringProp name="Argument.name">productRightpane_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="activityStream_max" elementType="Argument">
                <stringProp name="Argument.name">activityStream_max</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="reader_max" elementType="Argument">
                <stringProp name="Argument.name">reader_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="dashboard_max" elementType="Argument">
                <stringProp name="Argument.name">dashboard_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="postComment_max" elementType="Argument">
                <stringProp name="Argument.name">postComment_max</stringProp>
                <stringProp name="Argument.value">2500</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="userProgress_max" elementType="Argument">
                <stringProp name="Argument.name">userProgress_max</stringProp>
                <stringProp name="Argument.value">30000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="auth_url" elementType="Argument">
                <stringProp name="Argument.name">auth_url</stringProp>
                <stringProp name="Argument.value">${__P(auth_url,auth-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="product_url" elementType="Argument">
                <stringProp name="Argument.name">product_url</stringProp>
                <stringProp name="Argument.value">${__P(product_url,product-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="collab_url" elementType="Argument">
                <stringProp name="Argument.name">collab_url</stringProp>
                <stringProp name="Argument.value">${__P(collab_url,collab-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="xapi_url" elementType="Argument">
                <stringProp name="Argument.name">xapi_url</stringProp>
                <stringProp name="Argument.value">${__P(xapi_url,xapi-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="analytics_url" elementType="Argument">
                <stringProp name="Argument.name">analytics_url</stringProp>
                <stringProp name="Argument.value">${__P(analytics_url,analytics-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="activity_url" elementType="Argument">
                <stringProp name="Argument.name">activity_url</stringProp>
                <stringProp name="Argument.value">${__P(activity_url,activity-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="chapter_num" elementType="Argument">
                <stringProp name="Argument.name">chapter_num</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="section_num" elementType="Argument">
                <stringProp name="Argument.name">section_num</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="accountid" elementType="Argument">
                <stringProp name="Argument.name">accountid</stringProp>
                <stringProp name="Argument.value">${__P(Account_id,compro)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="classcode" elementType="Argument">
                <stringProp name="Argument.name">classcode</stringProp>
                <stringProp name="Argument.value">${__P(class_code,ca3C-jW4B)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productcode" elementType="Argument">
                <stringProp name="Argument.name">productcode</stringProp>
                <stringProp name="Argument.value">${__P(product_code,evolve_l2)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_product_id" elementType="Argument">
                <stringProp name="Argument.name">ext_product_id</stringProp>
                <stringProp name="Argument.value">${__P(product_code,compro444555666)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="task" elementType="Argument">
                <stringProp name="Argument.name">task</stringProp>
                <stringProp name="Argument.value">${__P(task_code,1528190348277/1528190372600/1528190508292)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get All the User Spaces" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Get_all_the_User_Spaces.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Join_a_space_with_space_code.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">30000</stringProp>
            </TestAction>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">60000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
              <stringProp name="ConstantTimer.delay">60000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Get_all_the_User_Spaces.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">30000</stringProp>
            </TestAction>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">60000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Get_an_access_token_for_an_external_user.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get classes of an user" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Get_classes_of_an_user.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Products of first space" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Get_products_of_first_space.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1016: Teacher accesses his profile (My Profile) and updates information" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>33.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="role" elementType="Argument">
                <stringProp name="Argument.name">role</stringProp>
                <stringProp name="Argument.value">${__P(Role,teacher)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="firstname" elementType="Argument">
                <stringProp name="Argument.name">firstname</stringProp>
                <stringProp name="Argument.value">${__P(First_name,Compro)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1014.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1014 - Teacher logs in (and accesses dashboard)" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1014-Teacher_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get All the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Updates the user information in all the spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/update_user_information.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1017: Teacher can review / open learning path of products available in that institution" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>33.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="role" elementType="Argument">
                <stringProp name="Argument.name">role</stringProp>
                <stringProp name="Argument.value">${__P(Role,teacher)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="firstname" elementType="Argument">
                <stringProp name="Argument.name">firstname</stringProp>
                <stringProp name="Argument.value">${__P(First_name,Compro)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1014.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1014 - Teacher logs in (and accesses dashboard)" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1014-Teacher_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get product by product id" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_product_by_product_id.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1018: Teacher creates a new class in a particular institution" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>3.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="classname" elementType="Argument">
                <stringProp name="Argument.name">classname</stringProp>
                <stringProp name="Argument.value">${__P(Class_name,Test Class 7)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__P(Start_Date,1535799974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__P(End_Date,1567335974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1018.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1014 - Teacher logs in (and accesses dashboard)" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1014-Teacher_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/create_new_instructor_led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get details for a specific class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_details_for_a_specific_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get All the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get classes of an user" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_classes_of_an_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Products of first space" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_products_of_first_space.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1019: Teacher adds materials (product) to a class - available in that institution." enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>1.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1018.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1014 - Teacher logs in (and accesses dashboard)" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1014-Teacher_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/associate_a_product_with_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1020: Teacher changes/edits date &amp; metadata of the class" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>1.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="classname" elementType="Argument">
                <stringProp name="Argument.name">classname</stringProp>
                <stringProp name="Argument.value">${__P(Class_name,Test Class 11)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__P(Start_Date,1535799974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__P(End_Date,1567335974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="newclassname" elementType="Argument">
                <stringProp name="Argument.name">newclassname</stringProp>
                <stringProp name="Argument.value">${__P(Class_name,Test Class 11 Updated)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="flag" elementType="Argument">
                <stringProp name="Argument.name">flag</stringProp>
                <stringProp name="Argument.value">${__P(Details,false)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1020.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1014 - Teacher logs in (and accesses dashboard)" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1014-Teacher_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1018 - Teacher Creates a new class" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1018-Teacher_create_new_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1019-Teacher_associate_course_material" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios\1019-Teacher_associate_course_material.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">30000</stringProp>
          </TestAction>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">30000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Analytics_for_users_in_a_class_aggregrated_over_all_the_items_&amp;_materials_(product)_in_that_class" enabled="true">
            <stringProp name="IncludeController.includepath">\Fragements\Analytics_for_users_in_a_class_aggregrated_over_all_the_items_&amp;_materials_(product)_in_that_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_members_of_a_class" enabled="true">
            <stringProp name="IncludeController.includepath">\Fragements\Get_members_of _a_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="class_pending_submissions" enabled="true">
            <stringProp name="IncludeController.includepath">\Fragements\class_pending_submissions.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Analytics_for_items_(product)_in_a_class_aggregrated_over_all_students_in_that_class" enabled="true">
            <stringProp name="IncludeController.includepath">\Fragements\Analytics_for_items_(product)_in_a_class_aggregrated_over_all_students_in_that_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="update_details_of_class" enabled="true">
            <stringProp name="IncludeController.includepath">\Fragements\update_details_of_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1021: Teacher changes materials (product) associated with class" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>1.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="classname" elementType="Argument">
                <stringProp name="Argument.name">classname</stringProp>
                <stringProp name="Argument.value">${__P(Class_name,Test Class 14)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__P(Start_Date,1535799974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__P(End_Date,1567335974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="newclassname" elementType="Argument">
                <stringProp name="Argument.name">newclassname</stringProp>
                <stringProp name="Argument.value">${__P(Class_name,Test Class 12 Updated)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="flag" elementType="Argument">
                <stringProp name="Argument.name">flag</stringProp>
                <stringProp name="Argument.value">${__P(Details,false)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">D:\CUP\Performance\apache-jmeter-4.0\bin\Testdata\1021.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1014 - Teacher logs in (and accesses dashboard)" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios\1014-Teacher_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1018 - Teacher Creates a new class" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios\1018-Teacher_create_new_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1019-Teacher_associate_course_material" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios\1019-Teacher_associate_course_material.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">30000</stringProp>
          </TestAction>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">30000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Analytics_for_users_in_a_class_aggregrated_over_all_the_items_&amp;_materials_(product)_in_that_class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Analytics_for_users_in_a_class_aggregrated_over_all_the_items_&amp;_materials_(product)_in_that_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_members_of_a_class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Get_members_of _a_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="class_pending_submissions" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\class_pending_submissions.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Analytics_for_items_(product)_in_a_class_aggregrated_over_all_students_in_that_class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Analytics_for_items_(product)_in_a_class_aggregrated_over_all_students_in_that_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_all _products_in_org" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Get_all _products_in_org.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Unassociate_a_product_from_a_class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Unassociate_a_product_from_a_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">30000</stringProp>
          </TestAction>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">30000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="associate_a_product_with_class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\associate_a_product_with_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Analytics_for_users_in_a_class_aggregrated_over_all_the_items_&amp;_materials_(product)_in_that_class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Analytics_for_users_in_a_class_aggregrated_over_all_the_items_&amp;_materials_(product)_in_that_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_members_of_a_class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Get_members_of _a_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="class_pending_submissions" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\class_pending_submissions.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Analytics_for_items_(product)_in_a_class_aggregrated_over_all_students_in_that_class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Analytics_for_items_(product)_in_a_class_aggregrated_over_all_students_in_that_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1022: Teacher changes the class key of the class" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>1.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="classname" elementType="Argument">
                <stringProp name="Argument.name">classname</stringProp>
                <stringProp name="Argument.value">${__P(Class_name,Test Class 16)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__P(Start_Date,1535799974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__P(End_Date,1567335974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="newclassname" elementType="Argument">
                <stringProp name="Argument.name">newclassname</stringProp>
                <stringProp name="Argument.value">${__P(Class_name,Test Class 11 Updated)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="flag" elementType="Argument">
                <stringProp name="Argument.name">flag</stringProp>
                <stringProp name="Argument.value">${__P(Details,false)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1022.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1014 - Teacher logs in (and accesses dashboard)" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1014-Teacher_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1018 - Teacher Creates a new class" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1018-Teacher_create_new_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1019-Teacher_associate_course_material" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios\1019-Teacher_associate_course_material.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">30000</stringProp>
          </TestAction>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">30000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Analytics_for_users_in_a_class_aggregrated_over_all_the_items_&amp;_materials_(product)_in_that_class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Analytics_for_users_in_a_class_aggregrated_over_all_the_items_&amp;_materials_(product)_in_that_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_members_of_a_class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Get_members_of _a_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="class_pending_submissions" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\class_pending_submissions.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Analytics_for_items_(product)_in_a_class_aggregrated_over_all_students_in_that_class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Analytics_for_items_(product)_in_a_class_aggregrated_over_all_students_in_that_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="generate_classcode" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\generate_classcode.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1023: Teacher enroll other teachers into the class" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>1.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="classname" elementType="Argument">
                <stringProp name="Argument.name">classname</stringProp>
                <stringProp name="Argument.value">${__P(Class_name,Test Class 18)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__P(Start_Date,1535799974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__P(End_Date,1567335974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="newclassname" elementType="Argument">
                <stringProp name="Argument.name">newclassname</stringProp>
                <stringProp name="Argument.value">${__P(Class_name,Test Class 11 Updated)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="flag" elementType="Argument">
                <stringProp name="Argument.name">flag</stringProp>
                <stringProp name="Argument.value">${__P(Details,false)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1022.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1014 - Teacher logs in (and accesses dashboard)" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1014-Teacher_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1018 - Teacher Creates a new class" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1018-Teacher_create_new_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1019-Teacher_associate_course_material" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios\1019-Teacher_associate_course_material.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">30000</stringProp>
          </TestAction>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">30000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Analytics_for_users_in_a_class_aggregrated_over_all_the_items_&amp;_materials_(product)_in_that_class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Analytics_for_users_in_a_class_aggregrated_over_all_the_items_&amp;_materials_(product)_in_that_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_members_of_a_class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Get_members_of _a_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="class_pending_submissions" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\class_pending_submissions.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Analytics_for_items_(product)_in_a_class_aggregrated_over_all_students_in_that_class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Analytics_for_items_(product)_in_a_class_aggregrated_over_all_students_in_that_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_all_users_in_org" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_all_users_in_org.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="enroll_multiple_users_into_class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/enroll_multiple_users_into_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1024: Teacher removes other teachers from the class" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>1.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="classname" elementType="Argument">
                <stringProp name="Argument.name">classname</stringProp>
                <stringProp name="Argument.value">${__P(Class_name,Test Class 18)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__P(Start_Date,1535799974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__P(End_Date,1567335974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="newclassname" elementType="Argument">
                <stringProp name="Argument.name">newclassname</stringProp>
                <stringProp name="Argument.value">${__P(Class_name,Test Class 11 Updated)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="flag" elementType="Argument">
                <stringProp name="Argument.name">flag</stringProp>
                <stringProp name="Argument.value">${__P(Details,false)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1022.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1014 - Teacher logs in (and accesses dashboard)" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1014-Teacher_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1018 - Teacher Creates a new class" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1018-Teacher_create_new_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1019-Teacher_associate_course_material" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios\1019-Teacher_associate_course_material.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">30000</stringProp>
          </TestAction>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">30000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Analytics_for_users_in_a_class_aggregrated_over_all_the_items_&amp;_materials_(product)_in_that_class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Analytics_for_users_in_a_class_aggregrated_over_all_the_items_&amp;_materials_(product)_in_that_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_members_of_a_class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Get_members_of _a_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="class_pending_submissions" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\class_pending_submissions.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Analytics_for_items_(product)_in_a_class_aggregrated_over_all_students_in_that_class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Analytics_for_items_(product)_in_a_class_aggregrated_over_all_students_in_that_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_all_users_in_org" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_all_users_in_org.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="enroll_multiple_users_into_class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/enroll_multiple_users_into_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="unenroll_multiple_users_into_class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/unenroll_multiple_users_into_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1025: Teacher can review class progress - for all student in that class" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>1.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="classname" elementType="Argument">
                <stringProp name="Argument.name">classname</stringProp>
                <stringProp name="Argument.value">${__P(Class_name,Test Class 18)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__P(Start_Date,1535799974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__P(End_Date,1567335974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="newclassname" elementType="Argument">
                <stringProp name="Argument.name">newclassname</stringProp>
                <stringProp name="Argument.value">${__P(Class_name,Test Class 11 Updated)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="flag" elementType="Argument">
                <stringProp name="Argument.name">flag</stringProp>
                <stringProp name="Argument.value">${__P(Details,false)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1022.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1014 - Teacher logs in (and accesses dashboard)" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1014-Teacher_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1018 - Teacher Creates a new class" enabled="false">
            <stringProp name="IncludeController.includepath">Scenarios/1018-Teacher_create_new_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1019-Teacher_associate_course_material" enabled="false">
            <stringProp name="IncludeController.includepath">Scenarios\1019-Teacher_associate_course_material.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">30000</stringProp>
          </TestAction>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">30000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Analytics_for_users_in_a_class_aggregrated_over_all_the_items_&amp;_materials_(product)_in_that_class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Analytics_for_users_in_a_class_aggregrated_over_all_the_items_&amp;_materials_(product)_in_that_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_members_of_a_class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Get_members_of _a_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="class_pending_submissions" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\class_pending_submissions.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Analytics_for_items_(product)_in_a_class_aggregrated_over_all_students_in_that_class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Analytics_for_items_(product)_in_a_class_aggregrated_over_all_students_in_that_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1026: Teacher can review class progress - one students in that class" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>1.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="classname" elementType="Argument">
                <stringProp name="Argument.name">classname</stringProp>
                <stringProp name="Argument.value">${__P(Class_name,Test Class 18)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__P(Start_Date,1535799974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__P(End_Date,1567335974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="newclassname" elementType="Argument">
                <stringProp name="Argument.name">newclassname</stringProp>
                <stringProp name="Argument.value">${__P(Class_name,Test Class 11 Updated)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1026.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1014 - Teacher logs in (and accesses dashboard)" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1014-Teacher_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1018 - Teacher Creates a new class" enabled="false">
            <stringProp name="IncludeController.includepath">Scenarios/1018-Teacher_create_new_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1019-Teacher_associate_course_material" enabled="false">
            <stringProp name="IncludeController.includepath">Scenarios\1019-Teacher_associate_course_material.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">30000</stringProp>
          </TestAction>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">30000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product items and their progress analytic (default)" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Product_items_and_their_progress_analytic(default)..jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get information of a product for a user" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_information_of_a_product_for_a_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1027: Teacher can open and review class marking queue" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>1.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="classname" elementType="Argument">
                <stringProp name="Argument.name">classname</stringProp>
                <stringProp name="Argument.value">${__P(Class_name,Test Class 18)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__P(Start_Date,1535799974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__P(End_Date,1567335974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="newclassname" elementType="Argument">
                <stringProp name="Argument.name">newclassname</stringProp>
                <stringProp name="Argument.value">${__P(Class_name,Test Class 11 Updated)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="flag" elementType="Argument">
                <stringProp name="Argument.name">flag</stringProp>
                <stringProp name="Argument.value">${__P(Details,true)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1022.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1014 - Teacher logs in (and accesses dashboard)" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1014-Teacher_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1018 - Teacher Creates a new class" enabled="false">
            <stringProp name="IncludeController.includepath">Scenarios/1018-Teacher_create_new_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1019-Teacher_associate_course_material" enabled="false">
            <stringProp name="IncludeController.includepath">Scenarios\1019-Teacher_associate_course_material.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">30000</stringProp>
          </TestAction>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">30000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="class_pending_submissions" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\class_pending_submissions.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="API will return the students whose manual graded items have been evaluated once" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/API_will_return_the_students_whose_manual_graded_items_have_been_evaluated_once.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product items and their progress analytic (default)" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Product_items_and_their_progress_analytic(default)..jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get user&apos;s application state for a product or class (product)" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_user&apos;s_application_state_for_a_product_or_class(product).jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1028: Teacher can draft/save/submit feedback on productive skills" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>1.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="classname" elementType="Argument">
                <stringProp name="Argument.name">classname</stringProp>
                <stringProp name="Argument.value">${__P(Class_name,Test Class 18)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__P(Start_Date,1535799974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__P(End_Date,1567335974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="newclassname" elementType="Argument">
                <stringProp name="Argument.name">newclassname</stringProp>
                <stringProp name="Argument.value">${__P(Class_name,Test Class 11 Updated)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="verb" elementType="Argument">
                <stringProp name="Argument.name">verb</stringProp>
                <stringProp name="Argument.value">${__P(verb_type,evaluated)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="flag" elementType="Argument">
                <stringProp name="Argument.name">flag</stringProp>
                <stringProp name="Argument.value">${__P(Details,true)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1022.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1014 - Teacher logs in (and accesses dashboard)" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1014-Teacher_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1018 - Teacher Creates a new class" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1018-Teacher_create_new_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1019-Teacher_associate_course_material" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios\1019-Teacher_associate_course_material.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">30000</stringProp>
          </TestAction>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">30000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="class_pending_submissions" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\class_pending_submissions.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="API will return the students whose manual graded items have been evaluated once" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/API_will_return_the_students_whose_manual_graded_items_have_been_evaluated_once.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product items and their progress analytic (default)" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Product_items_and_their_progress_analytic(default)..jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get user&apos;s application state for a product or class (product)" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_user&apos;s_application_state_for_a_product_or_class(product).jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update user&apos;s application state for a product or class (product)" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Update_user&apos;s_application_state_for_a_product_or_class(product).jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statements" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Add_statements.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1029: Teacher can open and review previous marking (completed earlier)" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>1.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="classname" elementType="Argument">
                <stringProp name="Argument.name">classname</stringProp>
                <stringProp name="Argument.value">${__P(Class_name,Test Class 18)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__P(Start_Date,1535799974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__P(End_Date,1567335974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="newclassname" elementType="Argument">
                <stringProp name="Argument.name">newclassname</stringProp>
                <stringProp name="Argument.value">${__P(Class_name,Test Class 11 Updated)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="verb" elementType="Argument">
                <stringProp name="Argument.name">verb</stringProp>
                <stringProp name="Argument.value">${__P(verb_type,evaluated)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="flag" elementType="Argument">
                <stringProp name="Argument.name">flag</stringProp>
                <stringProp name="Argument.value">${__P(Details,true)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1022.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1014 - Teacher logs in (and accesses dashboard)" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1014-Teacher_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1018 - Teacher Creates a new class" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1018-Teacher_create_new_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1019-Teacher_associate_course_material" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios\1019-Teacher_associate_course_material.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">30000</stringProp>
          </TestAction>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">30000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="class_pending_submissions" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\class_pending_submissions.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="API will return the students whose manual graded items have been evaluated once" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/API_will_return_the_students_whose_manual_graded_items_have_been_evaluated_once.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product items and their progress analytic (default)" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Product_items_and_their_progress_analytic(default)..jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get user&apos;s application state for a product or class (product)" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_user&apos;s_application_state_for_a_product_or_class(product).jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get user&apos;s application state for a product or class (product)" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_user&apos;s_application_state_for_a_product_or_class(product).jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get the recent-submissions made by a User of a Class in a Product" enabled="true">
            <stringProp name="IncludeController.includepath">F:\apache-jmeter-4\bin\Fragements\Get_the_recent_submissions_made_by_a_User_of_a_Class_in_a_Product.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="comproDLS Existing Users" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">1800</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1004: Student enrolls into a new class using class key - New Users (Already access to Evolve 2 product and a Evolve 2 related class)" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>10.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1004.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="productcode" elementType="Argument">
                <stringProp name="Argument.name">productcode</stringProp>
                <stringProp name="Argument.value">${__P(product_code,evolve_l2)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_product_id" elementType="Argument">
                <stringProp name="Argument.name">ext_product_id</stringProp>
                <stringProp name="Argument.value">${__P(product_code,compro444555666)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="classcode2" elementType="Argument">
                <stringProp name="Argument.name">classcode2</stringProp>
                <stringProp name="Argument.value">${__P(class_code,TD2J-MNb2)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1003: Student logs in and accesses the dashboard" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1003-Student_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with class_code" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Join_Spaces_with_class_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">30000</stringProp>
          </TestAction>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">60000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get classes of an user" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_classes_of_an_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get list of all products for a user" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_list_of_all_products_for_a_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1005: Student enrolls into a new class using class key  &amp; activates a new product - New Users (Having access to Evolve 4 and Evolve 4 related class)" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>50.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1005.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="productcode" elementType="Argument">
                <stringProp name="Argument.name">productcode</stringProp>
                <stringProp name="Argument.value">${__P(product_code,evolve_l4)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_product_id" elementType="Argument">
                <stringProp name="Argument.name">ext_product_id</stringProp>
                <stringProp name="Argument.value">${__P(product_code,14-evolve-14)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="classcode2" elementType="Argument">
                <stringProp name="Argument.name">classcode2</stringProp>
                <stringProp name="Argument.value">${__P(class_code,ZTbg-fcFB)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
            <collectionProp name="Arguments.arguments">
              <elementProp name="classcode" elementType="Argument">
                <stringProp name="Argument.name">classcode</stringProp>
                <stringProp name="Argument.value">${__P(class_code,ehaF-g2j7)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productcode" elementType="Argument">
                <stringProp name="Argument.name">productcode</stringProp>
                <stringProp name="Argument.value">${__P(product_code,evolve_l4)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_product_id" elementType="Argument">
                <stringProp name="Argument.name">ext_product_id</stringProp>
                <stringProp name="Argument.value">${__P(product_code,compro444555666)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1003: Student logs in and accesses the dashboard" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1003-Student_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with class_code" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Join_Spaces_with_class_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">30000</stringProp>
          </TestAction>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">60000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Product details using ISBN" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Get_product_details_by_isbn.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Entitle User With Product Code" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Entitle_User_With_Product_Code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">30000</stringProp>
          </TestAction>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">60000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get classes of an user" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_classes_of_an_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get list of all products for a user" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_list_of_all_products_for_a_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1006: Student activates a new product - New Users (Student having access of Evolve 4 product only)" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>50.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1006.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="productcode" elementType="Argument">
                <stringProp name="Argument.name">productcode</stringProp>
                <stringProp name="Argument.value">${__P(product_code,evolve_l4)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_product_id" elementType="Argument">
                <stringProp name="Argument.name">ext_product_id</stringProp>
                <stringProp name="Argument.value">${__P(product_code,14-evolve-14)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1003: Student logs in and accesses the dashboard (My Private Learning)" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1003-Student_logs_in_and_accesses_the_dashboard_private.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Product details using ISBN" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Get_product_details_by_isbn.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Entitle User With Product Code" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Entitle_User_With_Product_Code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">30000</stringProp>
          </TestAction>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">60000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get list of all products for a user" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_list_of_all_products_for_a_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1007: Student accesses his profile (My Profile) and updates information" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>10.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="role" elementType="Argument">
                <stringProp name="Argument.name">role</stringProp>
                <stringProp name="Argument.value">${__P(Role,student)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="firstname" elementType="Argument">
                <stringProp name="Argument.name">firstname</stringProp>
                <stringProp name="Argument.value">${__P(First_name,Compro)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1011.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1003: Student logs in and accesses the dashboard" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1003-Student_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get All the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Updates the user information in all the spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/update_user_information.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1008: Student accesses the learning path of a product (self-paced or private learning)" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>10.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1008.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
            <collectionProp name="Arguments.arguments">
              <elementProp name="appid" elementType="Argument">
                <stringProp name="Argument.name">appid</stringProp>
                <stringProp name="Argument.value">default</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startTime" elementType="Argument">
                <stringProp name="Argument.name">startTime</stringProp>
                <stringProp name="Argument.value">1504224000000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sectionCounter" elementType="Argument">
                <stringProp name="Argument.name">sectionCounter</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="minWait" elementType="Argument">
                <stringProp name="Argument.name">minWait</stringProp>
                <stringProp name="Argument.value">2000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productSummary_max" elementType="Argument">
                <stringProp name="Argument.name">productSummary_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productToc_max" elementType="Argument">
                <stringProp name="Argument.name">productToc_max</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productRightpane_max" elementType="Argument">
                <stringProp name="Argument.name">productRightpane_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="activityStream_max" elementType="Argument">
                <stringProp name="Argument.name">activityStream_max</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="reader_max" elementType="Argument">
                <stringProp name="Argument.name">reader_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="dashboard_max" elementType="Argument">
                <stringProp name="Argument.name">dashboard_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="postComment_max" elementType="Argument">
                <stringProp name="Argument.name">postComment_max</stringProp>
                <stringProp name="Argument.value">2500</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="userProgress_max" elementType="Argument">
                <stringProp name="Argument.name">userProgress_max</stringProp>
                <stringProp name="Argument.value">30000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="auth_url" elementType="Argument">
                <stringProp name="Argument.name">auth_url</stringProp>
                <stringProp name="Argument.value">${__P(auth_url,auth-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="product_url" elementType="Argument">
                <stringProp name="Argument.name">product_url</stringProp>
                <stringProp name="Argument.value">${__P(product_url,product-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="collab_url" elementType="Argument">
                <stringProp name="Argument.name">collab_url</stringProp>
                <stringProp name="Argument.value">${__P(collab_url,collab-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="xapi_url" elementType="Argument">
                <stringProp name="Argument.name">xapi_url</stringProp>
                <stringProp name="Argument.value">${__P(xapi_url,xapi-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="analytics_url" elementType="Argument">
                <stringProp name="Argument.name">analytics_url</stringProp>
                <stringProp name="Argument.value">${__P(analytics_url,analytics-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="activity_url" elementType="Argument">
                <stringProp name="Argument.name">activity_url</stringProp>
                <stringProp name="Argument.value">${__P(activity_url,activity-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="chapter_num" elementType="Argument">
                <stringProp name="Argument.name">chapter_num</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="section_num" elementType="Argument">
                <stringProp name="Argument.name">section_num</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="accountid" elementType="Argument">
                <stringProp name="Argument.name">accountid</stringProp>
                <stringProp name="Argument.value">${__P(Account_id,compro)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="classcode" elementType="Argument">
                <stringProp name="Argument.name">classcode</stringProp>
                <stringProp name="Argument.value">${__P(class_code,ca3C-jW4B)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productcode" elementType="Argument">
                <stringProp name="Argument.name">productcode</stringProp>
                <stringProp name="Argument.value">${__P(product_code,evolve_l2)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_product_id" elementType="Argument">
                <stringProp name="Argument.name">ext_product_id</stringProp>
                <stringProp name="Argument.value">${__P(product_code,compro444555666)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="task" elementType="Argument">
                <stringProp name="Argument.name">task</stringProp>
                <stringProp name="Argument.value">${__P(task_code,1528190348277/1528190372600/1528190508292)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="verb" elementType="Argument">
                <stringProp name="Argument.name">verb</stringProp>
                <stringProp name="Argument.value">${__P(verb_type,launched)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1003: Student logs in and accesses the dashboard (My Private Learning)" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1003-Student_logs_in_and_accesses_the_dashboard_private.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get product by product id" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_product_by_product_id.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product items and their progress analytic (default) (My Private Learning)" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Product_items_and_their_progress_analytic(default)_private.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get user&apos;s application state for a product or class (product) (My Private Learning)" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_user&apos;s_application_state_for_a_product_or_class(product)_private.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">30000</stringProp>
          </TestAction>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">30000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get user&apos;s application state for a product or class (product)(My Private Learning)" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_user&apos;s_application_state_for_a_product_or_class(product)_private.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update user&apos;s application state for a product or class (product)(My Private Learning)" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Update_user&apos;s_application_state_for_a_product_or_class(product)_private.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statements(My Private Learning)" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Add_statements_private.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1009: Student accesses the learning path of a product as part of a teacher-led class " enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>10.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1009.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid,classcode</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
            <collectionProp name="Arguments.arguments">
              <elementProp name="appid" elementType="Argument">
                <stringProp name="Argument.name">appid</stringProp>
                <stringProp name="Argument.value">default</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startTime" elementType="Argument">
                <stringProp name="Argument.name">startTime</stringProp>
                <stringProp name="Argument.value">1504224000000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sectionCounter" elementType="Argument">
                <stringProp name="Argument.name">sectionCounter</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="minWait" elementType="Argument">
                <stringProp name="Argument.name">minWait</stringProp>
                <stringProp name="Argument.value">2000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productSummary_max" elementType="Argument">
                <stringProp name="Argument.name">productSummary_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productToc_max" elementType="Argument">
                <stringProp name="Argument.name">productToc_max</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productRightpane_max" elementType="Argument">
                <stringProp name="Argument.name">productRightpane_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="activityStream_max" elementType="Argument">
                <stringProp name="Argument.name">activityStream_max</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="reader_max" elementType="Argument">
                <stringProp name="Argument.name">reader_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="dashboard_max" elementType="Argument">
                <stringProp name="Argument.name">dashboard_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="postComment_max" elementType="Argument">
                <stringProp name="Argument.name">postComment_max</stringProp>
                <stringProp name="Argument.value">2500</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="userProgress_max" elementType="Argument">
                <stringProp name="Argument.name">userProgress_max</stringProp>
                <stringProp name="Argument.value">30000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="auth_url" elementType="Argument">
                <stringProp name="Argument.name">auth_url</stringProp>
                <stringProp name="Argument.value">${__P(auth_url,auth-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="product_url" elementType="Argument">
                <stringProp name="Argument.name">product_url</stringProp>
                <stringProp name="Argument.value">${__P(product_url,product-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="collab_url" elementType="Argument">
                <stringProp name="Argument.name">collab_url</stringProp>
                <stringProp name="Argument.value">${__P(collab_url,collab-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="xapi_url" elementType="Argument">
                <stringProp name="Argument.name">xapi_url</stringProp>
                <stringProp name="Argument.value">${__P(xapi_url,xapi-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="analytics_url" elementType="Argument">
                <stringProp name="Argument.name">analytics_url</stringProp>
                <stringProp name="Argument.value">${__P(analytics_url,analytics-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="activity_url" elementType="Argument">
                <stringProp name="Argument.name">activity_url</stringProp>
                <stringProp name="Argument.value">${__P(activity_url,activity-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="chapter_num" elementType="Argument">
                <stringProp name="Argument.name">chapter_num</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="section_num" elementType="Argument">
                <stringProp name="Argument.name">section_num</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="accountid" elementType="Argument">
                <stringProp name="Argument.name">accountid</stringProp>
                <stringProp name="Argument.value">${__P(Account_id,compro)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="classcode" elementType="Argument">
                <stringProp name="Argument.name">classcode</stringProp>
                <stringProp name="Argument.value">${__P(class_code,ca3C-jW4B)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productcode" elementType="Argument">
                <stringProp name="Argument.name">productcode</stringProp>
                <stringProp name="Argument.value">${__P(product_code,evolve_l2)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_product_id" elementType="Argument">
                <stringProp name="Argument.name">ext_product_id</stringProp>
                <stringProp name="Argument.value">${__P(product_code,compro444555666)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="task" elementType="Argument">
                <stringProp name="Argument.name">task</stringProp>
                <stringProp name="Argument.value">${__P(task_code,1528190348277/1528190372600/1528190508292)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="verb" elementType="Argument">
                <stringProp name="Argument.name">verb</stringProp>
                <stringProp name="Argument.value">${__P(verb_type,launched)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1003: Student logs in and accesses the dashboard" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1003-Student_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get details for a specific class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_details_for_a_specific_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get product by product id" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_product_by_product_id.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product items and their progress analytic (default)" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Product_items_and_their_progress_analytic(default)..jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get user&apos;s application state for a product or class (product)" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_user&apos;s_application_state_for_a_product_or_class(product).jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">30000</stringProp>
          </TestAction>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">30000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get user&apos;s application state for a product or class (product)" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_user&apos;s_application_state_for_a_product_or_class(product).jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">30000</stringProp>
          </TestAction>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">30000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update user&apos;s application state for a product or class (product)" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Update_user&apos;s_application_state_for_a_product_or_class(product).jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statements" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Add_statements.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1010: Student works/studies  on the learning path  (self-paced)" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>10.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1010.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
            <collectionProp name="Arguments.arguments">
              <elementProp name="appid" elementType="Argument">
                <stringProp name="Argument.name">appid</stringProp>
                <stringProp name="Argument.value">default</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startTime" elementType="Argument">
                <stringProp name="Argument.name">startTime</stringProp>
                <stringProp name="Argument.value">1504224000000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sectionCounter" elementType="Argument">
                <stringProp name="Argument.name">sectionCounter</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="minWait" elementType="Argument">
                <stringProp name="Argument.name">minWait</stringProp>
                <stringProp name="Argument.value">2000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productSummary_max" elementType="Argument">
                <stringProp name="Argument.name">productSummary_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productToc_max" elementType="Argument">
                <stringProp name="Argument.name">productToc_max</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productRightpane_max" elementType="Argument">
                <stringProp name="Argument.name">productRightpane_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="activityStream_max" elementType="Argument">
                <stringProp name="Argument.name">activityStream_max</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="reader_max" elementType="Argument">
                <stringProp name="Argument.name">reader_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="dashboard_max" elementType="Argument">
                <stringProp name="Argument.name">dashboard_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="postComment_max" elementType="Argument">
                <stringProp name="Argument.name">postComment_max</stringProp>
                <stringProp name="Argument.value">2500</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="userProgress_max" elementType="Argument">
                <stringProp name="Argument.name">userProgress_max</stringProp>
                <stringProp name="Argument.value">30000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="auth_url" elementType="Argument">
                <stringProp name="Argument.name">auth_url</stringProp>
                <stringProp name="Argument.value">${__P(auth_url,auth-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="product_url" elementType="Argument">
                <stringProp name="Argument.name">product_url</stringProp>
                <stringProp name="Argument.value">${__P(product_url,product-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="collab_url" elementType="Argument">
                <stringProp name="Argument.name">collab_url</stringProp>
                <stringProp name="Argument.value">${__P(collab_url,collab-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="xapi_url" elementType="Argument">
                <stringProp name="Argument.name">xapi_url</stringProp>
                <stringProp name="Argument.value">${__P(xapi_url,xapi-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="analytics_url" elementType="Argument">
                <stringProp name="Argument.name">analytics_url</stringProp>
                <stringProp name="Argument.value">${__P(analytics_url,analytics-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="activity_url" elementType="Argument">
                <stringProp name="Argument.name">activity_url</stringProp>
                <stringProp name="Argument.value">${__P(activity_url,activity-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="chapter_num" elementType="Argument">
                <stringProp name="Argument.name">chapter_num</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="section_num" elementType="Argument">
                <stringProp name="Argument.name">section_num</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="accountid" elementType="Argument">
                <stringProp name="Argument.name">accountid</stringProp>
                <stringProp name="Argument.value">${__P(Account_id,compro)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="classcode" elementType="Argument">
                <stringProp name="Argument.name">classcode</stringProp>
                <stringProp name="Argument.value">${__P(class_code,ca3C-jW4B)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productcode" elementType="Argument">
                <stringProp name="Argument.name">productcode</stringProp>
                <stringProp name="Argument.value">${__P(product_code,evolve_l2)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_product_id" elementType="Argument">
                <stringProp name="Argument.name">ext_product_id</stringProp>
                <stringProp name="Argument.value">${__P(product_code,compro444555666)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="task" elementType="Argument">
                <stringProp name="Argument.name">task</stringProp>
                <stringProp name="Argument.value">${__P(task_code,1528190348277/1528190372600/1528190508292)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="verb" elementType="Argument">
                <stringProp name="Argument.name">verb</stringProp>
                <stringProp name="Argument.value">${__P(verb_type,launched)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1003: Student logs in and accesses the dashboard (My Private Learning)" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1003-Student_logs_in_and_accesses_the_dashboard_private.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1008: Student accesses the learning path of a product (self-paced or private learning)" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1008-Student_accesses_the_learning_path_of_a_product_(self-paced).jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="A Student simulating reading (Multiple pages) and post the statements" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">7</stringProp>
          </LoopController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">Testdata\product_sections_unit3.csv</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="variableNames">task,verb</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.thread</stringProp>
            </CSVDataSet>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time Before Posting statement" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">${userProgress_max}</stringProp>
                <stringProp name="RandomTimer.range">${userProgress_max}</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add a new statement" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Add_statements_private.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update user&apos;s application state for a product or class (product)" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Update_user&apos;s_application_state_for_a_product_or_class(product)_private.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get users application state for a product or class(product) " enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_user&apos;s_application_state_for_a_product_or_class(product)_private.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1011: Student works/studies  on the learning path  (teacher-led) &amp; views their grades and scores" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>20.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">Testdata\1011.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">extuserid,classcode</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
            <collectionProp name="Arguments.arguments">
              <elementProp name="appid" elementType="Argument">
                <stringProp name="Argument.name">appid</stringProp>
                <stringProp name="Argument.value">default</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startTime" elementType="Argument">
                <stringProp name="Argument.name">startTime</stringProp>
                <stringProp name="Argument.value">1504224000000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sectionCounter" elementType="Argument">
                <stringProp name="Argument.name">sectionCounter</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="minWait" elementType="Argument">
                <stringProp name="Argument.name">minWait</stringProp>
                <stringProp name="Argument.value">2000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productSummary_max" elementType="Argument">
                <stringProp name="Argument.name">productSummary_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productToc_max" elementType="Argument">
                <stringProp name="Argument.name">productToc_max</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productRightpane_max" elementType="Argument">
                <stringProp name="Argument.name">productRightpane_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="activityStream_max" elementType="Argument">
                <stringProp name="Argument.name">activityStream_max</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="reader_max" elementType="Argument">
                <stringProp name="Argument.name">reader_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="dashboard_max" elementType="Argument">
                <stringProp name="Argument.name">dashboard_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="postComment_max" elementType="Argument">
                <stringProp name="Argument.name">postComment_max</stringProp>
                <stringProp name="Argument.value">2500</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="userProgress_max" elementType="Argument">
                <stringProp name="Argument.name">userProgress_max</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="auth_url" elementType="Argument">
                <stringProp name="Argument.name">auth_url</stringProp>
                <stringProp name="Argument.value">${__P(auth_url,auth-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="product_url" elementType="Argument">
                <stringProp name="Argument.name">product_url</stringProp>
                <stringProp name="Argument.value">${__P(product_url,product-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="collab_url" elementType="Argument">
                <stringProp name="Argument.name">collab_url</stringProp>
                <stringProp name="Argument.value">${__P(collab_url,collab-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="xapi_url" elementType="Argument">
                <stringProp name="Argument.name">xapi_url</stringProp>
                <stringProp name="Argument.value">${__P(xapi_url,xapi-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="analytics_url" elementType="Argument">
                <stringProp name="Argument.name">analytics_url</stringProp>
                <stringProp name="Argument.value">${__P(analytics_url,analytics-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="activity_url" elementType="Argument">
                <stringProp name="Argument.name">activity_url</stringProp>
                <stringProp name="Argument.value">${__P(activity_url,activity-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="chapter_num" elementType="Argument">
                <stringProp name="Argument.name">chapter_num</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="section_num" elementType="Argument">
                <stringProp name="Argument.name">section_num</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="accountid" elementType="Argument">
                <stringProp name="Argument.name">accountid</stringProp>
                <stringProp name="Argument.value">${__P(Account_id,compro)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="classcode" elementType="Argument">
                <stringProp name="Argument.name">classcode</stringProp>
                <stringProp name="Argument.value">${__P(class_code,ca3C-jW4B)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productcode" elementType="Argument">
                <stringProp name="Argument.name">productcode</stringProp>
                <stringProp name="Argument.value">${__P(product_code,evolve_l2)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_product_id" elementType="Argument">
                <stringProp name="Argument.name">ext_product_id</stringProp>
                <stringProp name="Argument.value">${__P(product_code,compro444555666)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="task" elementType="Argument">
                <stringProp name="Argument.name">task</stringProp>
                <stringProp name="Argument.value">${__P(task_code,1528190348277/1528190372600/1528190454820)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1003: Student logs in and accesses the dashboard" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1003-Student_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1009:Student accesses the learning path of a product as part of a teacher-led class " enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1009-Student_accesses_the_learning_path_of_a_product_as_part_of_a_teacher-led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get statements in tincan compliant format" enabled="false">
            <stringProp name="IncludeController.includepath"></stringProp>
          </IncludeController>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="A Student simulating reading (Multiple pages) and post the statements" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">7</stringProp>
          </LoopController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">Testdata\product_sections_unit3.csv</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="variableNames">task,verb</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.group</stringProp>
            </CSVDataSet>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time Before Posting statement" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">${userProgress_max}</stringProp>
                <stringProp name="RandomTimer.range">${userProgress_max}</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add a new statement" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Add_statements.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update user&apos;s application state for a product or class (product)" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Update_user&apos;s_application_state_for_a_product_or_class(product).jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get users application state for a product or class(product) " enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_user&apos;s_application_state_for_a_product_or_class(product).jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1012: Student works/studies on productive skills" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>10.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">Testdata\1012.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">extuserid,classcode</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
            <collectionProp name="Arguments.arguments">
              <elementProp name="appid" elementType="Argument">
                <stringProp name="Argument.name">appid</stringProp>
                <stringProp name="Argument.value">default</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startTime" elementType="Argument">
                <stringProp name="Argument.name">startTime</stringProp>
                <stringProp name="Argument.value">1504224000000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sectionCounter" elementType="Argument">
                <stringProp name="Argument.name">sectionCounter</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="minWait" elementType="Argument">
                <stringProp name="Argument.name">minWait</stringProp>
                <stringProp name="Argument.value">2000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productSummary_max" elementType="Argument">
                <stringProp name="Argument.name">productSummary_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productToc_max" elementType="Argument">
                <stringProp name="Argument.name">productToc_max</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productRightpane_max" elementType="Argument">
                <stringProp name="Argument.name">productRightpane_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="activityStream_max" elementType="Argument">
                <stringProp name="Argument.name">activityStream_max</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="reader_max" elementType="Argument">
                <stringProp name="Argument.name">reader_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="dashboard_max" elementType="Argument">
                <stringProp name="Argument.name">dashboard_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="postComment_max" elementType="Argument">
                <stringProp name="Argument.name">postComment_max</stringProp>
                <stringProp name="Argument.value">2500</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="userProgress_max" elementType="Argument">
                <stringProp name="Argument.name">userProgress_max</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="auth_url" elementType="Argument">
                <stringProp name="Argument.name">auth_url</stringProp>
                <stringProp name="Argument.value">${__P(auth_url,auth-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="product_url" elementType="Argument">
                <stringProp name="Argument.name">product_url</stringProp>
                <stringProp name="Argument.value">${__P(product_url,product-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="collab_url" elementType="Argument">
                <stringProp name="Argument.name">collab_url</stringProp>
                <stringProp name="Argument.value">${__P(collab_url,collab-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="xapi_url" elementType="Argument">
                <stringProp name="Argument.name">xapi_url</stringProp>
                <stringProp name="Argument.value">${__P(xapi_url,xapi-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="analytics_url" elementType="Argument">
                <stringProp name="Argument.name">analytics_url</stringProp>
                <stringProp name="Argument.value">${__P(analytics_url,analytics-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="activity_url" elementType="Argument">
                <stringProp name="Argument.name">activity_url</stringProp>
                <stringProp name="Argument.value">${__P(activity_url,activity-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="chapter_num" elementType="Argument">
                <stringProp name="Argument.name">chapter_num</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="section_num" elementType="Argument">
                <stringProp name="Argument.name">section_num</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="accountid" elementType="Argument">
                <stringProp name="Argument.name">accountid</stringProp>
                <stringProp name="Argument.value">${__P(Account_id,compro)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="classcode" elementType="Argument">
                <stringProp name="Argument.name">classcode</stringProp>
                <stringProp name="Argument.value">${__P(class_code,ca3C-jW4B)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productcode" elementType="Argument">
                <stringProp name="Argument.name">productcode</stringProp>
                <stringProp name="Argument.value">${__P(product_code,evolve_l2)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_product_id" elementType="Argument">
                <stringProp name="Argument.name">ext_product_id</stringProp>
                <stringProp name="Argument.value">${__P(product_code,compro444555666)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="task" elementType="Argument">
                <stringProp name="Argument.name">task</stringProp>
                <stringProp name="Argument.value">${__P(task_code,1528190348277/1528190372600/1528190454820)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1003: Student logs in and accesses the dashboard" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1003-Student_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1009:Student accesses the learning path of a product as part of a teacher-led class " enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1009-Student_accesses_the_learning_path_of_a_product_as_part_of_a_teacher-led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="A Student simulating reading (Multiple pages) and post the statements" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">7</stringProp>
          </LoopController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">Testdata\product_sections_pskills.csv</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="variableNames">task,verb</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.thread</stringProp>
            </CSVDataSet>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time Before Posting statement" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">${userProgress_max}</stringProp>
                <stringProp name="RandomTimer.range">${userProgress_max}</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add a new statement" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Add_statements.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update user&apos;s application state for a product or class (product)" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Update_user&apos;s_application_state_for_a_product_or_class(product).jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get users application state for a product or class(product) " enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_user&apos;s_application_state_for_a_product_or_class(product).jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1015: Teacher joins another institution/school using institution key" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>1.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1015.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
            <collectionProp name="Arguments.arguments">
              <elementProp name="appid" elementType="Argument">
                <stringProp name="Argument.name">appid</stringProp>
                <stringProp name="Argument.value">default</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startTime" elementType="Argument">
                <stringProp name="Argument.name">startTime</stringProp>
                <stringProp name="Argument.value">1504224000000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sectionCounter" elementType="Argument">
                <stringProp name="Argument.name">sectionCounter</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="minWait" elementType="Argument">
                <stringProp name="Argument.name">minWait</stringProp>
                <stringProp name="Argument.value">2000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productSummary_max" elementType="Argument">
                <stringProp name="Argument.name">productSummary_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productToc_max" elementType="Argument">
                <stringProp name="Argument.name">productToc_max</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productRightpane_max" elementType="Argument">
                <stringProp name="Argument.name">productRightpane_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="activityStream_max" elementType="Argument">
                <stringProp name="Argument.name">activityStream_max</stringProp>
                <stringProp name="Argument.value">3000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="reader_max" elementType="Argument">
                <stringProp name="Argument.name">reader_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="dashboard_max" elementType="Argument">
                <stringProp name="Argument.name">dashboard_max</stringProp>
                <stringProp name="Argument.value">8000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="postComment_max" elementType="Argument">
                <stringProp name="Argument.name">postComment_max</stringProp>
                <stringProp name="Argument.value">2500</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="userProgress_max" elementType="Argument">
                <stringProp name="Argument.name">userProgress_max</stringProp>
                <stringProp name="Argument.value">30000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="auth_url" elementType="Argument">
                <stringProp name="Argument.name">auth_url</stringProp>
                <stringProp name="Argument.value">${__P(auth_url,auth-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="product_url" elementType="Argument">
                <stringProp name="Argument.name">product_url</stringProp>
                <stringProp name="Argument.value">${__P(product_url,product-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="collab_url" elementType="Argument">
                <stringProp name="Argument.name">collab_url</stringProp>
                <stringProp name="Argument.value">${__P(collab_url,collab-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="xapi_url" elementType="Argument">
                <stringProp name="Argument.name">xapi_url</stringProp>
                <stringProp name="Argument.value">${__P(xapi_url,xapi-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="analytics_url" elementType="Argument">
                <stringProp name="Argument.name">analytics_url</stringProp>
                <stringProp name="Argument.value">${__P(analytics_url,analytics-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="activity_url" elementType="Argument">
                <stringProp name="Argument.name">activity_url</stringProp>
                <stringProp name="Argument.value">${__P(activity_url,activity-staging1.comprodls.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="chapter_num" elementType="Argument">
                <stringProp name="Argument.name">chapter_num</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="section_num" elementType="Argument">
                <stringProp name="Argument.name">section_num</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="accountid" elementType="Argument">
                <stringProp name="Argument.name">accountid</stringProp>
                <stringProp name="Argument.value">${__P(Account_id,compro)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="classcode" elementType="Argument">
                <stringProp name="Argument.name">classcode</stringProp>
                <stringProp name="Argument.value">${__P(class_code,ca3C-jW4B)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productcode" elementType="Argument">
                <stringProp name="Argument.name">productcode</stringProp>
                <stringProp name="Argument.value">${__P(product_code,evolve_l2)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_product_id" elementType="Argument">
                <stringProp name="Argument.name">ext_product_id</stringProp>
                <stringProp name="Argument.value">${__P(product_code,compro444555666)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="task" elementType="Argument">
                <stringProp name="Argument.name">task</stringProp>
                <stringProp name="Argument.value">${__P(task_code,1528190348277/1528190372600/1528190508292)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get All the User Spaces" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Get_all_the_User_Spaces.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Join_a_space_with_space_code.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">30000</stringProp>
            </TestAction>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">60000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
              <stringProp name="ConstantTimer.delay">60000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Get_all_the_User_Spaces.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">30000</stringProp>
            </TestAction>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">60000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Get_an_access_token_for_an_external_user.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get classes of an user" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Get_classes_of_an_user.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Products of first space" enabled="true">
              <stringProp name="IncludeController.includepath">Fragements/Get_products_of_first_space.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1016: Teacher accesses his profile (My Profile) and updates information" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>100.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="role" elementType="Argument">
                <stringProp name="Argument.name">role</stringProp>
                <stringProp name="Argument.value">${__P(Role,teacher)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="firstname" elementType="Argument">
                <stringProp name="Argument.name">firstname</stringProp>
                <stringProp name="Argument.value">${__P(First_name,Compro)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1014.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1014 - Teacher logs in (and accesses dashboard)" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1014-Teacher_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get All the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Updates the user information in all the spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/update_user_information.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1017: Teacher can review / open learning path of products available in that institution" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>100.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="role" elementType="Argument">
                <stringProp name="Argument.name">role</stringProp>
                <stringProp name="Argument.value">${__P(Role,teacher)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="firstname" elementType="Argument">
                <stringProp name="Argument.name">firstname</stringProp>
                <stringProp name="Argument.value">${__P(First_name,Compro)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1014.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1014 - Teacher logs in (and accesses dashboard)" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1014-Teacher_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get product by product id" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_product_by_product_id.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1018: Teacher creates a new class in a particular institution" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>100.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="classname" elementType="Argument">
                <stringProp name="Argument.name">classname</stringProp>
                <stringProp name="Argument.value">${__P(Class_name,Test Class 7)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__P(Start_Date,1535799974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__P(End_Date,1567335974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1018.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid,classcode</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1014 - Teacher logs in (and accesses dashboard)" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1014-Teacher_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/create_new_instructor_led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get details for a specific class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_details_for_a_specific_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get All the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get classes of an user" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_classes_of_an_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Products of first space" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_products_of_first_space.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1019: Teacher adds materials (product) to a class - available in that institution." enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>1.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1018.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1014 - Teacher logs in (and accesses dashboard)" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1014-Teacher_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/associate_a_product_with_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1020: Teacher changes/edits date &amp; metadata of the class" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>100.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="classname" elementType="Argument">
                <stringProp name="Argument.name">classname</stringProp>
                <stringProp name="Argument.value">${__P(Class_name,Test Class 11)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__P(Start_Date,1535799974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__P(End_Date,1567335974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="newclassname" elementType="Argument">
                <stringProp name="Argument.name">newclassname</stringProp>
                <stringProp name="Argument.value">${__P(Class_name,Test Class 11 Updated)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="flag" elementType="Argument">
                <stringProp name="Argument.name">flag</stringProp>
                <stringProp name="Argument.value">${__P(Details,false)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1020.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid,classcode</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1014 - Teacher logs in (and accesses dashboard)" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1014-Teacher_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1018 - Teacher Creates a new class" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1018-Teacher_create_new_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1019-Teacher_associate_course_material" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios\1019-Teacher_associate_course_material.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">30000</stringProp>
          </TestAction>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">30000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Analytics_for_users_in_a_class_aggregrated_over_all_the_items_&amp;_materials_(product)_in_that_class" enabled="true">
            <stringProp name="IncludeController.includepath">\Fragements\Analytics_for_users_in_a_class_aggregrated_over_all_the_items_&amp;_materials_(product)_in_that_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_members_of_a_class" enabled="true">
            <stringProp name="IncludeController.includepath">\Fragements\Get_members_of _a_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="class_pending_submissions" enabled="true">
            <stringProp name="IncludeController.includepath">\Fragements\class_pending_submissions.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Analytics_for_items_(product)_in_a_class_aggregrated_over_all_students_in_that_class" enabled="true">
            <stringProp name="IncludeController.includepath">\Fragements\Analytics_for_items_(product)_in_a_class_aggregrated_over_all_students_in_that_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="update_details_of_class" enabled="true">
            <stringProp name="IncludeController.includepath">\Fragements\update_details_of_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1021: Teacher changes materials (product) associated with class" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>100.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="classname" elementType="Argument">
                <stringProp name="Argument.name">classname</stringProp>
                <stringProp name="Argument.value">${__P(Class_name,Test Class 14)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__P(Start_Date,1535799974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__P(End_Date,1567335974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="newclassname" elementType="Argument">
                <stringProp name="Argument.name">newclassname</stringProp>
                <stringProp name="Argument.value">${__P(Class_name,Test Class 12 Updated)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="flag" elementType="Argument">
                <stringProp name="Argument.name">flag</stringProp>
                <stringProp name="Argument.value">${__P(Details,false)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">D:\CUP\Performance\apache-jmeter-4.0\bin\Testdata\1021.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid,class_name</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1014 - Teacher logs in (and accesses dashboard)" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios\1014-Teacher_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1018 - Teacher Creates a new class" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios\1018-Teacher_create_new_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1019-Teacher_associate_course_material" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios\1019-Teacher_associate_course_material.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">30000</stringProp>
          </TestAction>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">30000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Analytics_for_users_in_a_class_aggregrated_over_all_the_items_&amp;_materials_(product)_in_that_class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Analytics_for_users_in_a_class_aggregrated_over_all_the_items_&amp;_materials_(product)_in_that_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_members_of_a_class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Get_members_of _a_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="class_pending_submissions" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\class_pending_submissions.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Analytics_for_items_(product)_in_a_class_aggregrated_over_all_students_in_that_class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Analytics_for_items_(product)_in_a_class_aggregrated_over_all_students_in_that_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_all _products_in_org" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Get_all _products_in_org.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Unassociate_a_product_from_a_class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Unassociate_a_product_from_a_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">30000</stringProp>
          </TestAction>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">30000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="associate_a_product_with_class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\associate_a_product_with_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Analytics_for_users_in_a_class_aggregrated_over_all_the_items_&amp;_materials_(product)_in_that_class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Analytics_for_users_in_a_class_aggregrated_over_all_the_items_&amp;_materials_(product)_in_that_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_members_of_a_class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Get_members_of _a_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="class_pending_submissions" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\class_pending_submissions.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Analytics_for_items_(product)_in_a_class_aggregrated_over_all_students_in_that_class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Analytics_for_items_(product)_in_a_class_aggregrated_over_all_students_in_that_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1022: Teacher changes the class key of the class" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>1.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="classname" elementType="Argument">
                <stringProp name="Argument.name">classname</stringProp>
                <stringProp name="Argument.value">${__P(Class_name,Test Class 16)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__P(Start_Date,1535799974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__P(End_Date,1567335974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="newclassname" elementType="Argument">
                <stringProp name="Argument.name">newclassname</stringProp>
                <stringProp name="Argument.value">${__P(Class_name,Test Class 11 Updated)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="flag" elementType="Argument">
                <stringProp name="Argument.name">flag</stringProp>
                <stringProp name="Argument.value">${__P(Details,false)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1022.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1014 - Teacher logs in (and accesses dashboard)" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1014-Teacher_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1018 - Teacher Creates a new class" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1018-Teacher_create_new_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1019-Teacher_associate_course_material" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios\1019-Teacher_associate_course_material.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">30000</stringProp>
          </TestAction>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">30000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Analytics_for_users_in_a_class_aggregrated_over_all_the_items_&amp;_materials_(product)_in_that_class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Analytics_for_users_in_a_class_aggregrated_over_all_the_items_&amp;_materials_(product)_in_that_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_members_of_a_class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Get_members_of _a_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="class_pending_submissions" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\class_pending_submissions.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Analytics_for_items_(product)_in_a_class_aggregrated_over_all_students_in_that_class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Analytics_for_items_(product)_in_a_class_aggregrated_over_all_students_in_that_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="generate_classcode" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\generate_classcode.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1023: Teacher enroll other teachers into the class" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>1.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="classname" elementType="Argument">
                <stringProp name="Argument.name">classname</stringProp>
                <stringProp name="Argument.value">${__P(Class_name,Test Class 18)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__P(Start_Date,1535799974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__P(End_Date,1567335974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="newclassname" elementType="Argument">
                <stringProp name="Argument.name">newclassname</stringProp>
                <stringProp name="Argument.value">${__P(Class_name,Test Class 11 Updated)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="flag" elementType="Argument">
                <stringProp name="Argument.name">flag</stringProp>
                <stringProp name="Argument.value">${__P(Details,false)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1022.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1014 - Teacher logs in (and accesses dashboard)" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1014-Teacher_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1018 - Teacher Creates a new class" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1018-Teacher_create_new_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1019-Teacher_associate_course_material" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios\1019-Teacher_associate_course_material.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">30000</stringProp>
          </TestAction>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">30000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Analytics_for_users_in_a_class_aggregrated_over_all_the_items_&amp;_materials_(product)_in_that_class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Analytics_for_users_in_a_class_aggregrated_over_all_the_items_&amp;_materials_(product)_in_that_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_members_of_a_class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Get_members_of _a_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="class_pending_submissions" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\class_pending_submissions.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Analytics_for_items_(product)_in_a_class_aggregrated_over_all_students_in_that_class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Analytics_for_items_(product)_in_a_class_aggregrated_over_all_students_in_that_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_all_users_in_org" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_all_users_in_org.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="enroll_multiple_users_into_class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/enroll_multiple_users_into_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1024: Teacher removes other teachers from the class" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>1.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="classname" elementType="Argument">
                <stringProp name="Argument.name">classname</stringProp>
                <stringProp name="Argument.value">${__P(Class_name,Test Class 18)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__P(Start_Date,1535799974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__P(End_Date,1567335974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="newclassname" elementType="Argument">
                <stringProp name="Argument.name">newclassname</stringProp>
                <stringProp name="Argument.value">${__P(Class_name,Test Class 11 Updated)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="flag" elementType="Argument">
                <stringProp name="Argument.name">flag</stringProp>
                <stringProp name="Argument.value">${__P(Details,false)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1022.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1014 - Teacher logs in (and accesses dashboard)" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1014-Teacher_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1018 - Teacher Creates a new class" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1018-Teacher_create_new_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1019-Teacher_associate_course_material" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios\1019-Teacher_associate_course_material.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">30000</stringProp>
          </TestAction>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">30000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Analytics_for_users_in_a_class_aggregrated_over_all_the_items_&amp;_materials_(product)_in_that_class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Analytics_for_users_in_a_class_aggregrated_over_all_the_items_&amp;_materials_(product)_in_that_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_members_of_a_class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Get_members_of _a_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="class_pending_submissions" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\class_pending_submissions.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Analytics_for_items_(product)_in_a_class_aggregrated_over_all_students_in_that_class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Analytics_for_items_(product)_in_a_class_aggregrated_over_all_students_in_that_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_all_users_in_org" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_all_users_in_org.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="enroll_multiple_users_into_class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/enroll_multiple_users_into_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="unenroll_multiple_users_into_class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/unenroll_multiple_users_into_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1025: Teacher can review class progress - for all student in that class" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>100.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="classname" elementType="Argument">
                <stringProp name="Argument.name">classname</stringProp>
                <stringProp name="Argument.value">${__P(Class_name,Test Class 18)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__P(Start_Date,1535799974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__P(End_Date,1567335974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="newclassname" elementType="Argument">
                <stringProp name="Argument.name">newclassname</stringProp>
                <stringProp name="Argument.value">${__P(Class_name,Test Class 11 Updated)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="flag" elementType="Argument">
                <stringProp name="Argument.name">flag</stringProp>
                <stringProp name="Argument.value">${__P(Details,false)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1022.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid,classcode</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1014 - Teacher logs in (and accesses dashboard)" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1014-Teacher_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1018 - Teacher Creates a new class" enabled="false">
            <stringProp name="IncludeController.includepath">Scenarios/1018-Teacher_create_new_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1019-Teacher_associate_course_material" enabled="false">
            <stringProp name="IncludeController.includepath">Scenarios\1019-Teacher_associate_course_material.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">30000</stringProp>
          </TestAction>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">30000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Analytics_for_users_in_a_class_aggregrated_over_all_the_items_&amp;_materials_(product)_in_that_class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Analytics_for_users_in_a_class_aggregrated_over_all_the_items_&amp;_materials_(product)_in_that_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_members_of_a_class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Get_members_of _a_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="class_pending_submissions" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\class_pending_submissions.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Analytics_for_items_(product)_in_a_class_aggregrated_over_all_students_in_that_class" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\Analytics_for_items_(product)_in_a_class_aggregrated_over_all_students_in_that_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1026: Teacher can review class progress - one students in that class" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>1.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="classname" elementType="Argument">
                <stringProp name="Argument.name">classname</stringProp>
                <stringProp name="Argument.value">${__P(Class_name,Test Class 18)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__P(Start_Date,1535799974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__P(End_Date,1567335974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="newclassname" elementType="Argument">
                <stringProp name="Argument.name">newclassname</stringProp>
                <stringProp name="Argument.value">${__P(Class_name,Test Class 11 Updated)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1026.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1014 - Teacher logs in (and accesses dashboard)" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1014-Teacher_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1018 - Teacher Creates a new class" enabled="false">
            <stringProp name="IncludeController.includepath">Scenarios/1018-Teacher_create_new_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1019-Teacher_associate_course_material" enabled="false">
            <stringProp name="IncludeController.includepath">Scenarios\1019-Teacher_associate_course_material.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">30000</stringProp>
          </TestAction>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">30000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product items and their progress analytic (default)" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Product_items_and_their_progress_analytic(default)..jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get information of a product for a user" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_information_of_a_product_for_a_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1027: Teacher can open and review class marking queue" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>1.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="classname" elementType="Argument">
                <stringProp name="Argument.name">classname</stringProp>
                <stringProp name="Argument.value">${__P(Class_name,Test Class 18)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__P(Start_Date,1535799974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__P(End_Date,1567335974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="newclassname" elementType="Argument">
                <stringProp name="Argument.name">newclassname</stringProp>
                <stringProp name="Argument.value">${__P(Class_name,Test Class 11 Updated)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="flag" elementType="Argument">
                <stringProp name="Argument.name">flag</stringProp>
                <stringProp name="Argument.value">${__P(Details,true)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1022.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1014 - Teacher logs in (and accesses dashboard)" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1014-Teacher_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1018 - Teacher Creates a new class" enabled="false">
            <stringProp name="IncludeController.includepath">Scenarios/1018-Teacher_create_new_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1019-Teacher_associate_course_material" enabled="false">
            <stringProp name="IncludeController.includepath">Scenarios\1019-Teacher_associate_course_material.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">30000</stringProp>
          </TestAction>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">30000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="class_pending_submissions" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\class_pending_submissions.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="API will return the students whose manual graded items have been evaluated once" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/API_will_return_the_students_whose_manual_graded_items_have_been_evaluated_once.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product items and their progress analytic (default)" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Product_items_and_their_progress_analytic(default)..jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get user&apos;s application state for a product or class (product)" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_user&apos;s_application_state_for_a_product_or_class(product).jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1028: Teacher can draft/save/submit feedback on productive skills" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>1.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="classname" elementType="Argument">
                <stringProp name="Argument.name">classname</stringProp>
                <stringProp name="Argument.value">${__P(Class_name,Test Class 18)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__P(Start_Date,1535799974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__P(End_Date,1567335974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="newclassname" elementType="Argument">
                <stringProp name="Argument.name">newclassname</stringProp>
                <stringProp name="Argument.value">${__P(Class_name,Test Class 11 Updated)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="verb" elementType="Argument">
                <stringProp name="Argument.name">verb</stringProp>
                <stringProp name="Argument.value">${__P(verb_type,evaluated)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="flag" elementType="Argument">
                <stringProp name="Argument.name">flag</stringProp>
                <stringProp name="Argument.value">${__P(Details,true)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1022.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1014 - Teacher logs in (and accesses dashboard)" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1014-Teacher_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1018 - Teacher Creates a new class" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1018-Teacher_create_new_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1019-Teacher_associate_course_material" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios\1019-Teacher_associate_course_material.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">30000</stringProp>
          </TestAction>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">30000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="class_pending_submissions" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\class_pending_submissions.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="API will return the students whose manual graded items have been evaluated once" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/API_will_return_the_students_whose_manual_graded_items_have_been_evaluated_once.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product items and their progress analytic (default)" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Product_items_and_their_progress_analytic(default)..jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get user&apos;s application state for a product or class (product)" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_user&apos;s_application_state_for_a_product_or_class(product).jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update user&apos;s application state for a product or class (product)" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Update_user&apos;s_application_state_for_a_product_or_class(product).jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add statements" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Add_statements.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1029: Teacher can open and review previous marking (completed earlier)" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>1.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="classname" elementType="Argument">
                <stringProp name="Argument.name">classname</stringProp>
                <stringProp name="Argument.value">${__P(Class_name,Test Class 18)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__P(Start_Date,1535799974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__P(End_Date,1567335974000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="newclassname" elementType="Argument">
                <stringProp name="Argument.name">newclassname</stringProp>
                <stringProp name="Argument.value">${__P(Class_name,Test Class 11 Updated)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="verb" elementType="Argument">
                <stringProp name="Argument.name">verb</stringProp>
                <stringProp name="Argument.value">${__P(verb_type,evaluated)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="flag" elementType="Argument">
                <stringProp name="Argument.name">flag</stringProp>
                <stringProp name="Argument.value">${__P(Details,true)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Testdata\1022.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1014 - Teacher logs in (and accesses dashboard)" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1014-Teacher_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1018 - Teacher Creates a new class" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios/1018-Teacher_create_new_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1019-Teacher_associate_course_material" enabled="true">
            <stringProp name="IncludeController.includepath">Scenarios\1019-Teacher_associate_course_material.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">30000</stringProp>
          </TestAction>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">30000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="class_pending_submissions" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements\class_pending_submissions.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="API will return the students whose manual graded items have been evaluated once" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/API_will_return_the_students_whose_manual_graded_items_have_been_evaluated_once.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product items and their progress analytic (default)" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Product_items_and_their_progress_analytic(default)..jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get user&apos;s application state for a product or class (product)" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_user&apos;s_application_state_for_a_product_or_class(product).jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get user&apos;s application state for a product or class (product)" enabled="true">
            <stringProp name="IncludeController.includepath">Fragements/Get_user&apos;s_application_state_for_a_product_or_class(product).jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get the recent-submissions made by a User of a Class in a Product" enabled="true">
            <stringProp name="IncludeController.includepath">F:\apache-jmeter-4\bin\Fragements\Get_the_recent_submissions_made_by_a_User_of_a_Class_in_a_Product.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <boolProp name="useGroupName">true</boolProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
