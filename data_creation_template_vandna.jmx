<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="ComproDLS Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Performance Test Data Setup" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">10</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - NEW Alpha" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="startTime" elementType="Argument">
              <stringProp name="Argument.name">startTime</stringProp>
              <stringProp name="Argument.value">1587361481394</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="minWait" elementType="Argument">
              <stringProp name="Argument.name">minWait</stringProp>
              <stringProp name="Argument.value">1000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="maxWait" elementType="Argument">
              <stringProp name="Argument.name">maxWait</stringProp>
              <stringProp name="Argument.value">1500</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invitationwait" elementType="Argument">
              <stringProp name="Argument.name">invitationwait</stringProp>
              <stringProp name="Argument.value">20000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invitationwait1" elementType="Argument">
              <stringProp name="Argument.name">invitationwait1</stringProp>
              <stringProp name="Argument.value">10000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="asyncWait" elementType="Argument">
              <stringProp name="Argument.name">asyncWait</stringProp>
              <stringProp name="Argument.value">8000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="asyncWait1" elementType="Argument">
              <stringProp name="Argument.name">asyncWait1</stringProp>
              <stringProp name="Argument.value">6000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userProgress_max" elementType="Argument">
              <stringProp name="Argument.name">userProgress_max</stringProp>
              <stringProp name="Argument.value">2000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userProgress_max_assignedpaths" elementType="Argument">
              <stringProp name="Argument.name">userProgress_max_assignedpaths</stringProp>
              <stringProp name="Argument.value">5000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="learningprogressnps" elementType="Argument">
              <stringProp name="Argument.name">learningprogressnps</stringProp>
              <stringProp name="Argument.value">12</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="learning_progress" elementType="Argument">
              <stringProp name="Argument.name">learning_progress</stringProp>
              <stringProp name="Argument.value">16</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="group_learning_progress" elementType="Argument">
              <stringProp name="Argument.name">group_learning_progress</stringProp>
              <stringProp name="Argument.value">12</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="group_learning_progressps" elementType="Argument">
              <stringProp name="Argument.name">group_learning_progressps</stringProp>
              <stringProp name="Argument.value">16</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assignmentlearningprogressscorable" elementType="Argument">
              <stringProp name="Argument.name">assignmentlearningprogressscorable</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assignmentlearningprogress" elementType="Argument">
              <stringProp name="Argument.name">assignmentlearningprogress</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assigned_path_class_count" elementType="Argument">
              <stringProp name="Argument.name">assigned_path_class_count</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="host_url" elementType="Argument">
              <stringProp name="Argument.name">host_url</stringProp>
              <stringProp name="Argument.value">${__P(auth_url,dls-cup-alpha-2093819659.us-west-2.elb.amazonaws.com)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="date" elementType="Argument">
              <stringProp name="Argument.name">date</stringProp>
              <stringProp name="Argument.value">${__time(YMDHMS)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="testrun" elementType="Argument">
              <stringProp name="Argument.name">testrun</stringProp>
              <stringProp name="Argument.value">${__P(run_id,Perf)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="accountid" elementType="Argument">
              <stringProp name="Argument.name">accountid</stringProp>
              <stringProp name="Argument.value">${__P(Account_id,cup1)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ext_product_id" elementType="Argument">
              <stringProp name="Argument.name">ext_product_id</stringProp>
              <stringProp name="Argument.value">${__P(product_code,9781108414098)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ext_product_id2" elementType="Argument">
              <stringProp name="Argument.name">ext_product_id2</stringProp>
              <stringProp name="Argument.value">${__P(product_code,9781108414142)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="productcode" elementType="Argument">
              <stringProp name="Argument.name">productcode</stringProp>
              <stringProp name="Argument.value">${__P(product_code,evpel1)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="productcode2" elementType="Argument">
              <stringProp name="Argument.name">productcode2</stringProp>
              <stringProp name="Argument.value">${__P(product_code,evpel2)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="verb" elementType="Argument">
              <stringProp name="Argument.name">verb</stringProp>
              <stringProp name="Argument.value">${__P(verb_type,launched)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="product-enddate" elementType="Argument">
              <stringProp name="Argument.name">product-enddate</stringProp>
              <stringProp name="Argument.value">${__P(end_date,1575719566000)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="classcodeinst1_DONOTUSE" elementType="Argument">
              <stringProp name="Argument.name">classcodeinst1_DONOTUSE</stringProp>
              <stringProp name="Argument.value">${__P(class_code,G4cb-UNcT)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="classcode2_DONOTUSE" elementType="Argument">
              <stringProp name="Argument.name">classcode2_DONOTUSE</stringProp>
              <stringProp name="Argument.value">${__P(class_code,YeaG-DVJZ)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="classname" elementType="Argument">
              <stringProp name="Argument.name">classname</stringProp>
              <stringProp name="Argument.value">${__P(classname,newclass)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="multipleUsersForEnrollment" elementType="Argument">
              <stringProp name="Argument.name">multipleUsersForEnrollment</stringProp>
              <stringProp name="Argument.value">${__P(userset,&quot;762d9ca7-363d-4be7-8e6f-d9ec9cf196ff&quot;)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="pinstance" elementType="Argument">
              <stringProp name="Argument.name">pinstance</stringProp>
              <stringProp name="Argument.value">${__P(InstanceID,1)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bundle-code" elementType="Argument">
              <stringProp name="Argument.name">bundle-code</stringProp>
              <stringProp name="Argument.value">${__P(bundle-code,evpel1_bundle)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bundle-code2" elementType="Argument">
              <stringProp name="Argument.name">bundle-code2</stringProp>
              <stringProp name="Argument.value">${__P(bundle-code,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assignmentstartdate" elementType="Argument">
              <stringProp name="Argument.name">assignmentstartdate</stringProp>
              <stringProp name="Argument.value">${__time(,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assignmentenddate" elementType="Argument">
              <stringProp name="Argument.name">assignmentenddate</stringProp>
              <stringProp name="Argument.value">${__timeShift(,,P1820D,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assigned_path_id" elementType="Argument">
              <stringProp name="Argument.name">assigned_path_id</stringProp>
              <stringProp name="Argument.value">NOT_FOUND</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="counter" elementType="Argument">
              <stringProp name="Argument.name">counter</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invitationorgid" elementType="Argument">
              <stringProp name="Argument.name">invitationorgid</stringProp>
              <stringProp name="Argument.value">${__P(invitationorgid,perf-test1-alpha)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode1" elementType="Argument">
              <stringProp name="Argument.name">itemcode1</stringProp>
              <stringProp name="Argument.value">${__P(itemcode,1544521486954/1544521507623/1544521559147)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode2" elementType="Argument">
              <stringProp name="Argument.name">itemcode2</stringProp>
              <stringProp name="Argument.value">1544521486954/1544521507623/1544521594726</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode3" elementType="Argument">
              <stringProp name="Argument.name">itemcode3</stringProp>
              <stringProp name="Argument.value">1544521486954/1544521507623/1544521622470</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode4" elementType="Argument">
              <stringProp name="Argument.name">itemcode4</stringProp>
              <stringProp name="Argument.value">1544521486954/1544521507623/1544521637851</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode5" elementType="Argument">
              <stringProp name="Argument.name">itemcode5</stringProp>
              <stringProp name="Argument.value">1544521486954/1544521889598/1544522141435</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="startDate" elementType="Argument">
              <stringProp name="Argument.name">startDate</stringProp>
              <stringProp name="Argument.value">${__time(,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="endDate" elementType="Argument">
              <stringProp name="Argument.name">endDate</stringProp>
              <stringProp name="Argument.value">${__timeShift(,,P1825D,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="workflow_type" elementType="Argument">
              <stringProp name="Argument.name">workflow_type</stringProp>
              <stringProp name="Argument.value">institution_request</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="status" elementType="Argument">
              <stringProp name="Argument.name">status</stringProp>
              <stringProp name="Argument.value">pending</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="productGroups" elementType="Argument">
              <stringProp name="Argument.name">productGroups</stringProp>
              <stringProp name="Argument.value">false</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="productType" elementType="Argument">
              <stringProp name="Argument.name">productType</stringProp>
              <stringProp name="Argument.value">single</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="task" elementType="Argument">
              <stringProp name="Argument.name">task</stringProp>
              <stringProp name="Argument.value">1544521486954/1544521507623/1544521559147</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode" elementType="Argument">
              <stringProp name="Argument.name">itemcode</stringProp>
              <stringProp name="Argument.value">1544521486954/1544521507623/1544521559147</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="grouptask" elementType="Argument">
              <stringProp name="Argument.name">grouptask</stringProp>
              <stringProp name="Argument.value">1591701928122/1591701946681/1592291282828</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="multiproduct1" elementType="Argument">
              <stringProp name="Argument.name">multiproduct1</stringProp>
              <stringProp name="Argument.value">perf_alpha_pe1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="multiproduct2" elementType="Argument">
              <stringProp name="Argument.name">multiproduct2</stringProp>
              <stringProp name="Argument.value">perf_alpha_pw1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="group-bundle-code" elementType="Argument">
              <stringProp name="Argument.name">group-bundle-code</stringProp>
              <stringProp name="Argument.value">perfalpha_bundle1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="multiproductid1" elementType="Argument">
              <stringProp name="Argument.name">multiproductid1</stringProp>
              <stringProp name="Argument.value">perfpealpha1234</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="multiproductid2" elementType="Argument">
              <stringProp name="Argument.name">multiproductid2</stringProp>
              <stringProp name="Argument.value">perfpwalpha1234</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ielts_bundle-code" elementType="Argument">
              <stringProp name="Argument.name">ielts_bundle-code</stringProp>
              <stringProp name="Argument.value">${__P(bundle-code,ielts_bundle)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ielts_productcode" elementType="Argument">
              <stringProp name="Argument.name">ielts_productcode</stringProp>
              <stringProp name="Argument.value">${__P(product_code,ielts_pe)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ielts_ext_product_id" elementType="Argument">
              <stringProp name="Argument.name">ielts_ext_product_id</stringProp>
              <stringProp name="Argument.value">${__P(product_code,9781108414098)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ielts_itemcode" elementType="Argument">
              <stringProp name="Argument.name">ielts_itemcode</stringProp>
              <stringProp name="Argument.value">1599458729600</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="task1038" elementType="Argument">
              <stringProp name="Argument.name">task1038</stringProp>
              <stringProp name="Argument.value">1544521486954/1544521507623/1544521559147</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ebookproductcode" elementType="Argument">
              <stringProp name="Argument.name">ebookproductcode</stringProp>
              <stringProp name="Argument.value">${__P(product_code,cqaperftestebook)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ebook_bundle-code" elementType="Argument">
              <stringProp name="Argument.name">ebook_bundle-code</stringProp>
              <stringProp name="Argument.value">${__P(bundle-code,evpel1_bundle)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="pageNum" elementType="Argument">
              <stringProp name="Argument.name">pageNum</stringProp>
              <stringProp name="Argument.value">14</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="pageNum_read" elementType="Argument">
              <stringProp name="Argument.name">pageNum_read</stringProp>
              <stringProp name="Argument.value">14</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="pageNavigationPause" elementType="Argument">
              <stringProp name="Argument.name">pageNavigationPause</stringProp>
              <stringProp name="Argument.value">100</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="pageNavigationLoopCount" elementType="Argument">
              <stringProp name="Argument.name">pageNavigationLoopCount</stringProp>
              <stringProp name="Argument.value">5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="AddNotesLoopCount" elementType="Argument">
              <stringProp name="Argument.name">AddNotesLoopCount</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="AddDrawingLoopCount" elementType="Argument">
              <stringProp name="Argument.name">AddDrawingLoopCount</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="record_size" elementType="Argument">
              <stringProp name="Argument.name">record_size</stringProp>
              <stringProp name="Argument.value">20</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="orgid_es" elementType="Argument">
              <stringProp name="Argument.name">orgid_es</stringProp>
              <stringProp name="Argument.value">${__P(orgid_es,perf-test1-alpha)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="extuseridGetDocument" elementType="Argument">
              <stringProp name="Argument.name">extuseridGetDocument</stringProp>
              <stringProp name="Argument.value">tch_20200602-104742_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="folderid_alldocs" elementType="Argument">
              <stringProp name="Argument.name">folderid_alldocs</stringProp>
              <stringProp name="Argument.value">library/umbrella</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="classidGetDocument" elementType="Argument">
              <stringProp name="Argument.name">classidGetDocument</stringProp>
              <stringProp name="Argument.value">7388dde7-8eac-11ea-840b-0242ac110002</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="extUserIdHideToc" elementType="Argument">
              <stringProp name="Argument.name">extUserIdHideToc</stringProp>
              <stringProp name="Argument.value">std_1616493208993_6</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userProgress_min_1011" elementType="Argument">
              <stringProp name="Argument.name">userProgress_min_1011</stringProp>
              <stringProp name="Argument.value">1500</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userProgress_max_1011" elementType="Argument">
              <stringProp name="Argument.name">userProgress_max_1011</stringProp>
              <stringProp name="Argument.value">1000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="learningprogressnps_1011" elementType="Argument">
              <stringProp name="Argument.name">learningprogressnps_1011</stringProp>
              <stringProp name="Argument.value">16</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userProgress_min_1038nps" elementType="Argument">
              <stringProp name="Argument.name">userProgress_min_1038nps</stringProp>
              <stringProp name="Argument.value">1700</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userProgress_max_1038nps" elementType="Argument">
              <stringProp name="Argument.name">userProgress_max_1038nps</stringProp>
              <stringProp name="Argument.value">800</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ruleType" elementType="Argument">
              <stringProp name="Argument.name">ruleType</stringProp>
              <stringProp name="Argument.value">content-access</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="endTimeForRule" elementType="Argument">
              <stringProp name="Argument.name">endTimeForRule</stringProp>
              <stringProp name="Argument.value">${__timeShift(,,P360D,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - thor" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="startTime" elementType="Argument">
              <stringProp name="Argument.name">startTime</stringProp>
              <stringProp name="Argument.value">1587361481394</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="minWait" elementType="Argument">
              <stringProp name="Argument.name">minWait</stringProp>
              <stringProp name="Argument.value">1000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="maxWait" elementType="Argument">
              <stringProp name="Argument.name">maxWait</stringProp>
              <stringProp name="Argument.value">1500</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invitationwait" elementType="Argument">
              <stringProp name="Argument.name">invitationwait</stringProp>
              <stringProp name="Argument.value">20000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invitationwait1" elementType="Argument">
              <stringProp name="Argument.name">invitationwait1</stringProp>
              <stringProp name="Argument.value">10000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="asyncWait" elementType="Argument">
              <stringProp name="Argument.name">asyncWait</stringProp>
              <stringProp name="Argument.value">8000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="asyncWait1" elementType="Argument">
              <stringProp name="Argument.name">asyncWait1</stringProp>
              <stringProp name="Argument.value">6000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userProgress_max" elementType="Argument">
              <stringProp name="Argument.name">userProgress_max</stringProp>
              <stringProp name="Argument.value">2000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userProgress_max_assignedpaths" elementType="Argument">
              <stringProp name="Argument.name">userProgress_max_assignedpaths</stringProp>
              <stringProp name="Argument.value">5000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="learningprogressnps" elementType="Argument">
              <stringProp name="Argument.name">learningprogressnps</stringProp>
              <stringProp name="Argument.value">12</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="learning_progress" elementType="Argument">
              <stringProp name="Argument.name">learning_progress</stringProp>
              <stringProp name="Argument.value">16</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="group_learning_progress" elementType="Argument">
              <stringProp name="Argument.name">group_learning_progress</stringProp>
              <stringProp name="Argument.value">12</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="group_learning_progressps" elementType="Argument">
              <stringProp name="Argument.name">group_learning_progressps</stringProp>
              <stringProp name="Argument.value">16</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assignmentlearningprogressscorable" elementType="Argument">
              <stringProp name="Argument.name">assignmentlearningprogressscorable</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assignmentlearningprogress" elementType="Argument">
              <stringProp name="Argument.name">assignmentlearningprogress</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assigned_path_class_count" elementType="Argument">
              <stringProp name="Argument.name">assigned_path_class_count</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="host_url" elementType="Argument">
              <stringProp name="Argument.name">host_url</stringProp>
              <stringProp name="Argument.value">${__P(auth_url,dls-asgard-thor-1453383019.us-west-2.elb.amazonaws.com)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="date" elementType="Argument">
              <stringProp name="Argument.name">date</stringProp>
              <stringProp name="Argument.value">${__time(YMDHMS)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="testrun" elementType="Argument">
              <stringProp name="Argument.name">testrun</stringProp>
              <stringProp name="Argument.value">${__P(run_id,Perf)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="accountid" elementType="Argument">
              <stringProp name="Argument.name">accountid</stringProp>
              <stringProp name="Argument.value">${__P(Account_id,cup1)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ext_product_id" elementType="Argument">
              <stringProp name="Argument.name">ext_product_id</stringProp>
              <stringProp name="Argument.value">${__P(product_code,9781108414098)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ext_product_id2" elementType="Argument">
              <stringProp name="Argument.name">ext_product_id2</stringProp>
              <stringProp name="Argument.value">${__P(product_code,9781108414142)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="productcode" elementType="Argument">
              <stringProp name="Argument.name">productcode</stringProp>
              <stringProp name="Argument.value">${__P(product_code,evpel1)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="productcode2" elementType="Argument">
              <stringProp name="Argument.name">productcode2</stringProp>
              <stringProp name="Argument.value">${__P(product_code,evpel2)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="verb" elementType="Argument">
              <stringProp name="Argument.name">verb</stringProp>
              <stringProp name="Argument.value">${__P(verb_type,launched)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="product-enddate" elementType="Argument">
              <stringProp name="Argument.name">product-enddate</stringProp>
              <stringProp name="Argument.value">${__P(end_date,1575719566000)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="classcodeinst1_DONOTUSE" elementType="Argument">
              <stringProp name="Argument.name">classcodeinst1_DONOTUSE</stringProp>
              <stringProp name="Argument.value">${__P(class_code,G4cb-UNcT)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="classcode2_DONOTUSE" elementType="Argument">
              <stringProp name="Argument.name">classcode2_DONOTUSE</stringProp>
              <stringProp name="Argument.value">${__P(class_code,YeaG-DVJZ)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="classname" elementType="Argument">
              <stringProp name="Argument.name">classname</stringProp>
              <stringProp name="Argument.value">${__P(classname,newclass)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="multipleUsersForEnrollment" elementType="Argument">
              <stringProp name="Argument.name">multipleUsersForEnrollment</stringProp>
              <stringProp name="Argument.value">${__P(userset,&quot;762d9ca7-363d-4be7-8e6f-d9ec9cf196ff&quot;)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="pinstance" elementType="Argument">
              <stringProp name="Argument.name">pinstance</stringProp>
              <stringProp name="Argument.value">${__P(InstanceID,1)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bundle-code" elementType="Argument">
              <stringProp name="Argument.name">bundle-code</stringProp>
              <stringProp name="Argument.value">${__P(bundle-code,evpel1_bundle)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bundle-code2" elementType="Argument">
              <stringProp name="Argument.name">bundle-code2</stringProp>
              <stringProp name="Argument.value">${__P(bundle-code,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assignmentstartdate" elementType="Argument">
              <stringProp name="Argument.name">assignmentstartdate</stringProp>
              <stringProp name="Argument.value">${__time(,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assignmentenddate" elementType="Argument">
              <stringProp name="Argument.name">assignmentenddate</stringProp>
              <stringProp name="Argument.value">${__timeShift(,,P1820D,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assigned_path_id" elementType="Argument">
              <stringProp name="Argument.name">assigned_path_id</stringProp>
              <stringProp name="Argument.value">NOT_FOUND</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="counter" elementType="Argument">
              <stringProp name="Argument.name">counter</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invitationorgid" elementType="Argument">
              <stringProp name="Argument.name">invitationorgid</stringProp>
              <stringProp name="Argument.value">${__P(invitationorgid,perf-test1-alpha)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode1" elementType="Argument">
              <stringProp name="Argument.name">itemcode1</stringProp>
              <stringProp name="Argument.value">${__P(itemcode,1544521486954/1544521507623/1544521559147)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode2" elementType="Argument">
              <stringProp name="Argument.name">itemcode2</stringProp>
              <stringProp name="Argument.value">1544521486954/1544521507623/1544521594726</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode3" elementType="Argument">
              <stringProp name="Argument.name">itemcode3</stringProp>
              <stringProp name="Argument.value">1544521486954/1544521507623/1544521622470</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode4" elementType="Argument">
              <stringProp name="Argument.name">itemcode4</stringProp>
              <stringProp name="Argument.value">1544521486954/1544521507623/1544521637851</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode5" elementType="Argument">
              <stringProp name="Argument.name">itemcode5</stringProp>
              <stringProp name="Argument.value">1544521486954/1544521889598/1544522141435</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="startDate" elementType="Argument">
              <stringProp name="Argument.name">startDate</stringProp>
              <stringProp name="Argument.value">${__time(,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="endDate" elementType="Argument">
              <stringProp name="Argument.name">endDate</stringProp>
              <stringProp name="Argument.value">${__timeShift(,,P1825D,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="workflow_type" elementType="Argument">
              <stringProp name="Argument.name">workflow_type</stringProp>
              <stringProp name="Argument.value">institution_request</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="status" elementType="Argument">
              <stringProp name="Argument.name">status</stringProp>
              <stringProp name="Argument.value">pending</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="productGroups" elementType="Argument">
              <stringProp name="Argument.name">productGroups</stringProp>
              <stringProp name="Argument.value">false</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="productType" elementType="Argument">
              <stringProp name="Argument.name">productType</stringProp>
              <stringProp name="Argument.value">single</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="task" elementType="Argument">
              <stringProp name="Argument.name">task</stringProp>
              <stringProp name="Argument.value">1544521486954/1544521507623/1544521559147</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode" elementType="Argument">
              <stringProp name="Argument.name">itemcode</stringProp>
              <stringProp name="Argument.value">1544521486954/1544521507623/1544521559147</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="grouptask" elementType="Argument">
              <stringProp name="Argument.name">grouptask</stringProp>
              <stringProp name="Argument.value">1591701928122/1591701946681/1592291282828</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="multiproduct1" elementType="Argument">
              <stringProp name="Argument.name">multiproduct1</stringProp>
              <stringProp name="Argument.value">perf_alpha_pe1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="multiproduct2" elementType="Argument">
              <stringProp name="Argument.name">multiproduct2</stringProp>
              <stringProp name="Argument.value">perf_alpha_pw1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="group-bundle-code" elementType="Argument">
              <stringProp name="Argument.name">group-bundle-code</stringProp>
              <stringProp name="Argument.value">perfalpha_bundle1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="multiproductid1" elementType="Argument">
              <stringProp name="Argument.name">multiproductid1</stringProp>
              <stringProp name="Argument.value">perfpealpha1234</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="multiproductid2" elementType="Argument">
              <stringProp name="Argument.name">multiproductid2</stringProp>
              <stringProp name="Argument.value">perfpwalpha1234</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ielts_bundle-code" elementType="Argument">
              <stringProp name="Argument.name">ielts_bundle-code</stringProp>
              <stringProp name="Argument.value">${__P(bundle-code,ielts_bundle)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ielts_productcode" elementType="Argument">
              <stringProp name="Argument.name">ielts_productcode</stringProp>
              <stringProp name="Argument.value">${__P(product_code,ielts_pe)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ielts_ext_product_id" elementType="Argument">
              <stringProp name="Argument.name">ielts_ext_product_id</stringProp>
              <stringProp name="Argument.value">${__P(product_code,9781108414098)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ielts_itemcode" elementType="Argument">
              <stringProp name="Argument.name">ielts_itemcode</stringProp>
              <stringProp name="Argument.value">1599458729600</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="task1038" elementType="Argument">
              <stringProp name="Argument.name">task1038</stringProp>
              <stringProp name="Argument.value">1544521486954/1544521507623/1544521559147</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ebookproductcode" elementType="Argument">
              <stringProp name="Argument.name">ebookproductcode</stringProp>
              <stringProp name="Argument.value">${__P(product_code,cqaperftestebook)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ebook_bundle-code" elementType="Argument">
              <stringProp name="Argument.name">ebook_bundle-code</stringProp>
              <stringProp name="Argument.value">${__P(bundle-code,evpel1_bundle)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="pageNum" elementType="Argument">
              <stringProp name="Argument.name">pageNum</stringProp>
              <stringProp name="Argument.value">14</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="pageNum_read" elementType="Argument">
              <stringProp name="Argument.name">pageNum_read</stringProp>
              <stringProp name="Argument.value">14</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="pageNavigationPause" elementType="Argument">
              <stringProp name="Argument.name">pageNavigationPause</stringProp>
              <stringProp name="Argument.value">100</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="pageNavigationLoopCount" elementType="Argument">
              <stringProp name="Argument.name">pageNavigationLoopCount</stringProp>
              <stringProp name="Argument.value">5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="AddNotesLoopCount" elementType="Argument">
              <stringProp name="Argument.name">AddNotesLoopCount</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="AddDrawingLoopCount" elementType="Argument">
              <stringProp name="Argument.name">AddDrawingLoopCount</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="record_size" elementType="Argument">
              <stringProp name="Argument.name">record_size</stringProp>
              <stringProp name="Argument.value">20</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="orgid_es" elementType="Argument">
              <stringProp name="Argument.name">orgid_es</stringProp>
              <stringProp name="Argument.value">${__P(orgid_es,perf-test1-alpha)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="extuseridGetDocument" elementType="Argument">
              <stringProp name="Argument.name">extuseridGetDocument</stringProp>
              <stringProp name="Argument.value">tch_20200602-104742_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="folderid_alldocs" elementType="Argument">
              <stringProp name="Argument.name">folderid_alldocs</stringProp>
              <stringProp name="Argument.value">library/umbrella</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="classidGetDocument" elementType="Argument">
              <stringProp name="Argument.name">classidGetDocument</stringProp>
              <stringProp name="Argument.value">7388dde7-8eac-11ea-840b-0242ac110002</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="extUserIdHideToc" elementType="Argument">
              <stringProp name="Argument.name">extUserIdHideToc</stringProp>
              <stringProp name="Argument.value">std_1616493208993_6</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userProgress_min_1011" elementType="Argument">
              <stringProp name="Argument.name">userProgress_min_1011</stringProp>
              <stringProp name="Argument.value">1500</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userProgress_max_1011" elementType="Argument">
              <stringProp name="Argument.name">userProgress_max_1011</stringProp>
              <stringProp name="Argument.value">1000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="learningprogressnps_1011" elementType="Argument">
              <stringProp name="Argument.name">learningprogressnps_1011</stringProp>
              <stringProp name="Argument.value">16</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userProgress_min_1038nps" elementType="Argument">
              <stringProp name="Argument.name">userProgress_min_1038nps</stringProp>
              <stringProp name="Argument.value">1700</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userProgress_max_1038nps" elementType="Argument">
              <stringProp name="Argument.name">userProgress_max_1038nps</stringProp>
              <stringProp name="Argument.value">800</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ruleType" elementType="Argument">
              <stringProp name="Argument.name">ruleType</stringProp>
              <stringProp name="Argument.value">content-access</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="endTimeForRule" elementType="Argument">
              <stringProp name="Argument.name">endTimeForRule</stringProp>
              <stringProp name="Argument.value">${__timeShift(,,P360D,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="spacecode" elementType="Argument">
              <stringProp name="Argument.name">spacecode</stringProp>
              <stringProp name="Argument.value">${__P(space_code,PRF-ALP-ONE)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="spacecode2" elementType="Argument">
              <stringProp name="Argument.name">spacecode2</stringProp>
              <stringProp name="Argument.value">${__P(space_code,PRF-ALP-TWO)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="spacekey" elementType="Argument">
              <stringProp name="Argument.name">spacekey</stringProp>
              <stringProp name="Argument.value">org_perf-test1-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="orgid" elementType="Argument">
              <stringProp name="Argument.name">orgid</stringProp>
              <stringProp name="Argument.value">${__P(orgid,perf-test1-alpha)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="shorgid" elementType="Argument">
              <stringProp name="Argument.name">shorgid</stringProp>
              <stringProp name="Argument.value">${__P(shorgid,sh_alpha_cup1_1)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="UDV - Product Category Details" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="cat1pe1" elementType="Argument">
              <stringProp name="Argument.name">cat1pe1</stringProp>
              <stringProp name="Argument.value">evpel1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat1pe2" elementType="Argument">
              <stringProp name="Argument.name">cat1pe2</stringProp>
              <stringProp name="Argument.value">perfb1pe1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat1pe3" elementType="Argument">
              <stringProp name="Argument.name">cat1pe3</stringProp>
              <stringProp name="Argument.value">perfb1pe2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat1pe4" elementType="Argument">
              <stringProp name="Argument.name">cat1pe4</stringProp>
              <stringProp name="Argument.value">perfprod21</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat1pe5" elementType="Argument">
              <stringProp name="Argument.name">cat1pe5</stringProp>
              <stringProp name="Argument.value">perfprod22</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat1pe6" elementType="Argument">
              <stringProp name="Argument.name">cat1pe6</stringProp>
              <stringProp name="Argument.value">perfprod23</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat1pe7" elementType="Argument">
              <stringProp name="Argument.name">cat1pe7</stringProp>
              <stringProp name="Argument.value">perfprod24</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat1pe8" elementType="Argument">
              <stringProp name="Argument.name">cat1pe8</stringProp>
              <stringProp name="Argument.value">perfprod25</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat1pe9" elementType="Argument">
              <stringProp name="Argument.name">cat1pe9</stringProp>
              <stringProp name="Argument.value">perfprod111</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat1pe10" elementType="Argument">
              <stringProp name="Argument.name">cat1pe10</stringProp>
              <stringProp name="Argument.value">perfprod112</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat1pe11" elementType="Argument">
              <stringProp name="Argument.name">cat1pe11</stringProp>
              <stringProp name="Argument.value">perfprod113</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat1pe12" elementType="Argument">
              <stringProp name="Argument.name">cat1pe12</stringProp>
              <stringProp name="Argument.value">perfprod115</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat2pe1" elementType="Argument">
              <stringProp name="Argument.name">cat2pe1</stringProp>
              <stringProp name="Argument.value">perfprod3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat2pe2" elementType="Argument">
              <stringProp name="Argument.name">cat2pe2</stringProp>
              <stringProp name="Argument.value">perfprod4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat2pe3" elementType="Argument">
              <stringProp name="Argument.name">cat2pe3</stringProp>
              <stringProp name="Argument.value">perfprod5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat2pe4" elementType="Argument">
              <stringProp name="Argument.name">cat2pe4</stringProp>
              <stringProp name="Argument.value">perfprod6</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat2pe5" elementType="Argument">
              <stringProp name="Argument.name">cat2pe5</stringProp>
              <stringProp name="Argument.value">perfprod7</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat2pe6" elementType="Argument">
              <stringProp name="Argument.name">cat2pe6</stringProp>
              <stringProp name="Argument.value">perfprod8</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat2pe7" elementType="Argument">
              <stringProp name="Argument.name">cat2pe7</stringProp>
              <stringProp name="Argument.value">perfprod9</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat2pe8" elementType="Argument">
              <stringProp name="Argument.name">cat2pe8</stringProp>
              <stringProp name="Argument.value">perfprod10</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat2pe9" elementType="Argument">
              <stringProp name="Argument.name">cat2pe9</stringProp>
              <stringProp name="Argument.value">perfprod11</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat2pe10" elementType="Argument">
              <stringProp name="Argument.name">cat2pe10</stringProp>
              <stringProp name="Argument.value">perfprod12</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3pe1" elementType="Argument">
              <stringProp name="Argument.name">cat3pe1</stringProp>
              <stringProp name="Argument.value">perfprod5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3pe2" elementType="Argument">
              <stringProp name="Argument.name">cat3pe2</stringProp>
              <stringProp name="Argument.value">perfprod6</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3pe3" elementType="Argument">
              <stringProp name="Argument.name">cat3pe3</stringProp>
              <stringProp name="Argument.value">perfprod7</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3pe4" elementType="Argument">
              <stringProp name="Argument.name">cat3pe4</stringProp>
              <stringProp name="Argument.value">perfprod8</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3pe5" elementType="Argument">
              <stringProp name="Argument.name">cat3pe5</stringProp>
              <stringProp name="Argument.value">perfprod9</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3pe6" elementType="Argument">
              <stringProp name="Argument.name">cat3pe6</stringProp>
              <stringProp name="Argument.value">perfprod10</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3pe7" elementType="Argument">
              <stringProp name="Argument.name">cat3pe7</stringProp>
              <stringProp name="Argument.value">perfprod11</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3pe8" elementType="Argument">
              <stringProp name="Argument.name">cat3pe8</stringProp>
              <stringProp name="Argument.value">perfprod12</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3pe9" elementType="Argument">
              <stringProp name="Argument.name">cat3pe9</stringProp>
              <stringProp name="Argument.value">perfprod86</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3pe10" elementType="Argument">
              <stringProp name="Argument.name">cat3pe10</stringProp>
              <stringProp name="Argument.value">perfprod87</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3pe11" elementType="Argument">
              <stringProp name="Argument.name">cat3pe11</stringProp>
              <stringProp name="Argument.value">perfprod88</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3pe12" elementType="Argument">
              <stringProp name="Argument.name">cat3pe12</stringProp>
              <stringProp name="Argument.value">perfprod89</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3pe13" elementType="Argument">
              <stringProp name="Argument.name">cat3pe13</stringProp>
              <stringProp name="Argument.value">perfprod90</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3pe14" elementType="Argument">
              <stringProp name="Argument.name">cat3pe14</stringProp>
              <stringProp name="Argument.value">perfprod91</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3pe15" elementType="Argument">
              <stringProp name="Argument.name">cat3pe15</stringProp>
              <stringProp name="Argument.value">perfprod92</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4pe1" elementType="Argument">
              <stringProp name="Argument.name">cat4pe1</stringProp>
              <stringProp name="Argument.value">perfprod41</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4pe2" elementType="Argument">
              <stringProp name="Argument.name">cat4pe2</stringProp>
              <stringProp name="Argument.value">perfprod42</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4pe3" elementType="Argument">
              <stringProp name="Argument.name">cat4pe3</stringProp>
              <stringProp name="Argument.value">perfprod43</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4pe4" elementType="Argument">
              <stringProp name="Argument.name">cat4pe4</stringProp>
              <stringProp name="Argument.value">perfprod44</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4pe5" elementType="Argument">
              <stringProp name="Argument.name">cat4pe5</stringProp>
              <stringProp name="Argument.value">perfprod45</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4pe6" elementType="Argument">
              <stringProp name="Argument.name">cat4pe6</stringProp>
              <stringProp name="Argument.value">perfprod46</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4pe7" elementType="Argument">
              <stringProp name="Argument.name">cat4pe7</stringProp>
              <stringProp name="Argument.value">perfprod47</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4pe8" elementType="Argument">
              <stringProp name="Argument.name">cat4pe8</stringProp>
              <stringProp name="Argument.value">perfprod48</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4pe9" elementType="Argument">
              <stringProp name="Argument.name">cat4pe9</stringProp>
              <stringProp name="Argument.value">perfprod49</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4pe10" elementType="Argument">
              <stringProp name="Argument.name">cat4pe10</stringProp>
              <stringProp name="Argument.value">perfprod50</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4pe11" elementType="Argument">
              <stringProp name="Argument.name">cat4pe11</stringProp>
              <stringProp name="Argument.value">perfprod101</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4pe12" elementType="Argument">
              <stringProp name="Argument.name">cat4pe12</stringProp>
              <stringProp name="Argument.value">perfprod102</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4pe13" elementType="Argument">
              <stringProp name="Argument.name">cat4pe13</stringProp>
              <stringProp name="Argument.value">perfprod103</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4pe14" elementType="Argument">
              <stringProp name="Argument.name">cat4pe14</stringProp>
              <stringProp name="Argument.value">perfprod104</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4pe15" elementType="Argument">
              <stringProp name="Argument.name">cat4pe15</stringProp>
              <stringProp name="Argument.value">perfprod105</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat1" elementType="Argument">
              <stringProp name="Argument.name">cat1</stringProp>
              <stringProp name="Argument.value">3B8PE</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat2" elementType="Argument">
              <stringProp name="Argument.name">cat2</stringProp>
              <stringProp name="Argument.value">3B10PE</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3" elementType="Argument">
              <stringProp name="Argument.name">cat3</stringProp>
              <stringProp name="Argument.value">3B15PE</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4" elementType="Argument">
              <stringProp name="Argument.name">cat4</stringProp>
              <stringProp name="Argument.value">2B15PE</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="learningprogressnps_1011_cat1" elementType="Argument">
              <stringProp name="Argument.name">learningprogressnps_1011_cat1</stringProp>
              <stringProp name="Argument.value">40</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="learningprogressnps_1011_cat2" elementType="Argument">
              <stringProp name="Argument.name">learningprogressnps_1011_cat2</stringProp>
              <stringProp name="Argument.value">20</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="learningprogressnps_1011_cat3" elementType="Argument">
              <stringProp name="Argument.name">learningprogressnps_1011_cat3</stringProp>
              <stringProp name="Argument.value">40</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="learningprogressnps_1011_cat4" elementType="Argument">
              <stringProp name="Argument.name">learningprogressnps_1011_cat4</stringProp>
              <stringProp name="Argument.value">800</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="learningprogressnps_1011_cat4_pe1" elementType="Argument">
              <stringProp name="Argument.name">learningprogressnps_1011_cat4_pe1</stringProp>
              <stringProp name="Argument.value">80</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="learningprogressnps_1011_cat4_pe2" elementType="Argument">
              <stringProp name="Argument.name">learningprogressnps_1011_cat4_pe2</stringProp>
              <stringProp name="Argument.value">20</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="learningprogress-ps_1012_cat1" elementType="Argument">
              <stringProp name="Argument.name">learningprogress-ps_1012_cat1</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="learningprogress-ps_1012_cat2" elementType="Argument">
              <stringProp name="Argument.name">learningprogress-ps_1012_cat2</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="learningprogress-ps_1012_cat3" elementType="Argument">
              <stringProp name="Argument.name">learningprogress-ps_1012_cat3</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="learningprogress-ps_1012_cat4" elementType="Argument">
              <stringProp name="Argument.name">learningprogress-ps_1012_cat4</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="LockRuleCount_cat1" elementType="Argument">
              <stringProp name="Argument.name">LockRuleCount_cat1</stringProp>
              <stringProp name="Argument.value">10</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="LOsInLockRule_cat1" elementType="Argument">
              <stringProp name="Argument.name">LOsInLockRule_cat1</stringProp>
              <stringProp name="Argument.value">50</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="LockRuleCount_cat2" elementType="Argument">
              <stringProp name="Argument.name">LockRuleCount_cat2</stringProp>
              <stringProp name="Argument.value">100</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="LOsInLockRule_cat2" elementType="Argument">
              <stringProp name="Argument.name">LOsInLockRule_cat2</stringProp>
              <stringProp name="Argument.value">100</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="LockRuleCount_cat3" elementType="Argument">
              <stringProp name="Argument.name">LockRuleCount_cat3</stringProp>
              <stringProp name="Argument.value">100</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="LOsInLockRule_cat3" elementType="Argument">
              <stringProp name="Argument.name">LOsInLockRule_cat3</stringProp>
              <stringProp name="Argument.value">100</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="LockRuleCount_cat4" elementType="Argument">
              <stringProp name="Argument.name">LockRuleCount_cat4</stringProp>
              <stringProp name="Argument.value">500</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="LOsInLockRule_cat4" elementType="Argument">
              <stringProp name="Argument.name">LOsInLockRule_cat4</stringProp>
              <stringProp name="Argument.value">150</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat1b1" elementType="Argument">
              <stringProp name="Argument.name">cat1b1</stringProp>
              <stringProp name="Argument.value">evpel1_bundle</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat1b2" elementType="Argument">
              <stringProp name="Argument.name">cat1b2</stringProp>
              <stringProp name="Argument.value">perf_bundle_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat1b3" elementType="Argument">
              <stringProp name="Argument.name">cat1b3</stringProp>
              <stringProp name="Argument.value">perf_bundle_8</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat2b1" elementType="Argument">
              <stringProp name="Argument.name">cat2b1</stringProp>
              <stringProp name="Argument.value">perf_bundle_17</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat2b2" elementType="Argument">
              <stringProp name="Argument.name">cat2b2</stringProp>
              <stringProp name="Argument.value">perf_bundle_18</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat2b3" elementType="Argument">
              <stringProp name="Argument.name">cat2b3</stringProp>
              <stringProp name="Argument.value">perf_bundle_19</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3b1" elementType="Argument">
              <stringProp name="Argument.name">cat3b1</stringProp>
              <stringProp name="Argument.value">perf_bundle_18</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3b2" elementType="Argument">
              <stringProp name="Argument.name">cat3b2</stringProp>
              <stringProp name="Argument.value">perf_bundle_19</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3b3" elementType="Argument">
              <stringProp name="Argument.name">cat3b3</stringProp>
              <stringProp name="Argument.value">perf_bundle_22</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4b1" elementType="Argument">
              <stringProp name="Argument.name">cat4b1</stringProp>
              <stringProp name="Argument.value">perf_bundle_12</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4b2" elementType="Argument">
              <stringProp name="Argument.name">cat4b2</stringProp>
              <stringProp name="Argument.value">perf_bundle_24</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat5pe1" elementType="Argument">
              <stringProp name="Argument.name">cat5pe1</stringProp>
              <stringProp name="Argument.value">perfprod106</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat5pe2" elementType="Argument">
              <stringProp name="Argument.name">cat5pe2</stringProp>
              <stringProp name="Argument.value">perfprod107</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat5pe3" elementType="Argument">
              <stringProp name="Argument.name">cat5pe3</stringProp>
              <stringProp name="Argument.value">perfprod108</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat5pe4" elementType="Argument">
              <stringProp name="Argument.name">cat5pe4</stringProp>
              <stringProp name="Argument.value">perfprod109</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat5pe5" elementType="Argument">
              <stringProp name="Argument.name">cat5pe5</stringProp>
              <stringProp name="Argument.value">perfprod110</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf21pe1" elementType="Argument">
              <stringProp name="Argument.name">perf21pe1</stringProp>
              <stringProp name="Argument.value">perfprod81</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf21pe2" elementType="Argument">
              <stringProp name="Argument.name">perf21pe2</stringProp>
              <stringProp name="Argument.value">perfprod82</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf21pe3" elementType="Argument">
              <stringProp name="Argument.name">perf21pe3</stringProp>
              <stringProp name="Argument.value">perfprod83</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf21pe4" elementType="Argument">
              <stringProp name="Argument.name">perf21pe4</stringProp>
              <stringProp name="Argument.value">perfprod84</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf21pe5" elementType="Argument">
              <stringProp name="Argument.name">perf21pe5</stringProp>
              <stringProp name="Argument.value">perfprod85</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="UDV - Product Category Details Updated - OLD" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="L1" elementType="Argument">
              <stringProp name="Argument.name">L1</stringProp>
              <stringProp name="Argument.value">&quot;evpel1&quot;, &quot;perf30_300lo_1&quot;, &quot;perf30_300lo_2&quot;, &quot;perf30_100lo_1&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L1_Assignment" elementType="Argument">
              <stringProp name="Argument.name">L1_Assignment</stringProp>
              <stringProp name="Argument.value">&quot;evpel1&quot;, &quot;perf30_300lo_1&quot;, &quot;perf30_300lo_2&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L2" elementType="Argument">
              <stringProp name="Argument.name">L2</stringProp>
              <stringProp name="Argument.value">&quot;evpel1&quot;, &quot;perf30_300lo_1&quot;, &quot;perf30_300lo_2&quot;, &quot;perf30_100lo_1&quot;, &quot;perfb1pe1&quot;, &quot;perfb1pe2&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L2_Assignment" elementType="Argument">
              <stringProp name="Argument.name">L2_Assignment</stringProp>
              <stringProp name="Argument.value">&quot;evpel1&quot;, &quot;perf30_300lo_1&quot;, &quot;perf30_300lo_2&quot;,  &quot;perfb1pe1&quot;, &quot;perfb1pe2&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L3" elementType="Argument">
              <stringProp name="Argument.name">L3</stringProp>
              <stringProp name="Argument.value">&quot;perf29_100lo_1&quot;, &quot;perf29_100lo_2&quot;, &quot;perf29_300lo_1&quot;, &quot;perf29_300lo_2&quot;, &quot;perf29_300lo_3&quot;, &quot;perf29_300lo_4&quot;,&quot;perf31_300lo_1&quot;, &quot;perf31_300lo_2&quot;, &quot;perf31_300lo_3&quot;, &quot;perf31_100lo_1&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L3_Assignment" elementType="Argument">
              <stringProp name="Argument.name">L3_Assignment</stringProp>
              <stringProp name="Argument.value">&quot;perf29_300lo_1&quot;, &quot;perf29_300lo_2&quot;, &quot;perf29_300lo_3&quot;, &quot;perf29_300lo_4&quot;,&quot;perf31_300lo_1&quot;, &quot;perf31_300lo_2&quot;, &quot;perf31_300lo_3&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L4" elementType="Argument">
              <stringProp name="Argument.name">L4</stringProp>
              <stringProp name="Argument.value">&quot;perf29_100lo_1&quot;, &quot;perf29_100lo_2&quot;, &quot;perf29_300lo_1&quot;, &quot;perf29_300lo_2&quot;, &quot;perf29_300lo_3&quot;, &quot;perf29_300lo_4&quot;,&quot;perf31_300lo_1&quot;, &quot;perf31_300lo_2&quot;, &quot;perf31_300lo_3&quot;, &quot;perf31_100lo_1&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L4_Assignment" elementType="Argument">
              <stringProp name="Argument.name">L4_Assignment</stringProp>
              <stringProp name="Argument.value">&quot;perf29_300lo_1&quot;, &quot;perf29_300lo_2&quot;, &quot;perf29_300lo_3&quot;, &quot;perf29_300lo_4&quot;,&quot;perf31_300lo_1&quot;, &quot;perf31_300lo_2&quot;, &quot;perf31_300lo_3&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L5" elementType="Argument">
              <stringProp name="Argument.name">L5</stringProp>
              <stringProp name="Argument.value">&quot;perf29_100lo_1&quot;, &quot;perf29_100lo_2&quot;, &quot;perf29_300lo_1&quot;, &quot;perf29_300lo_2&quot;, &quot;perf29_300lo_3&quot;, &quot;perf29_300lo_4&quot;,&quot;perf31_300lo_1&quot;, &quot;perf31_300lo_2&quot;, &quot;perf31_300lo_3&quot;, &quot;perf31_100lo_1&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L5_Assignment" elementType="Argument">
              <stringProp name="Argument.name">L5_Assignment</stringProp>
              <stringProp name="Argument.value">&quot;perf29_300lo_1&quot;, &quot;perf29_300lo_2&quot;, &quot;perf29_300lo_3&quot;, &quot;perf29_300lo_4&quot;,&quot;perf31_300lo_1&quot;, &quot;perf31_300lo_2&quot;, &quot;perf31_300lo_3&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L6" elementType="Argument">
              <stringProp name="Argument.name">L6</stringProp>
              <stringProp name="Argument.value">&quot;perfb1pe1&quot;, &quot;perfb1pe2&quot;, &quot;perfb2pe2&quot;, &quot;perfb2pe1&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L6_Assignment" elementType="Argument">
              <stringProp name="Argument.name">L6_Assignment</stringProp>
              <stringProp name="Argument.value">&quot;perfb1pe1&quot;, &quot;perfb1pe2&quot;, &quot;perfb2pe2&quot;, &quot;perfb2pe1&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M1" elementType="Argument">
              <stringProp name="Argument.name">M1</stringProp>
              <stringProp name="Argument.value">&quot;perf32_300lo_1&quot;, &quot;perf32_300lo_2&quot;, &quot;perf32_300lo_3&quot;, &quot;perf32_400lo_1&quot;, &quot;perf32_400lo_2&quot;,&quot;perf32_400lo_3&quot;, &quot;perf32_100lo_1&quot;,&quot;perfb1pe1&quot;,&quot;perfb1pe2&quot;,&quot;perf39_100lo_1&quot;, &quot;perf39_100lo_2&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M1_Assignment" elementType="Argument">
              <stringProp name="Argument.name">M1_Assignment</stringProp>
              <stringProp name="Argument.value">&quot;perf32_300lo_1&quot;, &quot;perf32_300lo_2&quot;, &quot;perf32_300lo_3&quot;, &quot;perf32_400lo_1&quot;, &quot;perf32_400lo_2&quot;,&quot;perf32_400lo_3&quot;, &quot;perfb1pe1&quot;,&quot;perfb1pe2&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M2" elementType="Argument">
              <stringProp name="Argument.name">M2</stringProp>
              <stringProp name="Argument.value">&quot;perf32_300lo_1&quot;, &quot;perf32_300lo_2&quot;, &quot;perf32_300lo_3&quot;, &quot;perf32_400lo_1&quot;, &quot;perf32_400lo_2&quot;,&quot;perf32_400lo_3&quot;, &quot;perf32_100lo_1&quot;,&quot;perf33_400lo_1&quot;, &quot;perf33_500lo_1&quot;, &quot;perf33_500lo_2&quot;,&quot;perf34_400lo_1&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M2_Assignment" elementType="Argument">
              <stringProp name="Argument.name">M2_Assignment</stringProp>
              <stringProp name="Argument.value">&quot;perf32_300lo_1&quot;, &quot;perf32_300lo_2&quot;, &quot;perf32_300lo_3&quot;, &quot;perf32_400lo_1&quot;, &quot;perf32_400lo_2&quot;,&quot;perf32_400lo_3&quot;,&quot;perf33_400lo_1&quot;, &quot;perf33_500lo_1&quot;, &quot;perf33_500lo_2&quot;,&quot;perf34_400lo_1&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M3" elementType="Argument">
              <stringProp name="Argument.name">M3</stringProp>
              <stringProp name="Argument.value">&quot;perf33_400lo_1&quot;, &quot;perf33_500lo_1&quot;, &quot;perf33_500lo_2&quot;,&quot;perfb1pe1&quot;,&quot;perfb1pe2&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M3_Assignment" elementType="Argument">
              <stringProp name="Argument.name">M3_Assignment</stringProp>
              <stringProp name="Argument.value">&quot;perf33_400lo_1&quot;, &quot;perf33_500lo_1&quot;, &quot;perf33_500lo_2&quot;,&quot;perfb1pe1&quot;,&quot;perfb1pe2&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M4" elementType="Argument">
              <stringProp name="Argument.name">M4</stringProp>
              <stringProp name="Argument.value">&quot;perf32_300lo_1&quot;, &quot;perf32_300lo_2&quot;, &quot;perf32_300lo_3&quot;, &quot;perf32_400lo_1&quot;, &quot;perf32_400lo_2&quot;,&quot;perf32_400lo_3&quot;, &quot;perf32_100lo_1&quot;,&quot;perf33_400lo_1&quot;, &quot;perf33_500lo_1&quot;, &quot;perf33_500lo_2&quot;,&quot;perf34_400lo_1&quot;,&quot;perfprod3&quot;,&quot;perfprod4&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M4_Assignment" elementType="Argument">
              <stringProp name="Argument.name">M4_Assignment</stringProp>
              <stringProp name="Argument.value">&quot;perf32_300lo_1&quot;, &quot;perf32_300lo_2&quot;, &quot;perf32_300lo_3&quot;, &quot;perf32_400lo_1&quot;, &quot;perf32_400lo_2&quot;,&quot;perf32_400lo_3&quot;,&quot;perf33_400lo_1&quot;, &quot;perf33_500lo_1&quot;, &quot;perf33_500lo_2&quot;,&quot;perf34_400lo_1&quot;,&quot;perfprod3&quot;,&quot;perfprod4&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M5" elementType="Argument">
              <stringProp name="Argument.name">M5</stringProp>
              <stringProp name="Argument.value">&quot;perfb1pe1&quot;, &quot;perfb1pe2&quot;,&quot;perf41_400lo_1&quot;,&quot;perf41_500lo_1&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M5_Assignment" elementType="Argument">
              <stringProp name="Argument.name">M5_Assignment</stringProp>
              <stringProp name="Argument.value">&quot;perfb1pe1&quot;, &quot;perfb1pe2&quot;,&quot;perf41_400lo_1&quot;,&quot;perf41_500lo_1&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H1" elementType="Argument">
              <stringProp name="Argument.name">H1</stringProp>
              <stringProp name="Argument.value">&quot;perf35_100lo_1&quot;,&quot;perf35_400lo_1&quot;,&quot;perf35_500lo_1&quot;,&quot;perf36_400lo_1&quot;,&quot;perf36_500lo_1&quot;,&quot;perf36_500lo_2&quot;,&quot;perf36_630lo_1&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H1_Assignment" elementType="Argument">
              <stringProp name="Argument.name">H1_Assignment</stringProp>
              <stringProp name="Argument.value">&quot;perf35_400lo_1&quot;,&quot;perf35_500lo_1&quot;,&quot;perf36_400lo_1&quot;,&quot;perf36_500lo_1&quot;,&quot;perf36_500lo_2&quot;,&quot;perf36_630lo_1&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H2" elementType="Argument">
              <stringProp name="Argument.name">H2</stringProp>
              <stringProp name="Argument.value">&quot;perf36_400lo_1&quot;,&quot;perf36_500lo_1&quot;,&quot;perf36_500lo_2&quot;,&quot;perf36_630lo_1&quot;,&quot;perf37_300lo_1&quot;,&quot;perf37_300lo_2&quot;,&quot;perf37_400lo_1&quot;,&quot;perf37_400lo_2&quot;,&quot;perf37_400lo_3&quot;,&quot;perf37_630lo_1&quot;,&quot;perf37_630lo_2&quot;,&quot;perf38_300lo_1&quot;,&quot;perf38_630lo_1&quot;,&quot;perf38_630lo_2&quot;,&quot;perfb1pe1&quot;,&quot;perfb1pe2&quot;,&quot;evpel1&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H2_Assignment" elementType="Argument">
              <stringProp name="Argument.name">H2_Assignment</stringProp>
              <stringProp name="Argument.value">&quot;perf36_400lo_1&quot;,&quot;perf36_500lo_1&quot;,&quot;perf36_500lo_2&quot;,&quot;perf36_630lo_1&quot;,&quot;perf37_300lo_1&quot;,&quot;perf37_300lo_2&quot;,&quot;perf37_400lo_1&quot;,&quot;perf37_400lo_2&quot;,&quot;perf37_400lo_3&quot;,&quot;perf37_630lo_1&quot;,&quot;perf37_630lo_2&quot;,&quot;perf38_300lo_1&quot;,&quot;perf38_630lo_1&quot;,&quot;perf38_630lo_2&quot;,&quot;perfb1pe1&quot;,&quot;perfb1pe2&quot;,&quot;evpel1&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H3" elementType="Argument">
              <stringProp name="Argument.name">H3</stringProp>
              <stringProp name="Argument.value">&quot;perf35_100lo_1&quot;,&quot;perf35_400lo_1&quot;,&quot;perf35_500lo_1&quot;,&quot;perf33_400lo_1&quot;, &quot;perf33_500lo_1&quot;, &quot;perf33_500lo_2&quot;,&quot;perf38_300lo_1&quot;,&quot;perf38_630lo_1&quot;,&quot;perf38_630lo_2&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H3_Assignment" elementType="Argument">
              <stringProp name="Argument.name">H3_Assignment</stringProp>
              <stringProp name="Argument.value">&quot;perf35_400lo_1&quot;,&quot;perf35_500lo_1&quot;,&quot;perf33_400lo_1&quot;, &quot;perf33_500lo_1&quot;, &quot;perf33_500lo_2&quot;,&quot;perf38_300lo_1&quot;,&quot;perf38_630lo_1&quot;,&quot;perf38_630lo_2&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H4" elementType="Argument">
              <stringProp name="Argument.name">H4</stringProp>
              <stringProp name="Argument.value">&quot;perf35_100lo_1&quot;,&quot;perf35_400lo_1&quot;,&quot;perf35_500lo_1&quot;,&quot;perfprod3&quot;,&quot;perfprod4&quot;,&quot;perf38_300lo_1&quot;,&quot;perf38_630lo_1&quot;,&quot;perf38_630lo_2&quot;,&quot;perf40_630lo_1&quot;,&quot;perf40_630lo_2&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H4_Assignment" elementType="Argument">
              <stringProp name="Argument.name">H4_Assignment</stringProp>
              <stringProp name="Argument.value">&quot;perf35_400lo_1&quot;,&quot;perf35_500lo_1&quot;,&quot;perfprod3&quot;,&quot;perfprod4&quot;,&quot;perf38_300lo_1&quot;,&quot;perf38_630lo_1&quot;,&quot;perf38_630lo_2&quot;,&quot;perf40_630lo_1&quot;,&quot;perf40_630lo_2&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H5" elementType="Argument">
              <stringProp name="Argument.name">H5</stringProp>
              <stringProp name="Argument.value">&quot;evpel1&quot;,&quot;perf41_400lo_1&quot;,&quot;perf41_500lo_1&quot;,&quot;perf38_300lo_1&quot;,&quot;perf38_630lo_1&quot;,&quot;perf38_630lo_2&quot;,&quot;perf34_400lo_1&quot;,&quot;perf37_300lo_1&quot;,&quot;perf37_300lo_2&quot;,&quot;perf37_400lo_1&quot;,&quot;perf37_400lo_2&quot;,&quot;perf37_400lo_3&quot;,&quot;perf37_630lo_1&quot;,&quot;perf37_630lo_2&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H5_Assignment" elementType="Argument">
              <stringProp name="Argument.name">H5_Assignment</stringProp>
              <stringProp name="Argument.value">&quot;evpel1&quot;,&quot;perf41_400lo_1&quot;,&quot;perf41_500lo_1&quot;,&quot;perf38_300lo_1&quot;,&quot;perf38_630lo_1&quot;,&quot;perf38_630lo_2&quot;,&quot;perf34_400lo_1&quot;,&quot;perf37_300lo_1&quot;,&quot;perf37_300lo_2&quot;,&quot;perf37_400lo_1&quot;,&quot;perf37_400lo_2&quot;,&quot;perf37_400lo_3&quot;,&quot;perf37_630lo_1&quot;,&quot;perf37_630lo_2&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H6" elementType="Argument">
              <stringProp name="Argument.name">H6</stringProp>
              <stringProp name="Argument.value">&quot;perf35_100lo_1&quot;,&quot;perf35_400lo_1&quot;,&quot;perf35_500lo_1&quot;,&quot;perfprod3&quot;,&quot;perfprod4&quot;,&quot;perf38_300lo_1&quot;,&quot;perf38_630lo_1&quot;,&quot;perf38_630lo_2&quot;,&quot;perf40_630lo_1&quot;,&quot;perf40_630lo_2&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H6_Assignment" elementType="Argument">
              <stringProp name="Argument.name">H6_Assignment</stringProp>
              <stringProp name="Argument.value">&quot;perf35_400lo_1&quot;,&quot;perf35_500lo_1&quot;,&quot;perfprod3&quot;,&quot;perfprod4&quot;,&quot;perf38_300lo_1&quot;,&quot;perf38_630lo_1&quot;,&quot;perf38_630lo_2&quot;,&quot;perf40_630lo_1&quot;,&quot;perf40_630lo_2&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L9" elementType="Argument">
              <stringProp name="Argument.name">L9</stringProp>
              <stringProp name="Argument.value">&quot;evpel1&quot;, &quot;perf30_300lo_1&quot;, &quot;perf30_300lo_2&quot;, &quot;perf30_100lo_1&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L9_Assignment" elementType="Argument">
              <stringProp name="Argument.name">L9_Assignment</stringProp>
              <stringProp name="Argument.value">&quot;evpel1&quot;, &quot;perf30_300lo_1&quot;, &quot;perf30_300lo_2&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L7" elementType="Argument">
              <stringProp name="Argument.name">L7</stringProp>
              <stringProp name="Argument.value">&quot;evpel1&quot;, &quot;perf30_300lo_1&quot;, &quot;perf30_300lo_2&quot;, &quot;perf30_100lo_1&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L7_Assignment" elementType="Argument">
              <stringProp name="Argument.name">L7_Assignment</stringProp>
              <stringProp name="Argument.value">&quot;evpel1&quot;, &quot;perf30_300lo_1&quot;, &quot;perf30_300lo_2&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L8" elementType="Argument">
              <stringProp name="Argument.name">L8</stringProp>
              <stringProp name="Argument.value">&quot;perfb1pe1&quot;, &quot;perfb1pe2&quot;, &quot;perfb2pe2&quot;, &quot;perfb2pe1&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L8_Assignment" elementType="Argument">
              <stringProp name="Argument.name">L8_Assignment</stringProp>
              <stringProp name="Argument.value">&quot;perfb1pe1&quot;, &quot;perfb1pe2&quot;, &quot;perfb2pe2&quot;, &quot;perfb2pe1&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="T1005" elementType="Argument">
              <stringProp name="Argument.name">T1005</stringProp>
              <stringProp name="Argument.value">&quot;perfprod3&quot;,&quot;perfprod4&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="T1005_Assignment" elementType="Argument">
              <stringProp name="Argument.name">T1005_Assignment</stringProp>
              <stringProp name="Argument.value">&quot;perfprod3&quot;,&quot;perfprod4&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L10" elementType="Argument">
              <stringProp name="Argument.name">L10</stringProp>
              <stringProp name="Argument.value">&quot;evpel1&quot;, &quot;perf30_300lo_1&quot;, &quot;perf30_300lo_2&quot;, &quot;perf30_100lo_1&quot;, &quot;perfb1pe1&quot;, &quot;perfb1pe2&quot;,&quot;perfprodct11&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L10_Assignment" elementType="Argument">
              <stringProp name="Argument.name">L10_Assignment</stringProp>
              <stringProp name="Argument.value">&quot;evpel1&quot;, &quot;perf30_300lo_1&quot;, &quot;perf30_300lo_2&quot;,  &quot;perfb1pe1&quot;, &quot;perfb1pe2&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="UDV - Product Category Details Updated - 1021 schl" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="1021_schl_L1" elementType="Argument">
              <stringProp name="Argument.name">1021_schl_L1</stringProp>
              <stringProp name="Argument.value">&quot;evpel1&quot;,&quot;perf30_300lo_1&quot;,&quot;perf30_300lo_2&quot;,&quot;perf30_100lo_1&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="1021_schl_L1_Assignment" elementType="Argument">
              <stringProp name="Argument.name">1021_schl_L1_Assignment</stringProp>
              <stringProp name="Argument.value">&quot;evpel1&quot;,&quot;perf30_300lo_1&quot;,&quot;perf30_300lo_2&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="1021_schl_L2" elementType="Argument">
              <stringProp name="Argument.name">1021_schl_L2</stringProp>
              <stringProp name="Argument.value">&quot;evpel1&quot;,&quot;perf30_300lo_1&quot;,&quot;perf30_300lo_2&quot;,&quot;perf30_100lo_1&quot;,&quot;perfb1pe1&quot;,&quot;perfb1pe2&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="1021_schl_L2_Assignment" elementType="Argument">
              <stringProp name="Argument.name">1021_schl_L2_Assignment</stringProp>
              <stringProp name="Argument.value">&quot;evpel1&quot;,&quot;perf30_300lo_1&quot;,&quot;perf30_300lo_2&quot;,&quot;perfb1pe1&quot;,&quot;perfb1pe2&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="1021_schl_L3" elementType="Argument">
              <stringProp name="Argument.name">1021_schl_L3</stringProp>
              <stringProp name="Argument.value">&quot;perf29_100lo_1&quot;,&quot;perf29_100lo_2&quot;,&quot;perf29_300lo_1&quot;,&quot;perf29_300lo_2&quot;,&quot;perf29_300lo_3&quot;,&quot;perf29_300lo_4&quot;,&quot;perf31_300lo_1&quot;,&quot;perf31_300lo_2&quot;,&quot;perf31_300lo_3&quot;,&quot;perf31_100lo_1&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="1021_schl_L3_Assignment" elementType="Argument">
              <stringProp name="Argument.name">1021_schl_L3_Assignment</stringProp>
              <stringProp name="Argument.value">&quot;perf29_300lo_1&quot;,&quot;perf29_300lo_2&quot;,&quot;perf29_300lo_3&quot;,&quot;perf29_300lo_4&quot;,&quot;perf31_300lo_1&quot;,&quot;perf31_300lo_2&quot;,&quot;perf31_300lo_3&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="1021_schl_L4" elementType="Argument">
              <stringProp name="Argument.name">1021_schl_L4</stringProp>
              <stringProp name="Argument.value">&quot;perf29_100lo_1&quot;,&quot;perf29_100lo_2&quot;,&quot;perf29_300lo_1&quot;,&quot;perf29_300lo_2&quot;,&quot;perf29_300lo_3&quot;,&quot;perf29_300lo_4&quot;,&quot;perf31_300lo_1&quot;,&quot;perf31_300lo_2&quot;,&quot;perf31_300lo_3&quot;,&quot;perf31_100lo_1&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="1021_schl_L4_Assignment" elementType="Argument">
              <stringProp name="Argument.name">1021_schl_L4_Assignment</stringProp>
              <stringProp name="Argument.value">&quot;perf29_300lo_1&quot;,&quot;perf29_300lo_2&quot;,&quot;perf29_300lo_3&quot;,&quot;perf29_300lo_4&quot;,&quot;perf31_300lo_1&quot;,&quot;perf31_300lo_2&quot;,&quot;perf31_300lo_3&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="1021_schl_L5" elementType="Argument">
              <stringProp name="Argument.name">1021_schl_L5</stringProp>
              <stringProp name="Argument.value">&quot;perf29_100lo_1&quot;,&quot;perf29_100lo_2&quot;,&quot;perf29_300lo_1&quot;,&quot;perf29_300lo_2&quot;,&quot;perf29_300lo_3&quot;,&quot;perf29_300lo_4&quot;,&quot;perf31_300lo_1&quot;,&quot;perf31_300lo_2&quot;,&quot;perf31_300lo_3&quot;,&quot;perf31_100lo_1&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="1021_schl_L5_Assignment" elementType="Argument">
              <stringProp name="Argument.name">1021_schl_L5_Assignment</stringProp>
              <stringProp name="Argument.value">&quot;perf29_300lo_1&quot;,&quot;perf29_300lo_2&quot;,&quot;perf29_300lo_3&quot;,&quot;perf29_300lo_4&quot;,&quot;perf31_300lo_1&quot;,&quot;perf31_300lo_2&quot;,&quot;perf31_300lo_3&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="1021_schl_L6" elementType="Argument">
              <stringProp name="Argument.name">1021_schl_L6</stringProp>
              <stringProp name="Argument.value">&quot;perfb1pe1&quot;,&quot;perfb1pe2&quot;,&quot;perfb2pe2&quot;,&quot;perfb2pe1&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="1021_schl_L6_Assignment" elementType="Argument">
              <stringProp name="Argument.name">1021_schl_L6_Assignment</stringProp>
              <stringProp name="Argument.value">&quot;perfb1pe1&quot;,&quot;perfb1pe2&quot;,&quot;perfb2pe2&quot;,&quot;perfb2pe1&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="1021_schl_M1" elementType="Argument">
              <stringProp name="Argument.name">1021_schl_M1</stringProp>
              <stringProp name="Argument.value">&quot;perf32_300lo_1&quot;,&quot;perf32_300lo_2&quot;,&quot;perf32_300lo_3&quot;,&quot;perf32_400lo_1&quot;,&quot;perf32_400lo_2&quot;,&quot;perf32_400lo_3&quot;,&quot;perf32_100lo_1&quot;,&quot;perfb1pe1&quot;,&quot;perfb1pe2&quot;,&quot;perf39_100lo_1&quot;,&quot;perf39_100lo_2&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="1021_schl_M1_Assignment" elementType="Argument">
              <stringProp name="Argument.name">1021_schl_M1_Assignment</stringProp>
              <stringProp name="Argument.value">&quot;perf32_300lo_1&quot;,&quot;perf32_300lo_2&quot;,&quot;perf32_300lo_3&quot;,&quot;perf32_400lo_1&quot;,&quot;perf32_400lo_2&quot;,&quot;perf32_400lo_3&quot;,&quot;perfb1pe1&quot;,&quot;perfb1pe2&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="1021_schl_M2" elementType="Argument">
              <stringProp name="Argument.name">1021_schl_M2</stringProp>
              <stringProp name="Argument.value">&quot;perf32_300lo_1&quot;,&quot;perf32_300lo_2&quot;,&quot;perf32_300lo_3&quot;,&quot;perf32_400lo_1&quot;,&quot;perf32_400lo_2&quot;,&quot;perf32_400lo_3&quot;,&quot;perf32_100lo_1&quot;,&quot;perf34_400lo_1&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="1021_schl_M2_Assignment" elementType="Argument">
              <stringProp name="Argument.name">1021_schl_M2_Assignment</stringProp>
              <stringProp name="Argument.value">&quot;perf32_300lo_1&quot;,&quot;perf32_300lo_2&quot;,&quot;perf32_300lo_3&quot;,&quot;perf32_400lo_1&quot;,&quot;perf32_400lo_2&quot;,&quot;perf32_400lo_3&quot;,&quot;perf34_400lo_1&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="1021_schl_M3" elementType="Argument">
              <stringProp name="Argument.name">1021_schl_M3</stringProp>
              <stringProp name="Argument.value">&quot;perf33_400lo_1&quot;,&quot;perf33_500lo_1&quot;,&quot;perf33_500lo_2&quot;,&quot;perfb1pe1&quot;,&quot;perfb1pe2&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="1021_schl_M3_Assignment" elementType="Argument">
              <stringProp name="Argument.name">1021_schl_M3_Assignment</stringProp>
              <stringProp name="Argument.value">&quot;perf33_400lo_1&quot;,&quot;perf33_500lo_1&quot;,&quot;perf33_500lo_2&quot;,&quot;perfb1pe1&quot;,&quot;perfb1pe2&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="1021_schl_M4" elementType="Argument">
              <stringProp name="Argument.name">1021_schl_M4</stringProp>
              <stringProp name="Argument.value">&quot;perf32_300lo_1&quot;,&quot;perf32_300lo_2&quot;,&quot;perf32_300lo_3&quot;,&quot;perf32_400lo_1&quot;,&quot;perf32_400lo_2&quot;,&quot;perf32_400lo_3&quot;,&quot;perf32_100lo_1&quot;,&quot;perf34_400lo_1&quot;,&quot;perfprod3&quot;,&quot;perfprod4&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="1021_schl_M4_Assignment" elementType="Argument">
              <stringProp name="Argument.name">1021_schl_M4_Assignment</stringProp>
              <stringProp name="Argument.value">&quot;perf32_300lo_1&quot;,&quot;perf32_300lo_2&quot;,&quot;perf32_300lo_3&quot;,&quot;perf32_400lo_1&quot;,&quot;perf32_400lo_2&quot;,&quot;perf32_400lo_3&quot;,&quot;perf34_400lo_1&quot;,&quot;perfprod3&quot;,&quot;perfprod4&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="1021_schl_M5" elementType="Argument">
              <stringProp name="Argument.name">1021_schl_M5</stringProp>
              <stringProp name="Argument.value">&quot;perfb1pe1&quot;,&quot;perfb1pe2&quot;,&quot;perf41_400lo_1&quot;,&quot;perf41_500lo_1&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="1021_schl_M5_Assignment" elementType="Argument">
              <stringProp name="Argument.name">1021_schl_M5_Assignment</stringProp>
              <stringProp name="Argument.value">&quot;perfb1pe1&quot;,&quot;perfb1pe2&quot;,&quot;perf41_400lo_1&quot;,&quot;perf41_500lo_1&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="1021_schl_H1" elementType="Argument">
              <stringProp name="Argument.name">1021_schl_H1</stringProp>
              <stringProp name="Argument.value">&quot;perf35_100lo_1&quot;,&quot;perf35_400lo_1&quot;,&quot;perf35_500lo_1&quot;,&quot;perf36_400lo_1&quot;,&quot;perf36_500lo_1&quot;,&quot;perf36_500lo_2&quot;,&quot;perf36_630lo_1&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="1021_schl_H1_Assignment" elementType="Argument">
              <stringProp name="Argument.name">1021_schl_H1_Assignment</stringProp>
              <stringProp name="Argument.value">&quot;perf35_400lo_1&quot;,&quot;perf35_500lo_1&quot;,&quot;perf36_400lo_1&quot;,&quot;perf36_500lo_1&quot;,&quot;perf36_500lo_2&quot;,&quot;perf36_630lo_1&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="1021_schl_H2" elementType="Argument">
              <stringProp name="Argument.name">1021_schl_H2</stringProp>
              <stringProp name="Argument.value">&quot;perf36_400lo_1&quot;,&quot;perf36_500lo_1&quot;,&quot;perf36_500lo_2&quot;,&quot;perf36_630lo_1&quot;,&quot;perfb1pe1&quot;,&quot;perfb1pe2&quot;,&quot;evpel1&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="1021_schl_H2_Assignment" elementType="Argument">
              <stringProp name="Argument.name">1021_schl_H2_Assignment</stringProp>
              <stringProp name="Argument.value">&quot;perf36_400lo_1&quot;,&quot;perf36_500lo_1&quot;,&quot;perf36_500lo_2&quot;,&quot;perf36_630lo_1&quot;,&quot;perfb1pe1&quot;,&quot;perfb1pe2&quot;,&quot;evpel1&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="1021_schl_H3" elementType="Argument">
              <stringProp name="Argument.name">1021_schl_H3</stringProp>
              <stringProp name="Argument.value">&quot;perf35_100lo_1&quot;,&quot;perf35_400lo_1&quot;,&quot;perf35_500lo_1&quot;,&quot;perf38_300lo_1&quot;,&quot;perf38_630lo_1&quot;,&quot;perf38_630lo_2&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="1021_schl_H3_Assignment" elementType="Argument">
              <stringProp name="Argument.name">1021_schl_H3_Assignment</stringProp>
              <stringProp name="Argument.value">&quot;perf35_400lo_1&quot;,&quot;perf35_500lo_1&quot;,&quot;perf38_300lo_1&quot;,&quot;perf38_630lo_1&quot;,&quot;perf38_630lo_2&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="1021_schl_PEs" elementType="Argument">
              <stringProp name="Argument.name">1021_schl_PEs</stringProp>
              <stringProp name="Argument.value">&quot;perfprod106&quot;, &quot;perfprod108&quot;, &quot;perfprod109&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="UDV - StdCat - Alpha" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="StdCat2_orgId" elementType="Argument">
              <stringProp name="Argument.name">StdCat2_orgId</stringProp>
              <stringProp name="Argument.value">&quot;perf-test3-alpha&quot;,&quot;perf-test4-alpha&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat2_spacecode" elementType="Argument">
              <stringProp name="Argument.name">StdCat2_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;NPJ-EYC-YCM&quot;,&quot;TXQ-WEQ-LHR&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat3_orgId" elementType="Argument">
              <stringProp name="Argument.name">StdCat3_orgId</stringProp>
              <stringProp name="Argument.value">&quot;perf-test3-alpha&quot;,&quot;perf-test4-alpha&quot;,&quot;perf-test5-alpha&quot;,&quot;perf-test6-alpha&quot;,&quot;perf-test7-alpha&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat3_spacecode" elementType="Argument">
              <stringProp name="Argument.name">StdCat3_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;NPJ-EYC-YCM&quot;,&quot;TXQ-WEQ-LHR&quot;,&quot;PFG-VAW-KQD&quot;,&quot;MQZ-JKE-TKE&quot;,&quot;ZDG-AGK-GND&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat4_orgId" elementType="Argument">
              <stringProp name="Argument.name">StdCat4_orgId</stringProp>
              <stringProp name="Argument.value">&quot;perf-test8-alpha&quot;,&quot;perf-test9-alpha&quot;,&quot;perf-test10-alpha&quot;,&quot;perf-test11-alpha&quot;,&quot;perf-test12-alpha&quot;,&quot;perf-test13-alpha&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat4_spacecode" elementType="Argument">
              <stringProp name="Argument.name">StdCat4_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;BNH-VYJ-HKE&quot;,&quot;YTB-LTC-EAL&quot;,&quot;CJG-BDQ-DYD&quot;,&quot;QCV-HJU-YWJ&quot;,&quot;RED-YGL-QYG&quot;,&quot;VEC-JCP-JCB&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat5_orgId" elementType="Argument">
              <stringProp name="Argument.name">StdCat5_orgId</stringProp>
              <stringProp name="Argument.value">&quot;perf-test8-alpha&quot;,&quot;perf-test9-alpha&quot;,&quot;perf-test10-alpha&quot;,&quot;perf-test11-alpha&quot;,&quot;perf-test12-alpha&quot;,&quot;perf-test13-alpha&quot;,&quot;perf-test14-alpha&quot;,&quot;perf-test15-alpha&quot;,&quot;perf-test16-alpha&quot;,&quot;perf-test17-alpha&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat5_spacecode" elementType="Argument">
              <stringProp name="Argument.name">StdCat5_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;BNH-VYJ-HKE&quot;,&quot;YTB-LTC-EAL&quot;,&quot;CJG-BDQ-DYD&quot;,&quot;QCV-HJU-YWJ&quot;,&quot;RED-YGL-QYG&quot;,&quot;VEC-JCP-JCB&quot;,&quot;GHP-QYC-FMZ&quot;,&quot;MFN-DYW-KCV&quot;,&quot;WKV-QPC-RDC&quot;,&quot;LRY-MRN-YDT&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCatv1_orgId" elementType="Argument">
              <stringProp name="Argument.name">StdCatv1_orgId</stringProp>
              <stringProp name="Argument.value">&quot;perf-test3july-alpha&quot;,&quot;test1-alpha&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCatv1_spacecode" elementType="Argument">
              <stringProp name="Argument.name">StdCatv1_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;GKY-HFV-UPX&quot;,&quot;NVH-BRE-QUV&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="schl_productcode1" elementType="Argument">
              <stringProp name="Argument.name">schl_productcode1</stringProp>
              <stringProp name="Argument.value">&quot;evpel1&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="UDV - StdCat - Thor" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="StdCat_thor1_orgId" elementType="Argument">
              <stringProp name="Argument.name">StdCat_thor1_orgId</stringProp>
              <stringProp name="Argument.value">&quot;perf_testschool_1&quot;,&quot;perf_testschool_2&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat_thor1_spacecode" elementType="Argument">
              <stringProp name="Argument.name">StdCat_thor1_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;FCN-CHZ-PDA&quot;,&quot;KNF-XRD-QVE&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat_thor2_orgId" elementType="Argument">
              <stringProp name="Argument.name">StdCat_thor2_orgId</stringProp>
              <stringProp name="Argument.value">&quot;perf_testschool_3&quot;,&quot;perf_testschool_4&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat_thor2_spacecode" elementType="Argument">
              <stringProp name="Argument.name">StdCat_thor2_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;HQC-ZWM-ZVF&quot;,&quot;ACJ-DXL-JKR&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat_thor3_orgId" elementType="Argument">
              <stringProp name="Argument.name">StdCat_thor3_orgId</stringProp>
              <stringProp name="Argument.value">&quot;perf_testschool_5&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="StdCat_thor3_spacecode" elementType="Argument">
              <stringProp name="Argument.name">StdCat_thor3_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;HXJ-RMA-DWY&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="schl_productcode1" elementType="Argument">
              <stringProp name="Argument.name">schl_productcode1</stringProp>
              <stringProp name="Argument.value">&quot;rptestbundlep1&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="UDV - School Product Code - alpha" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="perf-test3-alpha_ProductCodes" elementType="Argument">
              <stringProp name="Argument.name">perf-test3-alpha_ProductCodes</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;,&quot;perfprod106&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test3-alpha_PEs" elementType="Argument">
              <stringProp name="Argument.name">perf-test3-alpha_PEs</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test4-alpha_ProductCodes" elementType="Argument">
              <stringProp name="Argument.name">perf-test4-alpha_ProductCodes</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;,&quot;perfprod106&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test4-alpha_PEs" elementType="Argument">
              <stringProp name="Argument.name">perf-test4-alpha_PEs</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test5-alpha_ProductCodes" elementType="Argument">
              <stringProp name="Argument.name">perf-test5-alpha_ProductCodes</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;,&quot;perfprod106&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test5-alpha_PEs" elementType="Argument">
              <stringProp name="Argument.name">perf-test5-alpha_PEs</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test6-alpha_ProductCodes" elementType="Argument">
              <stringProp name="Argument.name">perf-test6-alpha_ProductCodes</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;,&quot;perfprod106&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test6-alpha_PEs" elementType="Argument">
              <stringProp name="Argument.name">perf-test6-alpha_PEs</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;,&quot;perfprod106&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test7-alpha_ProductCodes" elementType="Argument">
              <stringProp name="Argument.name">perf-test7-alpha_ProductCodes</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;,&quot;perfprod106&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test7-alpha_PEs" elementType="Argument">
              <stringProp name="Argument.name">perf-test7-alpha_PEs</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;,&quot;perfprod106&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test8-alpha_ProductCodes" elementType="Argument">
              <stringProp name="Argument.name">perf-test8-alpha_ProductCodes</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;, &quot;perfprod106&quot;,&quot;perfprod5&quot;,&quot;perfprod6&quot;,&quot;perfprod7&quot;,&quot;perfprod8&quot; </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test8-alpha_PEs" elementType="Argument">
              <stringProp name="Argument.name">perf-test8-alpha_PEs</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;,&quot;perfprod106&quot;,&quot;perfprod5&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test9-alpha_ProductCodes" elementType="Argument">
              <stringProp name="Argument.name">perf-test9-alpha_ProductCodes</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;, &quot;perfprod106&quot;,&quot;perfprod5&quot;,&quot;perfprod6&quot;,&quot;perfprod7&quot;,&quot;perfprod8&quot; </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test9-alpha_PEs" elementType="Argument">
              <stringProp name="Argument.name">perf-test9-alpha_PEs</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;,&quot;perfprod106&quot;,&quot;perfprod5&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test10-alpha_ProductCodes" elementType="Argument">
              <stringProp name="Argument.name">perf-test10-alpha_ProductCodes</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;, &quot;perfprod106&quot;,&quot;perfprod5&quot;,&quot;perfprod6&quot;,&quot;perfprod7&quot;,&quot;perfprod8&quot; </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test10-alpha_PEs" elementType="Argument">
              <stringProp name="Argument.name">perf-test10-alpha_PEs</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;,&quot;perfprod106&quot;,&quot;perfprod5&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test11-alpha_ProductCodes" elementType="Argument">
              <stringProp name="Argument.name">perf-test11-alpha_ProductCodes</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;, &quot;perfprod106&quot;,&quot;perfprod5&quot;,&quot;perfprod6&quot;,&quot;perfprod7&quot;,&quot;perfprod8&quot;  </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test11-alpha_PEs" elementType="Argument">
              <stringProp name="Argument.name">perf-test11-alpha_PEs</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;,&quot;perfprod106&quot;,&quot;perfprod5&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test12-alpha_ProductCodes" elementType="Argument">
              <stringProp name="Argument.name">perf-test12-alpha_ProductCodes</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;, &quot;perfprod106&quot;,&quot;perfprod5&quot;,&quot;perfprod6&quot;,&quot;perfprod7&quot;,&quot;perfprod8&quot; </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test12-alpha_PEs" elementType="Argument">
              <stringProp name="Argument.name">perf-test12-alpha_PEs</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;,&quot;perfprod106&quot;,&quot;perfprod5&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test13-alpha_ProductCodes" elementType="Argument">
              <stringProp name="Argument.name">perf-test13-alpha_ProductCodes</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;,&quot;perfprod106&quot;,&quot;perfprod5&quot;,&quot;perfprod6&quot;,&quot;perfprod7&quot;,&quot;perfprod8&quot;,&quot;perfprod111&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test13-alpha_PEs" elementType="Argument">
              <stringProp name="Argument.name">perf-test13-alpha_PEs</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;,&quot;perfprod106&quot;,&quot;perfprod5&quot;,&quot;perfprod6&quot;,&quot;perfprod7&quot;,&quot;perfprod8&quot;,&quot;perfprod111&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test14-alpha_ProductCodes" elementType="Argument">
              <stringProp name="Argument.name">perf-test14-alpha_ProductCodes</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;,&quot;perfprod106&quot;,&quot;perfprod5&quot;,&quot;perfprod6&quot;,&quot;perfprod7&quot;,&quot;perfprod8&quot;,&quot;perfprod111&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test14-alpha_PEs" elementType="Argument">
              <stringProp name="Argument.name">perf-test14-alpha_PEs</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;,&quot;perfprod106&quot;,&quot;perfprod5&quot;,&quot;perfprod6&quot;,&quot;perfprod7&quot;,&quot;perfprod8&quot;,&quot;perfprod111&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test15-alpha_ProductCodes" elementType="Argument">
              <stringProp name="Argument.name">perf-test15-alpha_ProductCodes</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;,&quot;perfprod106&quot;,&quot;perfprod5&quot;,&quot;perfprod6&quot;,&quot;perfprod7&quot;,&quot;perfprod8&quot;,&quot;perfprod111&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test15-alpha_PEs" elementType="Argument">
              <stringProp name="Argument.name">perf-test15-alpha_PEs</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;,&quot;perfprod106&quot;,&quot;perfprod5&quot;,&quot;perfprod6&quot;,&quot;perfprod7&quot;,&quot;perfprod8&quot;,&quot;perfprod111&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test16-alpha_ProductCodes" elementType="Argument">
              <stringProp name="Argument.name">perf-test16-alpha_ProductCodes</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;,&quot;perfprod106&quot;,&quot;perfprod5&quot;,&quot;perfprod6&quot;,&quot;perfprod7&quot;,&quot;perfprod8&quot;,&quot;perfprod111&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test16-alpha_PEs" elementType="Argument">
              <stringProp name="Argument.name">perf-test16-alpha_PEs</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;,&quot;perfprod106&quot;,&quot;perfprod5&quot;,&quot;perfprod6&quot;,&quot;perfprod7&quot;,&quot;perfprod8&quot;,&quot;perfprod111&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test17-alpha_ProductCodes" elementType="Argument">
              <stringProp name="Argument.name">perf-test17-alpha_ProductCodes</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;,&quot;perfprod106&quot;,&quot;perfprod5&quot;,&quot;perfprod6&quot;,&quot;perfprod7&quot;,&quot;perfprod8&quot;,&quot;perfprod111&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test17-alpha_PEs" elementType="Argument">
              <stringProp name="Argument.name">perf-test17-alpha_PEs</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;,&quot;perfprod106&quot;,&quot;perfprod5&quot;,&quot;perfprod6&quot;,&quot;perfprod7&quot;,&quot;perfprod8&quot;,&quot;perfprod111&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test3-alpha_spacecode" elementType="Argument">
              <stringProp name="Argument.name">perf-test3-alpha_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;NPJ-EYC-YCM&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test4-alpha_spacecode" elementType="Argument">
              <stringProp name="Argument.name">perf-test4-alpha_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;TXQ-WEQ-LHR&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test5-alpha_spacecode" elementType="Argument">
              <stringProp name="Argument.name">perf-test5-alpha_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;PFG-VAW-KQD&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test6-alpha_spacecode" elementType="Argument">
              <stringProp name="Argument.name">perf-test6-alpha_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;MQZ-JKE-TKE&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test7-alpha_spacecode" elementType="Argument">
              <stringProp name="Argument.name">perf-test7-alpha_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;ZDG-AGK-GND&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test8-alpha_spacecode" elementType="Argument">
              <stringProp name="Argument.name">perf-test8-alpha_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;BNH-VYJ-HKE&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test9-alpha_spacecode" elementType="Argument">
              <stringProp name="Argument.name">perf-test9-alpha_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;YTB-LTC-EAL&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test10-alpha_spacecode" elementType="Argument">
              <stringProp name="Argument.name">perf-test10-alpha_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;CJG-BDQ-DYD&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test11-alpha_spacecode" elementType="Argument">
              <stringProp name="Argument.name">perf-test11-alpha_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;QCV-HJU-YWJ&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test12-alpha_spacecode" elementType="Argument">
              <stringProp name="Argument.name">perf-test12-alpha_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;RED-YGL-QYG&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test13-alpha_spacecode" elementType="Argument">
              <stringProp name="Argument.name">perf-test13-alpha_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;VEC-JCP-JCB&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test14-alpha_spacecode" elementType="Argument">
              <stringProp name="Argument.name">perf-test14-alpha_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;GHP-QYC-FMZ&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test15-alpha_spacecode" elementType="Argument">
              <stringProp name="Argument.name">perf-test15-alpha_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;MFN-DYW-KCV&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test16-alpha_spacecode" elementType="Argument">
              <stringProp name="Argument.name">perf-test16-alpha_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;WKV-QPC-RDC&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test17-alpha_spacecode" elementType="Argument">
              <stringProp name="Argument.name">perf-test17-alpha_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;LRY-MRN-YDT&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test2-alpha_PEs" elementType="Argument">
              <stringProp name="Argument.name">perf-test2-alpha_PEs</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test3july-alpha_ProductCodes" elementType="Argument">
              <stringProp name="Argument.name">perf-test3july-alpha_ProductCodes</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;,&quot;perfprod106&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test3july-alpha_PEs" elementType="Argument">
              <stringProp name="Argument.name">perf-test3july-alpha_PEs</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf-test3july-alpha_spacecode" elementType="Argument">
              <stringProp name="Argument.name">perf-test3july-alpha_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;GKY-HFV-UPX&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="test1-alpha_ProductCodes" elementType="Argument">
              <stringProp name="Argument.name">test1-alpha_ProductCodes</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;,&quot;perfprod109&quot;,&quot;perfprod108&quot;,&quot;perfprod107&quot;,&quot;perfprod106&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="test1-alpha_PEs" elementType="Argument">
              <stringProp name="Argument.name">test1-alpha_PEs</stringProp>
              <stringProp name="Argument.value">&quot;perfprod110&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="test1-alpha_spacecode" elementType="Argument">
              <stringProp name="Argument.name">test1-alpha_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;NVH-BRE-QUV&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="UDV - School Product Code - Thor" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="perf_testschool_1_ProductCodes" elementType="Argument">
              <stringProp name="Argument.name">perf_testschool_1_ProductCodes</stringProp>
              <stringProp name="Argument.value">&quot;testumbrellape1&quot;,&quot;testumbrellarb1&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf_testschool_1_PEs" elementType="Argument">
              <stringProp name="Argument.name">perf_testschool_1_PEs</stringProp>
              <stringProp name="Argument.value">&quot;testumbrellape1&quot;,&quot;testumbrellarb1&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf_testschool_1_spacecode" elementType="Argument">
              <stringProp name="Argument.name">perf_testschool_1_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;FCN-CHZ-PDA&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf_testschool_2_ProductCodes" elementType="Argument">
              <stringProp name="Argument.name">perf_testschool_2_ProductCodes</stringProp>
              <stringProp name="Argument.value">&quot;testumbrellape1&quot;,&quot;testumbrellarb1&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf_testschool_2_PEs" elementType="Argument">
              <stringProp name="Argument.name">perf_testschool_2_PEs</stringProp>
              <stringProp name="Argument.value">&quot;testumbrellape1&quot;,&quot;testumbrellarb1&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf_testschool_2_spacecode" elementType="Argument">
              <stringProp name="Argument.name">perf_testschool_2_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;KNF-XRD-QVE&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf_testschool_3_ProductCodes" elementType="Argument">
              <stringProp name="Argument.name">perf_testschool_3_ProductCodes</stringProp>
              <stringProp name="Argument.value">&quot;newcomproqaproduct_pe1&quot;,&quot;newcomproqaproduct_rb1&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf_testschool_3_PEs" elementType="Argument">
              <stringProp name="Argument.name">perf_testschool_3_PEs</stringProp>
              <stringProp name="Argument.value">&quot;newcomproqaproduct_pe1&quot;,&quot;newcomproqaproduct_rb1&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf_testschool_3_spacecode" elementType="Argument">
              <stringProp name="Argument.name">perf_testschool_3_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;HQC-ZWM-ZVF&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf_testschool_4_ProductCodes" elementType="Argument">
              <stringProp name="Argument.name">perf_testschool_4_ProductCodes</stringProp>
              <stringProp name="Argument.value">&quot;newcomproqaproduct_pe1&quot;,&quot;newcomproqaproduct_rb1&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf_testschool_4_PEs" elementType="Argument">
              <stringProp name="Argument.name">perf_testschool_4_PEs</stringProp>
              <stringProp name="Argument.value">&quot;newcomproqaproduct_pe1&quot;,&quot;newcomproqaproduct_rb1&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf_testschool_4_spacecode" elementType="Argument">
              <stringProp name="Argument.name">perf_testschool_4_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;ACJ-DXL-JKR&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf_testschool_5_ProductCodes" elementType="Argument">
              <stringProp name="Argument.name">perf_testschool_5_ProductCodes</stringProp>
              <stringProp name="Argument.value">&quot;newcomproqaproduct_pe1&quot;,&quot;newcomproqaproduct_rb1&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf_testschool_5_PEs" elementType="Argument">
              <stringProp name="Argument.name">perf_testschool_5_PEs</stringProp>
              <stringProp name="Argument.value">&quot;newcomproqaproduct_pe1&quot;,&quot;newcomproqaproduct_rb1&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf_testschool_5_spacecode" elementType="Argument">
              <stringProp name="Argument.name">perf_testschool_5_spacecode</stringProp>
              <stringProp name="Argument.value">&quot;HXJ-RMA-DWY&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="UDV - std class Category" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="L_stdCount" elementType="Argument">
              <stringProp name="Argument.name">L_stdCount</stringProp>
              <stringProp name="Argument.value">50</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M_stdCount" elementType="Argument">
              <stringProp name="Argument.name">M_stdCount</stringProp>
              <stringProp name="Argument.value">75</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H1_stdCount" elementType="Argument">
              <stringProp name="Argument.name">H1_stdCount</stringProp>
              <stringProp name="Argument.value">100</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H2_stdCount" elementType="Argument">
              <stringProp name="Argument.name">H2_stdCount</stringProp>
              <stringProp name="Argument.value">150</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="UDV - Bundle Product (Required for custom grading)" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="perf30_300lo_1_bundle" elementType="Argument">
              <stringProp name="Argument.name">perf30_300lo_1_bundle</stringProp>
              <stringProp name="Argument.value">perfbundle30</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf30_300lo_2_bundle" elementType="Argument">
              <stringProp name="Argument.name">perf30_300lo_2_bundle</stringProp>
              <stringProp name="Argument.value">perfbundle30</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perf30_100lo_1_bundle" elementType="Argument">
              <stringProp name="Argument.name">perf30_100lo_1_bundle</stringProp>
              <stringProp name="Argument.value">perfbundle30</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="evpel1_bundle" elementType="Argument">
              <stringProp name="Argument.name">evpel1_bundle</stringProp>
              <stringProp name="Argument.value">evpel1_bundle</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perfb1pe1_bundle" elementType="Argument">
              <stringProp name="Argument.name">perfb1pe1_bundle</stringProp>
              <stringProp name="Argument.value">perf_bundle_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perfb1pe2_bundle" elementType="Argument">
              <stringProp name="Argument.name">perfb1pe2_bundle</stringProp>
              <stringProp name="Argument.value">perf_bundle_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perfb2pe2_bundle" elementType="Argument">
              <stringProp name="Argument.name">perfb2pe2_bundle</stringProp>
              <stringProp name="Argument.value">perf_bundle_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="perfb2pe1_bundle" elementType="Argument">
              <stringProp name="Argument.name">perfb2pe1_bundle</stringProp>
              <stringProp name="Argument.value">perf_bundle_2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="UDV - Attempts" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="L1_Scorable_PE_Count" elementType="Argument">
              <stringProp name="Argument.name">L1_Scorable_PE_Count</stringProp>
              <stringProp name="Argument.value">2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L1_Scorable" elementType="Argument">
              <stringProp name="Argument.name">L1_Scorable</stringProp>
              <stringProp name="Argument.value">2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L1_Pskill_PE_Count" elementType="Argument">
              <stringProp name="Argument.name">L1_Pskill_PE_Count</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L1_Pskill" elementType="Argument">
              <stringProp name="Argument.name">L1_Pskill</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L2_Scorable_PE_Count" elementType="Argument">
              <stringProp name="Argument.name">L2_Scorable_PE_Count</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L2_Scorable" elementType="Argument">
              <stringProp name="Argument.name">L2_Scorable</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L2_Pskill_PE_Count" elementType="Argument">
              <stringProp name="Argument.name">L2_Pskill_PE_Count</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L2_Pskill" elementType="Argument">
              <stringProp name="Argument.name">L2_Pskill</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L3_Scorable_PE_Count" elementType="Argument">
              <stringProp name="Argument.name">L3_Scorable_PE_Count</stringProp>
              <stringProp name="Argument.value">2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L3_Scorable" elementType="Argument">
              <stringProp name="Argument.name">L3_Scorable</stringProp>
              <stringProp name="Argument.value">5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L3_Pskill_PE_Count" elementType="Argument">
              <stringProp name="Argument.name">L3_Pskill_PE_Count</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L3_Pskill" elementType="Argument">
              <stringProp name="Argument.name">L3_Pskill</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L4_Scorable_PE_Count" elementType="Argument">
              <stringProp name="Argument.name">L4_Scorable_PE_Count</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L4_Scorable" elementType="Argument">
              <stringProp name="Argument.name">L4_Scorable</stringProp>
              <stringProp name="Argument.value">8</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L4_Pskill_PE_Count" elementType="Argument">
              <stringProp name="Argument.name">L4_Pskill_PE_Count</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L4_Pskill" elementType="Argument">
              <stringProp name="Argument.name">L4_Pskill</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L5_Scorable_PE_Count" elementType="Argument">
              <stringProp name="Argument.name">L5_Scorable_PE_Count</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L5_Scorable" elementType="Argument">
              <stringProp name="Argument.name">L5_Scorable</stringProp>
              <stringProp name="Argument.value">8</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L5_Pskill_PE_Count" elementType="Argument">
              <stringProp name="Argument.name">L5_Pskill_PE_Count</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L5_Pskill" elementType="Argument">
              <stringProp name="Argument.name">L5_Pskill</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L6_Scorable_PE_Count" elementType="Argument">
              <stringProp name="Argument.name">L6_Scorable_PE_Count</stringProp>
              <stringProp name="Argument.value">2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L6_Scorable" elementType="Argument">
              <stringProp name="Argument.name">L6_Scorable</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L6_Pskill_PE_Count" elementType="Argument">
              <stringProp name="Argument.name">L6_Pskill_PE_Count</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L6_Pskill" elementType="Argument">
              <stringProp name="Argument.name">L6_Pskill</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M1_Scorable_PE_Count" elementType="Argument">
              <stringProp name="Argument.name">M1_Scorable_PE_Count</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M1_Scorable" elementType="Argument">
              <stringProp name="Argument.name">M1_Scorable</stringProp>
              <stringProp name="Argument.value">10</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M1_Pskill_PE_Count" elementType="Argument">
              <stringProp name="Argument.name">M1_Pskill_PE_Count</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M1_Pskill" elementType="Argument">
              <stringProp name="Argument.name">M1_Pskill</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M2_Scorable_PE_Count" elementType="Argument">
              <stringProp name="Argument.name">M2_Scorable_PE_Count</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M2_Scorable" elementType="Argument">
              <stringProp name="Argument.name">M2_Scorable</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M2_Pskill_PE_Count" elementType="Argument">
              <stringProp name="Argument.name">M2_Pskill_PE_Count</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M2_Pskill" elementType="Argument">
              <stringProp name="Argument.name">M2_Pskill</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M3_Scorable_PE_Count" elementType="Argument">
              <stringProp name="Argument.name">M3_Scorable_PE_Count</stringProp>
              <stringProp name="Argument.value">2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M3_Scorable" elementType="Argument">
              <stringProp name="Argument.name">M3_Scorable</stringProp>
              <stringProp name="Argument.value">8</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M3_Pskill_PE_Count" elementType="Argument">
              <stringProp name="Argument.name">M3_Pskill_PE_Count</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M3_Pskill" elementType="Argument">
              <stringProp name="Argument.name">M3_Pskill</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M4_Scorable_PE_Count" elementType="Argument">
              <stringProp name="Argument.name">M4_Scorable_PE_Count</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M4_Scorable" elementType="Argument">
              <stringProp name="Argument.name">M4_Scorable</stringProp>
              <stringProp name="Argument.value">11</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M4_Pskill_PE_Count" elementType="Argument">
              <stringProp name="Argument.name">M4_Pskill_PE_Count</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M4_Pskill" elementType="Argument">
              <stringProp name="Argument.name">M4_Pskill</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H1_Scorable_PE_Count" elementType="Argument">
              <stringProp name="Argument.name">H1_Scorable_PE_Count</stringProp>
              <stringProp name="Argument.value">2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H1_Scorable" elementType="Argument">
              <stringProp name="Argument.name">H1_Scorable</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H1_Pskill_PE_Count" elementType="Argument">
              <stringProp name="Argument.name">H1_Pskill_PE_Count</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H1_Pskill" elementType="Argument">
              <stringProp name="Argument.name">H1_Pskill</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H2_Scorable_PE_Count" elementType="Argument">
              <stringProp name="Argument.name">H2_Scorable_PE_Count</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H2_Scorable" elementType="Argument">
              <stringProp name="Argument.name">H2_Scorable</stringProp>
              <stringProp name="Argument.value">15</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H2_Pskill_PE_Count" elementType="Argument">
              <stringProp name="Argument.name">H2_Pskill_PE_Count</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H2_Pskill" elementType="Argument">
              <stringProp name="Argument.name">H2_Pskill</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H3_Scorable_PE_Count" elementType="Argument">
              <stringProp name="Argument.name">H3_Scorable_PE_Count</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H3_Scorable" elementType="Argument">
              <stringProp name="Argument.name">H3_Scorable</stringProp>
              <stringProp name="Argument.value">7</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H3_Pskill_PE_Count" elementType="Argument">
              <stringProp name="Argument.name">H3_Pskill_PE_Count</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H3_Pskill" elementType="Argument">
              <stringProp name="Argument.name">H3_Pskill</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H4_Scorable_PE_Count" elementType="Argument">
              <stringProp name="Argument.name">H4_Scorable_PE_Count</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H4_Scorable" elementType="Argument">
              <stringProp name="Argument.name">H4_Scorable</stringProp>
              <stringProp name="Argument.value">15</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H4_Pskill_PE_Count" elementType="Argument">
              <stringProp name="Argument.name">H4_Pskill_PE_Count</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H4_Pskill" elementType="Argument">
              <stringProp name="Argument.name">H4_Pskill</stringProp>
              <stringProp name="Argument.value">2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H6_Scorable_PE_Count" elementType="Argument">
              <stringProp name="Argument.name">H6_Scorable_PE_Count</stringProp>
              <stringProp name="Argument.value">9</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H6_Scorable" elementType="Argument">
              <stringProp name="Argument.name">H6_Scorable</stringProp>
              <stringProp name="Argument.value">10</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H6_Pskill_PE_Count" elementType="Argument">
              <stringProp name="Argument.name">H6_Pskill_PE_Count</stringProp>
              <stringProp name="Argument.value">9</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H6_Pskill" elementType="Argument">
              <stringProp name="Argument.name">H6_Pskill</stringProp>
              <stringProp name="Argument.value">2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H5_Scorable_PE_Count" elementType="Argument">
              <stringProp name="Argument.name">H5_Scorable_PE_Count</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H5_Scorable" elementType="Argument">
              <stringProp name="Argument.name">H5_Scorable</stringProp>
              <stringProp name="Argument.value">12</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H5_Pskill_PE_Count" elementType="Argument">
              <stringProp name="Argument.name">H5_Pskill_PE_Count</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H5_Pskill" elementType="Argument">
              <stringProp name="Argument.name">H5_Pskill</stringProp>
              <stringProp name="Argument.value">2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M5_Scorable_PE_Count" elementType="Argument">
              <stringProp name="Argument.name">M5_Scorable_PE_Count</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M5_Scorable" elementType="Argument">
              <stringProp name="Argument.name">M5_Scorable</stringProp>
              <stringProp name="Argument.value">20</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M5_Pskill_PE_Count" elementType="Argument">
              <stringProp name="Argument.name">M5_Pskill_PE_Count</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M5_Pskill" elementType="Argument">
              <stringProp name="Argument.name">M5_Pskill</stringProp>
              <stringProp name="Argument.value">2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L7_Scorable_PE_Count" elementType="Argument">
              <stringProp name="Argument.name">L7_Scorable_PE_Count</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L7_Scorable" elementType="Argument">
              <stringProp name="Argument.name">L7_Scorable</stringProp>
              <stringProp name="Argument.value">8</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L7_Pskill_PE_Count" elementType="Argument">
              <stringProp name="Argument.name">L7_Pskill_PE_Count</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L7_Pskill" elementType="Argument">
              <stringProp name="Argument.name">L7_Pskill</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L8_Scorable_PE_Count" elementType="Argument">
              <stringProp name="Argument.name">L8_Scorable_PE_Count</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L8_Scorable" elementType="Argument">
              <stringProp name="Argument.name">L8_Scorable</stringProp>
              <stringProp name="Argument.value">8</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L8_Pskill_PE_Count" elementType="Argument">
              <stringProp name="Argument.name">L8_Pskill_PE_Count</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L8_Pskill" elementType="Argument">
              <stringProp name="Argument.name">L8_Pskill</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L9_Scorable_PE_Count" elementType="Argument">
              <stringProp name="Argument.name">L9_Scorable_PE_Count</stringProp>
              <stringProp name="Argument.value">2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L9_Scorable" elementType="Argument">
              <stringProp name="Argument.name">L9_Scorable</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L9_Pskill_PE_Count" elementType="Argument">
              <stringProp name="Argument.name">L9_Pskill_PE_Count</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L9_Pskill" elementType="Argument">
              <stringProp name="Argument.name">L9_Pskill</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="T1005_Pskill_PE_Count" elementType="Argument">
              <stringProp name="Argument.name">T1005_Pskill_PE_Count</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="T1005_Pskill" elementType="Argument">
              <stringProp name="Argument.name">T1005_Pskill</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="T1005_Scorable_PE_Count" elementType="Argument">
              <stringProp name="Argument.name">T1005_Scorable_PE_Count</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="T1005_Scorable" elementType="Argument">
              <stringProp name="Argument.name">T1005_Scorable</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L10_Scorable_PE_Count" elementType="Argument">
              <stringProp name="Argument.name">L10_Scorable_PE_Count</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L10_Scorable" elementType="Argument">
              <stringProp name="Argument.name">L10_Scorable</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L10_Pskill_PE_Count" elementType="Argument">
              <stringProp name="Argument.name">L10_Pskill_PE_Count</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L10_Pskill" elementType="Argument">
              <stringProp name="Argument.name">L10_Pskill</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="UDV - Assignment, Lock Rules and Custom Grading" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="L1_noOfLockRulesInClass" elementType="Argument">
              <stringProp name="Argument.name">L1_noOfLockRulesInClass</stringProp>
              <stringProp name="Argument.value">25</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L1_50LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">L1_50LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">25</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L1_100LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">L1_100LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L1_150LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">L1_150LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L1_customGradingCount" elementType="Argument">
              <stringProp name="Argument.name">L1_customGradingCount</stringProp>
              <stringProp name="Argument.value">5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L1_noOfAssignmentsInClass" elementType="Argument">
              <stringProp name="Argument.name">L1_noOfAssignmentsInClass</stringProp>
              <stringProp name="Argument.value">10</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L1_20LOsCount" elementType="Argument">
              <stringProp name="Argument.name">L1_20LOsCount</stringProp>
              <stringProp name="Argument.value">7</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L1_30LOsCount" elementType="Argument">
              <stringProp name="Argument.name">L1_30LOsCount</stringProp>
              <stringProp name="Argument.value">2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L1_50LOsCoun" elementType="Argument">
              <stringProp name="Argument.name">L1_50LOsCoun</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L2_noOfLockRulesInClass" elementType="Argument">
              <stringProp name="Argument.name">L2_noOfLockRulesInClass</stringProp>
              <stringProp name="Argument.value">25</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L2_50LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">L2_50LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">25</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L2_100LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">L2_100LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L2_150LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">L2_150LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L2_customGradingCount" elementType="Argument">
              <stringProp name="Argument.name">L2_customGradingCount</stringProp>
              <stringProp name="Argument.value">5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L2_noOfAssignmentsInClass" elementType="Argument">
              <stringProp name="Argument.name">L2_noOfAssignmentsInClass</stringProp>
              <stringProp name="Argument.value">10</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L2_20LOsCount" elementType="Argument">
              <stringProp name="Argument.name">L2_20LOsCount</stringProp>
              <stringProp name="Argument.value">7</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L2_30LOsCount" elementType="Argument">
              <stringProp name="Argument.name">L2_30LOsCount</stringProp>
              <stringProp name="Argument.value">2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L2_50LOsCount" elementType="Argument">
              <stringProp name="Argument.name">L2_50LOsCount</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L3_noOfLockRulesInClass" elementType="Argument">
              <stringProp name="Argument.name">L3_noOfLockRulesInClass</stringProp>
              <stringProp name="Argument.value">25</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L3_50LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">L3_50LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">25</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L3_100LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">L3_100LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L3_150LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">L3_150LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L3_customGradingCount" elementType="Argument">
              <stringProp name="Argument.name">L3_customGradingCount</stringProp>
              <stringProp name="Argument.value">5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L3_noOfAssignmentsInClass" elementType="Argument">
              <stringProp name="Argument.name">L3_noOfAssignmentsInClass</stringProp>
              <stringProp name="Argument.value">10</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L3_20LOsCount" elementType="Argument">
              <stringProp name="Argument.name">L3_20LOsCount</stringProp>
              <stringProp name="Argument.value">7</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L3_30LOsCount" elementType="Argument">
              <stringProp name="Argument.name">L3_30LOsCount</stringProp>
              <stringProp name="Argument.value">2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L3_50LOsCount" elementType="Argument">
              <stringProp name="Argument.name">L3_50LOsCount</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L4_noOfLockRulesInClass" elementType="Argument">
              <stringProp name="Argument.name">L4_noOfLockRulesInClass</stringProp>
              <stringProp name="Argument.value">25</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L4_50LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">L4_50LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">25</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L4_100LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">L4_100LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L4_150LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">L4_150LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L4_customGradingCount" elementType="Argument">
              <stringProp name="Argument.name">L4_customGradingCount</stringProp>
              <stringProp name="Argument.value">5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L4_noOfAssignmentsInClass" elementType="Argument">
              <stringProp name="Argument.name">L4_noOfAssignmentsInClass</stringProp>
              <stringProp name="Argument.value">15</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L4_20LOsCount" elementType="Argument">
              <stringProp name="Argument.name">L4_20LOsCount</stringProp>
              <stringProp name="Argument.value">8</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L4_30LOsCount" elementType="Argument">
              <stringProp name="Argument.name">L4_30LOsCount</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L4_50LOsCount" elementType="Argument">
              <stringProp name="Argument.name">L4_50LOsCount</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L5_noOfLockRulesInClass" elementType="Argument">
              <stringProp name="Argument.name">L5_noOfLockRulesInClass</stringProp>
              <stringProp name="Argument.value">25</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L5_50LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">L5_50LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">25</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L5_100LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">L5_100LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L5_150LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">L5_150LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L5_customGradingCount" elementType="Argument">
              <stringProp name="Argument.name">L5_customGradingCount</stringProp>
              <stringProp name="Argument.value">10</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L5_noOfAssignmentsInClass" elementType="Argument">
              <stringProp name="Argument.name">L5_noOfAssignmentsInClass</stringProp>
              <stringProp name="Argument.value">30</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L5_20LOsCount" elementType="Argument">
              <stringProp name="Argument.name">L5_20LOsCount</stringProp>
              <stringProp name="Argument.value">18</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L5_30LOsCount" elementType="Argument">
              <stringProp name="Argument.name">L5_30LOsCount</stringProp>
              <stringProp name="Argument.value">6</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L5_50LOsCount" elementType="Argument">
              <stringProp name="Argument.name">L5_50LOsCount</stringProp>
              <stringProp name="Argument.value">6</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L6_noOfLockRulesInClass" elementType="Argument">
              <stringProp name="Argument.name">L6_noOfLockRulesInClass</stringProp>
              <stringProp name="Argument.value">25</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L6_50LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">L6_50LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">25</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L6_100LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">L6_100LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L6_150LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">L6_150LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L6_customGradingCount" elementType="Argument">
              <stringProp name="Argument.name">L6_customGradingCount</stringProp>
              <stringProp name="Argument.value">5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L6_noOfAssignmentsInClass" elementType="Argument">
              <stringProp name="Argument.name">L6_noOfAssignmentsInClass</stringProp>
              <stringProp name="Argument.value">10</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L6_20LOsCount" elementType="Argument">
              <stringProp name="Argument.name">L6_20LOsCount</stringProp>
              <stringProp name="Argument.value">7</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L6_30LOsCount" elementType="Argument">
              <stringProp name="Argument.name">L6_30LOsCount</stringProp>
              <stringProp name="Argument.value">2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L6_50LOsCount" elementType="Argument">
              <stringProp name="Argument.name">L6_50LOsCount</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M1_noOfLockRulesInClass" elementType="Argument">
              <stringProp name="Argument.name">M1_noOfLockRulesInClass</stringProp>
              <stringProp name="Argument.value">25</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M1_50LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">M1_50LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M1_100LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">M1_100LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">20</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M1_150LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">M1_150LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M1_customGradingCount" elementType="Argument">
              <stringProp name="Argument.name">M1_customGradingCount</stringProp>
              <stringProp name="Argument.value">5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M1_noOfAssignmentsInClass" elementType="Argument">
              <stringProp name="Argument.name">M1_noOfAssignmentsInClass</stringProp>
              <stringProp name="Argument.value">10</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M1_20LOsCount" elementType="Argument">
              <stringProp name="Argument.name">M1_20LOsCount</stringProp>
              <stringProp name="Argument.value">6</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M1_30LOsCount" elementType="Argument">
              <stringProp name="Argument.name">M1_30LOsCount</stringProp>
              <stringProp name="Argument.value">2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M1_50LOsCount" elementType="Argument">
              <stringProp name="Argument.name">M1_50LOsCount</stringProp>
              <stringProp name="Argument.value">2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M2_noOfLockRulesInClass" elementType="Argument">
              <stringProp name="Argument.name">M2_noOfLockRulesInClass</stringProp>
              <stringProp name="Argument.value">25</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M2_50LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">M2_50LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M2_100LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">M2_100LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">20</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M2_150LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">M2_150LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M2_customGradingCount" elementType="Argument">
              <stringProp name="Argument.name">M2_customGradingCount</stringProp>
              <stringProp name="Argument.value">5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M2_noOfAssignmentsInClass" elementType="Argument">
              <stringProp name="Argument.name">M2_noOfAssignmentsInClass</stringProp>
              <stringProp name="Argument.value">10</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M2_20LOsCount" elementType="Argument">
              <stringProp name="Argument.name">M2_20LOsCount</stringProp>
              <stringProp name="Argument.value">6</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M2_30LOsCount" elementType="Argument">
              <stringProp name="Argument.name">M2_30LOsCount</stringProp>
              <stringProp name="Argument.value">2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M2_50LOsCount" elementType="Argument">
              <stringProp name="Argument.name">M2_50LOsCount</stringProp>
              <stringProp name="Argument.value">2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M3_noOfLockRulesInClass" elementType="Argument">
              <stringProp name="Argument.name">M3_noOfLockRulesInClass</stringProp>
              <stringProp name="Argument.value">25</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M3_50LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">M3_50LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M3_100LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">M3_100LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">20</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M3_150LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">M3_150LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M3_customGradingCount" elementType="Argument">
              <stringProp name="Argument.name">M3_customGradingCount</stringProp>
              <stringProp name="Argument.value">10</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M3_noOfAssignmentsInClass" elementType="Argument">
              <stringProp name="Argument.name">M3_noOfAssignmentsInClass</stringProp>
              <stringProp name="Argument.value">15</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M3_20LOsCount" elementType="Argument">
              <stringProp name="Argument.name">M3_20LOsCount</stringProp>
              <stringProp name="Argument.value">8</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M3_30LOsCount" elementType="Argument">
              <stringProp name="Argument.name">M3_30LOsCount</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M3_50LOsCount" elementType="Argument">
              <stringProp name="Argument.name">M3_50LOsCount</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M4_noOfLockRulesInClass" elementType="Argument">
              <stringProp name="Argument.name">M4_noOfLockRulesInClass</stringProp>
              <stringProp name="Argument.value">80</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M4_50LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">M4_50LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">60</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M4_100LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">M4_100LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">20</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M4_150LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">M4_150LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M4_customGradingCount" elementType="Argument">
              <stringProp name="Argument.name">M4_customGradingCount</stringProp>
              <stringProp name="Argument.value">15</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M4_noOfAssignmentsInClass" elementType="Argument">
              <stringProp name="Argument.name">M4_noOfAssignmentsInClass</stringProp>
              <stringProp name="Argument.value">30</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M4_20LOsCount" elementType="Argument">
              <stringProp name="Argument.name">M4_20LOsCount</stringProp>
              <stringProp name="Argument.value">16</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M4_30LOsCount" elementType="Argument">
              <stringProp name="Argument.name">M4_30LOsCount</stringProp>
              <stringProp name="Argument.value">6</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M4_50LOsCount" elementType="Argument">
              <stringProp name="Argument.name">M4_50LOsCount</stringProp>
              <stringProp name="Argument.value">8</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M5_noOfLockRulesInClass" elementType="Argument">
              <stringProp name="Argument.name">M5_noOfLockRulesInClass</stringProp>
              <stringProp name="Argument.value">40</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M5_50LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">M5_50LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">25</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M5_100LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">M5_100LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">15</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M5_150LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">M5_150LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M5_customGradingCount" elementType="Argument">
              <stringProp name="Argument.name">M5_customGradingCount</stringProp>
              <stringProp name="Argument.value">10</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M5_noOfAssignmentsInClass" elementType="Argument">
              <stringProp name="Argument.name">M5_noOfAssignmentsInClass</stringProp>
              <stringProp name="Argument.value">15</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M5_20LOsCount" elementType="Argument">
              <stringProp name="Argument.name">M5_20LOsCount</stringProp>
              <stringProp name="Argument.value">8</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M5_30LOsCount" elementType="Argument">
              <stringProp name="Argument.name">M5_30LOsCount</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="M5_50LOsCount" elementType="Argument">
              <stringProp name="Argument.name">M5_50LOsCount</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H1_noOfLockRulesInClass" elementType="Argument">
              <stringProp name="Argument.name">H1_noOfLockRulesInClass</stringProp>
              <stringProp name="Argument.value">25</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H1_50LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">H1_50LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">17</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H1_100LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">H1_100LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H1_150LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">H1_150LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H1_customGradingCount" elementType="Argument">
              <stringProp name="Argument.name">H1_customGradingCount</stringProp>
              <stringProp name="Argument.value">5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H1_noOfAssignmentsInClass" elementType="Argument">
              <stringProp name="Argument.name">H1_noOfAssignmentsInClass</stringProp>
              <stringProp name="Argument.value">10</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H1_20LOsCount" elementType="Argument">
              <stringProp name="Argument.name">H1_20LOsCount</stringProp>
              <stringProp name="Argument.value">6</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H1_30LOsCount" elementType="Argument">
              <stringProp name="Argument.name">H1_30LOsCount</stringProp>
              <stringProp name="Argument.value">2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H1_50LOsCount" elementType="Argument">
              <stringProp name="Argument.name">H1_50LOsCount</stringProp>
              <stringProp name="Argument.value">2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H2_noOfLockRulesInClass" elementType="Argument">
              <stringProp name="Argument.name">H2_noOfLockRulesInClass</stringProp>
              <stringProp name="Argument.value">25</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H2_50LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">H2_50LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">15</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H2_100LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">H2_100LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H2_150LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">H2_150LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H2_customGradingCount" elementType="Argument">
              <stringProp name="Argument.name">H2_customGradingCount</stringProp>
              <stringProp name="Argument.value">5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H2_noOfAssignmentsInClass" elementType="Argument">
              <stringProp name="Argument.name">H2_noOfAssignmentsInClass</stringProp>
              <stringProp name="Argument.value">15</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H2_20LOsCount" elementType="Argument">
              <stringProp name="Argument.name">H2_20LOsCount</stringProp>
              <stringProp name="Argument.value">8</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H2_30LOsCount" elementType="Argument">
              <stringProp name="Argument.name">H2_30LOsCount</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H2_50LOsCount" elementType="Argument">
              <stringProp name="Argument.name">H2_50LOsCount</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H3_noOfLockRulesInClass" elementType="Argument">
              <stringProp name="Argument.name">H3_noOfLockRulesInClass</stringProp>
              <stringProp name="Argument.value">25</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H3_50LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">H3_50LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">15</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H3_100LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">H3_100LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">8</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H3_150LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">H3_150LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H3_customGradingCount" elementType="Argument">
              <stringProp name="Argument.name">H3_customGradingCount</stringProp>
              <stringProp name="Argument.value">10</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H3_noOfAssignmentsInClass" elementType="Argument">
              <stringProp name="Argument.name">H3_noOfAssignmentsInClass</stringProp>
              <stringProp name="Argument.value">15</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H3_20LOsCount" elementType="Argument">
              <stringProp name="Argument.name">H3_20LOsCount</stringProp>
              <stringProp name="Argument.value">8</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H3_30LOsCount" elementType="Argument">
              <stringProp name="Argument.name">H3_30LOsCount</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H3_50LOsCount" elementType="Argument">
              <stringProp name="Argument.name">H3_50LOsCount</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H4_noOfLockRulesInClass" elementType="Argument">
              <stringProp name="Argument.name">H4_noOfLockRulesInClass</stringProp>
              <stringProp name="Argument.value">25</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H4_50LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">H4_50LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">15</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H4_100LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">H4_100LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">8</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H4_150LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">H4_150LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H4_customGradingCount" elementType="Argument">
              <stringProp name="Argument.name">H4_customGradingCount</stringProp>
              <stringProp name="Argument.value">15</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H4_noOfAssignmentsInClass" elementType="Argument">
              <stringProp name="Argument.name">H4_noOfAssignmentsInClass</stringProp>
              <stringProp name="Argument.value">30</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H4_20LOsCount" elementType="Argument">
              <stringProp name="Argument.name">H4_20LOsCount</stringProp>
              <stringProp name="Argument.value">16</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H4_30LOsCount" elementType="Argument">
              <stringProp name="Argument.name">H4_30LOsCount</stringProp>
              <stringProp name="Argument.value">6</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H4_50LOsCount" elementType="Argument">
              <stringProp name="Argument.name">H4_50LOsCount</stringProp>
              <stringProp name="Argument.value">8</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H5_noOfLockRulesInClass" elementType="Argument">
              <stringProp name="Argument.name">H5_noOfLockRulesInClass</stringProp>
              <stringProp name="Argument.value">125</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H5_50LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">H5_50LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">120</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H5_100LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">H5_100LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H5_150LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">H5_150LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H5_customGradingCount" elementType="Argument">
              <stringProp name="Argument.name">H5_customGradingCount</stringProp>
              <stringProp name="Argument.value">15</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H5_noOfAssignmentsInClass" elementType="Argument">
              <stringProp name="Argument.name">H5_noOfAssignmentsInClass</stringProp>
              <stringProp name="Argument.value">30</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H5_20LOsCount" elementType="Argument">
              <stringProp name="Argument.name">H5_20LOsCount</stringProp>
              <stringProp name="Argument.value">16</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H5_30LOsCount" elementType="Argument">
              <stringProp name="Argument.name">H5_30LOsCount</stringProp>
              <stringProp name="Argument.value">6</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H5_50LOsCount" elementType="Argument">
              <stringProp name="Argument.name">H5_50LOsCount</stringProp>
              <stringProp name="Argument.value">8</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H6_noOfLockRulesInClass" elementType="Argument">
              <stringProp name="Argument.name">H6_noOfLockRulesInClass</stringProp>
              <stringProp name="Argument.value">125</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H6_50LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">H6_50LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">120</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H6_100LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">H6_100LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H6_150LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">H6_150LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H6_customGradingCount" elementType="Argument">
              <stringProp name="Argument.name">H6_customGradingCount</stringProp>
              <stringProp name="Argument.value">15</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H6_noOfAssignmentsInClass" elementType="Argument">
              <stringProp name="Argument.name">H6_noOfAssignmentsInClass</stringProp>
              <stringProp name="Argument.value">100</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H6_20LOsCount" elementType="Argument">
              <stringProp name="Argument.name">H6_20LOsCount</stringProp>
              <stringProp name="Argument.value">30</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H6_30LOsCount" elementType="Argument">
              <stringProp name="Argument.name">H6_30LOsCount</stringProp>
              <stringProp name="Argument.value">20</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H6_50LOsCount" elementType="Argument">
              <stringProp name="Argument.name">H6_50LOsCount</stringProp>
              <stringProp name="Argument.value">20</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H6_100LOsCount" elementType="Argument">
              <stringProp name="Argument.name">H6_100LOsCount</stringProp>
              <stringProp name="Argument.value">10</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H6_300LOsCount" elementType="Argument">
              <stringProp name="Argument.name">H6_300LOsCount</stringProp>
              <stringProp name="Argument.value">10</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="H6_500LOsCount" elementType="Argument">
              <stringProp name="Argument.name">H6_500LOsCount</stringProp>
              <stringProp name="Argument.value">10</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L7_noOfLockRulesInClass" elementType="Argument">
              <stringProp name="Argument.name">L7_noOfLockRulesInClass</stringProp>
              <stringProp name="Argument.value">25</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L7_50LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">L7_50LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">20</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L7_100LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">L7_100LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L7_150LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">L7_150LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L7_customGradingCount" elementType="Argument">
              <stringProp name="Argument.name">L7_customGradingCount</stringProp>
              <stringProp name="Argument.value">5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L8_noOfLockRulesInClass" elementType="Argument">
              <stringProp name="Argument.name">L8_noOfLockRulesInClass</stringProp>
              <stringProp name="Argument.value">15</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L8_50LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">L8_50LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">15</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L8_100LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">L8_100LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L8_150LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">L8_150LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L8_customGradingCount" elementType="Argument">
              <stringProp name="Argument.name">L8_customGradingCount</stringProp>
              <stringProp name="Argument.value">10</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L9_noOfLockRulesInClass" elementType="Argument">
              <stringProp name="Argument.name">L9_noOfLockRulesInClass</stringProp>
              <stringProp name="Argument.value">15</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L9_50LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">L9_50LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">15</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L9_100LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">L9_100LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L9_150LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">L9_150LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L9_customGradingCount" elementType="Argument">
              <stringProp name="Argument.name">L9_customGradingCount</stringProp>
              <stringProp name="Argument.value">5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L7_noOfAssignmentsInClass" elementType="Argument">
              <stringProp name="Argument.name">L7_noOfAssignmentsInClass</stringProp>
              <stringProp name="Argument.value">20</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L7_20LOsCount" elementType="Argument">
              <stringProp name="Argument.name">L7_20LOsCount</stringProp>
              <stringProp name="Argument.value">18</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L7_30LOsCount" elementType="Argument">
              <stringProp name="Argument.name">L7_30LOsCount</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L7_50LOsCount" elementType="Argument">
              <stringProp name="Argument.name">L7_50LOsCount</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L8_noOfAssignmentsInClass" elementType="Argument">
              <stringProp name="Argument.name">L8_noOfAssignmentsInClass</stringProp>
              <stringProp name="Argument.value">30</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L8_20LOsCount" elementType="Argument">
              <stringProp name="Argument.name">L8_20LOsCount</stringProp>
              <stringProp name="Argument.value">28</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L8_30LOsCount" elementType="Argument">
              <stringProp name="Argument.name">L8_30LOsCount</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L8_50LOsCount" elementType="Argument">
              <stringProp name="Argument.name">L8_50LOsCount</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L9_noOfAssignmentsInClass" elementType="Argument">
              <stringProp name="Argument.name">L9_noOfAssignmentsInClass</stringProp>
              <stringProp name="Argument.value">30</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L9_20LOsCount" elementType="Argument">
              <stringProp name="Argument.name">L9_20LOsCount</stringProp>
              <stringProp name="Argument.value">28</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L9_30LOsCount" elementType="Argument">
              <stringProp name="Argument.name">L9_30LOsCount</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L9_50LOsCount" elementType="Argument">
              <stringProp name="Argument.name">L9_50LOsCount</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L10_noOfLockRulesInClass" elementType="Argument">
              <stringProp name="Argument.name">L10_noOfLockRulesInClass</stringProp>
              <stringProp name="Argument.value">25</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L10_50LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">L10_50LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">25</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L10_100LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">L10_100LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L10_150LOsLockRuleCount" elementType="Argument">
              <stringProp name="Argument.name">L10_150LOsLockRuleCount</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L10_customGradingCount" elementType="Argument">
              <stringProp name="Argument.name">L10_customGradingCount</stringProp>
              <stringProp name="Argument.value">5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L10_noOfAssignmentsInClass" elementType="Argument">
              <stringProp name="Argument.name">L10_noOfAssignmentsInClass</stringProp>
              <stringProp name="Argument.value">10</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L10_20LOsCount" elementType="Argument">
              <stringProp name="Argument.name">L10_20LOsCount</stringProp>
              <stringProp name="Argument.value">7</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L10_30LOsCount" elementType="Argument">
              <stringProp name="Argument.name">L10_30LOsCount</stringProp>
              <stringProp name="Argument.value">2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="L10_50LOsCount" elementType="Argument">
              <stringProp name="Argument.name">L10_50LOsCount</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Create School Entitlements" enabled="false"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">schoolProductList.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">orgid,productcodes,count</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__timeShift(,,P2000D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
            <stringProp name="BeanShellSampler.query">
String[] schl_PEs = {${__evalVar(${orgid}_PEs)}};

//vars.put(&quot;schl_PEs&quot; , schl_PEs);

for (int i = 0; i &lt; schl_PEs.length; i++) {
    vars.put(&quot;schl_productcode&quot; + (i + 1), schl_PEs[i]);
}

// Get the length of the array
int length = schl_PEs.length;
vars.put(&quot;schPEscount&quot;, String.valueOf(length));</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
            <stringProp name="ForeachController.inputVal">schl_productcode</stringProp>
            <stringProp name="ForeachController.returnVal">productcode</stringProp>
            <boolProp name="ForeachController.useSeparator">false</boolProp>
            <stringProp name="ForeachController.startIndex">0</stringProp>
            <stringProp name="ForeachController.endIndex">${schPEscount}</stringProp>
          </ForeachController>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create_a_Org-Product_Entitlement_in_an_org" enabled="true">
              <stringProp name="IncludeController.includepath">Create_a_Org-Product_Entitlement_in_an_org.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for entitlement [10-15 sec]" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="set up user" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>100.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">setupuserlist.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">extuserid,orgid,productcode</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_institution.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Setting_up_the_user" enabled="true">
            <stringProp name="IncludeController.includepath">Setting_up_the_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CoreDataTemplate_stdCat _1011_Step 1" enabled="false"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">1011_std_template.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">stdCat,classType,category,noOfAssignmentsInClass,20LOsCount,30LOsCount,50LOsCount,noOfStudentsInClass,noOfLockRulesInClass,50LOsLockRuleCount,100LOsLockRuleCount,150LOsLockRuleCount,customGradingCount</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilenameTch" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilenameTch</stringProp>
                <stringProp name="Argument.value">scenario_tch_asnmt_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="outputCsvFilenameStd" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilenameStd</stringProp>
                <stringProp name="Argument.value">student_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="assignedPathList" elementType="Argument">
                <stringProp name="Argument.name">assignedPathList</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="title" elementType="Argument">
                <stringProp name="Argument.name">title</stringProp>
                <stringProp name="Argument.value">default gradebook 1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gradebook_id" elementType="Argument">
                <stringProp name="Argument.name">gradebook_id</stringProp>
                <stringProp name="Argument.value">default-gradebook</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="outputCsvFilenameStd_1011" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilenameStd_1011</stringProp>
                <stringProp name="Argument.value">1011_student_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler (student extuserids)" enabled="true">
            <stringProp name="BeanShellSampler.query">import java.util.Date;
prefix1 = vars.get(&quot;stdCat&quot;);
Date date = new Date();
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;

FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameStd_1011&quot;), true);

String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;

stdCount = ${noOfStudentsInClass};
studentextuserid = &quot;std&quot; + &quot;_&quot; + prefix1 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

for (int i = 0; i &lt; stdCount; i++) {
temp= studentextuserid + &quot;_&quot; +  (i+1);
vars.put(&quot;temp&quot;,temp);
vars.put(&quot;studentextuserid_&quot; +  (i+1), temp);
out.write(vars.get(&quot;temp&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;stdCat&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(LineSEPARATOR.getBytes());
}

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler ( Extract School List)" enabled="true">
            <stringProp name="BeanShellSampler.query">String[] schlist = {${__evalVar(${stdCat}_spacecode)}};  
String[] orglist = {${__evalVar(${stdCat}_orgId)}}; 

for (int i = 0; i &lt; schlist.length; i++) {
    vars.put(&quot;sch_spacecode&quot; + (i + 1), schlist[i]);
}

//vars.put(&quot;productcode&quot;, stringArray[0]);
prefix1 = schlist.length;
  vars.put(&quot;schcount&quot;,&quot;prefix1&quot;);

for (int i = 0; i &lt; orglist.length; i++) {
    vars.put(&quot;sch_orgid&quot; + (i + 1), orglist[i]);
}
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
            <stringProp name="ForeachController.inputVal">sch_spacecode</stringProp>
            <stringProp name="ForeachController.returnVal">spacecode</stringProp>
            <boolProp name="ForeachController.useSeparator">false</boolProp>
            <stringProp name="ForeachController.startIndex">0</stringProp>
            <stringProp name="ForeachController.endIndex">10</stringProp>
          </ForeachController>
          <hashTree>
            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
              <stringProp name="CounterConfig.start">1</stringProp>
              <stringProp name="CounterConfig.end"></stringProp>
              <stringProp name="CounterConfig.incr">1</stringProp>
              <stringProp name="CounterConfig.name">orgCounter</stringProp>
              <stringProp name="CounterConfig.format"></stringProp>
              <boolProp name="CounterConfig.per_user">true</boolProp>
              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
            </CounterConfig>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="teacher_name" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;category&quot;);
prefix5 = vars.get(&quot;spacecode&quot;);
extuserid = &quot;tch&quot; + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix5;
vars.put(&quot;extuserid&quot;, extuserid);

//classname = &quot;class&quot; + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
//vars.put(&quot;classname&quot;, classname);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="true">
              <stringProp name="IncludeController.includepath">Join_a_space_with_space_code.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [60-65 sec]" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">60000</stringProp>
                <stringProp name="RandomTimer.range">5000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
              <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
              <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler (Class name)" enabled="true">
              <stringProp name="BeanShellSampler.query">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;category&quot;);
prefix5 = vars.get(&quot;spacecode&quot;);

classname = &quot;class&quot; + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix5;
vars.put(&quot;classname&quot;, classname);


prefix8 = vars.get(&quot;orgCounter&quot;);
vars.put(&quot;prefix8&quot;, prefix8);
prefix7 = vars.get(&quot;sch_orgid&quot; +  prefix8);
vars.put(&quot;orgId&quot;, prefix7);
vars.put(&quot;orgid&quot;, prefix7);

prefix9  = vars.get(prefix7 +  &quot;_ProductCodes&quot;) ;

vars.put(&quot;schl_classProductCodes&quot;, prefix9);


</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
              <stringProp name="IfController.condition">&quot;${classType}&quot; == &quot;normal&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class" enabled="true">
                <stringProp name="IncludeController.includepath">create_new_instructor_led_class.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
              <stringProp name="IfController.condition">&quot;${classType}&quot; == &quot;context&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class - CONTEXT" enabled="true">
                <stringProp name="IncludeController.includepath">create_new_instructor_led_class_context.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate multi products with a class" enabled="true">
              <stringProp name="IncludeController.includepath">associate_multi_products_with_class_schl_classProductCodes.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [420-450]" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">720000</stringProp>
                <stringProp name="RandomTimer.range">30000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x assignments" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfAssignmentsInClass}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end">${noOfAssignmentsInClass}</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">assignmentCount</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler - asgnmt itemcodes" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544524003551/1544524304922/1544524359136&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544524003551/1544524012478/1544524057691&quot;,&quot;1544524003551/1544524012478/1544524030068&quot;,&quot;1544525043137/1544525058289/1544525097148&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544525043137/1544525058289/1544525137957&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1544524003551/1544524304922/1544524324762&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544525043137/1544525058289/1544525090848&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1544524003551/1544524012478/1544524071582&quot;,&quot;1544524003551/1544524304922/1544524341184&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544525043137/1544525058289/1544525125172&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1544524003551/1544524304922/1544524313700&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544524003551/1544524012478/1544524084276&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544524003551/1544524304922/1544524387792&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1544524003551/1544524012478/1544524099346&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1544525043137/1544525058289/1544525114886&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544524003551/1544524012478/1544524044427&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544524003551/1544524304922/1544524376121&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler -asgmt productcode" enabled="true">
                <stringProp name="BeanShellSampler.query">//String[] stringArray = {${__evalVar(${category}_Assignment)}};
String[] stringArray = {${schl_classProductCodes}};
int randomIndex = (int) (Math.random() * stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
                <intProp name="ThroughputController.style">1</intProp>
                <boolProp name="ThroughputController.perThread">true</boolProp>
                <stringProp name="ThroughputController.maxThroughput">${20LOsCount}</stringProp>
                <stringProp name="ThroughputController.percentThroughput">${20LOsCount}</stringProp>
              </ThroughputController>
              <hashTree>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + &quot;20LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_20LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
                <intProp name="ThroughputController.style">1</intProp>
                <boolProp name="ThroughputController.perThread">true</boolProp>
                <stringProp name="ThroughputController.maxThroughput">${30LOsCount}</stringProp>
                <stringProp name="ThroughputController.percentThroughput">${30LOsCount}</stringProp>
              </ThroughputController>
              <hashTree>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + &quot;30LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_30LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
                <intProp name="ThroughputController.style">1</intProp>
                <boolProp name="ThroughputController.perThread">true</boolProp>
                <stringProp name="ThroughputController.maxThroughput">${50LOsCount}</stringProp>
                <stringProp name="ThroughputController.percentThroughput">${50LOsCount}</stringProp>
              </ThroughputController>
              <hashTree>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + &quot;50LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_50LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="false">
                <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;H6&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
                  <intProp name="ThroughputController.style">0</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <stringProp name="ThroughputController.maxThroughput">${__evalVar(${category}_100LOsCount)}</stringProp>
                  <stringProp name="ThroughputController.percentThroughput">${20LOsPercentage}</stringProp>
                </ThroughputController>
                <hashTree>
                  <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                    <stringProp name="BeanShellSampler.query">String[] stringArray = {&quot;perf35_400lo_1&quot;,&quot;perf35_500lo_1&quot;,&quot;perf38_300lo_1&quot;,&quot;perf38_630lo_1&quot;,&quot;perf38_630lo_2&quot;,&quot;perf40_630lo_1&quot;,&quot;perf40_630lo_2&quot;};

int randomIndex = (int) (Math.random() * stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
                    <stringProp name="BeanShellSampler.filename"></stringProp>
                    <stringProp name="BeanShellSampler.parameters"></stringProp>
                    <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                  </BeanShellSampler>
                  <hashTree/>
                  <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                    <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1544524003551/1544524012478/1544524030068&quot;,&quot;1544524003551/1544524012478/1544524044427&quot;,&quot;1544524003551/1544524012478/1544524057691&quot;,&quot;1544524003551/1544524012478/1544524071582&quot;,&quot;1544524003551/1544524012478/1544524084276&quot;,&quot;1544524003551/1544524012478/1544524099346&quot;,&quot;1544524003551/1544524304922/1544524313700&quot;,&quot;1544524003551/1544524304922/1544524324762&quot;,&quot;1544524003551/1544524304922/1544524341184&quot;,&quot;1544524003551/1544524304922/1544524359136&quot;,&quot;1544524003551/1544524304922/1544524376121&quot;,&quot;1544524003551/1544524304922/1544524387792&quot;,&quot;1544525043137/1544525058289/1544525090848&quot;,&quot;1544525043137/1544525058289/1544525097148&quot;,&quot;1544525043137/1544525058289/1544525114886&quot;,&quot;1544525043137/1544525058289/1544525125172&quot;,&quot;1544525043137/1544525058289/1544525137957&quot;,&quot;1544525043137/1544525058289/1544525143762&quot;,&quot;1544525043137/1544525159358/1544525175677&quot;,&quot;1544525043137/1544525159358/1544525192972&quot;,&quot;1544525043137/1544525159358/1544525217177&quot;,&quot;1544525043137/1544525159358/1544525239184&quot;,&quot;1544525043137/1544525159358/1544525246748&quot;,&quot;1544525043137/1544525159358/1544525263160&quot;,&quot;1544525043137/1544525280855/1544525289279&quot;,&quot;1544525590768/1544525595533/1544525611432&quot;,&quot;1544525590768/1544525595533/1544525627465&quot;,&quot;1544525590768/1544525595533/1544525635696&quot;,&quot;1544525590768/1544525595533/1544525649026&quot;,&quot;1544525590768/1544525595533/1544525663048&quot;,&quot;1544525590768/1544525595533/1544525679427&quot;,&quot;1544525590768/1544525683364/1544525709799&quot;,&quot;1544525590768/1544525683364/1544525720457&quot;,&quot;1544525590768/1544525683364/1544525729515&quot;,&quot;1544525590768/1544525683364/1544525734676&quot;,&quot;1544525590768/1544525683364/1544525756801&quot;,&quot;1544525590768/1544525683364/1544525778291&quot;,&quot;1544526345845/1544526589100/1544526606750&quot;,&quot;1544526345845/1544526589100/1544526610825&quot;,&quot;1544526345845/1544526589100/1544526623799&quot;,&quot;1544526345845/1544526589100/1544526638110&quot;,&quot;1544526345845/1544526589100/1544526644717&quot;,&quot;1544526345845/1544526589100/1544526657285&quot;,&quot;1544526345845/1544526671965/1544526688230&quot;,&quot;1544526345845/1544526671965/1544526695320&quot;,&quot;1544526345845/1544526671965/1544526710051&quot;,&quot;1544526345845/1544526671965/1544526721801&quot;,&quot;1544526345845/1544526671965/1544526728620&quot;,&quot;1544526345845/1544526671965/1544526763389&quot;,&quot;1544526345845/1544526961740/1544526980657&quot;,&quot;1544526345845/1544526961740/1544526994099&quot;,&quot;1544526345845/1544526961740/1544527008225&quot;,&quot;1544526345845/1544528319371/1544528334775&quot;,&quot;1544526345845/1544528319371/1544528345283&quot;,&quot;1544526345845/1544528319371/1544528367998&quot;,&quot;1544591089661/1544591099675/1544591165699&quot;,&quot;1544591089661/1544591099675/1544591181584&quot;,&quot;1544591089661/1544591099675/1544591198772&quot;,&quot;1544591089661/1544591099675/1544591219876&quot;,&quot;1544591089661/1544591099675/1544591237488&quot;,&quot;1544591089661/1544591099675/1544591247402&quot;,&quot;1544591089661/1544591260222/1544591284840&quot;,&quot;1544591089661/1544591260222/1544591295680&quot;,&quot;1544591089661/1544591260222/1544591320423&quot;,&quot;1544591089661/1544591260222/1544591334581&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                    <stringProp name="BeanShellSampler.filename"></stringProp>
                    <stringProp name="BeanShellSampler.parameters"></stringProp>
                    <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                  </BeanShellSampler>
                  <hashTree/>
                  <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <boolProp name="resetInterpreter">false</boolProp>
                    <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + &quot;100LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
                  </BeanShellPreProcessor>
                  <hashTree/>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                    <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_100LOs.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
                  <intProp name="ThroughputController.style">0</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <stringProp name="ThroughputController.maxThroughput">${__evalVar(${category}_300LOsCount)}</stringProp>
                  <stringProp name="ThroughputController.percentThroughput">${20LOsPercentage}</stringProp>
                </ThroughputController>
                <hashTree>
                  <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                    <stringProp name="BeanShellSampler.query">String[] stringArray = {&quot;perf35_500lo_1&quot;,&quot;perf38_630lo_1&quot;,&quot;perf38_630lo_2&quot;,&quot;perf40_630lo_1&quot;,&quot;perf40_630lo_2&quot;};

int randomIndex = (int) (Math.random() * stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
                    <stringProp name="BeanShellSampler.filename"></stringProp>
                    <stringProp name="BeanShellSampler.parameters"></stringProp>
                    <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                  </BeanShellSampler>
                  <hashTree/>
                  <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                    <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1544524003551/1544524012478/1544524030068&quot;,&quot;1544524003551/1544524012478/1544524044427&quot;,&quot;1544524003551/1544524012478/1544524057691&quot;,&quot;1544524003551/1544524012478/1544524071582&quot;,&quot;1544524003551/1544524012478/1544524084276&quot;,&quot;1544524003551/1544524012478/1544524099346&quot;,&quot;1544524003551/1544524304922/1544524313700&quot;,&quot;1544524003551/1544524304922/1544524324762&quot;,&quot;1544524003551/1544524304922/1544524341184&quot;,&quot;1544524003551/1544524304922/1544524359136&quot;,&quot;1544524003551/1544524304922/1544524376121&quot;,&quot;1544524003551/1544524304922/1544524387792&quot;,&quot;1544525043137/1544525058289/1544525090848&quot;,&quot;1544525043137/1544525058289/1544525097148&quot;,&quot;1544525043137/1544525058289/1544525114886&quot;,&quot;1544525043137/1544525058289/1544525125172&quot;,&quot;1544525043137/1544525058289/1544525137957&quot;,&quot;1544525043137/1544525058289/1544525143762&quot;,&quot;1544525043137/1544525159358/1544525175677&quot;,&quot;1544525043137/1544525159358/1544525192972&quot;,&quot;1544525043137/1544525159358/1544525217177&quot;,&quot;1544525043137/1544525159358/1544525239184&quot;,&quot;1544525043137/1544525159358/1544525246748&quot;,&quot;1544525043137/1544525159358/1544525263160&quot;,&quot;1544525043137/1544525280855/1544525289279&quot;,&quot;1544525590768/1544525595533/1544525611432&quot;,&quot;1544525590768/1544525595533/1544525627465&quot;,&quot;1544525590768/1544525595533/1544525635696&quot;,&quot;1544525590768/1544525595533/1544525649026&quot;,&quot;1544525590768/1544525595533/1544525663048&quot;,&quot;1544525590768/1544525595533/1544525679427&quot;,&quot;1544525590768/1544525683364/1544525709799&quot;,&quot;1544525590768/1544525683364/1544525720457&quot;,&quot;1544525590768/1544525683364/1544525729515&quot;,&quot;1544525590768/1544525683364/1544525734676&quot;,&quot;1544525590768/1544525683364/1544525756801&quot;,&quot;1544525590768/1544525683364/1544525778291&quot;,&quot;1544526345845/1544526589100/1544526606750&quot;,&quot;1544526345845/1544526589100/1544526610825&quot;,&quot;1544526345845/1544526589100/1544526623799&quot;,&quot;1544526345845/1544526589100/1544526638110&quot;,&quot;1544526345845/1544526589100/1544526644717&quot;,&quot;1544526345845/1544526589100/1544526657285&quot;,&quot;1544526345845/1544526671965/1544526688230&quot;,&quot;1544526345845/1544526671965/1544526695320&quot;,&quot;1544526345845/1544526671965/1544526710051&quot;,&quot;1544526345845/1544526671965/1544526721801&quot;,&quot;1544526345845/1544526671965/1544526728620&quot;,&quot;1544526345845/1544526671965/1544526763389&quot;,&quot;1544526345845/1544526961740/1544526980657&quot;,&quot;1544526345845/1544526961740/1544526994099&quot;,&quot;1544526345845/1544526961740/1544527008225&quot;,&quot;1544526345845/1544528319371/1544528334775&quot;,&quot;1544526345845/1544528319371/1544528345283&quot;,&quot;1544526345845/1544528319371/1544528367998&quot;,&quot;1544591089661/1544591099675/1544591165699&quot;,&quot;1544591089661/1544591099675/1544591181584&quot;,&quot;1544591089661/1544591099675/1544591198772&quot;,&quot;1544591089661/1544591099675/1544591219876&quot;,&quot;1544591089661/1544591099675/1544591237488&quot;,&quot;1544591089661/1544591099675/1544591247402&quot;,&quot;1544591089661/1544591260222/1544591284840&quot;,&quot;1544591089661/1544591260222/1544591295680&quot;,&quot;1544591089661/1544591260222/1544591320423&quot;,&quot;1544591089661/1544591260222/1544591334581&quot;,&quot;1544591089661/1544591260222/1544591341221&quot;,&quot;1544591089661/1544591260222/1544591363137&quot;,&quot;1544591089661/1544591364773/1544591392809&quot;,&quot;1544591089661/1544591412698/1544591428190&quot;,&quot;1544591089661/1544591412698/1544591439057&quot;,&quot;1544591089661/1544591412698/1544591455780&quot;,&quot;1544591089661/1544591602655/1544591636888&quot;,&quot;1544591089661/1544591602655/1544591649137&quot;,&quot;1544591089661/1544591602655/1544591669971&quot;,&quot;1544591751639/1544591756584/1544591786410&quot;,&quot;1544591751639/1544591756584/1544591792950&quot;,&quot;1544591751639/1544591756584/1544591814105&quot;,&quot;1544591751639/1544591756584/1544591826125&quot;,&quot;1544591751639/1544591756584/1544591842867&quot;,&quot;1544591751639/1544591756584/1544591852005&quot;,&quot;1544591751639/1544591859950/1544591889129&quot;,&quot;1544591751639/1544591859950/1544591895035&quot;,&quot;1544591751639/1544591859950/1544591913490&quot;,&quot;1544591751639/1544591859950/1544591923488&quot;,&quot;1544591751639/1544591937229/1544591951092&quot;,&quot;1544591751639/1544591989858/1544592010989&quot;,&quot;1544591751639/1544591989858/1544592017149&quot;,&quot;1544591751639/1544591989858/1544592034736&quot;,&quot;1544591751639/1544592145731/1544592165309&quot;,&quot;1544591751639/1544592145731/1544592176780&quot;,&quot;1544591751639/1544592145731/1544592194540&quot;,&quot;1544592286221/1544592291887/1544592314873&quot;,&quot;1544592286221/1544592291887/1544592322911&quot;,&quot;1544592286221/1544592291887/1544592333414&quot;,&quot;1544592286221/1544592291887/1544592347743&quot;,&quot;1544592286221/1544592291887/1544592363784&quot;,&quot;1544592286221/1544592291887/1544592370486&quot;,&quot;1544592286221/1544592379241/1544592404760&quot;,&quot;1544592286221/1544592379241/1544592415158&quot;,&quot;1544592286221/1544592379241/1544592422449&quot;,&quot;1544592286221/1544592379241/1544592438186&quot;,&quot;1544592286221/1544592379241/1544592448263&quot;,&quot;1544592286221/1544592379241/1544592466092&quot;,&quot;1544592286221/1544592474205/1544592491253&quot;,&quot;1544592286221/1544592520233/1544592540334&quot;,&quot;1544592286221/1544592520233/1544592555974&quot;,&quot;1544592286221/1544592520233/1544592561671&quot;,&quot;1544592286221/1544592623523/1544592648386&quot;,&quot;1544592286221/1544592623523/1544592658543&quot;,&quot;1544592286221/1544592623523/1544592671565&quot;,&quot;1544592857014/1544592865722/1544593053271&quot;,&quot;1544592857014/1544592865722/1544593072380&quot;,&quot;1544592857014/1544592865722/1544593079694&quot;,&quot;1544592857014/1544592865722/1544593093552&quot;,&quot;1544592857014/1544592865722/1544593104748&quot;,&quot;1544592857014/1544592865722/1544593123201&quot;,&quot;1544592857014/1544593139545/1544593173865&quot;,&quot;1544592857014/1544593139545/1544593187008&quot;,&quot;1544592857014/1544593139545/1544593454057&quot;,&quot;1544592857014/1544593139545/1544593471128&quot;,&quot;1544592857014/1544593139545/1544593476327&quot;,&quot;1544592857014/1544593139545/1544593488247&quot;,&quot;1544592857014/1544593529004/1544593551477&quot;,&quot;1544592857014/1544593585947/1544593606215&quot;,&quot;1544592857014/1544593585947/1544593620647&quot;,&quot;1544592857014/1544593585947/1544593632079&quot;,&quot;1544592857014/1544593703192/1544593728070&quot;,&quot;1544592857014/1544593703192/1544593743725&quot;,&quot;1544592857014/1544593703192/1544593752239&quot;,&quot;1544593830881/1544593842258/1544593874472&quot;,&quot;1544593830881/1544593842258/1544593889640&quot;,&quot;1544593830881/1544593842258/1544593905062&quot;,&quot;1544593830881/1544593842258/1544593925051&quot;,&quot;1544593830881/1544593842258/1544593932560&quot;,&quot;1544593830881/1544593842258/1544593949312&quot;,&quot;1544593830881/1544593964252/1544594078882&quot;,&quot;1544593830881/1544593964252/1544594102416&quot;,&quot;1544593830881/1544593964252/1544594113782&quot;,&quot;1544593830881/1544593964252/1544594135462&quot;,&quot;1544593830881/1544593964252/1544594177257&quot;,&quot;1544593830881/1544593964252/1544594194047&quot;,&quot;1544593830881/1544596248781/1544596271349&quot;,&quot;1544593830881/1544596291616/1544596322099&quot;,&quot;1544593830881/1544596291616/1544596327463&quot;,&quot;1544593830881/1544596291616/1544596347700&quot;,&quot;1544593830881/1544596494652/1544596513093&quot;,&quot;1544593830881/1544596494652/1544596529922&quot;,&quot;1544593830881/1544596494652/1544596545929&quot;,&quot;1544596644314/1544596678647/1544596711546&quot;,&quot;1544596644314/1544596678647/1544596731689&quot;,&quot;1544596644314/1544596678647/1544596745950&quot;,&quot;1544596644314/1544596678647/1544596761923&quot;,&quot;1544596644314/1544596678647/1544596768254&quot;,&quot;1544596644314/1544596678647/1544596792897&quot;,&quot;1544596644314/1544596802487/1544596845016&quot;,&quot;1544596644314/1544596802487/1544596858389&quot;,&quot;1544596644314/1544596802487/1544596877787&quot;,&quot;1544596644314/1544596802487/1544596890399&quot;,&quot;1544596644314/1544596802487/1544596904838&quot;,&quot;1544596644314/1544596802487/1544596921860&quot;,&quot;1544596644314/1544597008306/1544597032165&quot;,&quot;1544596644314/1544597091060/1544597104557&quot;,&quot;1544596644314/1544597091060/1544597121860&quot;,&quot;1544596644314/1544597091060/1544597149347&quot;,&quot;1544596644314/1544597220792/1544597245750&quot;,&quot;1544596644314/1544597220792/1544597262426&quot;,&quot;1544596644314/1544597220792/1544597275965&quot;,&quot;1676462274557/1676462274558/1676462274559&quot;,&quot;1676462274557/1676462274558/1676462274560&quot;,&quot;1676462274557/1676462274558/1676462274561&quot;,&quot;1676462274557/1676462274558/1676462274562&quot;,&quot;1676462274557/1676462274558/1676462274563&quot;,&quot;1676462274557/1676462274558/1676462274564&quot;,&quot;1676462274557/1676462274558/1676462274565&quot;,&quot;1676462274557/1676462274558/1676462274566&quot;,&quot;1676462274557/1676462274558/1676462274567&quot;,&quot;1676462274557/1676462274558/1676462274568&quot;,&quot;1676462274557/1676462274558/1676462274569&quot;,&quot;1676462274557/1676462274558/1676462274570&quot;,&quot;1676462274557/1676462274558/1676462274571&quot;,&quot;1676462274557/1676462274558/1676462274572&quot;,&quot;1676462274557/1676462274558/1676462274573&quot;,&quot;1676462274557/1676462274558/1676462274574&quot;,&quot;1676462274557/1676462274558/1676462274575&quot;,&quot;1676462274557/1676462274558/1676462274576&quot;,&quot;1676462274557/1676462274558/1676462274577&quot;,&quot;1676462274557/1676462274558/1676462274578&quot;,&quot;1676462274557/1676462274558/1676462274579&quot;,&quot;1676462274557/1676462274558/1676462274580&quot;,&quot;1676462274557/1676462274558/1676462274581&quot;,&quot;1676462274557/1676462274558/1676462274582&quot;,&quot;1676462274557/1676462274558/1676462274583&quot;,&quot;1676462274557/1676462274558/1676462274584&quot;,&quot;1676462274557/1676462274558/1676462274585&quot;,&quot;1676462274557/1676462274558/1676462274586&quot;,&quot;1676462274557/1676462274558/1676462274587&quot;,&quot;1676462274557/1676462274558/1676462274588&quot;,&quot;1676462274557/1676462274558/1676462274589&quot;,&quot;1676462274557/1676462274558/1676462274590&quot;,&quot;1676462274557/1676462274558/1676462274591&quot;,&quot;1676462274557/1676462274558/1676462274592&quot;,&quot;1676462274557/1676462274558/1676462274593&quot;,&quot;1676462274557/1676462274558/1676462274594&quot;,&quot;1676462274557/1676462274558/1676462274595&quot;,&quot;1676462274557/1676462274558/1676462274596&quot;,&quot;1676462274557/1676462274558/1676462274597&quot;,&quot;1676462274557/1676462274558/1676462274598&quot;,&quot;1676462274557/1676462274558/1676462274599&quot;,&quot;1676462274557/1676462274558/1676462274600&quot;,&quot;1676462274557/1676462274558/1676462274601&quot;,&quot;1676462274557/1676462274558/1676462274602&quot;,&quot;1676462274557/1676462274558/1676462274603&quot;,&quot;1676462274557/1676462274558/1676462274604&quot;,&quot;1676462274557/1676462274558/1676462274605&quot;,&quot;1676462274557/1676462274558/1676462274606&quot;,&quot;1676462274557/1676462274558/1676462274607&quot;,&quot;1676462274557/1676462274558/1676462274608&quot;,&quot;1676462274557/1676462274558/1676462274609&quot;,&quot;1676462274557/1676462274558/1676462274610&quot;,&quot;1676462274557/1676462274558/1676462274611&quot;,&quot;1676462274557/1676462274558/1676462274612&quot;,&quot;1676462274557/1676462274558/1676462274613&quot;,&quot;1676462274557/1676462274558/1676462274614&quot;,&quot;1676462274557/1676462274558/1676462274615&quot;,&quot;1676462274557/1676462274558/1676462274616&quot;,&quot;1676462274557/1676462274558/1676462274617&quot;,&quot;1676462274557/1676462274558/1676462274618&quot;,&quot;1676462274557/1676462274558/1676462274619&quot;,&quot;1676462274557/1676462274558/1676462274620&quot;,&quot;1676462274557/1676462274558/1676462274621&quot;,&quot;1676462274557/1676462274558/1676462274622&quot;,&quot;1676462274557/1676462274558/1676462274623&quot;,&quot;1676462274557/1676462274558/1676462274624&quot;,&quot;1676462274557/1676462274558/1676462274625&quot;,&quot;1676462274557/1676462274558/1676462274626&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1676462274659/1676462274660/1676462274671&quot;,&quot;1676462274659/1676462274660/1676462274672&quot;,&quot;1676462274659/1676462274660/1676462274673&quot;,&quot;1676462274659/1676462274660/1676462274674&quot;,&quot;1676462274659/1676462274660/1676462274675&quot;,&quot;1676462274659/1676462274660/1676462274676&quot;,&quot;1676462274659/1676462274660/1676462274677&quot;,&quot;1676462274659/1676462274660/1676462274678&quot;,&quot;1676462274659/1676462274660/1676462274679&quot;,&quot;1676462274659/1676462274660/1676462274680&quot;,&quot;1676462274659/1676462274660/1676462274681&quot;,&quot;1676462274659/1676462274660/1676462274682&quot;,&quot;1676462274659/1676462274660/1676462274683&quot;,&quot;1676462274659/1676462274660/1676462274684&quot;,&quot;1676462274659/1676462274660/1676462274685&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                    <stringProp name="BeanShellSampler.filename"></stringProp>
                    <stringProp name="BeanShellSampler.parameters"></stringProp>
                    <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                  </BeanShellSampler>
                  <hashTree/>
                  <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <boolProp name="resetInterpreter">false</boolProp>
                    <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + &quot;300LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
                  </BeanShellPreProcessor>
                  <hashTree/>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                    <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_300LOs.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
                  <intProp name="ThroughputController.style">0</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <stringProp name="ThroughputController.maxThroughput">${__evalVar(${category}_500LOsCount)}</stringProp>
                  <stringProp name="ThroughputController.percentThroughput">${20LOsPercentage}</stringProp>
                </ThroughputController>
                <hashTree>
                  <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                    <stringProp name="BeanShellSampler.query">String[] stringArray = {&quot;perf38_630lo_1&quot;,&quot;perf38_630lo_2&quot;,&quot;perf40_630lo_1&quot;,&quot;perf40_630lo_2&quot;};

int randomIndex = (int) (Math.random() * stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
                    <stringProp name="BeanShellSampler.filename"></stringProp>
                    <stringProp name="BeanShellSampler.parameters"></stringProp>
                    <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                  </BeanShellSampler>
                  <hashTree/>
                  <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                    <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1544524003551/1544524012478/1544524030068&quot;,&quot;1544524003551/1544524012478/1544524044427&quot;,&quot;1544524003551/1544524012478/1544524057691&quot;,&quot;1544524003551/1544524012478/1544524071582&quot;,&quot;1544524003551/1544524012478/1544524084276&quot;,&quot;1544524003551/1544524012478/1544524099346&quot;,&quot;1544524003551/1544524304922/1544524313700&quot;,&quot;1544524003551/1544524304922/1544524324762&quot;,&quot;1544524003551/1544524304922/1544524341184&quot;,&quot;1544524003551/1544524304922/1544524359136&quot;,&quot;1544524003551/1544524304922/1544524376121&quot;,&quot;1544524003551/1544524304922/1544524387792&quot;,&quot;1544525043137/1544525058289/1544525090848&quot;,&quot;1544525043137/1544525058289/1544525097148&quot;,&quot;1544525043137/1544525058289/1544525114886&quot;,&quot;1544525043137/1544525058289/1544525125172&quot;,&quot;1544525043137/1544525058289/1544525137957&quot;,&quot;1544525043137/1544525058289/1544525143762&quot;,&quot;1544525043137/1544525159358/1544525175677&quot;,&quot;1544525043137/1544525159358/1544525192972&quot;,&quot;1544525043137/1544525159358/1544525217177&quot;,&quot;1544525043137/1544525159358/1544525239184&quot;,&quot;1544525043137/1544525159358/1544525246748&quot;,&quot;1544525043137/1544525159358/1544525263160&quot;,&quot;1544525043137/1544525280855/1544525289279&quot;,&quot;1544525590768/1544525595533/1544525611432&quot;,&quot;1544525590768/1544525595533/1544525627465&quot;,&quot;1544525590768/1544525595533/1544525635696&quot;,&quot;1544525590768/1544525595533/1544525649026&quot;,&quot;1544525590768/1544525595533/1544525663048&quot;,&quot;1544525590768/1544525595533/1544525679427&quot;,&quot;1544525590768/1544525683364/1544525709799&quot;,&quot;1544525590768/1544525683364/1544525720457&quot;,&quot;1544525590768/1544525683364/1544525729515&quot;,&quot;1544525590768/1544525683364/1544525734676&quot;,&quot;1544525590768/1544525683364/1544525756801&quot;,&quot;1544525590768/1544525683364/1544525778291&quot;,&quot;1544526345845/1544526589100/1544526606750&quot;,&quot;1544526345845/1544526589100/1544526610825&quot;,&quot;1544526345845/1544526589100/1544526623799&quot;,&quot;1544526345845/1544526589100/1544526638110&quot;,&quot;1544526345845/1544526589100/1544526644717&quot;,&quot;1544526345845/1544526589100/1544526657285&quot;,&quot;1544526345845/1544526671965/1544526688230&quot;,&quot;1544526345845/1544526671965/1544526695320&quot;,&quot;1544526345845/1544526671965/1544526710051&quot;,&quot;1544526345845/1544526671965/1544526721801&quot;,&quot;1544526345845/1544526671965/1544526728620&quot;,&quot;1544526345845/1544526671965/1544526763389&quot;,&quot;1544526345845/1544526961740/1544526980657&quot;,&quot;1544526345845/1544526961740/1544526994099&quot;,&quot;1544526345845/1544526961740/1544527008225&quot;,&quot;1544526345845/1544528319371/1544528334775&quot;,&quot;1544526345845/1544528319371/1544528345283&quot;,&quot;1544526345845/1544528319371/1544528367998&quot;,&quot;1544591089661/1544591099675/1544591165699&quot;,&quot;1544591089661/1544591099675/1544591181584&quot;,&quot;1544591089661/1544591099675/1544591198772&quot;,&quot;1544591089661/1544591099675/1544591219876&quot;,&quot;1544591089661/1544591099675/1544591237488&quot;,&quot;1544591089661/1544591099675/1544591247402&quot;,&quot;1544591089661/1544591260222/1544591284840&quot;,&quot;1544591089661/1544591260222/1544591295680&quot;,&quot;1544591089661/1544591260222/1544591320423&quot;,&quot;1544591089661/1544591260222/1544591334581&quot;,&quot;1544591089661/1544591260222/1544591341221&quot;,&quot;1544591089661/1544591260222/1544591363137&quot;,&quot;1544591089661/1544591364773/1544591392809&quot;,&quot;1544591089661/1544591412698/1544591428190&quot;,&quot;1544591089661/1544591412698/1544591439057&quot;,&quot;1544591089661/1544591412698/1544591455780&quot;,&quot;1544591089661/1544591602655/1544591636888&quot;,&quot;1544591089661/1544591602655/1544591649137&quot;,&quot;1544591089661/1544591602655/1544591669971&quot;,&quot;1544591751639/1544591756584/1544591786410&quot;,&quot;1544591751639/1544591756584/1544591792950&quot;,&quot;1544591751639/1544591756584/1544591814105&quot;,&quot;1544591751639/1544591756584/1544591826125&quot;,&quot;1544591751639/1544591756584/1544591842867&quot;,&quot;1544591751639/1544591756584/1544591852005&quot;,&quot;1544591751639/1544591859950/1544591889129&quot;,&quot;1544591751639/1544591859950/1544591895035&quot;,&quot;1544591751639/1544591859950/1544591913490&quot;,&quot;1544591751639/1544591859950/1544591923488&quot;,&quot;1544591751639/1544591937229/1544591951092&quot;,&quot;1544591751639/1544591989858/1544592010989&quot;,&quot;1544591751639/1544591989858/1544592017149&quot;,&quot;1544591751639/1544591989858/1544592034736&quot;,&quot;1544591751639/1544592145731/1544592165309&quot;,&quot;1544591751639/1544592145731/1544592176780&quot;,&quot;1544591751639/1544592145731/1544592194540&quot;,&quot;1544592286221/1544592291887/1544592314873&quot;,&quot;1544592286221/1544592291887/1544592322911&quot;,&quot;1544592286221/1544592291887/1544592333414&quot;,&quot;1544592286221/1544592291887/1544592347743&quot;,&quot;1544592286221/1544592291887/1544592363784&quot;,&quot;1544592286221/1544592291887/1544592370486&quot;,&quot;1544592286221/1544592379241/1544592404760&quot;,&quot;1544592286221/1544592379241/1544592415158&quot;,&quot;1544592286221/1544592379241/1544592422449&quot;,&quot;1544592286221/1544592379241/1544592438186&quot;,&quot;1544592286221/1544592379241/1544592448263&quot;,&quot;1544592286221/1544592379241/1544592466092&quot;,&quot;1544592286221/1544592474205/1544592491253&quot;,&quot;1544592286221/1544592520233/1544592540334&quot;,&quot;1544592286221/1544592520233/1544592555974&quot;,&quot;1544592286221/1544592520233/1544592561671&quot;,&quot;1544592286221/1544592623523/1544592648386&quot;,&quot;1544592286221/1544592623523/1544592658543&quot;,&quot;1544592286221/1544592623523/1544592671565&quot;,&quot;1544592857014/1544592865722/1544593053271&quot;,&quot;1544592857014/1544592865722/1544593072380&quot;,&quot;1544592857014/1544592865722/1544593079694&quot;,&quot;1544592857014/1544592865722/1544593093552&quot;,&quot;1544592857014/1544592865722/1544593104748&quot;,&quot;1544592857014/1544592865722/1544593123201&quot;,&quot;1544592857014/1544593139545/1544593173865&quot;,&quot;1544592857014/1544593139545/1544593187008&quot;,&quot;1544592857014/1544593139545/1544593454057&quot;,&quot;1544592857014/1544593139545/1544593471128&quot;,&quot;1544592857014/1544593139545/1544593476327&quot;,&quot;1544592857014/1544593139545/1544593488247&quot;,&quot;1544592857014/1544593529004/1544593551477&quot;,&quot;1544592857014/1544593585947/1544593606215&quot;,&quot;1544592857014/1544593585947/1544593620647&quot;,&quot;1544592857014/1544593585947/1544593632079&quot;,&quot;1544592857014/1544593703192/1544593728070&quot;,&quot;1544592857014/1544593703192/1544593743725&quot;,&quot;1544592857014/1544593703192/1544593752239&quot;,&quot;1544593830881/1544593842258/1544593874472&quot;,&quot;1544593830881/1544593842258/1544593889640&quot;,&quot;1544593830881/1544593842258/1544593905062&quot;,&quot;1544593830881/1544593842258/1544593925051&quot;,&quot;1544593830881/1544593842258/1544593932560&quot;,&quot;1544593830881/1544593842258/1544593949312&quot;,&quot;1544593830881/1544593964252/1544594078882&quot;,&quot;1544593830881/1544593964252/1544594102416&quot;,&quot;1544593830881/1544593964252/1544594113782&quot;,&quot;1544593830881/1544593964252/1544594135462&quot;,&quot;1544593830881/1544593964252/1544594177257&quot;,&quot;1544593830881/1544593964252/1544594194047&quot;,&quot;1544593830881/1544596248781/1544596271349&quot;,&quot;1544593830881/1544596291616/1544596322099&quot;,&quot;1544593830881/1544596291616/1544596327463&quot;,&quot;1544593830881/1544596291616/1544596347700&quot;,&quot;1544593830881/1544596494652/1544596513093&quot;,&quot;1544593830881/1544596494652/1544596529922&quot;,&quot;1544593830881/1544596494652/1544596545929&quot;,&quot;1544596644314/1544596678647/1544596711546&quot;,&quot;1544596644314/1544596678647/1544596731689&quot;,&quot;1544596644314/1544596678647/1544596745950&quot;,&quot;1544596644314/1544596678647/1544596761923&quot;,&quot;1544596644314/1544596678647/1544596768254&quot;,&quot;1544596644314/1544596678647/1544596792897&quot;,&quot;1544596644314/1544596802487/1544596845016&quot;,&quot;1544596644314/1544596802487/1544596858389&quot;,&quot;1544596644314/1544596802487/1544596877787&quot;,&quot;1544596644314/1544596802487/1544596890399&quot;,&quot;1544596644314/1544596802487/1544596904838&quot;,&quot;1544596644314/1544596802487/1544596921860&quot;,&quot;1544596644314/1544597008306/1544597032165&quot;,&quot;1544596644314/1544597091060/1544597104557&quot;,&quot;1544596644314/1544597091060/1544597121860&quot;,&quot;1544596644314/1544597091060/1544597149347&quot;,&quot;1544596644314/1544597220792/1544597245750&quot;,&quot;1544596644314/1544597220792/1544597262426&quot;,&quot;1544596644314/1544597220792/1544597275965&quot;,&quot;1676462274557/1676462274558/1676462274559&quot;,&quot;1676462274557/1676462274558/1676462274560&quot;,&quot;1676462274557/1676462274558/1676462274561&quot;,&quot;1676462274557/1676462274558/1676462274562&quot;,&quot;1676462274557/1676462274558/1676462274563&quot;,&quot;1676462274557/1676462274558/1676462274564&quot;,&quot;1676462274557/1676462274558/1676462274565&quot;,&quot;1676462274557/1676462274558/1676462274566&quot;,&quot;1676462274557/1676462274558/1676462274567&quot;,&quot;1676462274557/1676462274558/1676462274568&quot;,&quot;1676462274557/1676462274558/1676462274569&quot;,&quot;1676462274557/1676462274558/1676462274570&quot;,&quot;1676462274557/1676462274558/1676462274571&quot;,&quot;1676462274557/1676462274558/1676462274572&quot;,&quot;1676462274557/1676462274558/1676462274573&quot;,&quot;1676462274557/1676462274558/1676462274574&quot;,&quot;1676462274557/1676462274558/1676462274575&quot;,&quot;1676462274557/1676462274558/1676462274576&quot;,&quot;1676462274557/1676462274558/1676462274577&quot;,&quot;1676462274557/1676462274558/1676462274578&quot;,&quot;1676462274557/1676462274558/1676462274579&quot;,&quot;1676462274557/1676462274558/1676462274580&quot;,&quot;1676462274557/1676462274558/1676462274581&quot;,&quot;1676462274557/1676462274558/1676462274582&quot;,&quot;1676462274557/1676462274558/1676462274583&quot;,&quot;1676462274557/1676462274558/1676462274584&quot;,&quot;1676462274557/1676462274558/1676462274585&quot;,&quot;1676462274557/1676462274558/1676462274586&quot;,&quot;1676462274557/1676462274558/1676462274587&quot;,&quot;1676462274557/1676462274558/1676462274588&quot;,&quot;1676462274557/1676462274558/1676462274589&quot;,&quot;1676462274557/1676462274558/1676462274590&quot;,&quot;1676462274557/1676462274558/1676462274591&quot;,&quot;1676462274557/1676462274558/1676462274592&quot;,&quot;1676462274557/1676462274558/1676462274593&quot;,&quot;1676462274557/1676462274558/1676462274594&quot;,&quot;1676462274557/1676462274558/1676462274595&quot;,&quot;1676462274557/1676462274558/1676462274596&quot;,&quot;1676462274557/1676462274558/1676462274597&quot;,&quot;1676462274557/1676462274558/1676462274598&quot;,&quot;1676462274557/1676462274558/1676462274599&quot;,&quot;1676462274557/1676462274558/1676462274600&quot;,&quot;1676462274557/1676462274558/1676462274601&quot;,&quot;1676462274557/1676462274558/1676462274602&quot;,&quot;1676462274557/1676462274558/1676462274603&quot;,&quot;1676462274557/1676462274558/1676462274604&quot;,&quot;1676462274557/1676462274558/1676462274605&quot;,&quot;1676462274557/1676462274558/1676462274606&quot;,&quot;1676462274557/1676462274558/1676462274607&quot;,&quot;1676462274557/1676462274558/1676462274608&quot;,&quot;1676462274557/1676462274558/1676462274609&quot;,&quot;1676462274557/1676462274558/1676462274610&quot;,&quot;1676462274557/1676462274558/1676462274611&quot;,&quot;1676462274557/1676462274558/1676462274612&quot;,&quot;1676462274557/1676462274558/1676462274613&quot;,&quot;1676462274557/1676462274558/1676462274614&quot;,&quot;1676462274557/1676462274558/1676462274615&quot;,&quot;1676462274557/1676462274558/1676462274616&quot;,&quot;1676462274557/1676462274558/1676462274617&quot;,&quot;1676462274557/1676462274558/1676462274618&quot;,&quot;1676462274557/1676462274558/1676462274619&quot;,&quot;1676462274557/1676462274558/1676462274620&quot;,&quot;1676462274557/1676462274558/1676462274621&quot;,&quot;1676462274557/1676462274558/1676462274622&quot;,&quot;1676462274557/1676462274558/1676462274623&quot;,&quot;1676462274557/1676462274558/1676462274624&quot;,&quot;1676462274557/1676462274558/1676462274625&quot;,&quot;1676462274557/1676462274558/1676462274626&quot;,&quot;1676462274557/1676462274558/1676462274627&quot;,&quot;1676462274557/1676462274558/1676462274628&quot;,&quot;1676462274557/1676462274558/1676462274629&quot;,&quot;1676462274557/1676462274558/1676462274630&quot;,&quot;1676462274557/1676462274558/1676462274631&quot;,&quot;1676462274557/1676462274558/1676462274632&quot;,&quot;1676462274557/1676462274558/1676462274633&quot;,&quot;1676462274557/1676462274558/1676462274634&quot;,&quot;1676462274557/1676462274558/1676462274635&quot;,&quot;1676462274557/1676462274558/1676462274636&quot;,&quot;1676462274557/1676462274558/1676462274637&quot;,&quot;1676462274557/1676462274558/1676462274638&quot;,&quot;1676462274557/1676462274558/1676462274639&quot;,&quot;1676462274557/1676462274558/1676462274640&quot;,&quot;1676462274557/1676462274558/1676462274641&quot;,&quot;1676462274557/1676462274558/1676462274642&quot;,&quot;1676462274557/1676462274558/1676462274643&quot;,&quot;1676462274557/1676462274558/1676462274644&quot;,&quot;1676462274557/1676462274558/1676462274645&quot;,&quot;1676462274557/1676462274558/1676462274646&quot;,&quot;1676462274557/1676462274558/1676462274647&quot;,&quot;1676462274557/1676462274558/1676462274648&quot;,&quot;1676462274557/1676462274558/1676462274649&quot;,&quot;1676462274557/1676462274558/1676462274650&quot;,&quot;1676462274557/1676462274558/1676462274651&quot;,&quot;1676462274557/1676462274558/1676462274652&quot;,&quot;1676462274557/1676462274558/1676462274653&quot;,&quot;1676462274557/1676462274558/1676462274654&quot;,&quot;1676462274557/1676462274558/1676462274655&quot;,&quot;1676462274557/1676462274558/1676462274656&quot;,&quot;1676462274557/1676462274558/1676462274657&quot;,&quot;1676462274557/1676462274558/1676462274658&quot;,&quot;1676462274557/1676462274558/1676462274761&quot;,&quot;1676462274557/1676462274558/1676462274762&quot;,&quot;1676462274557/1676462274558/1676462274763&quot;,&quot;1676462274557/1676462274558/1676462274764&quot;,&quot;1676462274557/1676462274558/1676462274765&quot;,&quot;1676462274557/1676462274558/1676462274766&quot;,&quot;1676462274557/1676462274558/1676462274767&quot;,&quot;1676462274557/1676462274558/1676462274768&quot;,&quot;1676462274557/1676462274558/1676462274769&quot;,&quot;1676462274557/1676462274558/1676462274770&quot;,&quot;1676462274557/1676462274558/1676462274771&quot;,&quot;1676462274557/1676462274558/1676462274772&quot;,&quot;1676462274557/1676462274558/1676462274773&quot;,&quot;1676462274557/1676462274558/1676462274774&quot;,&quot;1676462274557/1676462274558/1676462274775&quot;,&quot;1676462274557/1676462274558/1676462274776&quot;,&quot;1676462274557/1676462274558/1676462274777&quot;,&quot;1676462274557/1676462274558/1676462274778&quot;,&quot;1676462274557/1676462274558/1676462274779&quot;,&quot;1676462274557/1676462274558/1676462274780&quot;,&quot;1676462274557/1676462274558/1676462274781&quot;,&quot;1676462274557/1676462274558/1676462274782&quot;,&quot;1676462274557/1676462274558/1676462274783&quot;,&quot;1676462274557/1676462274558/1676462274784&quot;,&quot;1676462274557/1676462274558/1676462274785&quot;,&quot;1676462274557/1676462274558/1676462274786&quot;,&quot;1676462274557/1676462274558/1676462274787&quot;,&quot;1676462274557/1676462274558/1676462274788&quot;,&quot;1676462274557/1676462274558/1676462274789&quot;,&quot;1676462274557/1676462274558/1676462274790&quot;,&quot;1676462274557/1676462274558/1676462274791&quot;,&quot;1676462274557/1676462274558/1676462274792&quot;,&quot;1676462274557/1676462274558/1676462274793&quot;,&quot;1676462274557/1676462274558/1676462274794&quot;,&quot;1676462274557/1676462274558/1676462274795&quot;,&quot;1676462274557/1676462274558/1676462274796&quot;,&quot;1676462274557/1676462274558/1676462274797&quot;,&quot;1676462274557/1676462274558/1676462274798&quot;,&quot;1676462274557/1676462274558/1676462274799&quot;,&quot;1676462274557/1676462274558/1676462274800&quot;,&quot;1676462274557/1676462274558/1676462274801&quot;,&quot;1676462274557/1676462274558/1676462274802&quot;,&quot;1676462274557/1676462274558/1676462274803&quot;,&quot;1676462274557/1676462274558/1676462274804&quot;,&quot;1676462274557/1676462274558/1676462274805&quot;,&quot;1676462274557/1676462274558/1676462274806&quot;,&quot;1676462274557/1676462274558/1676462274807&quot;,&quot;1676462274557/1676462274558/1676462274808&quot;,&quot;1676462274557/1676462274558/1676462274809&quot;,&quot;1676462274557/1676462274558/1676462274810&quot;,&quot;1676462274557/1676462274558/1676462274811&quot;,&quot;1676462274557/1676462274558/1676462274812&quot;,&quot;1676462274557/1676462274558/1676462274813&quot;,&quot;1676462274557/1676462274558/1676462274814&quot;,&quot;1676462274557/1676462274558/1676462274815&quot;,&quot;1676462274557/1676462274558/1676462274816&quot;,&quot;1676462274557/1676462274558/1676462274817&quot;,&quot;1676462274557/1676462274558/1676462274818&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1676462274659/1676462274660/1676462274671&quot;,&quot;1676462274659/1676462274660/1676462274672&quot;,&quot;1676462274659/1676462274660/1676462274673&quot;,&quot;1676462274659/1676462274660/1676462274674&quot;,&quot;1676462274659/1676462274660/1676462274675&quot;,&quot;1676462274659/1676462274660/1676462274676&quot;,&quot;1676462274659/1676462274660/1676462274677&quot;,&quot;1676462274659/1676462274660/1676462274678&quot;,&quot;1676462274659/1676462274660/1676462274679&quot;,&quot;1676462274659/1676462274660/1676462274680&quot;,&quot;1676462274659/1676462274660/1676462274681&quot;,&quot;1676462274659/1676462274660/1676462274682&quot;,&quot;1676462274659/1676462274660/1676462274683&quot;,&quot;1676462274659/1676462274660/1676462274684&quot;,&quot;1676462274659/1676462274660/1676462274685&quot;,&quot;1676462274659/1676462274660/1676462274686&quot;,&quot;1676462274659/1676462274660/1676462274687&quot;,&quot;1676462274659/1676462274660/1676462274688&quot;,&quot;1676462274659/1676462274660/1676462274689&quot;,&quot;1676462274659/1676462274660/1676462274690&quot;,&quot;1676462274659/1676462274660/1676462274691&quot;,&quot;1676462274659/1676462274660/1676462274692&quot;,&quot;1676462274659/1676462274660/1676462274693&quot;,&quot;1676462274659/1676462274660/1676462274694&quot;,&quot;1676462274659/1676462274660/1676462274695&quot;,&quot;1676462274659/1676462274660/1676462274696&quot;,&quot;1676462274659/1676462274660/1676462274697&quot;,&quot;1676462274659/1676462274660/1676462274698&quot;,&quot;1676462274659/1676462274660/1676462274699&quot;,&quot;1676462274659/1676462274660/1676462274700&quot;,&quot;1676462274659/1676462274660/1676462274701&quot;,&quot;1676462274659/1676462274660/1676462274702&quot;,&quot;1676462274659/1676462274660/1676462274703&quot;,&quot;1676462274659/1676462274660/1676462274704&quot;,&quot;1676462274659/1676462274660/1676462274705&quot;,&quot;1676462274659/1676462274660/1676462274706&quot;,&quot;1676462274659/1676462274660/1676462274707&quot;,&quot;1676462274659/1676462274660/1676462274708&quot;,&quot;1676462274659/1676462274660/1676462274709&quot;,&quot;1676462274659/1676462274660/1676462274710&quot;,&quot;1676462274659/1676462274660/1676462274711&quot;,&quot;1676462274659/1676462274660/1676462274712&quot;,&quot;1676462274659/1676462274660/1676462274713&quot;,&quot;1676462274659/1676462274660/1676462274714&quot;,&quot;1676462274659/1676462274660/1676462274715&quot;,&quot;1676462274659/1676462274660/1676462274716&quot;,&quot;1676462274659/1676462274660/1676462274717&quot;,&quot;1676462274659/1676462274660/1676462274718&quot;,&quot;1676462274659/1676462274660/1676462274719&quot;,&quot;1676462274659/1676462274660/1676462274720&quot;,&quot;1676462274659/1676462274660/1676462274721&quot;,&quot;1676462274659/1676462274660/1676462274722&quot;,&quot;1676462274659/1676462274660/1676462274723&quot;,&quot;1676462274659/1676462274660/1676462274724&quot;,&quot;1676462274659/1676462274660/1676462274725&quot;,&quot;1676462274659/1676462274660/1676462274726&quot;,&quot;1676462274659/1676462274660/1676462274727&quot;,&quot;1676462274659/1676462274660/1676462274728&quot;,&quot;1676462274659/1676462274660/1676462274729&quot;,&quot;1676462274659/1676462274660/1676462274730&quot;,&quot;1676462274659/1676462274660/1676462274731&quot;,&quot;1676462274659/1676462274660/1676462274732&quot;,&quot;1676462274659/1676462274660/1676462274733&quot;,&quot;1676462274659/1676462274660/1676462274734&quot;,&quot;1676462274659/1676462274660/1676462274735&quot;,&quot;1676462274659/1676462274660/1676462274736&quot;,&quot;1676462274659/1676462274660/1676462274737&quot;,&quot;1676462274659/1676462274660/1676462274738&quot;,&quot;1676462274659/1676462274660/1676462274739&quot;,&quot;1676462274659/1676462274660/1676462274740&quot;,&quot;1676462274659/1676462274660/1676462274741&quot;,&quot;1676462274659/1676462274660/1676462274742&quot;,&quot;1676462274659/1676462274660/1676462274743&quot;,&quot;1676462274659/1676462274660/1676462274744&quot;,&quot;1676462274659/1676462274660/1676462274745&quot;,&quot;1676462274659/1676462274660/1676462274746&quot;,&quot;1676462274659/1676462274660/1676462274747&quot;,&quot;1676462274659/1676462274660/1676462274748&quot;,&quot;1676462274659/1676462274660/1676462274749&quot;,&quot;1676462274659/1676462274660/1676462274750&quot;,&quot;1676462274659/1676462274660/1676462274751&quot;,&quot;1676462274659/1676462274660/1676462274752&quot;,&quot;1676462274659/1676462274660/1676462274753&quot;,&quot;1676462274659/1676462274660/1676462274754&quot;,&quot;1676462274659/1676462274660/1676462274755&quot;,&quot;1676462274659/1676462274660/1676462274756&quot;,&quot;1676462274659/1676462274660/1676462274757&quot;,&quot;1676462274659/1676462274660/1676462274758&quot;,&quot;1676462274659/1676462274660/1676462274759&quot;,&quot;1676462274659/1676462274660/1676462274760&quot;,&quot;1676462274659/1676462274660/1676462274836&quot;,&quot;1676462274659/1676462274660/1676462274837&quot;,&quot;1676462274659/1676462274660/1676462274838&quot;,&quot;1676462274659/1676462274660/1676462274839&quot;,&quot;1676462274659/1676462274660/1676462274840&quot;,&quot;1676462274659/1676462274660/1676462274841&quot;,&quot;1676462274659/1676462274660/1676462274842&quot;,&quot;1676462274659/1676462274660/1676462274843&quot;,&quot;1676462274659/1676462274660/1676462274844&quot;,&quot;1676462274659/1676462274660/1676462274845&quot;,&quot;1676462274659/1676462274660/1676462274846&quot;,&quot;1676462274659/1676462274660/1676462274847&quot;,&quot;1676462274659/1676462274660/1676462274848&quot;,&quot;1676462274659/1676462274660/1676462274849&quot;,&quot;1676462274659/1676462274660/1676462274850&quot;,&quot;1676462274659/1676462274660/1676462274851&quot;,&quot;1676462274659/1676462274660/1676462274852&quot;,&quot;1676462274659/1676462274660/1676462274853&quot;,&quot;1676462274659/1676462274660/1676462274854&quot;,&quot;1676462274659/1676462274660/1676462274855&quot;,&quot;1676462274659/1676462274660/1676462274856&quot;,&quot;1676462274659/1676462274660/1676462274857&quot;,&quot;1676462274659/1676462274660/1676462274858&quot;,&quot;1676462274659/1676462274660/1676462274859&quot;,&quot;1676462274659/1676462274660/1676462274860&quot;,&quot;1676462274659/1676462274660/1676462274861&quot;,&quot;1676462274659/1676462274660/1676462274862&quot;,&quot;1676462274659/1676462274660/1676462274863&quot;,&quot;1676462274659/1676462274660/1676462274864&quot;,&quot;1676462274659/1676462274660/1676462274865&quot;,&quot;1676462274659/1676462274660/1676462274866&quot;,&quot;1676462274659/1676462274660/1676462274867&quot;,&quot;1676462274659/1676462274660/1676462274868&quot;,&quot;1676462274659/1676462274660/1676462274869&quot;,&quot;1676462274659/1676462274660/1676462274870&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                    <stringProp name="BeanShellSampler.filename"></stringProp>
                    <stringProp name="BeanShellSampler.parameters"></stringProp>
                    <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                  </BeanShellSampler>
                  <hashTree/>
                  <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <boolProp name="resetInterpreter">false</boolProp>
                    <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + &quot;500LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
                  </BeanShellPreProcessor>
                  <hashTree/>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                    <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_500LOs.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
                <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x rules" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfLockRulesInClass}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end"></stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">lockRulesCount</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">false</boolProp>
              </CounterConfig>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler- rules itemcodes" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544525043137/1544525159358/1544525246748&quot;,&quot;1544525043137/1544525159358/1544525263160&quot;,&quot;1544525043137/1544525280855/1544525289279&quot;,&quot;1544525590768/1544525595533/1544525611432&quot;,&quot;1544525590768/1544525595533/1544525627465&quot;,&quot;1544525590768/1544525595533/1544525635696&quot;,&quot;1544525590768/1544525595533/1544525649026&quot;,&quot;1544525590768/1544525595533/1544525663048&quot;,&quot;1544525590768/1544525595533/1544525679427&quot;,&quot;1544525590768/1544525683364/1544525709799&quot;,&quot;1544525590768/1544525683364/1544525720457&quot;,&quot;1544525590768/1544525683364/1544525729515&quot;,&quot;1544525590768/1544525683364/1544525734676&quot;,&quot;1544525590768/1544525683364/1544525756801&quot;,&quot;1544525590768/1544525683364/1544525778291&quot;,&quot;1544526345845/1544526589100/1544526606750&quot;,&quot;1544526345845/1544526589100/1544526610825&quot;,&quot;1544526345845/1544526589100/1544526623799&quot;,&quot;1544526345845/1544526589100/1544526638110&quot;,&quot;1544526345845/1544526589100/1544526644717&quot;,&quot;1544526345845/1544526589100/1544526657285&quot;,&quot;1544526345845/1544526671965/1544526688230&quot;,&quot;1544526345845/1544526671965/1544526695320&quot;,&quot;1544526345845/1544526671965/1544526710051&quot;,&quot;1544526345845/1544526671965/1544526721801&quot;,&quot;1544526345845/1544526671965/1544526728620&quot;,&quot;1544526345845/1544526671965/1544526763389&quot;,&quot;1544526345845/1544526961740/1544526980657&quot;,&quot;1544526345845/1544526961740/1544526994099&quot;,&quot;1544526345845/1544526961740/1544527008225&quot;,&quot;1544526345845/1544528319371/1544528334775&quot;,&quot;1544526345845/1544528319371/1544528345283&quot;,&quot;1544526345845/1544528319371/1544528367998&quot;,&quot;1544591089661/1544591099675/1544591165699&quot;,&quot;1544591089661/1544591099675/1544591181584&quot;,&quot;1544591089661/1544591099675/1544591198772&quot;,&quot;1544591089661/1544591099675/1544591219876&quot;,&quot;1544591089661/1544591099675/1544591237488&quot;,&quot;1544591089661/1544591099675/1544591247402&quot;,&quot;1544591089661/1544591260222/1544591284840&quot;,&quot;1544591089661/1544591260222/1544591295680&quot;,&quot;1544591089661/1544591260222/1544591320423&quot;,&quot;1544591089661/1544591260222/1544591334581&quot;,&quot;1544591089661/1544591260222/1544591341221&quot;,&quot;1544591089661/1544591260222/1544591363137&quot;,&quot;1544591089661/1544591364773/1544591392809&quot;,&quot;1544591089661/1544591412698/1544591428190&quot;,&quot;1544591089661/1544591412698/1544591439057&quot;,&quot;1544591089661/1544591412698/1544591455780&quot;,&quot;1544591089661/1544591602655/1544591636888&quot;,&quot;1544591089661/1544591602655/1544591649137&quot;,&quot;1544591089661/1544591602655/1544591669971&quot;,&quot;1544591751639/1544591756584/1544591786410&quot;,&quot;1544591751639/1544591756584/1544591792950&quot;,&quot;1544591751639/1544591756584/1544591814105&quot;,&quot;1544591751639/1544591756584/1544591826125&quot;,&quot;1544591751639/1544591756584/1544591842867&quot;,&quot;1544591751639/1544591756584/1544591852005&quot;,&quot;1544591751639/1544591859950/1544591889129&quot;,&quot;1544591751639/1544591859950/1544591895035&quot;,&quot;1544591751639/1544591859950/1544591913490&quot;,&quot;1544591751639/1544591859950/1544591923488&quot;,&quot;1544591751639/1544591937229/1544591951092&quot;,&quot;1544591751639/1544591989858/1544592010989&quot;,&quot;1544591751639/1544591989858/1544592017149&quot;,&quot;1544591751639/1544591989858/1544592034736&quot;,&quot;1544591751639/1544592145731/1544592165309&quot;,&quot;1544591751639/1544592145731/1544592176780&quot;,&quot;1544591751639/1544592145731/1544592194540&quot;,&quot;1544592286221/1544592291887/1544592314873&quot;,&quot;1544592286221/1544592291887/1544592322911&quot;,&quot;1544592286221/1544592291887/1544592333414&quot;,&quot;1544592286221/1544592291887/1544592347743&quot;,&quot;1544592286221/1544592291887/1544592363784&quot;,&quot;1544592286221/1544592291887/1544592370486&quot;,&quot;1544592286221/1544592379241/1544592404760&quot;,&quot;1544592286221/1544592379241/1544592415158&quot;,&quot;1544592286221/1544592379241/1544592422449&quot;,&quot;1544592286221/1544592379241/1544592438186&quot;,&quot;1544592286221/1544592379241/1544592448263&quot;,&quot;1544592286221/1544592379241/1544592466092&quot;,&quot;1544592286221/1544592474205/1544592491253&quot;,&quot;1544592286221/1544592520233/1544592540334&quot;,&quot;1544592286221/1544592520233/1544592555974&quot;,&quot;1544592286221/1544592520233/1544592561671&quot;,&quot;1544592286221/1544592623523/1544592648386&quot;,&quot;1544592286221/1544592623523/1544592658543&quot;,&quot;1544592286221/1544592623523/1544592671565&quot;,&quot;1544592857014/1544592865722/1544593053271&quot;,&quot;1544592857014/1544592865722/1544593072380&quot;,&quot;1544592857014/1544592865722/1544593079694&quot;,&quot;1544592857014/1544592865722/1544593093552&quot;,&quot;1544592857014/1544592865722/1544593104748&quot;,&quot;1544592857014/1544592865722/1544593123201&quot;,&quot;1544592857014/1544593139545/1544593173865&quot;,&quot;1544592857014/1544593139545/1544593187008&quot;,&quot;1544592857014/1544593139545/1544593454057&quot;,&quot;1544592857014/1544593139545/1544593471128&quot;,&quot;1544592857014/1544593139545/1544593476327&quot;,&quot;1544592857014/1544593139545/1544593488247&quot;,&quot;1544592857014/1544593529004/1544593551477&quot;,&quot;1544592857014/1544593585947/1544593606215&quot;,&quot;1544592857014/1544593585947/1544593620647&quot;,&quot;1544592857014/1544593585947/1544593632079&quot;,&quot;1544592857014/1544593703192/1544593728070&quot;,&quot;1544592857014/1544593703192/1544593743725&quot;,&quot;1544592857014/1544593703192/1544593752239&quot;,&quot;1544593830881/1544593842258/1544593874472&quot;,&quot;1544593830881/1544593842258/1544593889640&quot;,&quot;1544593830881/1544593842258/1544593905062&quot;,&quot;1544593830881/1544593842258/1544593925051&quot;,&quot;1544593830881/1544593842258/1544593932560&quot;,&quot;1544593830881/1544593842258/1544593949312&quot;,&quot;1544593830881/1544593964252/1544594078882&quot;,&quot;1544593830881/1544593964252/1544594102416&quot;,&quot;1544593830881/1544593964252/1544594113782&quot;,&quot;1544593830881/1544593964252/1544594135462&quot;,&quot;1544593830881/1544593964252/1544594177257&quot;,&quot;1544593830881/1544593964252/1544594194047&quot;,&quot;1544593830881/1544596248781/1544596271349&quot;,&quot;1544593830881/1544596291616/1544596322099&quot;,&quot;1544593830881/1544596291616/1544596327463&quot;,&quot;1544593830881/1544596291616/1544596347700&quot;,&quot;1544593830881/1544596494652/1544596513093&quot;,&quot;1544593830881/1544596494652/1544596529922&quot;,&quot;1544593830881/1544596494652/1544596545929&quot;,&quot;1544596644314/1544596678647/1544596711546&quot;,&quot;1544596644314/1544596678647/1544596731689&quot;,&quot;1544596644314/1544596678647/1544596745950&quot;,&quot;1544596644314/1544596678647/1544596761923&quot;,&quot;1544596644314/1544596678647/1544596768254&quot;,&quot;1544596644314/1544596678647/1544596792897&quot;,&quot;1544596644314/1544596802487/1544596845016&quot;,&quot;1544596644314/1544596802487/1544596858389&quot;,&quot;1544596644314/1544596802487/1544596877787&quot;,&quot;1544596644314/1544596802487/1544596890399&quot;,&quot;1544596644314/1544596802487/1544596904838&quot;,&quot;1544596644314/1544596802487/1544596921860&quot;,&quot;1544596644314/1544597008306/1544597032165&quot;,&quot;1544596644314/1544597091060/1544597104557&quot;,&quot;1544596644314/1544597091060/1544597121860&quot;,&quot;1544596644314/1544597091060/1544597149347&quot;,&quot;1544596644314/1544597220792/1544597245750&quot;,&quot;1544596644314/1544597220792/1544597262426&quot;,&quot;1544596644314/1544597220792/1544597275965&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler - rules product codes" enabled="true">
                <stringProp name="BeanShellSampler.query">//String[] stringArray = {${__evalVar(${category}_Assignment)}};
String[] stringArray = {${schl_classProductCodes}};

int randomIndex = (${lockRulesCount})%(stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
                <intProp name="ThroughputController.style">1</intProp>
                <boolProp name="ThroughputController.perThread">true</boolProp>
                <stringProp name="ThroughputController.maxThroughput">${50LOsLockRuleCount}</stringProp>
                <stringProp name="ThroughputController.percentThroughput">${50LOsLockRuleCount}</stringProp>
              </ThroughputController>
              <hashTree>
                <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
                  <stringProp name="maximumValue">999999</stringProp>
                  <stringProp name="minimumValue">000000</stringProp>
                  <stringProp name="outputFormat">000000</stringProp>
                  <boolProp name="perThread">true</boolProp>
                  <stringProp name="randomSeed"></stringProp>
                  <stringProp name="variableName">randomNo</stringProp>
                </RandomVariableConfig>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="create a rule" enabled="true">
                  <stringProp name="IncludeController.includepath">Create_a_rule_50LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
                <intProp name="ThroughputController.style">1</intProp>
                <boolProp name="ThroughputController.perThread">true</boolProp>
                <stringProp name="ThroughputController.maxThroughput">${100LOsLockRuleCount}</stringProp>
                <stringProp name="ThroughputController.percentThroughput">${100LOsLockRuleCount}</stringProp>
              </ThroughputController>
              <hashTree>
                <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
                  <stringProp name="maximumValue">999999</stringProp>
                  <stringProp name="minimumValue">000000</stringProp>
                  <stringProp name="outputFormat">000000</stringProp>
                  <boolProp name="perThread">true</boolProp>
                  <stringProp name="randomSeed"></stringProp>
                  <stringProp name="variableName">randomNo</stringProp>
                </RandomVariableConfig>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="create a rule" enabled="true">
                  <stringProp name="IncludeController.includepath">Create_a_rule_100LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
                <intProp name="ThroughputController.style">1</intProp>
                <boolProp name="ThroughputController.perThread">true</boolProp>
                <stringProp name="ThroughputController.maxThroughput">${150LOsLockRuleCount}</stringProp>
                <stringProp name="ThroughputController.percentThroughput">${150LOsLockRuleCount}</stringProp>
              </ThroughputController>
              <hashTree>
                <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
                  <stringProp name="maximumValue">999999</stringProp>
                  <stringProp name="minimumValue">000000</stringProp>
                  <stringProp name="outputFormat">000000</stringProp>
                  <boolProp name="perThread">true</boolProp>
                  <stringProp name="randomSeed"></stringProp>
                  <stringProp name="variableName">randomNo</stringProp>
                </RandomVariableConfig>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="create a rule" enabled="true">
                  <stringProp name="IncludeController.includepath">Create_a_rule_150LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="create custom grading in a class" enabled="true"/>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a gradebook in a class" enabled="true">
                <stringProp name="IncludeController.includepath">Create_a_gradebook_in_a_class.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler - grading json" enabled="true">
                <stringProp name="BeanShellSampler.query">/*String[] multiProducts = {
    ${__evalVar(${category})}
};*/
String[] multiProducts = {${schl_classProductCodes}};
String mergedColumnJson = &quot;[&quot;;
int customWeightage = 0;
int pendingWeightage = 0;
int remainingValue = 0;
String bundle = &quot;&quot;;

for (int i = 0; i &lt; multiProducts.length; i++) {
	bundle = multiProducts[i] + &quot;_bundle&quot;;
	mergedColumnJson += &quot;{\&quot;column_id\&quot;: \&quot;&quot; + multiProducts[i] + &quot;\&quot;,\&quot;type\&quot;: \&quot;product\&quot;,\&quot;weightage\&quot;: \&quot;5\&quot;,\&quot;bundle-codes\&quot;: [\&quot;&quot; + vars.get(bundle) + &quot;\&quot;],\&quot;productcode\&quot;: \&quot;&quot; + multiProducts[i] + &quot;\&quot;},&quot;;
};

remainingValue = 100 - (5*(multiProducts.length));

customWeightage = remainingValue/${customGradingCount};
pendingWeightage = remainingValue%${customGradingCount};

for (int i = 1; i &lt;= ${customGradingCount}; i++) {
	if(i != ${customGradingCount}) {
		mergedColumnJson += &quot;{\&quot;column_id\&quot;: \&quot;PerfCustComp_&quot; + i + &quot;\&quot;,\&quot;type\&quot;: \&quot;custom\&quot;, \&quot;custom_component_code\&quot;: \&quot;PerfCustComp_&quot; + i + &quot;\&quot;, \&quot;title\&quot;: \&quot;PerfCustComp_&quot; + i + &quot;\&quot;, \&quot;weightage\&quot;: \&quot;&quot; + customWeightage + &quot;\&quot;,\&quot;scoring_type\&quot;: \&quot;SIMPLE\&quot;},&quot;;
	} else {
		int finalWeightage = customWeightage + pendingWeightage;
		mergedColumnJson += &quot;{\&quot;column_id\&quot;: \&quot;PerfCustComp_&quot; + i + &quot;\&quot;,\&quot;type\&quot;: \&quot;custom\&quot;, \&quot;custom_component_code\&quot;: \&quot;PerfCustComp_&quot; + i + &quot;\&quot;, \&quot;title\&quot;: \&quot;PerfCustComp_&quot; + i + &quot;\&quot;, \&quot;weightage\&quot;: \&quot;&quot; + finalWeightage + &quot;\&quot;,\&quot;scoring_type\&quot;: \&quot;SIMPLE\&quot;},&quot;;
	}
};

mergedColumnJson = mergedColumnJson.substring(0, mergedColumnJson.length() - 1) + &quot;]&quot;;

vars.put(&quot;mergedColumnJsonFinal&quot;, mergedColumnJson);</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
                  <stringProp name="RandomTimer.range">${minWait}</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add columns to a particular gradebook of a class" enabled="true">
                <stringProp name="IncludeController.includepath">Add_columns_to_a_particular_gradebook_of_a_class_with_custom_components.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation - teacher file" enabled="true">
              <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameTch&quot;), true);

String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;orgid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classname&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;stdCat&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());
vars.put(&quot;assignedPathList&quot;, &quot;&quot;);
out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
              <stringProp name="ForeachController.inputVal">studentextuserid</stringProp>
              <stringProp name="ForeachController.returnVal">studentextuserid</stringProp>
              <boolProp name="ForeachController.useSeparator">true</boolProp>
              <stringProp name="ForeachController.startIndex">0</stringProp>
              <stringProp name="ForeachController.endIndex">${noOfStudentsInClass}</stringProp>
            </ForeachController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end"></stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">stdCounter</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">false</boolProp>
              </CounterConfig>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler (student product)" enabled="true">
                <stringProp name="BeanShellSampler.query">//vars.put(&quot;productcode&quot;, &quot;evpel1&quot;);
prefix1 = ${schl_productcode1};
vars.put(&quot;productcode&quot;, prefix1);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for writing data into csv file" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">1000</stringProp>
                  <stringProp name="RandomTimer.range">1000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${orgCounter}&quot; == 1;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with product_code and class_code" enabled="true">
                  <stringProp name="IncludeController.includepath">join_Spaces_with_product_code_and_class_code.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${orgCounter}&quot; != 1;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with class_code" enabled="true">
                  <stringProp name="IncludeController.includepath">join_Spaces_with_class_code.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation - student file" enabled="true">
                <stringProp name="BeanShellSampler.query">timestamp = vars.get(&quot;date&quot;);

FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameStd&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;orgid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;stdCat&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classname&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(SEPARATOR.getBytes());

out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CoreDataTemplate_stdCat _1011_Step 1_with bug(disabled Class Product association)" enabled="false"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">1011_std_template.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">stdCat,classType,category,noOfAssignmentsInClass,20LOsCount,30LOsCount,50LOsCount,noOfStudentsInClass,noOfLockRulesInClass,50LOsLockRuleCount,100LOsLockRuleCount,150LOsLockRuleCount,customGradingCount</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilenameTch" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilenameTch</stringProp>
                <stringProp name="Argument.value">scenario_tch_asnmt_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="outputCsvFilenameStd" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilenameStd</stringProp>
                <stringProp name="Argument.value">student_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="assignedPathList" elementType="Argument">
                <stringProp name="Argument.name">assignedPathList</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="title" elementType="Argument">
                <stringProp name="Argument.name">title</stringProp>
                <stringProp name="Argument.value">default gradebook 1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gradebook_id" elementType="Argument">
                <stringProp name="Argument.name">gradebook_id</stringProp>
                <stringProp name="Argument.value">default-gradebook</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="outputCsvFilenameStd_1011" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilenameStd_1011</stringProp>
                <stringProp name="Argument.value">1011_student_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler (student extuserids)" enabled="true">
            <stringProp name="BeanShellSampler.query">import java.util.Date;
prefix1 = vars.get(&quot;stdCat&quot;);
Date date = new Date();
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;

FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameStd_1011&quot;), true);

String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;

stdCount = ${noOfStudentsInClass};
studentextuserid = &quot;std&quot; + &quot;_&quot; + prefix1 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

for (int i = 0; i &lt; stdCount; i++) {
temp= studentextuserid + &quot;_&quot; +  (i+1);
vars.put(&quot;temp&quot;,temp);
vars.put(&quot;studentextuserid_&quot; +  (i+1), temp);
out.write(vars.get(&quot;temp&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;stdCat&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(LineSEPARATOR.getBytes());
}

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler ( Extract School List)" enabled="true">
            <stringProp name="BeanShellSampler.query">String[] schlist = {${__evalVar(${stdCat}_spacecode)}};  
String[] orglist = {${__evalVar(${stdCat}_orgId)}}; 

for (int i = 0; i &lt; schlist.length; i++) {
    vars.put(&quot;sch_spacecode&quot; + (i + 1), schlist[i]);
}

//vars.put(&quot;productcode&quot;, stringArray[0]);
prefix1 = schlist.length;
  vars.put(&quot;schcount&quot;,&quot;prefix1&quot;);

for (int i = 0; i &lt; orglist.length; i++) {
    vars.put(&quot;sch_orgid&quot; + (i + 1), orglist[i]);
}
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
            <stringProp name="ForeachController.inputVal">sch_spacecode</stringProp>
            <stringProp name="ForeachController.returnVal">spacecode</stringProp>
            <boolProp name="ForeachController.useSeparator">false</boolProp>
            <stringProp name="ForeachController.startIndex">0</stringProp>
            <stringProp name="ForeachController.endIndex">10</stringProp>
          </ForeachController>
          <hashTree>
            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
              <stringProp name="CounterConfig.start">1</stringProp>
              <stringProp name="CounterConfig.end"></stringProp>
              <stringProp name="CounterConfig.incr">1</stringProp>
              <stringProp name="CounterConfig.name">orgCounter</stringProp>
              <stringProp name="CounterConfig.format"></stringProp>
              <boolProp name="CounterConfig.per_user">true</boolProp>
              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
            </CounterConfig>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="teacher_name" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;category&quot;);
prefix5 = vars.get(&quot;spacecode&quot;);
extuserid = &quot;tch&quot; + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix5;
vars.put(&quot;extuserid&quot;, extuserid);

//classname = &quot;class&quot; + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
//vars.put(&quot;classname&quot;, classname);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="true">
              <stringProp name="IncludeController.includepath">Join_a_space_with_space_code.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [60-65 sec]" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">60000</stringProp>
                <stringProp name="RandomTimer.range">5000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="false">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
                <stringProp name="RandomTimer.range">5000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
              <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
              <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler (Class name)" enabled="true">
              <stringProp name="BeanShellSampler.query">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;category&quot;);
prefix5 = vars.get(&quot;spacecode&quot;);

classname = &quot;class&quot; + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix5;
vars.put(&quot;classname&quot;, classname);


prefix8 = vars.get(&quot;orgCounter&quot;);
vars.put(&quot;prefix8&quot;, prefix8);
prefix7 = vars.get(&quot;sch_orgid&quot; +  prefix8);
vars.put(&quot;orgId&quot;, prefix7);
vars.put(&quot;orgid&quot;, prefix7);

prefix9  = vars.get(prefix7 +  &quot;_ProductCodes&quot;) ;

vars.put(&quot;schl_classProductCodes&quot;, prefix9);


</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
              <stringProp name="IfController.condition">&quot;${classType}&quot; == &quot;normal&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class" enabled="true">
                <stringProp name="IncludeController.includepath">create_new_instructor_led_class.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
              <stringProp name="IfController.condition">&quot;${classType}&quot; == &quot;context&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class - CONTEXT" enabled="true">
                <stringProp name="IncludeController.includepath">create_new_instructor_led_class_context.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate multi products with a class" enabled="false">
              <stringProp name="IncludeController.includepath">associate_multi_products_with_class_schl_classProductCodes.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [420-450]" enabled="false">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">720000</stringProp>
                <stringProp name="RandomTimer.range">30000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="false">
              <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;L10&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">//String[] stringArray = {&quot;perf35_400lo_1&quot;,&quot;perf35_500lo_1&quot;,&quot;perf38_300lo_1&quot;,&quot;perf38_630lo_1&quot;,&quot;perf38_630lo_2&quot;,&quot;perf40_630lo_1&quot;,&quot;perf40_630lo_2&quot;};

//int randomIndex = (int) (Math.random() * stringArray.length);

//String randomValue = perfprodct10;

vars.put(&quot;productcode&quot;, &quot;perfprodct11&quot;);</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] itemCodes = { &quot;1631184898880/1631184933374&quot;};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
//prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + &quot;_&quot; + &quot;1LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_1LOs .jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x assignments" enabled="false">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfAssignmentsInClass}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end">${noOfAssignmentsInClass}</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">assignmentCount</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler - asgnmt itemcodes" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544524003551/1544524304922/1544524359136&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544524003551/1544524012478/1544524057691&quot;,&quot;1544524003551/1544524012478/1544524030068&quot;,&quot;1544525043137/1544525058289/1544525097148&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544525043137/1544525058289/1544525137957&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1544524003551/1544524304922/1544524324762&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544525043137/1544525058289/1544525090848&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1544524003551/1544524012478/1544524071582&quot;,&quot;1544524003551/1544524304922/1544524341184&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544525043137/1544525058289/1544525125172&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1544524003551/1544524304922/1544524313700&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544524003551/1544524012478/1544524084276&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544524003551/1544524304922/1544524387792&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1544524003551/1544524012478/1544524099346&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1544525043137/1544525058289/1544525114886&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544524003551/1544524012478/1544524044427&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544524003551/1544524304922/1544524376121&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler -asgmt productcode" enabled="true">
                <stringProp name="BeanShellSampler.query">//String[] stringArray = {${__evalVar(${category}_Assignment)}};
String[] stringArray = {${schl_classProductCodes}};
int randomIndex = (int) (Math.random() * stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
                <intProp name="ThroughputController.style">1</intProp>
                <boolProp name="ThroughputController.perThread">true</boolProp>
                <stringProp name="ThroughputController.maxThroughput">${20LOsCount}</stringProp>
                <stringProp name="ThroughputController.percentThroughput">${20LOsCount}</stringProp>
              </ThroughputController>
              <hashTree>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + &quot;20LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_20LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
                <intProp name="ThroughputController.style">1</intProp>
                <boolProp name="ThroughputController.perThread">true</boolProp>
                <stringProp name="ThroughputController.maxThroughput">${30LOsCount}</stringProp>
                <stringProp name="ThroughputController.percentThroughput">${30LOsCount}</stringProp>
              </ThroughputController>
              <hashTree>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + &quot;30LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_30LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
                <intProp name="ThroughputController.style">1</intProp>
                <boolProp name="ThroughputController.perThread">true</boolProp>
                <stringProp name="ThroughputController.maxThroughput">${50LOsCount}</stringProp>
                <stringProp name="ThroughputController.percentThroughput">${50LOsCount}</stringProp>
              </ThroughputController>
              <hashTree>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + &quot;50LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_50LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="false">
                <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;H6&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
                  <intProp name="ThroughputController.style">0</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <stringProp name="ThroughputController.maxThroughput">${__evalVar(${category}_100LOsCount)}</stringProp>
                  <stringProp name="ThroughputController.percentThroughput">${20LOsPercentage}</stringProp>
                </ThroughputController>
                <hashTree>
                  <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                    <stringProp name="BeanShellSampler.query">String[] stringArray = {&quot;perf35_400lo_1&quot;,&quot;perf35_500lo_1&quot;,&quot;perf38_300lo_1&quot;,&quot;perf38_630lo_1&quot;,&quot;perf38_630lo_2&quot;,&quot;perf40_630lo_1&quot;,&quot;perf40_630lo_2&quot;};

int randomIndex = (int) (Math.random() * stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
                    <stringProp name="BeanShellSampler.filename"></stringProp>
                    <stringProp name="BeanShellSampler.parameters"></stringProp>
                    <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                  </BeanShellSampler>
                  <hashTree/>
                  <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                    <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1544524003551/1544524012478/1544524030068&quot;,&quot;1544524003551/1544524012478/1544524044427&quot;,&quot;1544524003551/1544524012478/1544524057691&quot;,&quot;1544524003551/1544524012478/1544524071582&quot;,&quot;1544524003551/1544524012478/1544524084276&quot;,&quot;1544524003551/1544524012478/1544524099346&quot;,&quot;1544524003551/1544524304922/1544524313700&quot;,&quot;1544524003551/1544524304922/1544524324762&quot;,&quot;1544524003551/1544524304922/1544524341184&quot;,&quot;1544524003551/1544524304922/1544524359136&quot;,&quot;1544524003551/1544524304922/1544524376121&quot;,&quot;1544524003551/1544524304922/1544524387792&quot;,&quot;1544525043137/1544525058289/1544525090848&quot;,&quot;1544525043137/1544525058289/1544525097148&quot;,&quot;1544525043137/1544525058289/1544525114886&quot;,&quot;1544525043137/1544525058289/1544525125172&quot;,&quot;1544525043137/1544525058289/1544525137957&quot;,&quot;1544525043137/1544525058289/1544525143762&quot;,&quot;1544525043137/1544525159358/1544525175677&quot;,&quot;1544525043137/1544525159358/1544525192972&quot;,&quot;1544525043137/1544525159358/1544525217177&quot;,&quot;1544525043137/1544525159358/1544525239184&quot;,&quot;1544525043137/1544525159358/1544525246748&quot;,&quot;1544525043137/1544525159358/1544525263160&quot;,&quot;1544525043137/1544525280855/1544525289279&quot;,&quot;1544525590768/1544525595533/1544525611432&quot;,&quot;1544525590768/1544525595533/1544525627465&quot;,&quot;1544525590768/1544525595533/1544525635696&quot;,&quot;1544525590768/1544525595533/1544525649026&quot;,&quot;1544525590768/1544525595533/1544525663048&quot;,&quot;1544525590768/1544525595533/1544525679427&quot;,&quot;1544525590768/1544525683364/1544525709799&quot;,&quot;1544525590768/1544525683364/1544525720457&quot;,&quot;1544525590768/1544525683364/1544525729515&quot;,&quot;1544525590768/1544525683364/1544525734676&quot;,&quot;1544525590768/1544525683364/1544525756801&quot;,&quot;1544525590768/1544525683364/1544525778291&quot;,&quot;1544526345845/1544526589100/1544526606750&quot;,&quot;1544526345845/1544526589100/1544526610825&quot;,&quot;1544526345845/1544526589100/1544526623799&quot;,&quot;1544526345845/1544526589100/1544526638110&quot;,&quot;1544526345845/1544526589100/1544526644717&quot;,&quot;1544526345845/1544526589100/1544526657285&quot;,&quot;1544526345845/1544526671965/1544526688230&quot;,&quot;1544526345845/1544526671965/1544526695320&quot;,&quot;1544526345845/1544526671965/1544526710051&quot;,&quot;1544526345845/1544526671965/1544526721801&quot;,&quot;1544526345845/1544526671965/1544526728620&quot;,&quot;1544526345845/1544526671965/1544526763389&quot;,&quot;1544526345845/1544526961740/1544526980657&quot;,&quot;1544526345845/1544526961740/1544526994099&quot;,&quot;1544526345845/1544526961740/1544527008225&quot;,&quot;1544526345845/1544528319371/1544528334775&quot;,&quot;1544526345845/1544528319371/1544528345283&quot;,&quot;1544526345845/1544528319371/1544528367998&quot;,&quot;1544591089661/1544591099675/1544591165699&quot;,&quot;1544591089661/1544591099675/1544591181584&quot;,&quot;1544591089661/1544591099675/1544591198772&quot;,&quot;1544591089661/1544591099675/1544591219876&quot;,&quot;1544591089661/1544591099675/1544591237488&quot;,&quot;1544591089661/1544591099675/1544591247402&quot;,&quot;1544591089661/1544591260222/1544591284840&quot;,&quot;1544591089661/1544591260222/1544591295680&quot;,&quot;1544591089661/1544591260222/1544591320423&quot;,&quot;1544591089661/1544591260222/1544591334581&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                    <stringProp name="BeanShellSampler.filename"></stringProp>
                    <stringProp name="BeanShellSampler.parameters"></stringProp>
                    <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                  </BeanShellSampler>
                  <hashTree/>
                  <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <boolProp name="resetInterpreter">false</boolProp>
                    <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + &quot;100LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
                  </BeanShellPreProcessor>
                  <hashTree/>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                    <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_100LOs.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
                  <intProp name="ThroughputController.style">0</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <stringProp name="ThroughputController.maxThroughput">${__evalVar(${category}_300LOsCount)}</stringProp>
                  <stringProp name="ThroughputController.percentThroughput">${20LOsPercentage}</stringProp>
                </ThroughputController>
                <hashTree>
                  <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                    <stringProp name="BeanShellSampler.query">String[] stringArray = {&quot;perf35_500lo_1&quot;,&quot;perf38_630lo_1&quot;,&quot;perf38_630lo_2&quot;,&quot;perf40_630lo_1&quot;,&quot;perf40_630lo_2&quot;};

int randomIndex = (int) (Math.random() * stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
                    <stringProp name="BeanShellSampler.filename"></stringProp>
                    <stringProp name="BeanShellSampler.parameters"></stringProp>
                    <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                  </BeanShellSampler>
                  <hashTree/>
                  <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                    <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1544524003551/1544524012478/1544524030068&quot;,&quot;1544524003551/1544524012478/1544524044427&quot;,&quot;1544524003551/1544524012478/1544524057691&quot;,&quot;1544524003551/1544524012478/1544524071582&quot;,&quot;1544524003551/1544524012478/1544524084276&quot;,&quot;1544524003551/1544524012478/1544524099346&quot;,&quot;1544524003551/1544524304922/1544524313700&quot;,&quot;1544524003551/1544524304922/1544524324762&quot;,&quot;1544524003551/1544524304922/1544524341184&quot;,&quot;1544524003551/1544524304922/1544524359136&quot;,&quot;1544524003551/1544524304922/1544524376121&quot;,&quot;1544524003551/1544524304922/1544524387792&quot;,&quot;1544525043137/1544525058289/1544525090848&quot;,&quot;1544525043137/1544525058289/1544525097148&quot;,&quot;1544525043137/1544525058289/1544525114886&quot;,&quot;1544525043137/1544525058289/1544525125172&quot;,&quot;1544525043137/1544525058289/1544525137957&quot;,&quot;1544525043137/1544525058289/1544525143762&quot;,&quot;1544525043137/1544525159358/1544525175677&quot;,&quot;1544525043137/1544525159358/1544525192972&quot;,&quot;1544525043137/1544525159358/1544525217177&quot;,&quot;1544525043137/1544525159358/1544525239184&quot;,&quot;1544525043137/1544525159358/1544525246748&quot;,&quot;1544525043137/1544525159358/1544525263160&quot;,&quot;1544525043137/1544525280855/1544525289279&quot;,&quot;1544525590768/1544525595533/1544525611432&quot;,&quot;1544525590768/1544525595533/1544525627465&quot;,&quot;1544525590768/1544525595533/1544525635696&quot;,&quot;1544525590768/1544525595533/1544525649026&quot;,&quot;1544525590768/1544525595533/1544525663048&quot;,&quot;1544525590768/1544525595533/1544525679427&quot;,&quot;1544525590768/1544525683364/1544525709799&quot;,&quot;1544525590768/1544525683364/1544525720457&quot;,&quot;1544525590768/1544525683364/1544525729515&quot;,&quot;1544525590768/1544525683364/1544525734676&quot;,&quot;1544525590768/1544525683364/1544525756801&quot;,&quot;1544525590768/1544525683364/1544525778291&quot;,&quot;1544526345845/1544526589100/1544526606750&quot;,&quot;1544526345845/1544526589100/1544526610825&quot;,&quot;1544526345845/1544526589100/1544526623799&quot;,&quot;1544526345845/1544526589100/1544526638110&quot;,&quot;1544526345845/1544526589100/1544526644717&quot;,&quot;1544526345845/1544526589100/1544526657285&quot;,&quot;1544526345845/1544526671965/1544526688230&quot;,&quot;1544526345845/1544526671965/1544526695320&quot;,&quot;1544526345845/1544526671965/1544526710051&quot;,&quot;1544526345845/1544526671965/1544526721801&quot;,&quot;1544526345845/1544526671965/1544526728620&quot;,&quot;1544526345845/1544526671965/1544526763389&quot;,&quot;1544526345845/1544526961740/1544526980657&quot;,&quot;1544526345845/1544526961740/1544526994099&quot;,&quot;1544526345845/1544526961740/1544527008225&quot;,&quot;1544526345845/1544528319371/1544528334775&quot;,&quot;1544526345845/1544528319371/1544528345283&quot;,&quot;1544526345845/1544528319371/1544528367998&quot;,&quot;1544591089661/1544591099675/1544591165699&quot;,&quot;1544591089661/1544591099675/1544591181584&quot;,&quot;1544591089661/1544591099675/1544591198772&quot;,&quot;1544591089661/1544591099675/1544591219876&quot;,&quot;1544591089661/1544591099675/1544591237488&quot;,&quot;1544591089661/1544591099675/1544591247402&quot;,&quot;1544591089661/1544591260222/1544591284840&quot;,&quot;1544591089661/1544591260222/1544591295680&quot;,&quot;1544591089661/1544591260222/1544591320423&quot;,&quot;1544591089661/1544591260222/1544591334581&quot;,&quot;1544591089661/1544591260222/1544591341221&quot;,&quot;1544591089661/1544591260222/1544591363137&quot;,&quot;1544591089661/1544591364773/1544591392809&quot;,&quot;1544591089661/1544591412698/1544591428190&quot;,&quot;1544591089661/1544591412698/1544591439057&quot;,&quot;1544591089661/1544591412698/1544591455780&quot;,&quot;1544591089661/1544591602655/1544591636888&quot;,&quot;1544591089661/1544591602655/1544591649137&quot;,&quot;1544591089661/1544591602655/1544591669971&quot;,&quot;1544591751639/1544591756584/1544591786410&quot;,&quot;1544591751639/1544591756584/1544591792950&quot;,&quot;1544591751639/1544591756584/1544591814105&quot;,&quot;1544591751639/1544591756584/1544591826125&quot;,&quot;1544591751639/1544591756584/1544591842867&quot;,&quot;1544591751639/1544591756584/1544591852005&quot;,&quot;1544591751639/1544591859950/1544591889129&quot;,&quot;1544591751639/1544591859950/1544591895035&quot;,&quot;1544591751639/1544591859950/1544591913490&quot;,&quot;1544591751639/1544591859950/1544591923488&quot;,&quot;1544591751639/1544591937229/1544591951092&quot;,&quot;1544591751639/1544591989858/1544592010989&quot;,&quot;1544591751639/1544591989858/1544592017149&quot;,&quot;1544591751639/1544591989858/1544592034736&quot;,&quot;1544591751639/1544592145731/1544592165309&quot;,&quot;1544591751639/1544592145731/1544592176780&quot;,&quot;1544591751639/1544592145731/1544592194540&quot;,&quot;1544592286221/1544592291887/1544592314873&quot;,&quot;1544592286221/1544592291887/1544592322911&quot;,&quot;1544592286221/1544592291887/1544592333414&quot;,&quot;1544592286221/1544592291887/1544592347743&quot;,&quot;1544592286221/1544592291887/1544592363784&quot;,&quot;1544592286221/1544592291887/1544592370486&quot;,&quot;1544592286221/1544592379241/1544592404760&quot;,&quot;1544592286221/1544592379241/1544592415158&quot;,&quot;1544592286221/1544592379241/1544592422449&quot;,&quot;1544592286221/1544592379241/1544592438186&quot;,&quot;1544592286221/1544592379241/1544592448263&quot;,&quot;1544592286221/1544592379241/1544592466092&quot;,&quot;1544592286221/1544592474205/1544592491253&quot;,&quot;1544592286221/1544592520233/1544592540334&quot;,&quot;1544592286221/1544592520233/1544592555974&quot;,&quot;1544592286221/1544592520233/1544592561671&quot;,&quot;1544592286221/1544592623523/1544592648386&quot;,&quot;1544592286221/1544592623523/1544592658543&quot;,&quot;1544592286221/1544592623523/1544592671565&quot;,&quot;1544592857014/1544592865722/1544593053271&quot;,&quot;1544592857014/1544592865722/1544593072380&quot;,&quot;1544592857014/1544592865722/1544593079694&quot;,&quot;1544592857014/1544592865722/1544593093552&quot;,&quot;1544592857014/1544592865722/1544593104748&quot;,&quot;1544592857014/1544592865722/1544593123201&quot;,&quot;1544592857014/1544593139545/1544593173865&quot;,&quot;1544592857014/1544593139545/1544593187008&quot;,&quot;1544592857014/1544593139545/1544593454057&quot;,&quot;1544592857014/1544593139545/1544593471128&quot;,&quot;1544592857014/1544593139545/1544593476327&quot;,&quot;1544592857014/1544593139545/1544593488247&quot;,&quot;1544592857014/1544593529004/1544593551477&quot;,&quot;1544592857014/1544593585947/1544593606215&quot;,&quot;1544592857014/1544593585947/1544593620647&quot;,&quot;1544592857014/1544593585947/1544593632079&quot;,&quot;1544592857014/1544593703192/1544593728070&quot;,&quot;1544592857014/1544593703192/1544593743725&quot;,&quot;1544592857014/1544593703192/1544593752239&quot;,&quot;1544593830881/1544593842258/1544593874472&quot;,&quot;1544593830881/1544593842258/1544593889640&quot;,&quot;1544593830881/1544593842258/1544593905062&quot;,&quot;1544593830881/1544593842258/1544593925051&quot;,&quot;1544593830881/1544593842258/1544593932560&quot;,&quot;1544593830881/1544593842258/1544593949312&quot;,&quot;1544593830881/1544593964252/1544594078882&quot;,&quot;1544593830881/1544593964252/1544594102416&quot;,&quot;1544593830881/1544593964252/1544594113782&quot;,&quot;1544593830881/1544593964252/1544594135462&quot;,&quot;1544593830881/1544593964252/1544594177257&quot;,&quot;1544593830881/1544593964252/1544594194047&quot;,&quot;1544593830881/1544596248781/1544596271349&quot;,&quot;1544593830881/1544596291616/1544596322099&quot;,&quot;1544593830881/1544596291616/1544596327463&quot;,&quot;1544593830881/1544596291616/1544596347700&quot;,&quot;1544593830881/1544596494652/1544596513093&quot;,&quot;1544593830881/1544596494652/1544596529922&quot;,&quot;1544593830881/1544596494652/1544596545929&quot;,&quot;1544596644314/1544596678647/1544596711546&quot;,&quot;1544596644314/1544596678647/1544596731689&quot;,&quot;1544596644314/1544596678647/1544596745950&quot;,&quot;1544596644314/1544596678647/1544596761923&quot;,&quot;1544596644314/1544596678647/1544596768254&quot;,&quot;1544596644314/1544596678647/1544596792897&quot;,&quot;1544596644314/1544596802487/1544596845016&quot;,&quot;1544596644314/1544596802487/1544596858389&quot;,&quot;1544596644314/1544596802487/1544596877787&quot;,&quot;1544596644314/1544596802487/1544596890399&quot;,&quot;1544596644314/1544596802487/1544596904838&quot;,&quot;1544596644314/1544596802487/1544596921860&quot;,&quot;1544596644314/1544597008306/1544597032165&quot;,&quot;1544596644314/1544597091060/1544597104557&quot;,&quot;1544596644314/1544597091060/1544597121860&quot;,&quot;1544596644314/1544597091060/1544597149347&quot;,&quot;1544596644314/1544597220792/1544597245750&quot;,&quot;1544596644314/1544597220792/1544597262426&quot;,&quot;1544596644314/1544597220792/1544597275965&quot;,&quot;1676462274557/1676462274558/1676462274559&quot;,&quot;1676462274557/1676462274558/1676462274560&quot;,&quot;1676462274557/1676462274558/1676462274561&quot;,&quot;1676462274557/1676462274558/1676462274562&quot;,&quot;1676462274557/1676462274558/1676462274563&quot;,&quot;1676462274557/1676462274558/1676462274564&quot;,&quot;1676462274557/1676462274558/1676462274565&quot;,&quot;1676462274557/1676462274558/1676462274566&quot;,&quot;1676462274557/1676462274558/1676462274567&quot;,&quot;1676462274557/1676462274558/1676462274568&quot;,&quot;1676462274557/1676462274558/1676462274569&quot;,&quot;1676462274557/1676462274558/1676462274570&quot;,&quot;1676462274557/1676462274558/1676462274571&quot;,&quot;1676462274557/1676462274558/1676462274572&quot;,&quot;1676462274557/1676462274558/1676462274573&quot;,&quot;1676462274557/1676462274558/1676462274574&quot;,&quot;1676462274557/1676462274558/1676462274575&quot;,&quot;1676462274557/1676462274558/1676462274576&quot;,&quot;1676462274557/1676462274558/1676462274577&quot;,&quot;1676462274557/1676462274558/1676462274578&quot;,&quot;1676462274557/1676462274558/1676462274579&quot;,&quot;1676462274557/1676462274558/1676462274580&quot;,&quot;1676462274557/1676462274558/1676462274581&quot;,&quot;1676462274557/1676462274558/1676462274582&quot;,&quot;1676462274557/1676462274558/1676462274583&quot;,&quot;1676462274557/1676462274558/1676462274584&quot;,&quot;1676462274557/1676462274558/1676462274585&quot;,&quot;1676462274557/1676462274558/1676462274586&quot;,&quot;1676462274557/1676462274558/1676462274587&quot;,&quot;1676462274557/1676462274558/1676462274588&quot;,&quot;1676462274557/1676462274558/1676462274589&quot;,&quot;1676462274557/1676462274558/1676462274590&quot;,&quot;1676462274557/1676462274558/1676462274591&quot;,&quot;1676462274557/1676462274558/1676462274592&quot;,&quot;1676462274557/1676462274558/1676462274593&quot;,&quot;1676462274557/1676462274558/1676462274594&quot;,&quot;1676462274557/1676462274558/1676462274595&quot;,&quot;1676462274557/1676462274558/1676462274596&quot;,&quot;1676462274557/1676462274558/1676462274597&quot;,&quot;1676462274557/1676462274558/1676462274598&quot;,&quot;1676462274557/1676462274558/1676462274599&quot;,&quot;1676462274557/1676462274558/1676462274600&quot;,&quot;1676462274557/1676462274558/1676462274601&quot;,&quot;1676462274557/1676462274558/1676462274602&quot;,&quot;1676462274557/1676462274558/1676462274603&quot;,&quot;1676462274557/1676462274558/1676462274604&quot;,&quot;1676462274557/1676462274558/1676462274605&quot;,&quot;1676462274557/1676462274558/1676462274606&quot;,&quot;1676462274557/1676462274558/1676462274607&quot;,&quot;1676462274557/1676462274558/1676462274608&quot;,&quot;1676462274557/1676462274558/1676462274609&quot;,&quot;1676462274557/1676462274558/1676462274610&quot;,&quot;1676462274557/1676462274558/1676462274611&quot;,&quot;1676462274557/1676462274558/1676462274612&quot;,&quot;1676462274557/1676462274558/1676462274613&quot;,&quot;1676462274557/1676462274558/1676462274614&quot;,&quot;1676462274557/1676462274558/1676462274615&quot;,&quot;1676462274557/1676462274558/1676462274616&quot;,&quot;1676462274557/1676462274558/1676462274617&quot;,&quot;1676462274557/1676462274558/1676462274618&quot;,&quot;1676462274557/1676462274558/1676462274619&quot;,&quot;1676462274557/1676462274558/1676462274620&quot;,&quot;1676462274557/1676462274558/1676462274621&quot;,&quot;1676462274557/1676462274558/1676462274622&quot;,&quot;1676462274557/1676462274558/1676462274623&quot;,&quot;1676462274557/1676462274558/1676462274624&quot;,&quot;1676462274557/1676462274558/1676462274625&quot;,&quot;1676462274557/1676462274558/1676462274626&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1676462274659/1676462274660/1676462274671&quot;,&quot;1676462274659/1676462274660/1676462274672&quot;,&quot;1676462274659/1676462274660/1676462274673&quot;,&quot;1676462274659/1676462274660/1676462274674&quot;,&quot;1676462274659/1676462274660/1676462274675&quot;,&quot;1676462274659/1676462274660/1676462274676&quot;,&quot;1676462274659/1676462274660/1676462274677&quot;,&quot;1676462274659/1676462274660/1676462274678&quot;,&quot;1676462274659/1676462274660/1676462274679&quot;,&quot;1676462274659/1676462274660/1676462274680&quot;,&quot;1676462274659/1676462274660/1676462274681&quot;,&quot;1676462274659/1676462274660/1676462274682&quot;,&quot;1676462274659/1676462274660/1676462274683&quot;,&quot;1676462274659/1676462274660/1676462274684&quot;,&quot;1676462274659/1676462274660/1676462274685&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                    <stringProp name="BeanShellSampler.filename"></stringProp>
                    <stringProp name="BeanShellSampler.parameters"></stringProp>
                    <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                  </BeanShellSampler>
                  <hashTree/>
                  <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <boolProp name="resetInterpreter">false</boolProp>
                    <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + &quot;300LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
                  </BeanShellPreProcessor>
                  <hashTree/>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                    <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_300LOs.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
                  <intProp name="ThroughputController.style">0</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <stringProp name="ThroughputController.maxThroughput">${__evalVar(${category}_500LOsCount)}</stringProp>
                  <stringProp name="ThroughputController.percentThroughput">${20LOsPercentage}</stringProp>
                </ThroughputController>
                <hashTree>
                  <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                    <stringProp name="BeanShellSampler.query">String[] stringArray = {&quot;perf38_630lo_1&quot;,&quot;perf38_630lo_2&quot;,&quot;perf40_630lo_1&quot;,&quot;perf40_630lo_2&quot;};

int randomIndex = (int) (Math.random() * stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
                    <stringProp name="BeanShellSampler.filename"></stringProp>
                    <stringProp name="BeanShellSampler.parameters"></stringProp>
                    <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                  </BeanShellSampler>
                  <hashTree/>
                  <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                    <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1544524003551/1544524012478/1544524030068&quot;,&quot;1544524003551/1544524012478/1544524044427&quot;,&quot;1544524003551/1544524012478/1544524057691&quot;,&quot;1544524003551/1544524012478/1544524071582&quot;,&quot;1544524003551/1544524012478/1544524084276&quot;,&quot;1544524003551/1544524012478/1544524099346&quot;,&quot;1544524003551/1544524304922/1544524313700&quot;,&quot;1544524003551/1544524304922/1544524324762&quot;,&quot;1544524003551/1544524304922/1544524341184&quot;,&quot;1544524003551/1544524304922/1544524359136&quot;,&quot;1544524003551/1544524304922/1544524376121&quot;,&quot;1544524003551/1544524304922/1544524387792&quot;,&quot;1544525043137/1544525058289/1544525090848&quot;,&quot;1544525043137/1544525058289/1544525097148&quot;,&quot;1544525043137/1544525058289/1544525114886&quot;,&quot;1544525043137/1544525058289/1544525125172&quot;,&quot;1544525043137/1544525058289/1544525137957&quot;,&quot;1544525043137/1544525058289/1544525143762&quot;,&quot;1544525043137/1544525159358/1544525175677&quot;,&quot;1544525043137/1544525159358/1544525192972&quot;,&quot;1544525043137/1544525159358/1544525217177&quot;,&quot;1544525043137/1544525159358/1544525239184&quot;,&quot;1544525043137/1544525159358/1544525246748&quot;,&quot;1544525043137/1544525159358/1544525263160&quot;,&quot;1544525043137/1544525280855/1544525289279&quot;,&quot;1544525590768/1544525595533/1544525611432&quot;,&quot;1544525590768/1544525595533/1544525627465&quot;,&quot;1544525590768/1544525595533/1544525635696&quot;,&quot;1544525590768/1544525595533/1544525649026&quot;,&quot;1544525590768/1544525595533/1544525663048&quot;,&quot;1544525590768/1544525595533/1544525679427&quot;,&quot;1544525590768/1544525683364/1544525709799&quot;,&quot;1544525590768/1544525683364/1544525720457&quot;,&quot;1544525590768/1544525683364/1544525729515&quot;,&quot;1544525590768/1544525683364/1544525734676&quot;,&quot;1544525590768/1544525683364/1544525756801&quot;,&quot;1544525590768/1544525683364/1544525778291&quot;,&quot;1544526345845/1544526589100/1544526606750&quot;,&quot;1544526345845/1544526589100/1544526610825&quot;,&quot;1544526345845/1544526589100/1544526623799&quot;,&quot;1544526345845/1544526589100/1544526638110&quot;,&quot;1544526345845/1544526589100/1544526644717&quot;,&quot;1544526345845/1544526589100/1544526657285&quot;,&quot;1544526345845/1544526671965/1544526688230&quot;,&quot;1544526345845/1544526671965/1544526695320&quot;,&quot;1544526345845/1544526671965/1544526710051&quot;,&quot;1544526345845/1544526671965/1544526721801&quot;,&quot;1544526345845/1544526671965/1544526728620&quot;,&quot;1544526345845/1544526671965/1544526763389&quot;,&quot;1544526345845/1544526961740/1544526980657&quot;,&quot;1544526345845/1544526961740/1544526994099&quot;,&quot;1544526345845/1544526961740/1544527008225&quot;,&quot;1544526345845/1544528319371/1544528334775&quot;,&quot;1544526345845/1544528319371/1544528345283&quot;,&quot;1544526345845/1544528319371/1544528367998&quot;,&quot;1544591089661/1544591099675/1544591165699&quot;,&quot;1544591089661/1544591099675/1544591181584&quot;,&quot;1544591089661/1544591099675/1544591198772&quot;,&quot;1544591089661/1544591099675/1544591219876&quot;,&quot;1544591089661/1544591099675/1544591237488&quot;,&quot;1544591089661/1544591099675/1544591247402&quot;,&quot;1544591089661/1544591260222/1544591284840&quot;,&quot;1544591089661/1544591260222/1544591295680&quot;,&quot;1544591089661/1544591260222/1544591320423&quot;,&quot;1544591089661/1544591260222/1544591334581&quot;,&quot;1544591089661/1544591260222/1544591341221&quot;,&quot;1544591089661/1544591260222/1544591363137&quot;,&quot;1544591089661/1544591364773/1544591392809&quot;,&quot;1544591089661/1544591412698/1544591428190&quot;,&quot;1544591089661/1544591412698/1544591439057&quot;,&quot;1544591089661/1544591412698/1544591455780&quot;,&quot;1544591089661/1544591602655/1544591636888&quot;,&quot;1544591089661/1544591602655/1544591649137&quot;,&quot;1544591089661/1544591602655/1544591669971&quot;,&quot;1544591751639/1544591756584/1544591786410&quot;,&quot;1544591751639/1544591756584/1544591792950&quot;,&quot;1544591751639/1544591756584/1544591814105&quot;,&quot;1544591751639/1544591756584/1544591826125&quot;,&quot;1544591751639/1544591756584/1544591842867&quot;,&quot;1544591751639/1544591756584/1544591852005&quot;,&quot;1544591751639/1544591859950/1544591889129&quot;,&quot;1544591751639/1544591859950/1544591895035&quot;,&quot;1544591751639/1544591859950/1544591913490&quot;,&quot;1544591751639/1544591859950/1544591923488&quot;,&quot;1544591751639/1544591937229/1544591951092&quot;,&quot;1544591751639/1544591989858/1544592010989&quot;,&quot;1544591751639/1544591989858/1544592017149&quot;,&quot;1544591751639/1544591989858/1544592034736&quot;,&quot;1544591751639/1544592145731/1544592165309&quot;,&quot;1544591751639/1544592145731/1544592176780&quot;,&quot;1544591751639/1544592145731/1544592194540&quot;,&quot;1544592286221/1544592291887/1544592314873&quot;,&quot;1544592286221/1544592291887/1544592322911&quot;,&quot;1544592286221/1544592291887/1544592333414&quot;,&quot;1544592286221/1544592291887/1544592347743&quot;,&quot;1544592286221/1544592291887/1544592363784&quot;,&quot;1544592286221/1544592291887/1544592370486&quot;,&quot;1544592286221/1544592379241/1544592404760&quot;,&quot;1544592286221/1544592379241/1544592415158&quot;,&quot;1544592286221/1544592379241/1544592422449&quot;,&quot;1544592286221/1544592379241/1544592438186&quot;,&quot;1544592286221/1544592379241/1544592448263&quot;,&quot;1544592286221/1544592379241/1544592466092&quot;,&quot;1544592286221/1544592474205/1544592491253&quot;,&quot;1544592286221/1544592520233/1544592540334&quot;,&quot;1544592286221/1544592520233/1544592555974&quot;,&quot;1544592286221/1544592520233/1544592561671&quot;,&quot;1544592286221/1544592623523/1544592648386&quot;,&quot;1544592286221/1544592623523/1544592658543&quot;,&quot;1544592286221/1544592623523/1544592671565&quot;,&quot;1544592857014/1544592865722/1544593053271&quot;,&quot;1544592857014/1544592865722/1544593072380&quot;,&quot;1544592857014/1544592865722/1544593079694&quot;,&quot;1544592857014/1544592865722/1544593093552&quot;,&quot;1544592857014/1544592865722/1544593104748&quot;,&quot;1544592857014/1544592865722/1544593123201&quot;,&quot;1544592857014/1544593139545/1544593173865&quot;,&quot;1544592857014/1544593139545/1544593187008&quot;,&quot;1544592857014/1544593139545/1544593454057&quot;,&quot;1544592857014/1544593139545/1544593471128&quot;,&quot;1544592857014/1544593139545/1544593476327&quot;,&quot;1544592857014/1544593139545/1544593488247&quot;,&quot;1544592857014/1544593529004/1544593551477&quot;,&quot;1544592857014/1544593585947/1544593606215&quot;,&quot;1544592857014/1544593585947/1544593620647&quot;,&quot;1544592857014/1544593585947/1544593632079&quot;,&quot;1544592857014/1544593703192/1544593728070&quot;,&quot;1544592857014/1544593703192/1544593743725&quot;,&quot;1544592857014/1544593703192/1544593752239&quot;,&quot;1544593830881/1544593842258/1544593874472&quot;,&quot;1544593830881/1544593842258/1544593889640&quot;,&quot;1544593830881/1544593842258/1544593905062&quot;,&quot;1544593830881/1544593842258/1544593925051&quot;,&quot;1544593830881/1544593842258/1544593932560&quot;,&quot;1544593830881/1544593842258/1544593949312&quot;,&quot;1544593830881/1544593964252/1544594078882&quot;,&quot;1544593830881/1544593964252/1544594102416&quot;,&quot;1544593830881/1544593964252/1544594113782&quot;,&quot;1544593830881/1544593964252/1544594135462&quot;,&quot;1544593830881/1544593964252/1544594177257&quot;,&quot;1544593830881/1544593964252/1544594194047&quot;,&quot;1544593830881/1544596248781/1544596271349&quot;,&quot;1544593830881/1544596291616/1544596322099&quot;,&quot;1544593830881/1544596291616/1544596327463&quot;,&quot;1544593830881/1544596291616/1544596347700&quot;,&quot;1544593830881/1544596494652/1544596513093&quot;,&quot;1544593830881/1544596494652/1544596529922&quot;,&quot;1544593830881/1544596494652/1544596545929&quot;,&quot;1544596644314/1544596678647/1544596711546&quot;,&quot;1544596644314/1544596678647/1544596731689&quot;,&quot;1544596644314/1544596678647/1544596745950&quot;,&quot;1544596644314/1544596678647/1544596761923&quot;,&quot;1544596644314/1544596678647/1544596768254&quot;,&quot;1544596644314/1544596678647/1544596792897&quot;,&quot;1544596644314/1544596802487/1544596845016&quot;,&quot;1544596644314/1544596802487/1544596858389&quot;,&quot;1544596644314/1544596802487/1544596877787&quot;,&quot;1544596644314/1544596802487/1544596890399&quot;,&quot;1544596644314/1544596802487/1544596904838&quot;,&quot;1544596644314/1544596802487/1544596921860&quot;,&quot;1544596644314/1544597008306/1544597032165&quot;,&quot;1544596644314/1544597091060/1544597104557&quot;,&quot;1544596644314/1544597091060/1544597121860&quot;,&quot;1544596644314/1544597091060/1544597149347&quot;,&quot;1544596644314/1544597220792/1544597245750&quot;,&quot;1544596644314/1544597220792/1544597262426&quot;,&quot;1544596644314/1544597220792/1544597275965&quot;,&quot;1676462274557/1676462274558/1676462274559&quot;,&quot;1676462274557/1676462274558/1676462274560&quot;,&quot;1676462274557/1676462274558/1676462274561&quot;,&quot;1676462274557/1676462274558/1676462274562&quot;,&quot;1676462274557/1676462274558/1676462274563&quot;,&quot;1676462274557/1676462274558/1676462274564&quot;,&quot;1676462274557/1676462274558/1676462274565&quot;,&quot;1676462274557/1676462274558/1676462274566&quot;,&quot;1676462274557/1676462274558/1676462274567&quot;,&quot;1676462274557/1676462274558/1676462274568&quot;,&quot;1676462274557/1676462274558/1676462274569&quot;,&quot;1676462274557/1676462274558/1676462274570&quot;,&quot;1676462274557/1676462274558/1676462274571&quot;,&quot;1676462274557/1676462274558/1676462274572&quot;,&quot;1676462274557/1676462274558/1676462274573&quot;,&quot;1676462274557/1676462274558/1676462274574&quot;,&quot;1676462274557/1676462274558/1676462274575&quot;,&quot;1676462274557/1676462274558/1676462274576&quot;,&quot;1676462274557/1676462274558/1676462274577&quot;,&quot;1676462274557/1676462274558/1676462274578&quot;,&quot;1676462274557/1676462274558/1676462274579&quot;,&quot;1676462274557/1676462274558/1676462274580&quot;,&quot;1676462274557/1676462274558/1676462274581&quot;,&quot;1676462274557/1676462274558/1676462274582&quot;,&quot;1676462274557/1676462274558/1676462274583&quot;,&quot;1676462274557/1676462274558/1676462274584&quot;,&quot;1676462274557/1676462274558/1676462274585&quot;,&quot;1676462274557/1676462274558/1676462274586&quot;,&quot;1676462274557/1676462274558/1676462274587&quot;,&quot;1676462274557/1676462274558/1676462274588&quot;,&quot;1676462274557/1676462274558/1676462274589&quot;,&quot;1676462274557/1676462274558/1676462274590&quot;,&quot;1676462274557/1676462274558/1676462274591&quot;,&quot;1676462274557/1676462274558/1676462274592&quot;,&quot;1676462274557/1676462274558/1676462274593&quot;,&quot;1676462274557/1676462274558/1676462274594&quot;,&quot;1676462274557/1676462274558/1676462274595&quot;,&quot;1676462274557/1676462274558/1676462274596&quot;,&quot;1676462274557/1676462274558/1676462274597&quot;,&quot;1676462274557/1676462274558/1676462274598&quot;,&quot;1676462274557/1676462274558/1676462274599&quot;,&quot;1676462274557/1676462274558/1676462274600&quot;,&quot;1676462274557/1676462274558/1676462274601&quot;,&quot;1676462274557/1676462274558/1676462274602&quot;,&quot;1676462274557/1676462274558/1676462274603&quot;,&quot;1676462274557/1676462274558/1676462274604&quot;,&quot;1676462274557/1676462274558/1676462274605&quot;,&quot;1676462274557/1676462274558/1676462274606&quot;,&quot;1676462274557/1676462274558/1676462274607&quot;,&quot;1676462274557/1676462274558/1676462274608&quot;,&quot;1676462274557/1676462274558/1676462274609&quot;,&quot;1676462274557/1676462274558/1676462274610&quot;,&quot;1676462274557/1676462274558/1676462274611&quot;,&quot;1676462274557/1676462274558/1676462274612&quot;,&quot;1676462274557/1676462274558/1676462274613&quot;,&quot;1676462274557/1676462274558/1676462274614&quot;,&quot;1676462274557/1676462274558/1676462274615&quot;,&quot;1676462274557/1676462274558/1676462274616&quot;,&quot;1676462274557/1676462274558/1676462274617&quot;,&quot;1676462274557/1676462274558/1676462274618&quot;,&quot;1676462274557/1676462274558/1676462274619&quot;,&quot;1676462274557/1676462274558/1676462274620&quot;,&quot;1676462274557/1676462274558/1676462274621&quot;,&quot;1676462274557/1676462274558/1676462274622&quot;,&quot;1676462274557/1676462274558/1676462274623&quot;,&quot;1676462274557/1676462274558/1676462274624&quot;,&quot;1676462274557/1676462274558/1676462274625&quot;,&quot;1676462274557/1676462274558/1676462274626&quot;,&quot;1676462274557/1676462274558/1676462274627&quot;,&quot;1676462274557/1676462274558/1676462274628&quot;,&quot;1676462274557/1676462274558/1676462274629&quot;,&quot;1676462274557/1676462274558/1676462274630&quot;,&quot;1676462274557/1676462274558/1676462274631&quot;,&quot;1676462274557/1676462274558/1676462274632&quot;,&quot;1676462274557/1676462274558/1676462274633&quot;,&quot;1676462274557/1676462274558/1676462274634&quot;,&quot;1676462274557/1676462274558/1676462274635&quot;,&quot;1676462274557/1676462274558/1676462274636&quot;,&quot;1676462274557/1676462274558/1676462274637&quot;,&quot;1676462274557/1676462274558/1676462274638&quot;,&quot;1676462274557/1676462274558/1676462274639&quot;,&quot;1676462274557/1676462274558/1676462274640&quot;,&quot;1676462274557/1676462274558/1676462274641&quot;,&quot;1676462274557/1676462274558/1676462274642&quot;,&quot;1676462274557/1676462274558/1676462274643&quot;,&quot;1676462274557/1676462274558/1676462274644&quot;,&quot;1676462274557/1676462274558/1676462274645&quot;,&quot;1676462274557/1676462274558/1676462274646&quot;,&quot;1676462274557/1676462274558/1676462274647&quot;,&quot;1676462274557/1676462274558/1676462274648&quot;,&quot;1676462274557/1676462274558/1676462274649&quot;,&quot;1676462274557/1676462274558/1676462274650&quot;,&quot;1676462274557/1676462274558/1676462274651&quot;,&quot;1676462274557/1676462274558/1676462274652&quot;,&quot;1676462274557/1676462274558/1676462274653&quot;,&quot;1676462274557/1676462274558/1676462274654&quot;,&quot;1676462274557/1676462274558/1676462274655&quot;,&quot;1676462274557/1676462274558/1676462274656&quot;,&quot;1676462274557/1676462274558/1676462274657&quot;,&quot;1676462274557/1676462274558/1676462274658&quot;,&quot;1676462274557/1676462274558/1676462274761&quot;,&quot;1676462274557/1676462274558/1676462274762&quot;,&quot;1676462274557/1676462274558/1676462274763&quot;,&quot;1676462274557/1676462274558/1676462274764&quot;,&quot;1676462274557/1676462274558/1676462274765&quot;,&quot;1676462274557/1676462274558/1676462274766&quot;,&quot;1676462274557/1676462274558/1676462274767&quot;,&quot;1676462274557/1676462274558/1676462274768&quot;,&quot;1676462274557/1676462274558/1676462274769&quot;,&quot;1676462274557/1676462274558/1676462274770&quot;,&quot;1676462274557/1676462274558/1676462274771&quot;,&quot;1676462274557/1676462274558/1676462274772&quot;,&quot;1676462274557/1676462274558/1676462274773&quot;,&quot;1676462274557/1676462274558/1676462274774&quot;,&quot;1676462274557/1676462274558/1676462274775&quot;,&quot;1676462274557/1676462274558/1676462274776&quot;,&quot;1676462274557/1676462274558/1676462274777&quot;,&quot;1676462274557/1676462274558/1676462274778&quot;,&quot;1676462274557/1676462274558/1676462274779&quot;,&quot;1676462274557/1676462274558/1676462274780&quot;,&quot;1676462274557/1676462274558/1676462274781&quot;,&quot;1676462274557/1676462274558/1676462274782&quot;,&quot;1676462274557/1676462274558/1676462274783&quot;,&quot;1676462274557/1676462274558/1676462274784&quot;,&quot;1676462274557/1676462274558/1676462274785&quot;,&quot;1676462274557/1676462274558/1676462274786&quot;,&quot;1676462274557/1676462274558/1676462274787&quot;,&quot;1676462274557/1676462274558/1676462274788&quot;,&quot;1676462274557/1676462274558/1676462274789&quot;,&quot;1676462274557/1676462274558/1676462274790&quot;,&quot;1676462274557/1676462274558/1676462274791&quot;,&quot;1676462274557/1676462274558/1676462274792&quot;,&quot;1676462274557/1676462274558/1676462274793&quot;,&quot;1676462274557/1676462274558/1676462274794&quot;,&quot;1676462274557/1676462274558/1676462274795&quot;,&quot;1676462274557/1676462274558/1676462274796&quot;,&quot;1676462274557/1676462274558/1676462274797&quot;,&quot;1676462274557/1676462274558/1676462274798&quot;,&quot;1676462274557/1676462274558/1676462274799&quot;,&quot;1676462274557/1676462274558/1676462274800&quot;,&quot;1676462274557/1676462274558/1676462274801&quot;,&quot;1676462274557/1676462274558/1676462274802&quot;,&quot;1676462274557/1676462274558/1676462274803&quot;,&quot;1676462274557/1676462274558/1676462274804&quot;,&quot;1676462274557/1676462274558/1676462274805&quot;,&quot;1676462274557/1676462274558/1676462274806&quot;,&quot;1676462274557/1676462274558/1676462274807&quot;,&quot;1676462274557/1676462274558/1676462274808&quot;,&quot;1676462274557/1676462274558/1676462274809&quot;,&quot;1676462274557/1676462274558/1676462274810&quot;,&quot;1676462274557/1676462274558/1676462274811&quot;,&quot;1676462274557/1676462274558/1676462274812&quot;,&quot;1676462274557/1676462274558/1676462274813&quot;,&quot;1676462274557/1676462274558/1676462274814&quot;,&quot;1676462274557/1676462274558/1676462274815&quot;,&quot;1676462274557/1676462274558/1676462274816&quot;,&quot;1676462274557/1676462274558/1676462274817&quot;,&quot;1676462274557/1676462274558/1676462274818&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1676462274659/1676462274660/1676462274671&quot;,&quot;1676462274659/1676462274660/1676462274672&quot;,&quot;1676462274659/1676462274660/1676462274673&quot;,&quot;1676462274659/1676462274660/1676462274674&quot;,&quot;1676462274659/1676462274660/1676462274675&quot;,&quot;1676462274659/1676462274660/1676462274676&quot;,&quot;1676462274659/1676462274660/1676462274677&quot;,&quot;1676462274659/1676462274660/1676462274678&quot;,&quot;1676462274659/1676462274660/1676462274679&quot;,&quot;1676462274659/1676462274660/1676462274680&quot;,&quot;1676462274659/1676462274660/1676462274681&quot;,&quot;1676462274659/1676462274660/1676462274682&quot;,&quot;1676462274659/1676462274660/1676462274683&quot;,&quot;1676462274659/1676462274660/1676462274684&quot;,&quot;1676462274659/1676462274660/1676462274685&quot;,&quot;1676462274659/1676462274660/1676462274686&quot;,&quot;1676462274659/1676462274660/1676462274687&quot;,&quot;1676462274659/1676462274660/1676462274688&quot;,&quot;1676462274659/1676462274660/1676462274689&quot;,&quot;1676462274659/1676462274660/1676462274690&quot;,&quot;1676462274659/1676462274660/1676462274691&quot;,&quot;1676462274659/1676462274660/1676462274692&quot;,&quot;1676462274659/1676462274660/1676462274693&quot;,&quot;1676462274659/1676462274660/1676462274694&quot;,&quot;1676462274659/1676462274660/1676462274695&quot;,&quot;1676462274659/1676462274660/1676462274696&quot;,&quot;1676462274659/1676462274660/1676462274697&quot;,&quot;1676462274659/1676462274660/1676462274698&quot;,&quot;1676462274659/1676462274660/1676462274699&quot;,&quot;1676462274659/1676462274660/1676462274700&quot;,&quot;1676462274659/1676462274660/1676462274701&quot;,&quot;1676462274659/1676462274660/1676462274702&quot;,&quot;1676462274659/1676462274660/1676462274703&quot;,&quot;1676462274659/1676462274660/1676462274704&quot;,&quot;1676462274659/1676462274660/1676462274705&quot;,&quot;1676462274659/1676462274660/1676462274706&quot;,&quot;1676462274659/1676462274660/1676462274707&quot;,&quot;1676462274659/1676462274660/1676462274708&quot;,&quot;1676462274659/1676462274660/1676462274709&quot;,&quot;1676462274659/1676462274660/1676462274710&quot;,&quot;1676462274659/1676462274660/1676462274711&quot;,&quot;1676462274659/1676462274660/1676462274712&quot;,&quot;1676462274659/1676462274660/1676462274713&quot;,&quot;1676462274659/1676462274660/1676462274714&quot;,&quot;1676462274659/1676462274660/1676462274715&quot;,&quot;1676462274659/1676462274660/1676462274716&quot;,&quot;1676462274659/1676462274660/1676462274717&quot;,&quot;1676462274659/1676462274660/1676462274718&quot;,&quot;1676462274659/1676462274660/1676462274719&quot;,&quot;1676462274659/1676462274660/1676462274720&quot;,&quot;1676462274659/1676462274660/1676462274721&quot;,&quot;1676462274659/1676462274660/1676462274722&quot;,&quot;1676462274659/1676462274660/1676462274723&quot;,&quot;1676462274659/1676462274660/1676462274724&quot;,&quot;1676462274659/1676462274660/1676462274725&quot;,&quot;1676462274659/1676462274660/1676462274726&quot;,&quot;1676462274659/1676462274660/1676462274727&quot;,&quot;1676462274659/1676462274660/1676462274728&quot;,&quot;1676462274659/1676462274660/1676462274729&quot;,&quot;1676462274659/1676462274660/1676462274730&quot;,&quot;1676462274659/1676462274660/1676462274731&quot;,&quot;1676462274659/1676462274660/1676462274732&quot;,&quot;1676462274659/1676462274660/1676462274733&quot;,&quot;1676462274659/1676462274660/1676462274734&quot;,&quot;1676462274659/1676462274660/1676462274735&quot;,&quot;1676462274659/1676462274660/1676462274736&quot;,&quot;1676462274659/1676462274660/1676462274737&quot;,&quot;1676462274659/1676462274660/1676462274738&quot;,&quot;1676462274659/1676462274660/1676462274739&quot;,&quot;1676462274659/1676462274660/1676462274740&quot;,&quot;1676462274659/1676462274660/1676462274741&quot;,&quot;1676462274659/1676462274660/1676462274742&quot;,&quot;1676462274659/1676462274660/1676462274743&quot;,&quot;1676462274659/1676462274660/1676462274744&quot;,&quot;1676462274659/1676462274660/1676462274745&quot;,&quot;1676462274659/1676462274660/1676462274746&quot;,&quot;1676462274659/1676462274660/1676462274747&quot;,&quot;1676462274659/1676462274660/1676462274748&quot;,&quot;1676462274659/1676462274660/1676462274749&quot;,&quot;1676462274659/1676462274660/1676462274750&quot;,&quot;1676462274659/1676462274660/1676462274751&quot;,&quot;1676462274659/1676462274660/1676462274752&quot;,&quot;1676462274659/1676462274660/1676462274753&quot;,&quot;1676462274659/1676462274660/1676462274754&quot;,&quot;1676462274659/1676462274660/1676462274755&quot;,&quot;1676462274659/1676462274660/1676462274756&quot;,&quot;1676462274659/1676462274660/1676462274757&quot;,&quot;1676462274659/1676462274660/1676462274758&quot;,&quot;1676462274659/1676462274660/1676462274759&quot;,&quot;1676462274659/1676462274660/1676462274760&quot;,&quot;1676462274659/1676462274660/1676462274836&quot;,&quot;1676462274659/1676462274660/1676462274837&quot;,&quot;1676462274659/1676462274660/1676462274838&quot;,&quot;1676462274659/1676462274660/1676462274839&quot;,&quot;1676462274659/1676462274660/1676462274840&quot;,&quot;1676462274659/1676462274660/1676462274841&quot;,&quot;1676462274659/1676462274660/1676462274842&quot;,&quot;1676462274659/1676462274660/1676462274843&quot;,&quot;1676462274659/1676462274660/1676462274844&quot;,&quot;1676462274659/1676462274660/1676462274845&quot;,&quot;1676462274659/1676462274660/1676462274846&quot;,&quot;1676462274659/1676462274660/1676462274847&quot;,&quot;1676462274659/1676462274660/1676462274848&quot;,&quot;1676462274659/1676462274660/1676462274849&quot;,&quot;1676462274659/1676462274660/1676462274850&quot;,&quot;1676462274659/1676462274660/1676462274851&quot;,&quot;1676462274659/1676462274660/1676462274852&quot;,&quot;1676462274659/1676462274660/1676462274853&quot;,&quot;1676462274659/1676462274660/1676462274854&quot;,&quot;1676462274659/1676462274660/1676462274855&quot;,&quot;1676462274659/1676462274660/1676462274856&quot;,&quot;1676462274659/1676462274660/1676462274857&quot;,&quot;1676462274659/1676462274660/1676462274858&quot;,&quot;1676462274659/1676462274660/1676462274859&quot;,&quot;1676462274659/1676462274660/1676462274860&quot;,&quot;1676462274659/1676462274660/1676462274861&quot;,&quot;1676462274659/1676462274660/1676462274862&quot;,&quot;1676462274659/1676462274660/1676462274863&quot;,&quot;1676462274659/1676462274660/1676462274864&quot;,&quot;1676462274659/1676462274660/1676462274865&quot;,&quot;1676462274659/1676462274660/1676462274866&quot;,&quot;1676462274659/1676462274660/1676462274867&quot;,&quot;1676462274659/1676462274660/1676462274868&quot;,&quot;1676462274659/1676462274660/1676462274869&quot;,&quot;1676462274659/1676462274660/1676462274870&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                    <stringProp name="BeanShellSampler.filename"></stringProp>
                    <stringProp name="BeanShellSampler.parameters"></stringProp>
                    <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                  </BeanShellSampler>
                  <hashTree/>
                  <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <boolProp name="resetInterpreter">false</boolProp>
                    <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + &quot;500LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
                  </BeanShellPreProcessor>
                  <hashTree/>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                    <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_500LOs.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
                <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x rules" enabled="false">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfLockRulesInClass}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end"></stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">lockRulesCount</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">false</boolProp>
              </CounterConfig>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler- rules itemcodes" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544525043137/1544525159358/1544525246748&quot;,&quot;1544525043137/1544525159358/1544525263160&quot;,&quot;1544525043137/1544525280855/1544525289279&quot;,&quot;1544525590768/1544525595533/1544525611432&quot;,&quot;1544525590768/1544525595533/1544525627465&quot;,&quot;1544525590768/1544525595533/1544525635696&quot;,&quot;1544525590768/1544525595533/1544525649026&quot;,&quot;1544525590768/1544525595533/1544525663048&quot;,&quot;1544525590768/1544525595533/1544525679427&quot;,&quot;1544525590768/1544525683364/1544525709799&quot;,&quot;1544525590768/1544525683364/1544525720457&quot;,&quot;1544525590768/1544525683364/1544525729515&quot;,&quot;1544525590768/1544525683364/1544525734676&quot;,&quot;1544525590768/1544525683364/1544525756801&quot;,&quot;1544525590768/1544525683364/1544525778291&quot;,&quot;1544526345845/1544526589100/1544526606750&quot;,&quot;1544526345845/1544526589100/1544526610825&quot;,&quot;1544526345845/1544526589100/1544526623799&quot;,&quot;1544526345845/1544526589100/1544526638110&quot;,&quot;1544526345845/1544526589100/1544526644717&quot;,&quot;1544526345845/1544526589100/1544526657285&quot;,&quot;1544526345845/1544526671965/1544526688230&quot;,&quot;1544526345845/1544526671965/1544526695320&quot;,&quot;1544526345845/1544526671965/1544526710051&quot;,&quot;1544526345845/1544526671965/1544526721801&quot;,&quot;1544526345845/1544526671965/1544526728620&quot;,&quot;1544526345845/1544526671965/1544526763389&quot;,&quot;1544526345845/1544526961740/1544526980657&quot;,&quot;1544526345845/1544526961740/1544526994099&quot;,&quot;1544526345845/1544526961740/1544527008225&quot;,&quot;1544526345845/1544528319371/1544528334775&quot;,&quot;1544526345845/1544528319371/1544528345283&quot;,&quot;1544526345845/1544528319371/1544528367998&quot;,&quot;1544591089661/1544591099675/1544591165699&quot;,&quot;1544591089661/1544591099675/1544591181584&quot;,&quot;1544591089661/1544591099675/1544591198772&quot;,&quot;1544591089661/1544591099675/1544591219876&quot;,&quot;1544591089661/1544591099675/1544591237488&quot;,&quot;1544591089661/1544591099675/1544591247402&quot;,&quot;1544591089661/1544591260222/1544591284840&quot;,&quot;1544591089661/1544591260222/1544591295680&quot;,&quot;1544591089661/1544591260222/1544591320423&quot;,&quot;1544591089661/1544591260222/1544591334581&quot;,&quot;1544591089661/1544591260222/1544591341221&quot;,&quot;1544591089661/1544591260222/1544591363137&quot;,&quot;1544591089661/1544591364773/1544591392809&quot;,&quot;1544591089661/1544591412698/1544591428190&quot;,&quot;1544591089661/1544591412698/1544591439057&quot;,&quot;1544591089661/1544591412698/1544591455780&quot;,&quot;1544591089661/1544591602655/1544591636888&quot;,&quot;1544591089661/1544591602655/1544591649137&quot;,&quot;1544591089661/1544591602655/1544591669971&quot;,&quot;1544591751639/1544591756584/1544591786410&quot;,&quot;1544591751639/1544591756584/1544591792950&quot;,&quot;1544591751639/1544591756584/1544591814105&quot;,&quot;1544591751639/1544591756584/1544591826125&quot;,&quot;1544591751639/1544591756584/1544591842867&quot;,&quot;1544591751639/1544591756584/1544591852005&quot;,&quot;1544591751639/1544591859950/1544591889129&quot;,&quot;1544591751639/1544591859950/1544591895035&quot;,&quot;1544591751639/1544591859950/1544591913490&quot;,&quot;1544591751639/1544591859950/1544591923488&quot;,&quot;1544591751639/1544591937229/1544591951092&quot;,&quot;1544591751639/1544591989858/1544592010989&quot;,&quot;1544591751639/1544591989858/1544592017149&quot;,&quot;1544591751639/1544591989858/1544592034736&quot;,&quot;1544591751639/1544592145731/1544592165309&quot;,&quot;1544591751639/1544592145731/1544592176780&quot;,&quot;1544591751639/1544592145731/1544592194540&quot;,&quot;1544592286221/1544592291887/1544592314873&quot;,&quot;1544592286221/1544592291887/1544592322911&quot;,&quot;1544592286221/1544592291887/1544592333414&quot;,&quot;1544592286221/1544592291887/1544592347743&quot;,&quot;1544592286221/1544592291887/1544592363784&quot;,&quot;1544592286221/1544592291887/1544592370486&quot;,&quot;1544592286221/1544592379241/1544592404760&quot;,&quot;1544592286221/1544592379241/1544592415158&quot;,&quot;1544592286221/1544592379241/1544592422449&quot;,&quot;1544592286221/1544592379241/1544592438186&quot;,&quot;1544592286221/1544592379241/1544592448263&quot;,&quot;1544592286221/1544592379241/1544592466092&quot;,&quot;1544592286221/1544592474205/1544592491253&quot;,&quot;1544592286221/1544592520233/1544592540334&quot;,&quot;1544592286221/1544592520233/1544592555974&quot;,&quot;1544592286221/1544592520233/1544592561671&quot;,&quot;1544592286221/1544592623523/1544592648386&quot;,&quot;1544592286221/1544592623523/1544592658543&quot;,&quot;1544592286221/1544592623523/1544592671565&quot;,&quot;1544592857014/1544592865722/1544593053271&quot;,&quot;1544592857014/1544592865722/1544593072380&quot;,&quot;1544592857014/1544592865722/1544593079694&quot;,&quot;1544592857014/1544592865722/1544593093552&quot;,&quot;1544592857014/1544592865722/1544593104748&quot;,&quot;1544592857014/1544592865722/1544593123201&quot;,&quot;1544592857014/1544593139545/1544593173865&quot;,&quot;1544592857014/1544593139545/1544593187008&quot;,&quot;1544592857014/1544593139545/1544593454057&quot;,&quot;1544592857014/1544593139545/1544593471128&quot;,&quot;1544592857014/1544593139545/1544593476327&quot;,&quot;1544592857014/1544593139545/1544593488247&quot;,&quot;1544592857014/1544593529004/1544593551477&quot;,&quot;1544592857014/1544593585947/1544593606215&quot;,&quot;1544592857014/1544593585947/1544593620647&quot;,&quot;1544592857014/1544593585947/1544593632079&quot;,&quot;1544592857014/1544593703192/1544593728070&quot;,&quot;1544592857014/1544593703192/1544593743725&quot;,&quot;1544592857014/1544593703192/1544593752239&quot;,&quot;1544593830881/1544593842258/1544593874472&quot;,&quot;1544593830881/1544593842258/1544593889640&quot;,&quot;1544593830881/1544593842258/1544593905062&quot;,&quot;1544593830881/1544593842258/1544593925051&quot;,&quot;1544593830881/1544593842258/1544593932560&quot;,&quot;1544593830881/1544593842258/1544593949312&quot;,&quot;1544593830881/1544593964252/1544594078882&quot;,&quot;1544593830881/1544593964252/1544594102416&quot;,&quot;1544593830881/1544593964252/1544594113782&quot;,&quot;1544593830881/1544593964252/1544594135462&quot;,&quot;1544593830881/1544593964252/1544594177257&quot;,&quot;1544593830881/1544593964252/1544594194047&quot;,&quot;1544593830881/1544596248781/1544596271349&quot;,&quot;1544593830881/1544596291616/1544596322099&quot;,&quot;1544593830881/1544596291616/1544596327463&quot;,&quot;1544593830881/1544596291616/1544596347700&quot;,&quot;1544593830881/1544596494652/1544596513093&quot;,&quot;1544593830881/1544596494652/1544596529922&quot;,&quot;1544593830881/1544596494652/1544596545929&quot;,&quot;1544596644314/1544596678647/1544596711546&quot;,&quot;1544596644314/1544596678647/1544596731689&quot;,&quot;1544596644314/1544596678647/1544596745950&quot;,&quot;1544596644314/1544596678647/1544596761923&quot;,&quot;1544596644314/1544596678647/1544596768254&quot;,&quot;1544596644314/1544596678647/1544596792897&quot;,&quot;1544596644314/1544596802487/1544596845016&quot;,&quot;1544596644314/1544596802487/1544596858389&quot;,&quot;1544596644314/1544596802487/1544596877787&quot;,&quot;1544596644314/1544596802487/1544596890399&quot;,&quot;1544596644314/1544596802487/1544596904838&quot;,&quot;1544596644314/1544596802487/1544596921860&quot;,&quot;1544596644314/1544597008306/1544597032165&quot;,&quot;1544596644314/1544597091060/1544597104557&quot;,&quot;1544596644314/1544597091060/1544597121860&quot;,&quot;1544596644314/1544597091060/1544597149347&quot;,&quot;1544596644314/1544597220792/1544597245750&quot;,&quot;1544596644314/1544597220792/1544597262426&quot;,&quot;1544596644314/1544597220792/1544597275965&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler - rules product codes" enabled="true">
                <stringProp name="BeanShellSampler.query">//String[] stringArray = {${__evalVar(${category}_Assignment)}};
String[] stringArray = {${schl_classProductCodes}};

int randomIndex = (${lockRulesCount})%(stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
                <intProp name="ThroughputController.style">1</intProp>
                <boolProp name="ThroughputController.perThread">true</boolProp>
                <stringProp name="ThroughputController.maxThroughput">${50LOsLockRuleCount}</stringProp>
                <stringProp name="ThroughputController.percentThroughput">${50LOsLockRuleCount}</stringProp>
              </ThroughputController>
              <hashTree>
                <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
                  <stringProp name="maximumValue">999999</stringProp>
                  <stringProp name="minimumValue">000000</stringProp>
                  <stringProp name="outputFormat">000000</stringProp>
                  <boolProp name="perThread">true</boolProp>
                  <stringProp name="randomSeed"></stringProp>
                  <stringProp name="variableName">randomNo</stringProp>
                </RandomVariableConfig>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="create a rule" enabled="true">
                  <stringProp name="IncludeController.includepath">Create_a_rule_50LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
                <intProp name="ThroughputController.style">1</intProp>
                <boolProp name="ThroughputController.perThread">true</boolProp>
                <stringProp name="ThroughputController.maxThroughput">${100LOsLockRuleCount}</stringProp>
                <stringProp name="ThroughputController.percentThroughput">${100LOsLockRuleCount}</stringProp>
              </ThroughputController>
              <hashTree>
                <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
                  <stringProp name="maximumValue">999999</stringProp>
                  <stringProp name="minimumValue">000000</stringProp>
                  <stringProp name="outputFormat">000000</stringProp>
                  <boolProp name="perThread">true</boolProp>
                  <stringProp name="randomSeed"></stringProp>
                  <stringProp name="variableName">randomNo</stringProp>
                </RandomVariableConfig>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="create a rule" enabled="true">
                  <stringProp name="IncludeController.includepath">Create_a_rule_100LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
                <intProp name="ThroughputController.style">1</intProp>
                <boolProp name="ThroughputController.perThread">true</boolProp>
                <stringProp name="ThroughputController.maxThroughput">${150LOsLockRuleCount}</stringProp>
                <stringProp name="ThroughputController.percentThroughput">${150LOsLockRuleCount}</stringProp>
              </ThroughputController>
              <hashTree>
                <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
                  <stringProp name="maximumValue">999999</stringProp>
                  <stringProp name="minimumValue">000000</stringProp>
                  <stringProp name="outputFormat">000000</stringProp>
                  <boolProp name="perThread">true</boolProp>
                  <stringProp name="randomSeed"></stringProp>
                  <stringProp name="variableName">randomNo</stringProp>
                </RandomVariableConfig>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="create a rule" enabled="true">
                  <stringProp name="IncludeController.includepath">Create_a_rule_150LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="create custom grading in a class" enabled="false"/>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a gradebook in a class" enabled="true">
                <stringProp name="IncludeController.includepath">Create_a_gradebook_in_a_class.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler - grading json" enabled="true">
                <stringProp name="BeanShellSampler.query">/*String[] multiProducts = {
    ${__evalVar(${category})}
};*/
String[] multiProducts = {${schl_classProductCodes}};
String mergedColumnJson = &quot;[&quot;;
int customWeightage = 0;
int pendingWeightage = 0;
int remainingValue = 0;
String bundle = &quot;&quot;;

for (int i = 0; i &lt; multiProducts.length; i++) {
	bundle = multiProducts[i] + &quot;_bundle&quot;;
	mergedColumnJson += &quot;{\&quot;column_id\&quot;: \&quot;&quot; + multiProducts[i] + &quot;\&quot;,\&quot;type\&quot;: \&quot;product\&quot;,\&quot;weightage\&quot;: \&quot;5\&quot;,\&quot;bundle-codes\&quot;: [\&quot;&quot; + vars.get(bundle) + &quot;\&quot;],\&quot;productcode\&quot;: \&quot;&quot; + multiProducts[i] + &quot;\&quot;},&quot;;
};

remainingValue = 100 - (5*(multiProducts.length));

customWeightage = remainingValue/${customGradingCount};
pendingWeightage = remainingValue%${customGradingCount};

for (int i = 1; i &lt;= ${customGradingCount}; i++) {
	if(i != ${customGradingCount}) {
		mergedColumnJson += &quot;{\&quot;column_id\&quot;: \&quot;PerfCustComp_&quot; + i + &quot;\&quot;,\&quot;type\&quot;: \&quot;custom\&quot;, \&quot;custom_component_code\&quot;: \&quot;PerfCustComp_&quot; + i + &quot;\&quot;, \&quot;title\&quot;: \&quot;PerfCustComp_&quot; + i + &quot;\&quot;, \&quot;weightage\&quot;: \&quot;&quot; + customWeightage + &quot;\&quot;,\&quot;scoring_type\&quot;: \&quot;SIMPLE\&quot;},&quot;;
	} else {
		int finalWeightage = customWeightage + pendingWeightage;
		mergedColumnJson += &quot;{\&quot;column_id\&quot;: \&quot;PerfCustComp_&quot; + i + &quot;\&quot;,\&quot;type\&quot;: \&quot;custom\&quot;, \&quot;custom_component_code\&quot;: \&quot;PerfCustComp_&quot; + i + &quot;\&quot;, \&quot;title\&quot;: \&quot;PerfCustComp_&quot; + i + &quot;\&quot;, \&quot;weightage\&quot;: \&quot;&quot; + finalWeightage + &quot;\&quot;,\&quot;scoring_type\&quot;: \&quot;SIMPLE\&quot;},&quot;;
	}
};

mergedColumnJson = mergedColumnJson.substring(0, mergedColumnJson.length() - 1) + &quot;]&quot;;

vars.put(&quot;mergedColumnJsonFinal&quot;, mergedColumnJson);</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
                  <stringProp name="RandomTimer.range">${minWait}</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add columns to a particular gradebook of a class" enabled="true">
                <stringProp name="IncludeController.includepath">Add_columns_to_a_particular_gradebook_of_a_class_with_custom_components.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation - teacher file" enabled="true">
              <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameTch&quot;), true);

String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;orgid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classname&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;stdCat&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());
vars.put(&quot;assignedPathList&quot;, &quot;&quot;);
out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
              <stringProp name="ForeachController.inputVal">studentextuserid</stringProp>
              <stringProp name="ForeachController.returnVal">studentextuserid</stringProp>
              <boolProp name="ForeachController.useSeparator">true</boolProp>
              <stringProp name="ForeachController.startIndex">0</stringProp>
              <stringProp name="ForeachController.endIndex">${noOfStudentsInClass}</stringProp>
            </ForeachController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end"></stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">stdCounter</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">false</boolProp>
              </CounterConfig>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="false">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">vars.put(&quot;productcode&quot;, &quot;evpel1&quot;);
vars.put(&quot;studentextuserid&quot;, studentextuserid);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler (student product)" enabled="true">
                <stringProp name="BeanShellSampler.query">//vars.put(&quot;productcode&quot;, &quot;evpel1&quot;);
prefix1 = ${schl_productcode1};
vars.put(&quot;productcode&quot;, prefix1);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for writing data into csv file" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">1000</stringProp>
                  <stringProp name="RandomTimer.range">1000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${orgCounter}&quot; == 1;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with product_code and class_code" enabled="true">
                  <stringProp name="IncludeController.includepath">join_Spaces_with_product_code_and_class_code.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${orgCounter}&quot; != 1;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with class_code" enabled="true">
                  <stringProp name="IncludeController.includepath">join_Spaces_with_class_code.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation - student file" enabled="true">
                <stringProp name="BeanShellSampler.query">timestamp = vars.get(&quot;date&quot;);

FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameStd&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;orgid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;stdCat&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classname&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(SEPARATOR.getBytes());

out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
            </hashTree>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="set up user_1011_Step 2" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>100.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">setupuserlist.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">extuserid,stdCat</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler - get school list" enabled="true">
            <stringProp name="BeanShellSampler.query">String[] orglist = {${__evalVar(${stdCat}_orgId)}}; 

// Get the length of the array
int length = orglist.length;

// Save it into a JMeter variable
vars.put(&quot;schcount&quot;, String.valueOf(length));

for (int i = 0; i &lt; orglist.length; i++) {
    vars.put(&quot;sch_orgid&quot; + (i + 1), orglist[i]);
}
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
            <stringProp name="ForeachController.inputVal">sch_orgid</stringProp>
            <stringProp name="ForeachController.returnVal">orgid</stringProp>
            <boolProp name="ForeachController.useSeparator">false</boolProp>
            <stringProp name="ForeachController.startIndex">0</stringProp>
            <stringProp name="ForeachController.endIndex">${schcount}</stringProp>
          </ForeachController>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
              <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler - get school PEs" enabled="true">
              <stringProp name="BeanShellSampler.query">String[] schl_PEs = {${__evalVar(${orgid}_PEs)}};

//vars.put(&quot;schl_PEs&quot; , schl_PEs);

for (int i = 0; i &lt; schl_PEs.length; i++) {
    vars.put(&quot;schl_PEs&quot; + (i + 1), schl_PEs[i]);
}

// Get the length of the array
int length = schl_PEs.length;
vars.put(&quot;schPEscount&quot;, String.valueOf(length));</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
              <stringProp name="ForeachController.inputVal">schl_PEs</stringProp>
              <stringProp name="ForeachController.returnVal">productcode</stringProp>
              <boolProp name="ForeachController.useSeparator">false</boolProp>
              <stringProp name="ForeachController.startIndex">0</stringProp>
              <stringProp name="ForeachController.endIndex">${schPEscount}</stringProp>
            </ForeachController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Setting_up_the_user" enabled="true">
                <stringProp name="IncludeController.includepath">Setting_up_the_user.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Core Data Template_1002" enabled="false"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">1002_template.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">orgid,category,noOfAssignmentsInClass,20LOsCount,30LOsCount,50LOsCount,noOfStudentsInClass,noOfLockRulesInClass,50LOsLockRuleCount,100LOsLockRuleCount,150LOsLockRuleCount,customGradingCount</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilenameTch" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilenameTch</stringProp>
                <stringProp name="Argument.value">scenario_tch_asnmt_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="outputCsvFilenameStd" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilenameStd</stringProp>
                <stringProp name="Argument.value">student_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="assignedPathList" elementType="Argument">
                <stringProp name="Argument.name">assignedPathList</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="title" elementType="Argument">
                <stringProp name="Argument.name">title</stringProp>
                <stringProp name="Argument.value">default gradebook 1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gradebook_id" elementType="Argument">
                <stringProp name="Argument.name">gradebook_id</stringProp>
                <stringProp name="Argument.value">default-gradebook</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="teacher_class_name" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;category&quot;);
prefix5 = vars.get(&quot;orgid&quot;);

extuserid = &quot;tch&quot; + &quot;_&quot; + prefix5 + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;extuserid&quot;, extuserid);

String sch_spacecode = ${__evalVar(${orgid}_spacecode)}; 
vars.put(&quot;spacecode&quot;, sch_spacecode);

classname = &quot;class&quot; + &quot;_&quot; + prefix5 + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;classname&quot;, classname);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="true">
            <stringProp name="IncludeController.includepath">Join_a_space_with_space_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [60-65 sec]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">60000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class" enabled="true">
            <stringProp name="IncludeController.includepath">create_new_instructor_led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler - get class PE" enabled="true">
            <stringProp name="BeanShellSampler.query">prefix1 = ${schl_productcode1};
vars.put(&quot;productcode&quot;, prefix1);</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class" enabled="true">
            <stringProp name="IncludeController.includepath">associate_a_product_with_class2.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate multi products (schl PEs) with a class" enabled="false">
            <stringProp name="IncludeController.includepath">associate_multi_products_with_class_schlPEs.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [420-450]" enabled="false">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">720000</stringProp>
              <stringProp name="RandomTimer.range">30000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x assignments" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">${noOfAssignmentsInClass}</stringProp>
          </LoopController>
          <hashTree>
            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
              <stringProp name="CounterConfig.start">1</stringProp>
              <stringProp name="CounterConfig.end">${noOfAssignmentsInClass}</stringProp>
              <stringProp name="CounterConfig.incr">1</stringProp>
              <stringProp name="CounterConfig.name">assignmentCount</stringProp>
              <stringProp name="CounterConfig.format"></stringProp>
              <boolProp name="CounterConfig.per_user">true</boolProp>
              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
            </CounterConfig>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544524003551/1544524304922/1544524359136&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544524003551/1544524012478/1544524057691&quot;,&quot;1544524003551/1544524012478/1544524030068&quot;,&quot;1544525043137/1544525058289/1544525097148&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544525043137/1544525058289/1544525137957&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1544524003551/1544524304922/1544524324762&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544525043137/1544525058289/1544525090848&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1544524003551/1544524012478/1544524071582&quot;,&quot;1544524003551/1544524304922/1544524341184&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544525043137/1544525058289/1544525125172&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1544524003551/1544524304922/1544524313700&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544524003551/1544524012478/1544524084276&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544524003551/1544524304922/1544524387792&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1544524003551/1544524012478/1544524099346&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1544525043137/1544525058289/1544525114886&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544524003551/1544524012478/1544524044427&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544524003551/1544524304922/1544524376121&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.util.Arrays;

String[] stringArray1 = {${schl_productcode1}};
String[] stringArray2 = {${__evalVar(${orgid}_PEs)}};
int length = stringArray1.length + stringArray2.length;
String[] stringArray = new String[length];
// Copy elements of array1 to mergedArray
System.arraycopy(stringArray1, 0, stringArray, 0, stringArray1.length);

// Copy elements of array2 to mergedArray
System.arraycopy(stringArray2, 0, stringArray, stringArray1.length, stringArray2.length);

int randomIndex = (int) (Math.random() * stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
              <intProp name="ThroughputController.style">0</intProp>
              <boolProp name="ThroughputController.perThread">true</boolProp>
              <stringProp name="ThroughputController.maxThroughput">${20LOsCount}</stringProp>
              <stringProp name="ThroughputController.percentThroughput">${20LOsPercentage}</stringProp>
            </ThroughputController>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + &quot;20LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_20LOs.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
              <intProp name="ThroughputController.style">0</intProp>
              <boolProp name="ThroughputController.perThread">true</boolProp>
              <stringProp name="ThroughputController.maxThroughput">${30LOsCount}</stringProp>
              <stringProp name="ThroughputController.percentThroughput">${30LOsPercentage}</stringProp>
            </ThroughputController>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + &quot;30LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_30LOs.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
              <intProp name="ThroughputController.style">0</intProp>
              <boolProp name="ThroughputController.perThread">true</boolProp>
              <stringProp name="ThroughputController.maxThroughput">${50LOsCount}</stringProp>
              <stringProp name="ThroughputController.percentThroughput">${50LOsPercentage}</stringProp>
            </ThroughputController>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + &quot;50LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_50LOs.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;H6&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
                <intProp name="ThroughputController.style">0</intProp>
                <boolProp name="ThroughputController.perThread">true</boolProp>
                <stringProp name="ThroughputController.maxThroughput">${__evalVar(${category}_100LOsCount)}</stringProp>
                <stringProp name="ThroughputController.percentThroughput">${20LOsPercentage}</stringProp>
              </ThroughputController>
              <hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] stringArray = {&quot;perf35_400lo_1&quot;,&quot;perf35_500lo_1&quot;,&quot;perf38_300lo_1&quot;,&quot;perf38_630lo_1&quot;,&quot;perf38_630lo_2&quot;,&quot;perf40_630lo_1&quot;,&quot;perf40_630lo_2&quot;};

int randomIndex = (int) (Math.random() * stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1544524003551/1544524012478/1544524030068&quot;,&quot;1544524003551/1544524012478/1544524044427&quot;,&quot;1544524003551/1544524012478/1544524057691&quot;,&quot;1544524003551/1544524012478/1544524071582&quot;,&quot;1544524003551/1544524012478/1544524084276&quot;,&quot;1544524003551/1544524012478/1544524099346&quot;,&quot;1544524003551/1544524304922/1544524313700&quot;,&quot;1544524003551/1544524304922/1544524324762&quot;,&quot;1544524003551/1544524304922/1544524341184&quot;,&quot;1544524003551/1544524304922/1544524359136&quot;,&quot;1544524003551/1544524304922/1544524376121&quot;,&quot;1544524003551/1544524304922/1544524387792&quot;,&quot;1544525043137/1544525058289/1544525090848&quot;,&quot;1544525043137/1544525058289/1544525097148&quot;,&quot;1544525043137/1544525058289/1544525114886&quot;,&quot;1544525043137/1544525058289/1544525125172&quot;,&quot;1544525043137/1544525058289/1544525137957&quot;,&quot;1544525043137/1544525058289/1544525143762&quot;,&quot;1544525043137/1544525159358/1544525175677&quot;,&quot;1544525043137/1544525159358/1544525192972&quot;,&quot;1544525043137/1544525159358/1544525217177&quot;,&quot;1544525043137/1544525159358/1544525239184&quot;,&quot;1544525043137/1544525159358/1544525246748&quot;,&quot;1544525043137/1544525159358/1544525263160&quot;,&quot;1544525043137/1544525280855/1544525289279&quot;,&quot;1544525590768/1544525595533/1544525611432&quot;,&quot;1544525590768/1544525595533/1544525627465&quot;,&quot;1544525590768/1544525595533/1544525635696&quot;,&quot;1544525590768/1544525595533/1544525649026&quot;,&quot;1544525590768/1544525595533/1544525663048&quot;,&quot;1544525590768/1544525595533/1544525679427&quot;,&quot;1544525590768/1544525683364/1544525709799&quot;,&quot;1544525590768/1544525683364/1544525720457&quot;,&quot;1544525590768/1544525683364/1544525729515&quot;,&quot;1544525590768/1544525683364/1544525734676&quot;,&quot;1544525590768/1544525683364/1544525756801&quot;,&quot;1544525590768/1544525683364/1544525778291&quot;,&quot;1544526345845/1544526589100/1544526606750&quot;,&quot;1544526345845/1544526589100/1544526610825&quot;,&quot;1544526345845/1544526589100/1544526623799&quot;,&quot;1544526345845/1544526589100/1544526638110&quot;,&quot;1544526345845/1544526589100/1544526644717&quot;,&quot;1544526345845/1544526589100/1544526657285&quot;,&quot;1544526345845/1544526671965/1544526688230&quot;,&quot;1544526345845/1544526671965/1544526695320&quot;,&quot;1544526345845/1544526671965/1544526710051&quot;,&quot;1544526345845/1544526671965/1544526721801&quot;,&quot;1544526345845/1544526671965/1544526728620&quot;,&quot;1544526345845/1544526671965/1544526763389&quot;,&quot;1544526345845/1544526961740/1544526980657&quot;,&quot;1544526345845/1544526961740/1544526994099&quot;,&quot;1544526345845/1544526961740/1544527008225&quot;,&quot;1544526345845/1544528319371/1544528334775&quot;,&quot;1544526345845/1544528319371/1544528345283&quot;,&quot;1544526345845/1544528319371/1544528367998&quot;,&quot;1544591089661/1544591099675/1544591165699&quot;,&quot;1544591089661/1544591099675/1544591181584&quot;,&quot;1544591089661/1544591099675/1544591198772&quot;,&quot;1544591089661/1544591099675/1544591219876&quot;,&quot;1544591089661/1544591099675/1544591237488&quot;,&quot;1544591089661/1544591099675/1544591247402&quot;,&quot;1544591089661/1544591260222/1544591284840&quot;,&quot;1544591089661/1544591260222/1544591295680&quot;,&quot;1544591089661/1544591260222/1544591320423&quot;,&quot;1544591089661/1544591260222/1544591334581&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + &quot;100LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_100LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
                <intProp name="ThroughputController.style">0</intProp>
                <boolProp name="ThroughputController.perThread">true</boolProp>
                <stringProp name="ThroughputController.maxThroughput">${__evalVar(${category}_300LOsCount)}</stringProp>
                <stringProp name="ThroughputController.percentThroughput">${20LOsPercentage}</stringProp>
              </ThroughputController>
              <hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] stringArray = {&quot;perf35_500lo_1&quot;,&quot;perf38_630lo_1&quot;,&quot;perf38_630lo_2&quot;,&quot;perf40_630lo_1&quot;,&quot;perf40_630lo_2&quot;};

int randomIndex = (int) (Math.random() * stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1544524003551/1544524012478/1544524030068&quot;,&quot;1544524003551/1544524012478/1544524044427&quot;,&quot;1544524003551/1544524012478/1544524057691&quot;,&quot;1544524003551/1544524012478/1544524071582&quot;,&quot;1544524003551/1544524012478/1544524084276&quot;,&quot;1544524003551/1544524012478/1544524099346&quot;,&quot;1544524003551/1544524304922/1544524313700&quot;,&quot;1544524003551/1544524304922/1544524324762&quot;,&quot;1544524003551/1544524304922/1544524341184&quot;,&quot;1544524003551/1544524304922/1544524359136&quot;,&quot;1544524003551/1544524304922/1544524376121&quot;,&quot;1544524003551/1544524304922/1544524387792&quot;,&quot;1544525043137/1544525058289/1544525090848&quot;,&quot;1544525043137/1544525058289/1544525097148&quot;,&quot;1544525043137/1544525058289/1544525114886&quot;,&quot;1544525043137/1544525058289/1544525125172&quot;,&quot;1544525043137/1544525058289/1544525137957&quot;,&quot;1544525043137/1544525058289/1544525143762&quot;,&quot;1544525043137/1544525159358/1544525175677&quot;,&quot;1544525043137/1544525159358/1544525192972&quot;,&quot;1544525043137/1544525159358/1544525217177&quot;,&quot;1544525043137/1544525159358/1544525239184&quot;,&quot;1544525043137/1544525159358/1544525246748&quot;,&quot;1544525043137/1544525159358/1544525263160&quot;,&quot;1544525043137/1544525280855/1544525289279&quot;,&quot;1544525590768/1544525595533/1544525611432&quot;,&quot;1544525590768/1544525595533/1544525627465&quot;,&quot;1544525590768/1544525595533/1544525635696&quot;,&quot;1544525590768/1544525595533/1544525649026&quot;,&quot;1544525590768/1544525595533/1544525663048&quot;,&quot;1544525590768/1544525595533/1544525679427&quot;,&quot;1544525590768/1544525683364/1544525709799&quot;,&quot;1544525590768/1544525683364/1544525720457&quot;,&quot;1544525590768/1544525683364/1544525729515&quot;,&quot;1544525590768/1544525683364/1544525734676&quot;,&quot;1544525590768/1544525683364/1544525756801&quot;,&quot;1544525590768/1544525683364/1544525778291&quot;,&quot;1544526345845/1544526589100/1544526606750&quot;,&quot;1544526345845/1544526589100/1544526610825&quot;,&quot;1544526345845/1544526589100/1544526623799&quot;,&quot;1544526345845/1544526589100/1544526638110&quot;,&quot;1544526345845/1544526589100/1544526644717&quot;,&quot;1544526345845/1544526589100/1544526657285&quot;,&quot;1544526345845/1544526671965/1544526688230&quot;,&quot;1544526345845/1544526671965/1544526695320&quot;,&quot;1544526345845/1544526671965/1544526710051&quot;,&quot;1544526345845/1544526671965/1544526721801&quot;,&quot;1544526345845/1544526671965/1544526728620&quot;,&quot;1544526345845/1544526671965/1544526763389&quot;,&quot;1544526345845/1544526961740/1544526980657&quot;,&quot;1544526345845/1544526961740/1544526994099&quot;,&quot;1544526345845/1544526961740/1544527008225&quot;,&quot;1544526345845/1544528319371/1544528334775&quot;,&quot;1544526345845/1544528319371/1544528345283&quot;,&quot;1544526345845/1544528319371/1544528367998&quot;,&quot;1544591089661/1544591099675/1544591165699&quot;,&quot;1544591089661/1544591099675/1544591181584&quot;,&quot;1544591089661/1544591099675/1544591198772&quot;,&quot;1544591089661/1544591099675/1544591219876&quot;,&quot;1544591089661/1544591099675/1544591237488&quot;,&quot;1544591089661/1544591099675/1544591247402&quot;,&quot;1544591089661/1544591260222/1544591284840&quot;,&quot;1544591089661/1544591260222/1544591295680&quot;,&quot;1544591089661/1544591260222/1544591320423&quot;,&quot;1544591089661/1544591260222/1544591334581&quot;,&quot;1544591089661/1544591260222/1544591341221&quot;,&quot;1544591089661/1544591260222/1544591363137&quot;,&quot;1544591089661/1544591364773/1544591392809&quot;,&quot;1544591089661/1544591412698/1544591428190&quot;,&quot;1544591089661/1544591412698/1544591439057&quot;,&quot;1544591089661/1544591412698/1544591455780&quot;,&quot;1544591089661/1544591602655/1544591636888&quot;,&quot;1544591089661/1544591602655/1544591649137&quot;,&quot;1544591089661/1544591602655/1544591669971&quot;,&quot;1544591751639/1544591756584/1544591786410&quot;,&quot;1544591751639/1544591756584/1544591792950&quot;,&quot;1544591751639/1544591756584/1544591814105&quot;,&quot;1544591751639/1544591756584/1544591826125&quot;,&quot;1544591751639/1544591756584/1544591842867&quot;,&quot;1544591751639/1544591756584/1544591852005&quot;,&quot;1544591751639/1544591859950/1544591889129&quot;,&quot;1544591751639/1544591859950/1544591895035&quot;,&quot;1544591751639/1544591859950/1544591913490&quot;,&quot;1544591751639/1544591859950/1544591923488&quot;,&quot;1544591751639/1544591937229/1544591951092&quot;,&quot;1544591751639/1544591989858/1544592010989&quot;,&quot;1544591751639/1544591989858/1544592017149&quot;,&quot;1544591751639/1544591989858/1544592034736&quot;,&quot;1544591751639/1544592145731/1544592165309&quot;,&quot;1544591751639/1544592145731/1544592176780&quot;,&quot;1544591751639/1544592145731/1544592194540&quot;,&quot;1544592286221/1544592291887/1544592314873&quot;,&quot;1544592286221/1544592291887/1544592322911&quot;,&quot;1544592286221/1544592291887/1544592333414&quot;,&quot;1544592286221/1544592291887/1544592347743&quot;,&quot;1544592286221/1544592291887/1544592363784&quot;,&quot;1544592286221/1544592291887/1544592370486&quot;,&quot;1544592286221/1544592379241/1544592404760&quot;,&quot;1544592286221/1544592379241/1544592415158&quot;,&quot;1544592286221/1544592379241/1544592422449&quot;,&quot;1544592286221/1544592379241/1544592438186&quot;,&quot;1544592286221/1544592379241/1544592448263&quot;,&quot;1544592286221/1544592379241/1544592466092&quot;,&quot;1544592286221/1544592474205/1544592491253&quot;,&quot;1544592286221/1544592520233/1544592540334&quot;,&quot;1544592286221/1544592520233/1544592555974&quot;,&quot;1544592286221/1544592520233/1544592561671&quot;,&quot;1544592286221/1544592623523/1544592648386&quot;,&quot;1544592286221/1544592623523/1544592658543&quot;,&quot;1544592286221/1544592623523/1544592671565&quot;,&quot;1544592857014/1544592865722/1544593053271&quot;,&quot;1544592857014/1544592865722/1544593072380&quot;,&quot;1544592857014/1544592865722/1544593079694&quot;,&quot;1544592857014/1544592865722/1544593093552&quot;,&quot;1544592857014/1544592865722/1544593104748&quot;,&quot;1544592857014/1544592865722/1544593123201&quot;,&quot;1544592857014/1544593139545/1544593173865&quot;,&quot;1544592857014/1544593139545/1544593187008&quot;,&quot;1544592857014/1544593139545/1544593454057&quot;,&quot;1544592857014/1544593139545/1544593471128&quot;,&quot;1544592857014/1544593139545/1544593476327&quot;,&quot;1544592857014/1544593139545/1544593488247&quot;,&quot;1544592857014/1544593529004/1544593551477&quot;,&quot;1544592857014/1544593585947/1544593606215&quot;,&quot;1544592857014/1544593585947/1544593620647&quot;,&quot;1544592857014/1544593585947/1544593632079&quot;,&quot;1544592857014/1544593703192/1544593728070&quot;,&quot;1544592857014/1544593703192/1544593743725&quot;,&quot;1544592857014/1544593703192/1544593752239&quot;,&quot;1544593830881/1544593842258/1544593874472&quot;,&quot;1544593830881/1544593842258/1544593889640&quot;,&quot;1544593830881/1544593842258/1544593905062&quot;,&quot;1544593830881/1544593842258/1544593925051&quot;,&quot;1544593830881/1544593842258/1544593932560&quot;,&quot;1544593830881/1544593842258/1544593949312&quot;,&quot;1544593830881/1544593964252/1544594078882&quot;,&quot;1544593830881/1544593964252/1544594102416&quot;,&quot;1544593830881/1544593964252/1544594113782&quot;,&quot;1544593830881/1544593964252/1544594135462&quot;,&quot;1544593830881/1544593964252/1544594177257&quot;,&quot;1544593830881/1544593964252/1544594194047&quot;,&quot;1544593830881/1544596248781/1544596271349&quot;,&quot;1544593830881/1544596291616/1544596322099&quot;,&quot;1544593830881/1544596291616/1544596327463&quot;,&quot;1544593830881/1544596291616/1544596347700&quot;,&quot;1544593830881/1544596494652/1544596513093&quot;,&quot;1544593830881/1544596494652/1544596529922&quot;,&quot;1544593830881/1544596494652/1544596545929&quot;,&quot;1544596644314/1544596678647/1544596711546&quot;,&quot;1544596644314/1544596678647/1544596731689&quot;,&quot;1544596644314/1544596678647/1544596745950&quot;,&quot;1544596644314/1544596678647/1544596761923&quot;,&quot;1544596644314/1544596678647/1544596768254&quot;,&quot;1544596644314/1544596678647/1544596792897&quot;,&quot;1544596644314/1544596802487/1544596845016&quot;,&quot;1544596644314/1544596802487/1544596858389&quot;,&quot;1544596644314/1544596802487/1544596877787&quot;,&quot;1544596644314/1544596802487/1544596890399&quot;,&quot;1544596644314/1544596802487/1544596904838&quot;,&quot;1544596644314/1544596802487/1544596921860&quot;,&quot;1544596644314/1544597008306/1544597032165&quot;,&quot;1544596644314/1544597091060/1544597104557&quot;,&quot;1544596644314/1544597091060/1544597121860&quot;,&quot;1544596644314/1544597091060/1544597149347&quot;,&quot;1544596644314/1544597220792/1544597245750&quot;,&quot;1544596644314/1544597220792/1544597262426&quot;,&quot;1544596644314/1544597220792/1544597275965&quot;,&quot;1676462274557/1676462274558/1676462274559&quot;,&quot;1676462274557/1676462274558/1676462274560&quot;,&quot;1676462274557/1676462274558/1676462274561&quot;,&quot;1676462274557/1676462274558/1676462274562&quot;,&quot;1676462274557/1676462274558/1676462274563&quot;,&quot;1676462274557/1676462274558/1676462274564&quot;,&quot;1676462274557/1676462274558/1676462274565&quot;,&quot;1676462274557/1676462274558/1676462274566&quot;,&quot;1676462274557/1676462274558/1676462274567&quot;,&quot;1676462274557/1676462274558/1676462274568&quot;,&quot;1676462274557/1676462274558/1676462274569&quot;,&quot;1676462274557/1676462274558/1676462274570&quot;,&quot;1676462274557/1676462274558/1676462274571&quot;,&quot;1676462274557/1676462274558/1676462274572&quot;,&quot;1676462274557/1676462274558/1676462274573&quot;,&quot;1676462274557/1676462274558/1676462274574&quot;,&quot;1676462274557/1676462274558/1676462274575&quot;,&quot;1676462274557/1676462274558/1676462274576&quot;,&quot;1676462274557/1676462274558/1676462274577&quot;,&quot;1676462274557/1676462274558/1676462274578&quot;,&quot;1676462274557/1676462274558/1676462274579&quot;,&quot;1676462274557/1676462274558/1676462274580&quot;,&quot;1676462274557/1676462274558/1676462274581&quot;,&quot;1676462274557/1676462274558/1676462274582&quot;,&quot;1676462274557/1676462274558/1676462274583&quot;,&quot;1676462274557/1676462274558/1676462274584&quot;,&quot;1676462274557/1676462274558/1676462274585&quot;,&quot;1676462274557/1676462274558/1676462274586&quot;,&quot;1676462274557/1676462274558/1676462274587&quot;,&quot;1676462274557/1676462274558/1676462274588&quot;,&quot;1676462274557/1676462274558/1676462274589&quot;,&quot;1676462274557/1676462274558/1676462274590&quot;,&quot;1676462274557/1676462274558/1676462274591&quot;,&quot;1676462274557/1676462274558/1676462274592&quot;,&quot;1676462274557/1676462274558/1676462274593&quot;,&quot;1676462274557/1676462274558/1676462274594&quot;,&quot;1676462274557/1676462274558/1676462274595&quot;,&quot;1676462274557/1676462274558/1676462274596&quot;,&quot;1676462274557/1676462274558/1676462274597&quot;,&quot;1676462274557/1676462274558/1676462274598&quot;,&quot;1676462274557/1676462274558/1676462274599&quot;,&quot;1676462274557/1676462274558/1676462274600&quot;,&quot;1676462274557/1676462274558/1676462274601&quot;,&quot;1676462274557/1676462274558/1676462274602&quot;,&quot;1676462274557/1676462274558/1676462274603&quot;,&quot;1676462274557/1676462274558/1676462274604&quot;,&quot;1676462274557/1676462274558/1676462274605&quot;,&quot;1676462274557/1676462274558/1676462274606&quot;,&quot;1676462274557/1676462274558/1676462274607&quot;,&quot;1676462274557/1676462274558/1676462274608&quot;,&quot;1676462274557/1676462274558/1676462274609&quot;,&quot;1676462274557/1676462274558/1676462274610&quot;,&quot;1676462274557/1676462274558/1676462274611&quot;,&quot;1676462274557/1676462274558/1676462274612&quot;,&quot;1676462274557/1676462274558/1676462274613&quot;,&quot;1676462274557/1676462274558/1676462274614&quot;,&quot;1676462274557/1676462274558/1676462274615&quot;,&quot;1676462274557/1676462274558/1676462274616&quot;,&quot;1676462274557/1676462274558/1676462274617&quot;,&quot;1676462274557/1676462274558/1676462274618&quot;,&quot;1676462274557/1676462274558/1676462274619&quot;,&quot;1676462274557/1676462274558/1676462274620&quot;,&quot;1676462274557/1676462274558/1676462274621&quot;,&quot;1676462274557/1676462274558/1676462274622&quot;,&quot;1676462274557/1676462274558/1676462274623&quot;,&quot;1676462274557/1676462274558/1676462274624&quot;,&quot;1676462274557/1676462274558/1676462274625&quot;,&quot;1676462274557/1676462274558/1676462274626&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1676462274659/1676462274660/1676462274671&quot;,&quot;1676462274659/1676462274660/1676462274672&quot;,&quot;1676462274659/1676462274660/1676462274673&quot;,&quot;1676462274659/1676462274660/1676462274674&quot;,&quot;1676462274659/1676462274660/1676462274675&quot;,&quot;1676462274659/1676462274660/1676462274676&quot;,&quot;1676462274659/1676462274660/1676462274677&quot;,&quot;1676462274659/1676462274660/1676462274678&quot;,&quot;1676462274659/1676462274660/1676462274679&quot;,&quot;1676462274659/1676462274660/1676462274680&quot;,&quot;1676462274659/1676462274660/1676462274681&quot;,&quot;1676462274659/1676462274660/1676462274682&quot;,&quot;1676462274659/1676462274660/1676462274683&quot;,&quot;1676462274659/1676462274660/1676462274684&quot;,&quot;1676462274659/1676462274660/1676462274685&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + &quot;300LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_300LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
                <intProp name="ThroughputController.style">0</intProp>
                <boolProp name="ThroughputController.perThread">true</boolProp>
                <stringProp name="ThroughputController.maxThroughput">${__evalVar(${category}_500LOsCount)}</stringProp>
                <stringProp name="ThroughputController.percentThroughput">${20LOsPercentage}</stringProp>
              </ThroughputController>
              <hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] stringArray = {&quot;perf38_630lo_1&quot;,&quot;perf38_630lo_2&quot;,&quot;perf40_630lo_1&quot;,&quot;perf40_630lo_2&quot;};

int randomIndex = (int) (Math.random() * stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1544524003551/1544524012478/1544524030068&quot;,&quot;1544524003551/1544524012478/1544524044427&quot;,&quot;1544524003551/1544524012478/1544524057691&quot;,&quot;1544524003551/1544524012478/1544524071582&quot;,&quot;1544524003551/1544524012478/1544524084276&quot;,&quot;1544524003551/1544524012478/1544524099346&quot;,&quot;1544524003551/1544524304922/1544524313700&quot;,&quot;1544524003551/1544524304922/1544524324762&quot;,&quot;1544524003551/1544524304922/1544524341184&quot;,&quot;1544524003551/1544524304922/1544524359136&quot;,&quot;1544524003551/1544524304922/1544524376121&quot;,&quot;1544524003551/1544524304922/1544524387792&quot;,&quot;1544525043137/1544525058289/1544525090848&quot;,&quot;1544525043137/1544525058289/1544525097148&quot;,&quot;1544525043137/1544525058289/1544525114886&quot;,&quot;1544525043137/1544525058289/1544525125172&quot;,&quot;1544525043137/1544525058289/1544525137957&quot;,&quot;1544525043137/1544525058289/1544525143762&quot;,&quot;1544525043137/1544525159358/1544525175677&quot;,&quot;1544525043137/1544525159358/1544525192972&quot;,&quot;1544525043137/1544525159358/1544525217177&quot;,&quot;1544525043137/1544525159358/1544525239184&quot;,&quot;1544525043137/1544525159358/1544525246748&quot;,&quot;1544525043137/1544525159358/1544525263160&quot;,&quot;1544525043137/1544525280855/1544525289279&quot;,&quot;1544525590768/1544525595533/1544525611432&quot;,&quot;1544525590768/1544525595533/1544525627465&quot;,&quot;1544525590768/1544525595533/1544525635696&quot;,&quot;1544525590768/1544525595533/1544525649026&quot;,&quot;1544525590768/1544525595533/1544525663048&quot;,&quot;1544525590768/1544525595533/1544525679427&quot;,&quot;1544525590768/1544525683364/1544525709799&quot;,&quot;1544525590768/1544525683364/1544525720457&quot;,&quot;1544525590768/1544525683364/1544525729515&quot;,&quot;1544525590768/1544525683364/1544525734676&quot;,&quot;1544525590768/1544525683364/1544525756801&quot;,&quot;1544525590768/1544525683364/1544525778291&quot;,&quot;1544526345845/1544526589100/1544526606750&quot;,&quot;1544526345845/1544526589100/1544526610825&quot;,&quot;1544526345845/1544526589100/1544526623799&quot;,&quot;1544526345845/1544526589100/1544526638110&quot;,&quot;1544526345845/1544526589100/1544526644717&quot;,&quot;1544526345845/1544526589100/1544526657285&quot;,&quot;1544526345845/1544526671965/1544526688230&quot;,&quot;1544526345845/1544526671965/1544526695320&quot;,&quot;1544526345845/1544526671965/1544526710051&quot;,&quot;1544526345845/1544526671965/1544526721801&quot;,&quot;1544526345845/1544526671965/1544526728620&quot;,&quot;1544526345845/1544526671965/1544526763389&quot;,&quot;1544526345845/1544526961740/1544526980657&quot;,&quot;1544526345845/1544526961740/1544526994099&quot;,&quot;1544526345845/1544526961740/1544527008225&quot;,&quot;1544526345845/1544528319371/1544528334775&quot;,&quot;1544526345845/1544528319371/1544528345283&quot;,&quot;1544526345845/1544528319371/1544528367998&quot;,&quot;1544591089661/1544591099675/1544591165699&quot;,&quot;1544591089661/1544591099675/1544591181584&quot;,&quot;1544591089661/1544591099675/1544591198772&quot;,&quot;1544591089661/1544591099675/1544591219876&quot;,&quot;1544591089661/1544591099675/1544591237488&quot;,&quot;1544591089661/1544591099675/1544591247402&quot;,&quot;1544591089661/1544591260222/1544591284840&quot;,&quot;1544591089661/1544591260222/1544591295680&quot;,&quot;1544591089661/1544591260222/1544591320423&quot;,&quot;1544591089661/1544591260222/1544591334581&quot;,&quot;1544591089661/1544591260222/1544591341221&quot;,&quot;1544591089661/1544591260222/1544591363137&quot;,&quot;1544591089661/1544591364773/1544591392809&quot;,&quot;1544591089661/1544591412698/1544591428190&quot;,&quot;1544591089661/1544591412698/1544591439057&quot;,&quot;1544591089661/1544591412698/1544591455780&quot;,&quot;1544591089661/1544591602655/1544591636888&quot;,&quot;1544591089661/1544591602655/1544591649137&quot;,&quot;1544591089661/1544591602655/1544591669971&quot;,&quot;1544591751639/1544591756584/1544591786410&quot;,&quot;1544591751639/1544591756584/1544591792950&quot;,&quot;1544591751639/1544591756584/1544591814105&quot;,&quot;1544591751639/1544591756584/1544591826125&quot;,&quot;1544591751639/1544591756584/1544591842867&quot;,&quot;1544591751639/1544591756584/1544591852005&quot;,&quot;1544591751639/1544591859950/1544591889129&quot;,&quot;1544591751639/1544591859950/1544591895035&quot;,&quot;1544591751639/1544591859950/1544591913490&quot;,&quot;1544591751639/1544591859950/1544591923488&quot;,&quot;1544591751639/1544591937229/1544591951092&quot;,&quot;1544591751639/1544591989858/1544592010989&quot;,&quot;1544591751639/1544591989858/1544592017149&quot;,&quot;1544591751639/1544591989858/1544592034736&quot;,&quot;1544591751639/1544592145731/1544592165309&quot;,&quot;1544591751639/1544592145731/1544592176780&quot;,&quot;1544591751639/1544592145731/1544592194540&quot;,&quot;1544592286221/1544592291887/1544592314873&quot;,&quot;1544592286221/1544592291887/1544592322911&quot;,&quot;1544592286221/1544592291887/1544592333414&quot;,&quot;1544592286221/1544592291887/1544592347743&quot;,&quot;1544592286221/1544592291887/1544592363784&quot;,&quot;1544592286221/1544592291887/1544592370486&quot;,&quot;1544592286221/1544592379241/1544592404760&quot;,&quot;1544592286221/1544592379241/1544592415158&quot;,&quot;1544592286221/1544592379241/1544592422449&quot;,&quot;1544592286221/1544592379241/1544592438186&quot;,&quot;1544592286221/1544592379241/1544592448263&quot;,&quot;1544592286221/1544592379241/1544592466092&quot;,&quot;1544592286221/1544592474205/1544592491253&quot;,&quot;1544592286221/1544592520233/1544592540334&quot;,&quot;1544592286221/1544592520233/1544592555974&quot;,&quot;1544592286221/1544592520233/1544592561671&quot;,&quot;1544592286221/1544592623523/1544592648386&quot;,&quot;1544592286221/1544592623523/1544592658543&quot;,&quot;1544592286221/1544592623523/1544592671565&quot;,&quot;1544592857014/1544592865722/1544593053271&quot;,&quot;1544592857014/1544592865722/1544593072380&quot;,&quot;1544592857014/1544592865722/1544593079694&quot;,&quot;1544592857014/1544592865722/1544593093552&quot;,&quot;1544592857014/1544592865722/1544593104748&quot;,&quot;1544592857014/1544592865722/1544593123201&quot;,&quot;1544592857014/1544593139545/1544593173865&quot;,&quot;1544592857014/1544593139545/1544593187008&quot;,&quot;1544592857014/1544593139545/1544593454057&quot;,&quot;1544592857014/1544593139545/1544593471128&quot;,&quot;1544592857014/1544593139545/1544593476327&quot;,&quot;1544592857014/1544593139545/1544593488247&quot;,&quot;1544592857014/1544593529004/1544593551477&quot;,&quot;1544592857014/1544593585947/1544593606215&quot;,&quot;1544592857014/1544593585947/1544593620647&quot;,&quot;1544592857014/1544593585947/1544593632079&quot;,&quot;1544592857014/1544593703192/1544593728070&quot;,&quot;1544592857014/1544593703192/1544593743725&quot;,&quot;1544592857014/1544593703192/1544593752239&quot;,&quot;1544593830881/1544593842258/1544593874472&quot;,&quot;1544593830881/1544593842258/1544593889640&quot;,&quot;1544593830881/1544593842258/1544593905062&quot;,&quot;1544593830881/1544593842258/1544593925051&quot;,&quot;1544593830881/1544593842258/1544593932560&quot;,&quot;1544593830881/1544593842258/1544593949312&quot;,&quot;1544593830881/1544593964252/1544594078882&quot;,&quot;1544593830881/1544593964252/1544594102416&quot;,&quot;1544593830881/1544593964252/1544594113782&quot;,&quot;1544593830881/1544593964252/1544594135462&quot;,&quot;1544593830881/1544593964252/1544594177257&quot;,&quot;1544593830881/1544593964252/1544594194047&quot;,&quot;1544593830881/1544596248781/1544596271349&quot;,&quot;1544593830881/1544596291616/1544596322099&quot;,&quot;1544593830881/1544596291616/1544596327463&quot;,&quot;1544593830881/1544596291616/1544596347700&quot;,&quot;1544593830881/1544596494652/1544596513093&quot;,&quot;1544593830881/1544596494652/1544596529922&quot;,&quot;1544593830881/1544596494652/1544596545929&quot;,&quot;1544596644314/1544596678647/1544596711546&quot;,&quot;1544596644314/1544596678647/1544596731689&quot;,&quot;1544596644314/1544596678647/1544596745950&quot;,&quot;1544596644314/1544596678647/1544596761923&quot;,&quot;1544596644314/1544596678647/1544596768254&quot;,&quot;1544596644314/1544596678647/1544596792897&quot;,&quot;1544596644314/1544596802487/1544596845016&quot;,&quot;1544596644314/1544596802487/1544596858389&quot;,&quot;1544596644314/1544596802487/1544596877787&quot;,&quot;1544596644314/1544596802487/1544596890399&quot;,&quot;1544596644314/1544596802487/1544596904838&quot;,&quot;1544596644314/1544596802487/1544596921860&quot;,&quot;1544596644314/1544597008306/1544597032165&quot;,&quot;1544596644314/1544597091060/1544597104557&quot;,&quot;1544596644314/1544597091060/1544597121860&quot;,&quot;1544596644314/1544597091060/1544597149347&quot;,&quot;1544596644314/1544597220792/1544597245750&quot;,&quot;1544596644314/1544597220792/1544597262426&quot;,&quot;1544596644314/1544597220792/1544597275965&quot;,&quot;1676462274557/1676462274558/1676462274559&quot;,&quot;1676462274557/1676462274558/1676462274560&quot;,&quot;1676462274557/1676462274558/1676462274561&quot;,&quot;1676462274557/1676462274558/1676462274562&quot;,&quot;1676462274557/1676462274558/1676462274563&quot;,&quot;1676462274557/1676462274558/1676462274564&quot;,&quot;1676462274557/1676462274558/1676462274565&quot;,&quot;1676462274557/1676462274558/1676462274566&quot;,&quot;1676462274557/1676462274558/1676462274567&quot;,&quot;1676462274557/1676462274558/1676462274568&quot;,&quot;1676462274557/1676462274558/1676462274569&quot;,&quot;1676462274557/1676462274558/1676462274570&quot;,&quot;1676462274557/1676462274558/1676462274571&quot;,&quot;1676462274557/1676462274558/1676462274572&quot;,&quot;1676462274557/1676462274558/1676462274573&quot;,&quot;1676462274557/1676462274558/1676462274574&quot;,&quot;1676462274557/1676462274558/1676462274575&quot;,&quot;1676462274557/1676462274558/1676462274576&quot;,&quot;1676462274557/1676462274558/1676462274577&quot;,&quot;1676462274557/1676462274558/1676462274578&quot;,&quot;1676462274557/1676462274558/1676462274579&quot;,&quot;1676462274557/1676462274558/1676462274580&quot;,&quot;1676462274557/1676462274558/1676462274581&quot;,&quot;1676462274557/1676462274558/1676462274582&quot;,&quot;1676462274557/1676462274558/1676462274583&quot;,&quot;1676462274557/1676462274558/1676462274584&quot;,&quot;1676462274557/1676462274558/1676462274585&quot;,&quot;1676462274557/1676462274558/1676462274586&quot;,&quot;1676462274557/1676462274558/1676462274587&quot;,&quot;1676462274557/1676462274558/1676462274588&quot;,&quot;1676462274557/1676462274558/1676462274589&quot;,&quot;1676462274557/1676462274558/1676462274590&quot;,&quot;1676462274557/1676462274558/1676462274591&quot;,&quot;1676462274557/1676462274558/1676462274592&quot;,&quot;1676462274557/1676462274558/1676462274593&quot;,&quot;1676462274557/1676462274558/1676462274594&quot;,&quot;1676462274557/1676462274558/1676462274595&quot;,&quot;1676462274557/1676462274558/1676462274596&quot;,&quot;1676462274557/1676462274558/1676462274597&quot;,&quot;1676462274557/1676462274558/1676462274598&quot;,&quot;1676462274557/1676462274558/1676462274599&quot;,&quot;1676462274557/1676462274558/1676462274600&quot;,&quot;1676462274557/1676462274558/1676462274601&quot;,&quot;1676462274557/1676462274558/1676462274602&quot;,&quot;1676462274557/1676462274558/1676462274603&quot;,&quot;1676462274557/1676462274558/1676462274604&quot;,&quot;1676462274557/1676462274558/1676462274605&quot;,&quot;1676462274557/1676462274558/1676462274606&quot;,&quot;1676462274557/1676462274558/1676462274607&quot;,&quot;1676462274557/1676462274558/1676462274608&quot;,&quot;1676462274557/1676462274558/1676462274609&quot;,&quot;1676462274557/1676462274558/1676462274610&quot;,&quot;1676462274557/1676462274558/1676462274611&quot;,&quot;1676462274557/1676462274558/1676462274612&quot;,&quot;1676462274557/1676462274558/1676462274613&quot;,&quot;1676462274557/1676462274558/1676462274614&quot;,&quot;1676462274557/1676462274558/1676462274615&quot;,&quot;1676462274557/1676462274558/1676462274616&quot;,&quot;1676462274557/1676462274558/1676462274617&quot;,&quot;1676462274557/1676462274558/1676462274618&quot;,&quot;1676462274557/1676462274558/1676462274619&quot;,&quot;1676462274557/1676462274558/1676462274620&quot;,&quot;1676462274557/1676462274558/1676462274621&quot;,&quot;1676462274557/1676462274558/1676462274622&quot;,&quot;1676462274557/1676462274558/1676462274623&quot;,&quot;1676462274557/1676462274558/1676462274624&quot;,&quot;1676462274557/1676462274558/1676462274625&quot;,&quot;1676462274557/1676462274558/1676462274626&quot;,&quot;1676462274557/1676462274558/1676462274627&quot;,&quot;1676462274557/1676462274558/1676462274628&quot;,&quot;1676462274557/1676462274558/1676462274629&quot;,&quot;1676462274557/1676462274558/1676462274630&quot;,&quot;1676462274557/1676462274558/1676462274631&quot;,&quot;1676462274557/1676462274558/1676462274632&quot;,&quot;1676462274557/1676462274558/1676462274633&quot;,&quot;1676462274557/1676462274558/1676462274634&quot;,&quot;1676462274557/1676462274558/1676462274635&quot;,&quot;1676462274557/1676462274558/1676462274636&quot;,&quot;1676462274557/1676462274558/1676462274637&quot;,&quot;1676462274557/1676462274558/1676462274638&quot;,&quot;1676462274557/1676462274558/1676462274639&quot;,&quot;1676462274557/1676462274558/1676462274640&quot;,&quot;1676462274557/1676462274558/1676462274641&quot;,&quot;1676462274557/1676462274558/1676462274642&quot;,&quot;1676462274557/1676462274558/1676462274643&quot;,&quot;1676462274557/1676462274558/1676462274644&quot;,&quot;1676462274557/1676462274558/1676462274645&quot;,&quot;1676462274557/1676462274558/1676462274646&quot;,&quot;1676462274557/1676462274558/1676462274647&quot;,&quot;1676462274557/1676462274558/1676462274648&quot;,&quot;1676462274557/1676462274558/1676462274649&quot;,&quot;1676462274557/1676462274558/1676462274650&quot;,&quot;1676462274557/1676462274558/1676462274651&quot;,&quot;1676462274557/1676462274558/1676462274652&quot;,&quot;1676462274557/1676462274558/1676462274653&quot;,&quot;1676462274557/1676462274558/1676462274654&quot;,&quot;1676462274557/1676462274558/1676462274655&quot;,&quot;1676462274557/1676462274558/1676462274656&quot;,&quot;1676462274557/1676462274558/1676462274657&quot;,&quot;1676462274557/1676462274558/1676462274658&quot;,&quot;1676462274557/1676462274558/1676462274761&quot;,&quot;1676462274557/1676462274558/1676462274762&quot;,&quot;1676462274557/1676462274558/1676462274763&quot;,&quot;1676462274557/1676462274558/1676462274764&quot;,&quot;1676462274557/1676462274558/1676462274765&quot;,&quot;1676462274557/1676462274558/1676462274766&quot;,&quot;1676462274557/1676462274558/1676462274767&quot;,&quot;1676462274557/1676462274558/1676462274768&quot;,&quot;1676462274557/1676462274558/1676462274769&quot;,&quot;1676462274557/1676462274558/1676462274770&quot;,&quot;1676462274557/1676462274558/1676462274771&quot;,&quot;1676462274557/1676462274558/1676462274772&quot;,&quot;1676462274557/1676462274558/1676462274773&quot;,&quot;1676462274557/1676462274558/1676462274774&quot;,&quot;1676462274557/1676462274558/1676462274775&quot;,&quot;1676462274557/1676462274558/1676462274776&quot;,&quot;1676462274557/1676462274558/1676462274777&quot;,&quot;1676462274557/1676462274558/1676462274778&quot;,&quot;1676462274557/1676462274558/1676462274779&quot;,&quot;1676462274557/1676462274558/1676462274780&quot;,&quot;1676462274557/1676462274558/1676462274781&quot;,&quot;1676462274557/1676462274558/1676462274782&quot;,&quot;1676462274557/1676462274558/1676462274783&quot;,&quot;1676462274557/1676462274558/1676462274784&quot;,&quot;1676462274557/1676462274558/1676462274785&quot;,&quot;1676462274557/1676462274558/1676462274786&quot;,&quot;1676462274557/1676462274558/1676462274787&quot;,&quot;1676462274557/1676462274558/1676462274788&quot;,&quot;1676462274557/1676462274558/1676462274789&quot;,&quot;1676462274557/1676462274558/1676462274790&quot;,&quot;1676462274557/1676462274558/1676462274791&quot;,&quot;1676462274557/1676462274558/1676462274792&quot;,&quot;1676462274557/1676462274558/1676462274793&quot;,&quot;1676462274557/1676462274558/1676462274794&quot;,&quot;1676462274557/1676462274558/1676462274795&quot;,&quot;1676462274557/1676462274558/1676462274796&quot;,&quot;1676462274557/1676462274558/1676462274797&quot;,&quot;1676462274557/1676462274558/1676462274798&quot;,&quot;1676462274557/1676462274558/1676462274799&quot;,&quot;1676462274557/1676462274558/1676462274800&quot;,&quot;1676462274557/1676462274558/1676462274801&quot;,&quot;1676462274557/1676462274558/1676462274802&quot;,&quot;1676462274557/1676462274558/1676462274803&quot;,&quot;1676462274557/1676462274558/1676462274804&quot;,&quot;1676462274557/1676462274558/1676462274805&quot;,&quot;1676462274557/1676462274558/1676462274806&quot;,&quot;1676462274557/1676462274558/1676462274807&quot;,&quot;1676462274557/1676462274558/1676462274808&quot;,&quot;1676462274557/1676462274558/1676462274809&quot;,&quot;1676462274557/1676462274558/1676462274810&quot;,&quot;1676462274557/1676462274558/1676462274811&quot;,&quot;1676462274557/1676462274558/1676462274812&quot;,&quot;1676462274557/1676462274558/1676462274813&quot;,&quot;1676462274557/1676462274558/1676462274814&quot;,&quot;1676462274557/1676462274558/1676462274815&quot;,&quot;1676462274557/1676462274558/1676462274816&quot;,&quot;1676462274557/1676462274558/1676462274817&quot;,&quot;1676462274557/1676462274558/1676462274818&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1676462274659/1676462274660/1676462274671&quot;,&quot;1676462274659/1676462274660/1676462274672&quot;,&quot;1676462274659/1676462274660/1676462274673&quot;,&quot;1676462274659/1676462274660/1676462274674&quot;,&quot;1676462274659/1676462274660/1676462274675&quot;,&quot;1676462274659/1676462274660/1676462274676&quot;,&quot;1676462274659/1676462274660/1676462274677&quot;,&quot;1676462274659/1676462274660/1676462274678&quot;,&quot;1676462274659/1676462274660/1676462274679&quot;,&quot;1676462274659/1676462274660/1676462274680&quot;,&quot;1676462274659/1676462274660/1676462274681&quot;,&quot;1676462274659/1676462274660/1676462274682&quot;,&quot;1676462274659/1676462274660/1676462274683&quot;,&quot;1676462274659/1676462274660/1676462274684&quot;,&quot;1676462274659/1676462274660/1676462274685&quot;,&quot;1676462274659/1676462274660/1676462274686&quot;,&quot;1676462274659/1676462274660/1676462274687&quot;,&quot;1676462274659/1676462274660/1676462274688&quot;,&quot;1676462274659/1676462274660/1676462274689&quot;,&quot;1676462274659/1676462274660/1676462274690&quot;,&quot;1676462274659/1676462274660/1676462274691&quot;,&quot;1676462274659/1676462274660/1676462274692&quot;,&quot;1676462274659/1676462274660/1676462274693&quot;,&quot;1676462274659/1676462274660/1676462274694&quot;,&quot;1676462274659/1676462274660/1676462274695&quot;,&quot;1676462274659/1676462274660/1676462274696&quot;,&quot;1676462274659/1676462274660/1676462274697&quot;,&quot;1676462274659/1676462274660/1676462274698&quot;,&quot;1676462274659/1676462274660/1676462274699&quot;,&quot;1676462274659/1676462274660/1676462274700&quot;,&quot;1676462274659/1676462274660/1676462274701&quot;,&quot;1676462274659/1676462274660/1676462274702&quot;,&quot;1676462274659/1676462274660/1676462274703&quot;,&quot;1676462274659/1676462274660/1676462274704&quot;,&quot;1676462274659/1676462274660/1676462274705&quot;,&quot;1676462274659/1676462274660/1676462274706&quot;,&quot;1676462274659/1676462274660/1676462274707&quot;,&quot;1676462274659/1676462274660/1676462274708&quot;,&quot;1676462274659/1676462274660/1676462274709&quot;,&quot;1676462274659/1676462274660/1676462274710&quot;,&quot;1676462274659/1676462274660/1676462274711&quot;,&quot;1676462274659/1676462274660/1676462274712&quot;,&quot;1676462274659/1676462274660/1676462274713&quot;,&quot;1676462274659/1676462274660/1676462274714&quot;,&quot;1676462274659/1676462274660/1676462274715&quot;,&quot;1676462274659/1676462274660/1676462274716&quot;,&quot;1676462274659/1676462274660/1676462274717&quot;,&quot;1676462274659/1676462274660/1676462274718&quot;,&quot;1676462274659/1676462274660/1676462274719&quot;,&quot;1676462274659/1676462274660/1676462274720&quot;,&quot;1676462274659/1676462274660/1676462274721&quot;,&quot;1676462274659/1676462274660/1676462274722&quot;,&quot;1676462274659/1676462274660/1676462274723&quot;,&quot;1676462274659/1676462274660/1676462274724&quot;,&quot;1676462274659/1676462274660/1676462274725&quot;,&quot;1676462274659/1676462274660/1676462274726&quot;,&quot;1676462274659/1676462274660/1676462274727&quot;,&quot;1676462274659/1676462274660/1676462274728&quot;,&quot;1676462274659/1676462274660/1676462274729&quot;,&quot;1676462274659/1676462274660/1676462274730&quot;,&quot;1676462274659/1676462274660/1676462274731&quot;,&quot;1676462274659/1676462274660/1676462274732&quot;,&quot;1676462274659/1676462274660/1676462274733&quot;,&quot;1676462274659/1676462274660/1676462274734&quot;,&quot;1676462274659/1676462274660/1676462274735&quot;,&quot;1676462274659/1676462274660/1676462274736&quot;,&quot;1676462274659/1676462274660/1676462274737&quot;,&quot;1676462274659/1676462274660/1676462274738&quot;,&quot;1676462274659/1676462274660/1676462274739&quot;,&quot;1676462274659/1676462274660/1676462274740&quot;,&quot;1676462274659/1676462274660/1676462274741&quot;,&quot;1676462274659/1676462274660/1676462274742&quot;,&quot;1676462274659/1676462274660/1676462274743&quot;,&quot;1676462274659/1676462274660/1676462274744&quot;,&quot;1676462274659/1676462274660/1676462274745&quot;,&quot;1676462274659/1676462274660/1676462274746&quot;,&quot;1676462274659/1676462274660/1676462274747&quot;,&quot;1676462274659/1676462274660/1676462274748&quot;,&quot;1676462274659/1676462274660/1676462274749&quot;,&quot;1676462274659/1676462274660/1676462274750&quot;,&quot;1676462274659/1676462274660/1676462274751&quot;,&quot;1676462274659/1676462274660/1676462274752&quot;,&quot;1676462274659/1676462274660/1676462274753&quot;,&quot;1676462274659/1676462274660/1676462274754&quot;,&quot;1676462274659/1676462274660/1676462274755&quot;,&quot;1676462274659/1676462274660/1676462274756&quot;,&quot;1676462274659/1676462274660/1676462274757&quot;,&quot;1676462274659/1676462274660/1676462274758&quot;,&quot;1676462274659/1676462274660/1676462274759&quot;,&quot;1676462274659/1676462274660/1676462274760&quot;,&quot;1676462274659/1676462274660/1676462274836&quot;,&quot;1676462274659/1676462274660/1676462274837&quot;,&quot;1676462274659/1676462274660/1676462274838&quot;,&quot;1676462274659/1676462274660/1676462274839&quot;,&quot;1676462274659/1676462274660/1676462274840&quot;,&quot;1676462274659/1676462274660/1676462274841&quot;,&quot;1676462274659/1676462274660/1676462274842&quot;,&quot;1676462274659/1676462274660/1676462274843&quot;,&quot;1676462274659/1676462274660/1676462274844&quot;,&quot;1676462274659/1676462274660/1676462274845&quot;,&quot;1676462274659/1676462274660/1676462274846&quot;,&quot;1676462274659/1676462274660/1676462274847&quot;,&quot;1676462274659/1676462274660/1676462274848&quot;,&quot;1676462274659/1676462274660/1676462274849&quot;,&quot;1676462274659/1676462274660/1676462274850&quot;,&quot;1676462274659/1676462274660/1676462274851&quot;,&quot;1676462274659/1676462274660/1676462274852&quot;,&quot;1676462274659/1676462274660/1676462274853&quot;,&quot;1676462274659/1676462274660/1676462274854&quot;,&quot;1676462274659/1676462274660/1676462274855&quot;,&quot;1676462274659/1676462274660/1676462274856&quot;,&quot;1676462274659/1676462274660/1676462274857&quot;,&quot;1676462274659/1676462274660/1676462274858&quot;,&quot;1676462274659/1676462274660/1676462274859&quot;,&quot;1676462274659/1676462274660/1676462274860&quot;,&quot;1676462274659/1676462274660/1676462274861&quot;,&quot;1676462274659/1676462274660/1676462274862&quot;,&quot;1676462274659/1676462274660/1676462274863&quot;,&quot;1676462274659/1676462274660/1676462274864&quot;,&quot;1676462274659/1676462274660/1676462274865&quot;,&quot;1676462274659/1676462274660/1676462274866&quot;,&quot;1676462274659/1676462274660/1676462274867&quot;,&quot;1676462274659/1676462274660/1676462274868&quot;,&quot;1676462274659/1676462274660/1676462274869&quot;,&quot;1676462274659/1676462274660/1676462274870&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + &quot;500LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_500LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
              <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x rules" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">${noOfLockRulesInClass}</stringProp>
          </LoopController>
          <hashTree>
            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
              <stringProp name="CounterConfig.start">1</stringProp>
              <stringProp name="CounterConfig.end"></stringProp>
              <stringProp name="CounterConfig.incr">1</stringProp>
              <stringProp name="CounterConfig.name">lockRulesCount</stringProp>
              <stringProp name="CounterConfig.format"></stringProp>
              <boolProp name="CounterConfig.per_user">false</boolProp>
            </CounterConfig>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544525043137/1544525159358/1544525246748&quot;,&quot;1544525043137/1544525159358/1544525263160&quot;,&quot;1544525043137/1544525280855/1544525289279&quot;,&quot;1544525590768/1544525595533/1544525611432&quot;,&quot;1544525590768/1544525595533/1544525627465&quot;,&quot;1544525590768/1544525595533/1544525635696&quot;,&quot;1544525590768/1544525595533/1544525649026&quot;,&quot;1544525590768/1544525595533/1544525663048&quot;,&quot;1544525590768/1544525595533/1544525679427&quot;,&quot;1544525590768/1544525683364/1544525709799&quot;,&quot;1544525590768/1544525683364/1544525720457&quot;,&quot;1544525590768/1544525683364/1544525729515&quot;,&quot;1544525590768/1544525683364/1544525734676&quot;,&quot;1544525590768/1544525683364/1544525756801&quot;,&quot;1544525590768/1544525683364/1544525778291&quot;,&quot;1544526345845/1544526589100/1544526606750&quot;,&quot;1544526345845/1544526589100/1544526610825&quot;,&quot;1544526345845/1544526589100/1544526623799&quot;,&quot;1544526345845/1544526589100/1544526638110&quot;,&quot;1544526345845/1544526589100/1544526644717&quot;,&quot;1544526345845/1544526589100/1544526657285&quot;,&quot;1544526345845/1544526671965/1544526688230&quot;,&quot;1544526345845/1544526671965/1544526695320&quot;,&quot;1544526345845/1544526671965/1544526710051&quot;,&quot;1544526345845/1544526671965/1544526721801&quot;,&quot;1544526345845/1544526671965/1544526728620&quot;,&quot;1544526345845/1544526671965/1544526763389&quot;,&quot;1544526345845/1544526961740/1544526980657&quot;,&quot;1544526345845/1544526961740/1544526994099&quot;,&quot;1544526345845/1544526961740/1544527008225&quot;,&quot;1544526345845/1544528319371/1544528334775&quot;,&quot;1544526345845/1544528319371/1544528345283&quot;,&quot;1544526345845/1544528319371/1544528367998&quot;,&quot;1544591089661/1544591099675/1544591165699&quot;,&quot;1544591089661/1544591099675/1544591181584&quot;,&quot;1544591089661/1544591099675/1544591198772&quot;,&quot;1544591089661/1544591099675/1544591219876&quot;,&quot;1544591089661/1544591099675/1544591237488&quot;,&quot;1544591089661/1544591099675/1544591247402&quot;,&quot;1544591089661/1544591260222/1544591284840&quot;,&quot;1544591089661/1544591260222/1544591295680&quot;,&quot;1544591089661/1544591260222/1544591320423&quot;,&quot;1544591089661/1544591260222/1544591334581&quot;,&quot;1544591089661/1544591260222/1544591341221&quot;,&quot;1544591089661/1544591260222/1544591363137&quot;,&quot;1544591089661/1544591364773/1544591392809&quot;,&quot;1544591089661/1544591412698/1544591428190&quot;,&quot;1544591089661/1544591412698/1544591439057&quot;,&quot;1544591089661/1544591412698/1544591455780&quot;,&quot;1544591089661/1544591602655/1544591636888&quot;,&quot;1544591089661/1544591602655/1544591649137&quot;,&quot;1544591089661/1544591602655/1544591669971&quot;,&quot;1544591751639/1544591756584/1544591786410&quot;,&quot;1544591751639/1544591756584/1544591792950&quot;,&quot;1544591751639/1544591756584/1544591814105&quot;,&quot;1544591751639/1544591756584/1544591826125&quot;,&quot;1544591751639/1544591756584/1544591842867&quot;,&quot;1544591751639/1544591756584/1544591852005&quot;,&quot;1544591751639/1544591859950/1544591889129&quot;,&quot;1544591751639/1544591859950/1544591895035&quot;,&quot;1544591751639/1544591859950/1544591913490&quot;,&quot;1544591751639/1544591859950/1544591923488&quot;,&quot;1544591751639/1544591937229/1544591951092&quot;,&quot;1544591751639/1544591989858/1544592010989&quot;,&quot;1544591751639/1544591989858/1544592017149&quot;,&quot;1544591751639/1544591989858/1544592034736&quot;,&quot;1544591751639/1544592145731/1544592165309&quot;,&quot;1544591751639/1544592145731/1544592176780&quot;,&quot;1544591751639/1544592145731/1544592194540&quot;,&quot;1544592286221/1544592291887/1544592314873&quot;,&quot;1544592286221/1544592291887/1544592322911&quot;,&quot;1544592286221/1544592291887/1544592333414&quot;,&quot;1544592286221/1544592291887/1544592347743&quot;,&quot;1544592286221/1544592291887/1544592363784&quot;,&quot;1544592286221/1544592291887/1544592370486&quot;,&quot;1544592286221/1544592379241/1544592404760&quot;,&quot;1544592286221/1544592379241/1544592415158&quot;,&quot;1544592286221/1544592379241/1544592422449&quot;,&quot;1544592286221/1544592379241/1544592438186&quot;,&quot;1544592286221/1544592379241/1544592448263&quot;,&quot;1544592286221/1544592379241/1544592466092&quot;,&quot;1544592286221/1544592474205/1544592491253&quot;,&quot;1544592286221/1544592520233/1544592540334&quot;,&quot;1544592286221/1544592520233/1544592555974&quot;,&quot;1544592286221/1544592520233/1544592561671&quot;,&quot;1544592286221/1544592623523/1544592648386&quot;,&quot;1544592286221/1544592623523/1544592658543&quot;,&quot;1544592286221/1544592623523/1544592671565&quot;,&quot;1544592857014/1544592865722/1544593053271&quot;,&quot;1544592857014/1544592865722/1544593072380&quot;,&quot;1544592857014/1544592865722/1544593079694&quot;,&quot;1544592857014/1544592865722/1544593093552&quot;,&quot;1544592857014/1544592865722/1544593104748&quot;,&quot;1544592857014/1544592865722/1544593123201&quot;,&quot;1544592857014/1544593139545/1544593173865&quot;,&quot;1544592857014/1544593139545/1544593187008&quot;,&quot;1544592857014/1544593139545/1544593454057&quot;,&quot;1544592857014/1544593139545/1544593471128&quot;,&quot;1544592857014/1544593139545/1544593476327&quot;,&quot;1544592857014/1544593139545/1544593488247&quot;,&quot;1544592857014/1544593529004/1544593551477&quot;,&quot;1544592857014/1544593585947/1544593606215&quot;,&quot;1544592857014/1544593585947/1544593620647&quot;,&quot;1544592857014/1544593585947/1544593632079&quot;,&quot;1544592857014/1544593703192/1544593728070&quot;,&quot;1544592857014/1544593703192/1544593743725&quot;,&quot;1544592857014/1544593703192/1544593752239&quot;,&quot;1544593830881/1544593842258/1544593874472&quot;,&quot;1544593830881/1544593842258/1544593889640&quot;,&quot;1544593830881/1544593842258/1544593905062&quot;,&quot;1544593830881/1544593842258/1544593925051&quot;,&quot;1544593830881/1544593842258/1544593932560&quot;,&quot;1544593830881/1544593842258/1544593949312&quot;,&quot;1544593830881/1544593964252/1544594078882&quot;,&quot;1544593830881/1544593964252/1544594102416&quot;,&quot;1544593830881/1544593964252/1544594113782&quot;,&quot;1544593830881/1544593964252/1544594135462&quot;,&quot;1544593830881/1544593964252/1544594177257&quot;,&quot;1544593830881/1544593964252/1544594194047&quot;,&quot;1544593830881/1544596248781/1544596271349&quot;,&quot;1544593830881/1544596291616/1544596322099&quot;,&quot;1544593830881/1544596291616/1544596327463&quot;,&quot;1544593830881/1544596291616/1544596347700&quot;,&quot;1544593830881/1544596494652/1544596513093&quot;,&quot;1544593830881/1544596494652/1544596529922&quot;,&quot;1544593830881/1544596494652/1544596545929&quot;,&quot;1544596644314/1544596678647/1544596711546&quot;,&quot;1544596644314/1544596678647/1544596731689&quot;,&quot;1544596644314/1544596678647/1544596745950&quot;,&quot;1544596644314/1544596678647/1544596761923&quot;,&quot;1544596644314/1544596678647/1544596768254&quot;,&quot;1544596644314/1544596678647/1544596792897&quot;,&quot;1544596644314/1544596802487/1544596845016&quot;,&quot;1544596644314/1544596802487/1544596858389&quot;,&quot;1544596644314/1544596802487/1544596877787&quot;,&quot;1544596644314/1544596802487/1544596890399&quot;,&quot;1544596644314/1544596802487/1544596904838&quot;,&quot;1544596644314/1544596802487/1544596921860&quot;,&quot;1544596644314/1544597008306/1544597032165&quot;,&quot;1544596644314/1544597091060/1544597104557&quot;,&quot;1544596644314/1544597091060/1544597121860&quot;,&quot;1544596644314/1544597091060/1544597149347&quot;,&quot;1544596644314/1544597220792/1544597245750&quot;,&quot;1544596644314/1544597220792/1544597262426&quot;,&quot;1544596644314/1544597220792/1544597275965&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.util.Arrays;

String[] stringArray1 = {${schl_productcode1}};
String[] stringArray2 = {${__evalVar(${orgid}_PEs)}};
int length = stringArray1.length + stringArray2.length;
String[] stringArray = new String[length];
// Copy elements of array1 to mergedArray
System.arraycopy(stringArray1, 0, stringArray, 0, stringArray1.length);

// Copy elements of array2 to mergedArray
System.arraycopy(stringArray2, 0, stringArray, stringArray1.length, stringArray2.length);

int randomIndex = (${lockRulesCount})%(stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
              <intProp name="ThroughputController.style">0</intProp>
              <boolProp name="ThroughputController.perThread">true</boolProp>
              <stringProp name="ThroughputController.maxThroughput">${50LOsLockRuleCount}</stringProp>
              <stringProp name="ThroughputController.percentThroughput">${20LOsPercentage}</stringProp>
            </ThroughputController>
            <hashTree>
              <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
                <stringProp name="maximumValue">999999</stringProp>
                <stringProp name="minimumValue">000000</stringProp>
                <stringProp name="outputFormat">000000</stringProp>
                <boolProp name="perThread">true</boolProp>
                <stringProp name="randomSeed"></stringProp>
                <stringProp name="variableName">randomNo</stringProp>
              </RandomVariableConfig>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="create a rule" enabled="true">
                <stringProp name="IncludeController.includepath">Create_a_rule_50LOs.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
              <intProp name="ThroughputController.style">0</intProp>
              <boolProp name="ThroughputController.perThread">true</boolProp>
              <stringProp name="ThroughputController.maxThroughput">${100LOsLockRuleCount}</stringProp>
              <stringProp name="ThroughputController.percentThroughput">${30LOsPercentage}</stringProp>
            </ThroughputController>
            <hashTree>
              <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
                <stringProp name="maximumValue">999999</stringProp>
                <stringProp name="minimumValue">000000</stringProp>
                <stringProp name="outputFormat">000000</stringProp>
                <boolProp name="perThread">true</boolProp>
                <stringProp name="randomSeed"></stringProp>
                <stringProp name="variableName">randomNo</stringProp>
              </RandomVariableConfig>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="create a rule" enabled="true">
                <stringProp name="IncludeController.includepath">Create_a_rule_100LOs.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
              <intProp name="ThroughputController.style">0</intProp>
              <boolProp name="ThroughputController.perThread">true</boolProp>
              <stringProp name="ThroughputController.maxThroughput">${150LOsLockRuleCount}</stringProp>
              <stringProp name="ThroughputController.percentThroughput">${50LOsPercentage}</stringProp>
            </ThroughputController>
            <hashTree>
              <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
                <stringProp name="maximumValue">999999</stringProp>
                <stringProp name="minimumValue">000000</stringProp>
                <stringProp name="outputFormat">000000</stringProp>
                <boolProp name="perThread">true</boolProp>
                <stringProp name="randomSeed"></stringProp>
                <stringProp name="variableName">randomNo</stringProp>
              </RandomVariableConfig>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="create a rule" enabled="true">
                <stringProp name="IncludeController.includepath">Create_a_rule_150LOs.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="create custom grading in a class" enabled="false"/>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a gradebook in a class" enabled="true">
              <stringProp name="IncludeController.includepath">Create_a_gradebook_in_a_class.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.util.Arrays;

String[] stringArray1 = {${schl_productcode1}};
String[] stringArray2 = {${__evalVar(${orgid}_PEs)}};
int length = stringArray1.length + stringArray2.length;
String[] multiProducts = new String[length];
// Copy elements of array1 to mergedArray
System.arraycopy(stringArray1, 0, multiProducts, 0, stringArray1.length);

// Copy elements of array2 to mergedArray
System.arraycopy(stringArray2, 0, multiProducts, stringArray1.length, stringArray2.length);

String mergedColumnJson = &quot;[&quot;;
int customWeightage = 0;
int pendingWeightage = 0;
int remainingValue = 0;
String bundle = &quot;&quot;;

for (int i = 0; i &lt; multiProducts.length; i++) {
	bundle = multiProducts[i] + &quot;_bundle&quot;;
	mergedColumnJson += &quot;{\&quot;column_id\&quot;: \&quot;&quot; + multiProducts[i] + &quot;\&quot;,\&quot;type\&quot;: \&quot;product\&quot;,\&quot;weightage\&quot;: \&quot;5\&quot;,\&quot;bundle-codes\&quot;: [\&quot;&quot; + vars.get(bundle) + &quot;\&quot;],\&quot;productcode\&quot;: \&quot;&quot; + multiProducts[i] + &quot;\&quot;},&quot;;
};

remainingValue = 100 - (5*(multiProducts.length));

customWeightage = remainingValue/${customGradingCount};
pendingWeightage = remainingValue%${customGradingCount};

for (int i = 1; i &lt;= ${customGradingCount}; i++) {
	if(i != ${customGradingCount}) {
		mergedColumnJson += &quot;{\&quot;column_id\&quot;: \&quot;PerfCustComp_&quot; + i + &quot;\&quot;,\&quot;type\&quot;: \&quot;custom\&quot;, \&quot;custom_component_code\&quot;: \&quot;PerfCustComp_&quot; + i + &quot;\&quot;, \&quot;title\&quot;: \&quot;PerfCustComp_&quot; + i + &quot;\&quot;, \&quot;weightage\&quot;: \&quot;&quot; + customWeightage + &quot;\&quot;,\&quot;scoring_type\&quot;: \&quot;SIMPLE\&quot;},&quot;;
	} else {
		int finalWeightage = customWeightage + pendingWeightage;
		mergedColumnJson += &quot;{\&quot;column_id\&quot;: \&quot;PerfCustComp_&quot; + i + &quot;\&quot;,\&quot;type\&quot;: \&quot;custom\&quot;, \&quot;custom_component_code\&quot;: \&quot;PerfCustComp_&quot; + i + &quot;\&quot;, \&quot;title\&quot;: \&quot;PerfCustComp_&quot; + i + &quot;\&quot;, \&quot;weightage\&quot;: \&quot;&quot; + finalWeightage + &quot;\&quot;,\&quot;scoring_type\&quot;: \&quot;SIMPLE\&quot;},&quot;;
	}
};

mergedColumnJson = mergedColumnJson.substring(0, mergedColumnJson.length() - 1) + &quot;]&quot;;

vars.put(&quot;mergedColumnJsonFinal&quot;, mergedColumnJson);</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
                <stringProp name="RandomTimer.range">${minWait}</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add columns to a particular gradebook of a class" enabled="true">
              <stringProp name="IncludeController.includepath">Add_columns_to_a_particular_gradebook_of_a_class_with_custom_components.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x students and join using classcode of current teacher" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">${noOfStudentsInClass}</stringProp>
          </LoopController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.util.Date;

Date date = new Date();
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;classcode&quot;);

studentextuserid = &quot;std&quot; + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;studentextuserid&quot;, studentextuserid);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">String[] multiProducts = {${schl_productcode1}};

String mergedJson = &quot;[&quot;;

for (int i = 0; i &lt; multiProducts.length; i++) {
	mergedJson += &quot;{\&quot;productcode\&quot;: \&quot;&quot; + multiProducts[i] + &quot;\&quot;,\&quot;ext_product_meta\&quot;: {\&quot;startdate\&quot;:&quot; + &quot;${startDate}&quot; + &quot;,\&quot;enddate\&quot;:&quot; + &quot;${endDate}&quot; + &quot;}},&quot;;
}
mergedJson = mergedJson.substring(0, mergedJson.length() - 1) + &quot;]&quot;;

vars.put(&quot;provisionProductsArray&quot;, mergedJson);</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with product_code and class_code" enabled="true">
              <stringProp name="IncludeController.includepath">join_Spaces_with_product_code_and_class_code_MultiProduct.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for writing data into csv file" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">timestamp = vars.get(&quot;date&quot;);

FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameStd&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;orgid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameTch&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;orgid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Core Data Template_1021" enabled="true"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">1021_template.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">orgid,category,noOfAssignmentsInClass,20LOsCount,30LOsCount,50LOsCount,noOfStudentsInClass,noOfLockRulesInClass,50LOsLockRuleCount,100LOsLockRuleCount,150LOsLockRuleCount,customGradingCount</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilenameTch" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilenameTch</stringProp>
                <stringProp name="Argument.value">1021_schl_scenario_tch_asnmt_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="outputCsvFilenameStd" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilenameStd</stringProp>
                <stringProp name="Argument.value">1021_schl_student_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="assignedPathList" elementType="Argument">
                <stringProp name="Argument.name">assignedPathList</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="title" elementType="Argument">
                <stringProp name="Argument.name">title</stringProp>
                <stringProp name="Argument.value">default gradebook 1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gradebook_id" elementType="Argument">
                <stringProp name="Argument.name">gradebook_id</stringProp>
                <stringProp name="Argument.value">default-gradebook</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler(Teacher and class Name)" enabled="true">
            <stringProp name="BeanShellSampler.query">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;category&quot;);
//prefix5 = vars.get(&quot;orgid&quot;);

prefix7 = vars.get(&quot;category&quot;);
prefix4 = &quot;1021_schl_&quot; + prefix7;
vars.put(&quot;category&quot;, prefix4);

extuserid = &quot;tch&quot; + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;extuserid&quot;, extuserid);

String sch_spacecode = ${__evalVar(${orgid}_spacecode)}; 
vars.put(&quot;spacecode&quot;, sch_spacecode);

classname = &quot;class&quot; + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;classname&quot;, classname);</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="true">
            <stringProp name="IncludeController.includepath">Join_a_space_with_space_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [60-65 sec]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">60000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class" enabled="true">
            <stringProp name="IncludeController.includepath">create_new_instructor_led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate multi products with a class" enabled="true">
            <stringProp name="IncludeController.includepath">associate_multi_products_with_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate some specific school products with a class" enabled="false">
            <stringProp name="IncludeController.includepath">associate_multi_products_with_class_1021_schl_PEs.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [420-450]" enabled="false">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">720000</stringProp>
              <stringProp name="RandomTimer.range">30000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x assignments" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">${noOfAssignmentsInClass}</stringProp>
          </LoopController>
          <hashTree>
            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
              <stringProp name="CounterConfig.start">1</stringProp>
              <stringProp name="CounterConfig.end">${noOfAssignmentsInClass}</stringProp>
              <stringProp name="CounterConfig.incr">1</stringProp>
              <stringProp name="CounterConfig.name">assignmentCount</stringProp>
              <stringProp name="CounterConfig.format"></stringProp>
              <boolProp name="CounterConfig.per_user">true</boolProp>
              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
            </CounterConfig>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544524003551/1544524304922/1544524359136&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544524003551/1544524012478/1544524057691&quot;,&quot;1544524003551/1544524012478/1544524030068&quot;,&quot;1544525043137/1544525058289/1544525097148&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544525043137/1544525058289/1544525137957&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1544524003551/1544524304922/1544524324762&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544525043137/1544525058289/1544525090848&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1544524003551/1544524012478/1544524071582&quot;,&quot;1544524003551/1544524304922/1544524341184&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544525043137/1544525058289/1544525125172&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1544524003551/1544524304922/1544524313700&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544524003551/1544524012478/1544524084276&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544524003551/1544524304922/1544524387792&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1544524003551/1544524012478/1544524099346&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1544525043137/1544525058289/1544525114886&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544524003551/1544524012478/1544524044427&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544524003551/1544524304922/1544524376121&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.util.Arrays;

String[] stringArray1 = {${__evalVar(${category}_Assignment)}};
String[] stringArray2 = {${1021_schl_PEs}};
int length = stringArray1.length + stringArray2.length;
String[] stringArray = new String[length];
// Copy elements of array1 to mergedArray
System.arraycopy(stringArray1, 0, stringArray, 0, stringArray1.length);

// Copy elements of array2 to mergedArray
System.arraycopy(stringArray2, 0, stringArray, stringArray1.length, stringArray2.length);

int randomIndex = (int) (Math.random() * stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
              <intProp name="ThroughputController.style">0</intProp>
              <boolProp name="ThroughputController.perThread">true</boolProp>
              <stringProp name="ThroughputController.maxThroughput">${20LOsCount}</stringProp>
              <stringProp name="ThroughputController.percentThroughput">${20LOsPercentage}</stringProp>
            </ThroughputController>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + &quot;20LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_20LOs.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
              <intProp name="ThroughputController.style">0</intProp>
              <boolProp name="ThroughputController.perThread">true</boolProp>
              <stringProp name="ThroughputController.maxThroughput">${30LOsCount}</stringProp>
              <stringProp name="ThroughputController.percentThroughput">${30LOsPercentage}</stringProp>
            </ThroughputController>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + &quot;30LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_30LOs.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
              <intProp name="ThroughputController.style">0</intProp>
              <boolProp name="ThroughputController.perThread">true</boolProp>
              <stringProp name="ThroughputController.maxThroughput">${50LOsCount}</stringProp>
              <stringProp name="ThroughputController.percentThroughput">${50LOsPercentage}</stringProp>
            </ThroughputController>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + &quot;50LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_50LOs.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;H6&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
                <intProp name="ThroughputController.style">0</intProp>
                <boolProp name="ThroughputController.perThread">true</boolProp>
                <stringProp name="ThroughputController.maxThroughput">${__evalVar(${category}_100LOsCount)}</stringProp>
                <stringProp name="ThroughputController.percentThroughput">${20LOsPercentage}</stringProp>
              </ThroughputController>
              <hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] stringArray = {&quot;perf35_400lo_1&quot;,&quot;perf35_500lo_1&quot;,&quot;perf38_300lo_1&quot;,&quot;perf38_630lo_1&quot;,&quot;perf38_630lo_2&quot;,&quot;perf40_630lo_1&quot;,&quot;perf40_630lo_2&quot;};

int randomIndex = (int) (Math.random() * stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1544524003551/1544524012478/1544524030068&quot;,&quot;1544524003551/1544524012478/1544524044427&quot;,&quot;1544524003551/1544524012478/1544524057691&quot;,&quot;1544524003551/1544524012478/1544524071582&quot;,&quot;1544524003551/1544524012478/1544524084276&quot;,&quot;1544524003551/1544524012478/1544524099346&quot;,&quot;1544524003551/1544524304922/1544524313700&quot;,&quot;1544524003551/1544524304922/1544524324762&quot;,&quot;1544524003551/1544524304922/1544524341184&quot;,&quot;1544524003551/1544524304922/1544524359136&quot;,&quot;1544524003551/1544524304922/1544524376121&quot;,&quot;1544524003551/1544524304922/1544524387792&quot;,&quot;1544525043137/1544525058289/1544525090848&quot;,&quot;1544525043137/1544525058289/1544525097148&quot;,&quot;1544525043137/1544525058289/1544525114886&quot;,&quot;1544525043137/1544525058289/1544525125172&quot;,&quot;1544525043137/1544525058289/1544525137957&quot;,&quot;1544525043137/1544525058289/1544525143762&quot;,&quot;1544525043137/1544525159358/1544525175677&quot;,&quot;1544525043137/1544525159358/1544525192972&quot;,&quot;1544525043137/1544525159358/1544525217177&quot;,&quot;1544525043137/1544525159358/1544525239184&quot;,&quot;1544525043137/1544525159358/1544525246748&quot;,&quot;1544525043137/1544525159358/1544525263160&quot;,&quot;1544525043137/1544525280855/1544525289279&quot;,&quot;1544525590768/1544525595533/1544525611432&quot;,&quot;1544525590768/1544525595533/1544525627465&quot;,&quot;1544525590768/1544525595533/1544525635696&quot;,&quot;1544525590768/1544525595533/1544525649026&quot;,&quot;1544525590768/1544525595533/1544525663048&quot;,&quot;1544525590768/1544525595533/1544525679427&quot;,&quot;1544525590768/1544525683364/1544525709799&quot;,&quot;1544525590768/1544525683364/1544525720457&quot;,&quot;1544525590768/1544525683364/1544525729515&quot;,&quot;1544525590768/1544525683364/1544525734676&quot;,&quot;1544525590768/1544525683364/1544525756801&quot;,&quot;1544525590768/1544525683364/1544525778291&quot;,&quot;1544526345845/1544526589100/1544526606750&quot;,&quot;1544526345845/1544526589100/1544526610825&quot;,&quot;1544526345845/1544526589100/1544526623799&quot;,&quot;1544526345845/1544526589100/1544526638110&quot;,&quot;1544526345845/1544526589100/1544526644717&quot;,&quot;1544526345845/1544526589100/1544526657285&quot;,&quot;1544526345845/1544526671965/1544526688230&quot;,&quot;1544526345845/1544526671965/1544526695320&quot;,&quot;1544526345845/1544526671965/1544526710051&quot;,&quot;1544526345845/1544526671965/1544526721801&quot;,&quot;1544526345845/1544526671965/1544526728620&quot;,&quot;1544526345845/1544526671965/1544526763389&quot;,&quot;1544526345845/1544526961740/1544526980657&quot;,&quot;1544526345845/1544526961740/1544526994099&quot;,&quot;1544526345845/1544526961740/1544527008225&quot;,&quot;1544526345845/1544528319371/1544528334775&quot;,&quot;1544526345845/1544528319371/1544528345283&quot;,&quot;1544526345845/1544528319371/1544528367998&quot;,&quot;1544591089661/1544591099675/1544591165699&quot;,&quot;1544591089661/1544591099675/1544591181584&quot;,&quot;1544591089661/1544591099675/1544591198772&quot;,&quot;1544591089661/1544591099675/1544591219876&quot;,&quot;1544591089661/1544591099675/1544591237488&quot;,&quot;1544591089661/1544591099675/1544591247402&quot;,&quot;1544591089661/1544591260222/1544591284840&quot;,&quot;1544591089661/1544591260222/1544591295680&quot;,&quot;1544591089661/1544591260222/1544591320423&quot;,&quot;1544591089661/1544591260222/1544591334581&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + &quot;100LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_100LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
                <intProp name="ThroughputController.style">0</intProp>
                <boolProp name="ThroughputController.perThread">true</boolProp>
                <stringProp name="ThroughputController.maxThroughput">${__evalVar(${category}_300LOsCount)}</stringProp>
                <stringProp name="ThroughputController.percentThroughput">${20LOsPercentage}</stringProp>
              </ThroughputController>
              <hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] stringArray = {&quot;perf35_500lo_1&quot;,&quot;perf38_630lo_1&quot;,&quot;perf38_630lo_2&quot;,&quot;perf40_630lo_1&quot;,&quot;perf40_630lo_2&quot;};

int randomIndex = (int) (Math.random() * stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1544524003551/1544524012478/1544524030068&quot;,&quot;1544524003551/1544524012478/1544524044427&quot;,&quot;1544524003551/1544524012478/1544524057691&quot;,&quot;1544524003551/1544524012478/1544524071582&quot;,&quot;1544524003551/1544524012478/1544524084276&quot;,&quot;1544524003551/1544524012478/1544524099346&quot;,&quot;1544524003551/1544524304922/1544524313700&quot;,&quot;1544524003551/1544524304922/1544524324762&quot;,&quot;1544524003551/1544524304922/1544524341184&quot;,&quot;1544524003551/1544524304922/1544524359136&quot;,&quot;1544524003551/1544524304922/1544524376121&quot;,&quot;1544524003551/1544524304922/1544524387792&quot;,&quot;1544525043137/1544525058289/1544525090848&quot;,&quot;1544525043137/1544525058289/1544525097148&quot;,&quot;1544525043137/1544525058289/1544525114886&quot;,&quot;1544525043137/1544525058289/1544525125172&quot;,&quot;1544525043137/1544525058289/1544525137957&quot;,&quot;1544525043137/1544525058289/1544525143762&quot;,&quot;1544525043137/1544525159358/1544525175677&quot;,&quot;1544525043137/1544525159358/1544525192972&quot;,&quot;1544525043137/1544525159358/1544525217177&quot;,&quot;1544525043137/1544525159358/1544525239184&quot;,&quot;1544525043137/1544525159358/1544525246748&quot;,&quot;1544525043137/1544525159358/1544525263160&quot;,&quot;1544525043137/1544525280855/1544525289279&quot;,&quot;1544525590768/1544525595533/1544525611432&quot;,&quot;1544525590768/1544525595533/1544525627465&quot;,&quot;1544525590768/1544525595533/1544525635696&quot;,&quot;1544525590768/1544525595533/1544525649026&quot;,&quot;1544525590768/1544525595533/1544525663048&quot;,&quot;1544525590768/1544525595533/1544525679427&quot;,&quot;1544525590768/1544525683364/1544525709799&quot;,&quot;1544525590768/1544525683364/1544525720457&quot;,&quot;1544525590768/1544525683364/1544525729515&quot;,&quot;1544525590768/1544525683364/1544525734676&quot;,&quot;1544525590768/1544525683364/1544525756801&quot;,&quot;1544525590768/1544525683364/1544525778291&quot;,&quot;1544526345845/1544526589100/1544526606750&quot;,&quot;1544526345845/1544526589100/1544526610825&quot;,&quot;1544526345845/1544526589100/1544526623799&quot;,&quot;1544526345845/1544526589100/1544526638110&quot;,&quot;1544526345845/1544526589100/1544526644717&quot;,&quot;1544526345845/1544526589100/1544526657285&quot;,&quot;1544526345845/1544526671965/1544526688230&quot;,&quot;1544526345845/1544526671965/1544526695320&quot;,&quot;1544526345845/1544526671965/1544526710051&quot;,&quot;1544526345845/1544526671965/1544526721801&quot;,&quot;1544526345845/1544526671965/1544526728620&quot;,&quot;1544526345845/1544526671965/1544526763389&quot;,&quot;1544526345845/1544526961740/1544526980657&quot;,&quot;1544526345845/1544526961740/1544526994099&quot;,&quot;1544526345845/1544526961740/1544527008225&quot;,&quot;1544526345845/1544528319371/1544528334775&quot;,&quot;1544526345845/1544528319371/1544528345283&quot;,&quot;1544526345845/1544528319371/1544528367998&quot;,&quot;1544591089661/1544591099675/1544591165699&quot;,&quot;1544591089661/1544591099675/1544591181584&quot;,&quot;1544591089661/1544591099675/1544591198772&quot;,&quot;1544591089661/1544591099675/1544591219876&quot;,&quot;1544591089661/1544591099675/1544591237488&quot;,&quot;1544591089661/1544591099675/1544591247402&quot;,&quot;1544591089661/1544591260222/1544591284840&quot;,&quot;1544591089661/1544591260222/1544591295680&quot;,&quot;1544591089661/1544591260222/1544591320423&quot;,&quot;1544591089661/1544591260222/1544591334581&quot;,&quot;1544591089661/1544591260222/1544591341221&quot;,&quot;1544591089661/1544591260222/1544591363137&quot;,&quot;1544591089661/1544591364773/1544591392809&quot;,&quot;1544591089661/1544591412698/1544591428190&quot;,&quot;1544591089661/1544591412698/1544591439057&quot;,&quot;1544591089661/1544591412698/1544591455780&quot;,&quot;1544591089661/1544591602655/1544591636888&quot;,&quot;1544591089661/1544591602655/1544591649137&quot;,&quot;1544591089661/1544591602655/1544591669971&quot;,&quot;1544591751639/1544591756584/1544591786410&quot;,&quot;1544591751639/1544591756584/1544591792950&quot;,&quot;1544591751639/1544591756584/1544591814105&quot;,&quot;1544591751639/1544591756584/1544591826125&quot;,&quot;1544591751639/1544591756584/1544591842867&quot;,&quot;1544591751639/1544591756584/1544591852005&quot;,&quot;1544591751639/1544591859950/1544591889129&quot;,&quot;1544591751639/1544591859950/1544591895035&quot;,&quot;1544591751639/1544591859950/1544591913490&quot;,&quot;1544591751639/1544591859950/1544591923488&quot;,&quot;1544591751639/1544591937229/1544591951092&quot;,&quot;1544591751639/1544591989858/1544592010989&quot;,&quot;1544591751639/1544591989858/1544592017149&quot;,&quot;1544591751639/1544591989858/1544592034736&quot;,&quot;1544591751639/1544592145731/1544592165309&quot;,&quot;1544591751639/1544592145731/1544592176780&quot;,&quot;1544591751639/1544592145731/1544592194540&quot;,&quot;1544592286221/1544592291887/1544592314873&quot;,&quot;1544592286221/1544592291887/1544592322911&quot;,&quot;1544592286221/1544592291887/1544592333414&quot;,&quot;1544592286221/1544592291887/1544592347743&quot;,&quot;1544592286221/1544592291887/1544592363784&quot;,&quot;1544592286221/1544592291887/1544592370486&quot;,&quot;1544592286221/1544592379241/1544592404760&quot;,&quot;1544592286221/1544592379241/1544592415158&quot;,&quot;1544592286221/1544592379241/1544592422449&quot;,&quot;1544592286221/1544592379241/1544592438186&quot;,&quot;1544592286221/1544592379241/1544592448263&quot;,&quot;1544592286221/1544592379241/1544592466092&quot;,&quot;1544592286221/1544592474205/1544592491253&quot;,&quot;1544592286221/1544592520233/1544592540334&quot;,&quot;1544592286221/1544592520233/1544592555974&quot;,&quot;1544592286221/1544592520233/1544592561671&quot;,&quot;1544592286221/1544592623523/1544592648386&quot;,&quot;1544592286221/1544592623523/1544592658543&quot;,&quot;1544592286221/1544592623523/1544592671565&quot;,&quot;1544592857014/1544592865722/1544593053271&quot;,&quot;1544592857014/1544592865722/1544593072380&quot;,&quot;1544592857014/1544592865722/1544593079694&quot;,&quot;1544592857014/1544592865722/1544593093552&quot;,&quot;1544592857014/1544592865722/1544593104748&quot;,&quot;1544592857014/1544592865722/1544593123201&quot;,&quot;1544592857014/1544593139545/1544593173865&quot;,&quot;1544592857014/1544593139545/1544593187008&quot;,&quot;1544592857014/1544593139545/1544593454057&quot;,&quot;1544592857014/1544593139545/1544593471128&quot;,&quot;1544592857014/1544593139545/1544593476327&quot;,&quot;1544592857014/1544593139545/1544593488247&quot;,&quot;1544592857014/1544593529004/1544593551477&quot;,&quot;1544592857014/1544593585947/1544593606215&quot;,&quot;1544592857014/1544593585947/1544593620647&quot;,&quot;1544592857014/1544593585947/1544593632079&quot;,&quot;1544592857014/1544593703192/1544593728070&quot;,&quot;1544592857014/1544593703192/1544593743725&quot;,&quot;1544592857014/1544593703192/1544593752239&quot;,&quot;1544593830881/1544593842258/1544593874472&quot;,&quot;1544593830881/1544593842258/1544593889640&quot;,&quot;1544593830881/1544593842258/1544593905062&quot;,&quot;1544593830881/1544593842258/1544593925051&quot;,&quot;1544593830881/1544593842258/1544593932560&quot;,&quot;1544593830881/1544593842258/1544593949312&quot;,&quot;1544593830881/1544593964252/1544594078882&quot;,&quot;1544593830881/1544593964252/1544594102416&quot;,&quot;1544593830881/1544593964252/1544594113782&quot;,&quot;1544593830881/1544593964252/1544594135462&quot;,&quot;1544593830881/1544593964252/1544594177257&quot;,&quot;1544593830881/1544593964252/1544594194047&quot;,&quot;1544593830881/1544596248781/1544596271349&quot;,&quot;1544593830881/1544596291616/1544596322099&quot;,&quot;1544593830881/1544596291616/1544596327463&quot;,&quot;1544593830881/1544596291616/1544596347700&quot;,&quot;1544593830881/1544596494652/1544596513093&quot;,&quot;1544593830881/1544596494652/1544596529922&quot;,&quot;1544593830881/1544596494652/1544596545929&quot;,&quot;1544596644314/1544596678647/1544596711546&quot;,&quot;1544596644314/1544596678647/1544596731689&quot;,&quot;1544596644314/1544596678647/1544596745950&quot;,&quot;1544596644314/1544596678647/1544596761923&quot;,&quot;1544596644314/1544596678647/1544596768254&quot;,&quot;1544596644314/1544596678647/1544596792897&quot;,&quot;1544596644314/1544596802487/1544596845016&quot;,&quot;1544596644314/1544596802487/1544596858389&quot;,&quot;1544596644314/1544596802487/1544596877787&quot;,&quot;1544596644314/1544596802487/1544596890399&quot;,&quot;1544596644314/1544596802487/1544596904838&quot;,&quot;1544596644314/1544596802487/1544596921860&quot;,&quot;1544596644314/1544597008306/1544597032165&quot;,&quot;1544596644314/1544597091060/1544597104557&quot;,&quot;1544596644314/1544597091060/1544597121860&quot;,&quot;1544596644314/1544597091060/1544597149347&quot;,&quot;1544596644314/1544597220792/1544597245750&quot;,&quot;1544596644314/1544597220792/1544597262426&quot;,&quot;1544596644314/1544597220792/1544597275965&quot;,&quot;1676462274557/1676462274558/1676462274559&quot;,&quot;1676462274557/1676462274558/1676462274560&quot;,&quot;1676462274557/1676462274558/1676462274561&quot;,&quot;1676462274557/1676462274558/1676462274562&quot;,&quot;1676462274557/1676462274558/1676462274563&quot;,&quot;1676462274557/1676462274558/1676462274564&quot;,&quot;1676462274557/1676462274558/1676462274565&quot;,&quot;1676462274557/1676462274558/1676462274566&quot;,&quot;1676462274557/1676462274558/1676462274567&quot;,&quot;1676462274557/1676462274558/1676462274568&quot;,&quot;1676462274557/1676462274558/1676462274569&quot;,&quot;1676462274557/1676462274558/1676462274570&quot;,&quot;1676462274557/1676462274558/1676462274571&quot;,&quot;1676462274557/1676462274558/1676462274572&quot;,&quot;1676462274557/1676462274558/1676462274573&quot;,&quot;1676462274557/1676462274558/1676462274574&quot;,&quot;1676462274557/1676462274558/1676462274575&quot;,&quot;1676462274557/1676462274558/1676462274576&quot;,&quot;1676462274557/1676462274558/1676462274577&quot;,&quot;1676462274557/1676462274558/1676462274578&quot;,&quot;1676462274557/1676462274558/1676462274579&quot;,&quot;1676462274557/1676462274558/1676462274580&quot;,&quot;1676462274557/1676462274558/1676462274581&quot;,&quot;1676462274557/1676462274558/1676462274582&quot;,&quot;1676462274557/1676462274558/1676462274583&quot;,&quot;1676462274557/1676462274558/1676462274584&quot;,&quot;1676462274557/1676462274558/1676462274585&quot;,&quot;1676462274557/1676462274558/1676462274586&quot;,&quot;1676462274557/1676462274558/1676462274587&quot;,&quot;1676462274557/1676462274558/1676462274588&quot;,&quot;1676462274557/1676462274558/1676462274589&quot;,&quot;1676462274557/1676462274558/1676462274590&quot;,&quot;1676462274557/1676462274558/1676462274591&quot;,&quot;1676462274557/1676462274558/1676462274592&quot;,&quot;1676462274557/1676462274558/1676462274593&quot;,&quot;1676462274557/1676462274558/1676462274594&quot;,&quot;1676462274557/1676462274558/1676462274595&quot;,&quot;1676462274557/1676462274558/1676462274596&quot;,&quot;1676462274557/1676462274558/1676462274597&quot;,&quot;1676462274557/1676462274558/1676462274598&quot;,&quot;1676462274557/1676462274558/1676462274599&quot;,&quot;1676462274557/1676462274558/1676462274600&quot;,&quot;1676462274557/1676462274558/1676462274601&quot;,&quot;1676462274557/1676462274558/1676462274602&quot;,&quot;1676462274557/1676462274558/1676462274603&quot;,&quot;1676462274557/1676462274558/1676462274604&quot;,&quot;1676462274557/1676462274558/1676462274605&quot;,&quot;1676462274557/1676462274558/1676462274606&quot;,&quot;1676462274557/1676462274558/1676462274607&quot;,&quot;1676462274557/1676462274558/1676462274608&quot;,&quot;1676462274557/1676462274558/1676462274609&quot;,&quot;1676462274557/1676462274558/1676462274610&quot;,&quot;1676462274557/1676462274558/1676462274611&quot;,&quot;1676462274557/1676462274558/1676462274612&quot;,&quot;1676462274557/1676462274558/1676462274613&quot;,&quot;1676462274557/1676462274558/1676462274614&quot;,&quot;1676462274557/1676462274558/1676462274615&quot;,&quot;1676462274557/1676462274558/1676462274616&quot;,&quot;1676462274557/1676462274558/1676462274617&quot;,&quot;1676462274557/1676462274558/1676462274618&quot;,&quot;1676462274557/1676462274558/1676462274619&quot;,&quot;1676462274557/1676462274558/1676462274620&quot;,&quot;1676462274557/1676462274558/1676462274621&quot;,&quot;1676462274557/1676462274558/1676462274622&quot;,&quot;1676462274557/1676462274558/1676462274623&quot;,&quot;1676462274557/1676462274558/1676462274624&quot;,&quot;1676462274557/1676462274558/1676462274625&quot;,&quot;1676462274557/1676462274558/1676462274626&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1676462274659/1676462274660/1676462274671&quot;,&quot;1676462274659/1676462274660/1676462274672&quot;,&quot;1676462274659/1676462274660/1676462274673&quot;,&quot;1676462274659/1676462274660/1676462274674&quot;,&quot;1676462274659/1676462274660/1676462274675&quot;,&quot;1676462274659/1676462274660/1676462274676&quot;,&quot;1676462274659/1676462274660/1676462274677&quot;,&quot;1676462274659/1676462274660/1676462274678&quot;,&quot;1676462274659/1676462274660/1676462274679&quot;,&quot;1676462274659/1676462274660/1676462274680&quot;,&quot;1676462274659/1676462274660/1676462274681&quot;,&quot;1676462274659/1676462274660/1676462274682&quot;,&quot;1676462274659/1676462274660/1676462274683&quot;,&quot;1676462274659/1676462274660/1676462274684&quot;,&quot;1676462274659/1676462274660/1676462274685&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + &quot;300LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_300LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
                <intProp name="ThroughputController.style">0</intProp>
                <boolProp name="ThroughputController.perThread">true</boolProp>
                <stringProp name="ThroughputController.maxThroughput">${__evalVar(${category}_500LOsCount)}</stringProp>
                <stringProp name="ThroughputController.percentThroughput">${20LOsPercentage}</stringProp>
              </ThroughputController>
              <hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] stringArray = {&quot;perf38_630lo_1&quot;,&quot;perf38_630lo_2&quot;,&quot;perf40_630lo_1&quot;,&quot;perf40_630lo_2&quot;};

int randomIndex = (int) (Math.random() * stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1544524003551/1544524012478/1544524030068&quot;,&quot;1544524003551/1544524012478/1544524044427&quot;,&quot;1544524003551/1544524012478/1544524057691&quot;,&quot;1544524003551/1544524012478/1544524071582&quot;,&quot;1544524003551/1544524012478/1544524084276&quot;,&quot;1544524003551/1544524012478/1544524099346&quot;,&quot;1544524003551/1544524304922/1544524313700&quot;,&quot;1544524003551/1544524304922/1544524324762&quot;,&quot;1544524003551/1544524304922/1544524341184&quot;,&quot;1544524003551/1544524304922/1544524359136&quot;,&quot;1544524003551/1544524304922/1544524376121&quot;,&quot;1544524003551/1544524304922/1544524387792&quot;,&quot;1544525043137/1544525058289/1544525090848&quot;,&quot;1544525043137/1544525058289/1544525097148&quot;,&quot;1544525043137/1544525058289/1544525114886&quot;,&quot;1544525043137/1544525058289/1544525125172&quot;,&quot;1544525043137/1544525058289/1544525137957&quot;,&quot;1544525043137/1544525058289/1544525143762&quot;,&quot;1544525043137/1544525159358/1544525175677&quot;,&quot;1544525043137/1544525159358/1544525192972&quot;,&quot;1544525043137/1544525159358/1544525217177&quot;,&quot;1544525043137/1544525159358/1544525239184&quot;,&quot;1544525043137/1544525159358/1544525246748&quot;,&quot;1544525043137/1544525159358/1544525263160&quot;,&quot;1544525043137/1544525280855/1544525289279&quot;,&quot;1544525590768/1544525595533/1544525611432&quot;,&quot;1544525590768/1544525595533/1544525627465&quot;,&quot;1544525590768/1544525595533/1544525635696&quot;,&quot;1544525590768/1544525595533/1544525649026&quot;,&quot;1544525590768/1544525595533/1544525663048&quot;,&quot;1544525590768/1544525595533/1544525679427&quot;,&quot;1544525590768/1544525683364/1544525709799&quot;,&quot;1544525590768/1544525683364/1544525720457&quot;,&quot;1544525590768/1544525683364/1544525729515&quot;,&quot;1544525590768/1544525683364/1544525734676&quot;,&quot;1544525590768/1544525683364/1544525756801&quot;,&quot;1544525590768/1544525683364/1544525778291&quot;,&quot;1544526345845/1544526589100/1544526606750&quot;,&quot;1544526345845/1544526589100/1544526610825&quot;,&quot;1544526345845/1544526589100/1544526623799&quot;,&quot;1544526345845/1544526589100/1544526638110&quot;,&quot;1544526345845/1544526589100/1544526644717&quot;,&quot;1544526345845/1544526589100/1544526657285&quot;,&quot;1544526345845/1544526671965/1544526688230&quot;,&quot;1544526345845/1544526671965/1544526695320&quot;,&quot;1544526345845/1544526671965/1544526710051&quot;,&quot;1544526345845/1544526671965/1544526721801&quot;,&quot;1544526345845/1544526671965/1544526728620&quot;,&quot;1544526345845/1544526671965/1544526763389&quot;,&quot;1544526345845/1544526961740/1544526980657&quot;,&quot;1544526345845/1544526961740/1544526994099&quot;,&quot;1544526345845/1544526961740/1544527008225&quot;,&quot;1544526345845/1544528319371/1544528334775&quot;,&quot;1544526345845/1544528319371/1544528345283&quot;,&quot;1544526345845/1544528319371/1544528367998&quot;,&quot;1544591089661/1544591099675/1544591165699&quot;,&quot;1544591089661/1544591099675/1544591181584&quot;,&quot;1544591089661/1544591099675/1544591198772&quot;,&quot;1544591089661/1544591099675/1544591219876&quot;,&quot;1544591089661/1544591099675/1544591237488&quot;,&quot;1544591089661/1544591099675/1544591247402&quot;,&quot;1544591089661/1544591260222/1544591284840&quot;,&quot;1544591089661/1544591260222/1544591295680&quot;,&quot;1544591089661/1544591260222/1544591320423&quot;,&quot;1544591089661/1544591260222/1544591334581&quot;,&quot;1544591089661/1544591260222/1544591341221&quot;,&quot;1544591089661/1544591260222/1544591363137&quot;,&quot;1544591089661/1544591364773/1544591392809&quot;,&quot;1544591089661/1544591412698/1544591428190&quot;,&quot;1544591089661/1544591412698/1544591439057&quot;,&quot;1544591089661/1544591412698/1544591455780&quot;,&quot;1544591089661/1544591602655/1544591636888&quot;,&quot;1544591089661/1544591602655/1544591649137&quot;,&quot;1544591089661/1544591602655/1544591669971&quot;,&quot;1544591751639/1544591756584/1544591786410&quot;,&quot;1544591751639/1544591756584/1544591792950&quot;,&quot;1544591751639/1544591756584/1544591814105&quot;,&quot;1544591751639/1544591756584/1544591826125&quot;,&quot;1544591751639/1544591756584/1544591842867&quot;,&quot;1544591751639/1544591756584/1544591852005&quot;,&quot;1544591751639/1544591859950/1544591889129&quot;,&quot;1544591751639/1544591859950/1544591895035&quot;,&quot;1544591751639/1544591859950/1544591913490&quot;,&quot;1544591751639/1544591859950/1544591923488&quot;,&quot;1544591751639/1544591937229/1544591951092&quot;,&quot;1544591751639/1544591989858/1544592010989&quot;,&quot;1544591751639/1544591989858/1544592017149&quot;,&quot;1544591751639/1544591989858/1544592034736&quot;,&quot;1544591751639/1544592145731/1544592165309&quot;,&quot;1544591751639/1544592145731/1544592176780&quot;,&quot;1544591751639/1544592145731/1544592194540&quot;,&quot;1544592286221/1544592291887/1544592314873&quot;,&quot;1544592286221/1544592291887/1544592322911&quot;,&quot;1544592286221/1544592291887/1544592333414&quot;,&quot;1544592286221/1544592291887/1544592347743&quot;,&quot;1544592286221/1544592291887/1544592363784&quot;,&quot;1544592286221/1544592291887/1544592370486&quot;,&quot;1544592286221/1544592379241/1544592404760&quot;,&quot;1544592286221/1544592379241/1544592415158&quot;,&quot;1544592286221/1544592379241/1544592422449&quot;,&quot;1544592286221/1544592379241/1544592438186&quot;,&quot;1544592286221/1544592379241/1544592448263&quot;,&quot;1544592286221/1544592379241/1544592466092&quot;,&quot;1544592286221/1544592474205/1544592491253&quot;,&quot;1544592286221/1544592520233/1544592540334&quot;,&quot;1544592286221/1544592520233/1544592555974&quot;,&quot;1544592286221/1544592520233/1544592561671&quot;,&quot;1544592286221/1544592623523/1544592648386&quot;,&quot;1544592286221/1544592623523/1544592658543&quot;,&quot;1544592286221/1544592623523/1544592671565&quot;,&quot;1544592857014/1544592865722/1544593053271&quot;,&quot;1544592857014/1544592865722/1544593072380&quot;,&quot;1544592857014/1544592865722/1544593079694&quot;,&quot;1544592857014/1544592865722/1544593093552&quot;,&quot;1544592857014/1544592865722/1544593104748&quot;,&quot;1544592857014/1544592865722/1544593123201&quot;,&quot;1544592857014/1544593139545/1544593173865&quot;,&quot;1544592857014/1544593139545/1544593187008&quot;,&quot;1544592857014/1544593139545/1544593454057&quot;,&quot;1544592857014/1544593139545/1544593471128&quot;,&quot;1544592857014/1544593139545/1544593476327&quot;,&quot;1544592857014/1544593139545/1544593488247&quot;,&quot;1544592857014/1544593529004/1544593551477&quot;,&quot;1544592857014/1544593585947/1544593606215&quot;,&quot;1544592857014/1544593585947/1544593620647&quot;,&quot;1544592857014/1544593585947/1544593632079&quot;,&quot;1544592857014/1544593703192/1544593728070&quot;,&quot;1544592857014/1544593703192/1544593743725&quot;,&quot;1544592857014/1544593703192/1544593752239&quot;,&quot;1544593830881/1544593842258/1544593874472&quot;,&quot;1544593830881/1544593842258/1544593889640&quot;,&quot;1544593830881/1544593842258/1544593905062&quot;,&quot;1544593830881/1544593842258/1544593925051&quot;,&quot;1544593830881/1544593842258/1544593932560&quot;,&quot;1544593830881/1544593842258/1544593949312&quot;,&quot;1544593830881/1544593964252/1544594078882&quot;,&quot;1544593830881/1544593964252/1544594102416&quot;,&quot;1544593830881/1544593964252/1544594113782&quot;,&quot;1544593830881/1544593964252/1544594135462&quot;,&quot;1544593830881/1544593964252/1544594177257&quot;,&quot;1544593830881/1544593964252/1544594194047&quot;,&quot;1544593830881/1544596248781/1544596271349&quot;,&quot;1544593830881/1544596291616/1544596322099&quot;,&quot;1544593830881/1544596291616/1544596327463&quot;,&quot;1544593830881/1544596291616/1544596347700&quot;,&quot;1544593830881/1544596494652/1544596513093&quot;,&quot;1544593830881/1544596494652/1544596529922&quot;,&quot;1544593830881/1544596494652/1544596545929&quot;,&quot;1544596644314/1544596678647/1544596711546&quot;,&quot;1544596644314/1544596678647/1544596731689&quot;,&quot;1544596644314/1544596678647/1544596745950&quot;,&quot;1544596644314/1544596678647/1544596761923&quot;,&quot;1544596644314/1544596678647/1544596768254&quot;,&quot;1544596644314/1544596678647/1544596792897&quot;,&quot;1544596644314/1544596802487/1544596845016&quot;,&quot;1544596644314/1544596802487/1544596858389&quot;,&quot;1544596644314/1544596802487/1544596877787&quot;,&quot;1544596644314/1544596802487/1544596890399&quot;,&quot;1544596644314/1544596802487/1544596904838&quot;,&quot;1544596644314/1544596802487/1544596921860&quot;,&quot;1544596644314/1544597008306/1544597032165&quot;,&quot;1544596644314/1544597091060/1544597104557&quot;,&quot;1544596644314/1544597091060/1544597121860&quot;,&quot;1544596644314/1544597091060/1544597149347&quot;,&quot;1544596644314/1544597220792/1544597245750&quot;,&quot;1544596644314/1544597220792/1544597262426&quot;,&quot;1544596644314/1544597220792/1544597275965&quot;,&quot;1676462274557/1676462274558/1676462274559&quot;,&quot;1676462274557/1676462274558/1676462274560&quot;,&quot;1676462274557/1676462274558/1676462274561&quot;,&quot;1676462274557/1676462274558/1676462274562&quot;,&quot;1676462274557/1676462274558/1676462274563&quot;,&quot;1676462274557/1676462274558/1676462274564&quot;,&quot;1676462274557/1676462274558/1676462274565&quot;,&quot;1676462274557/1676462274558/1676462274566&quot;,&quot;1676462274557/1676462274558/1676462274567&quot;,&quot;1676462274557/1676462274558/1676462274568&quot;,&quot;1676462274557/1676462274558/1676462274569&quot;,&quot;1676462274557/1676462274558/1676462274570&quot;,&quot;1676462274557/1676462274558/1676462274571&quot;,&quot;1676462274557/1676462274558/1676462274572&quot;,&quot;1676462274557/1676462274558/1676462274573&quot;,&quot;1676462274557/1676462274558/1676462274574&quot;,&quot;1676462274557/1676462274558/1676462274575&quot;,&quot;1676462274557/1676462274558/1676462274576&quot;,&quot;1676462274557/1676462274558/1676462274577&quot;,&quot;1676462274557/1676462274558/1676462274578&quot;,&quot;1676462274557/1676462274558/1676462274579&quot;,&quot;1676462274557/1676462274558/1676462274580&quot;,&quot;1676462274557/1676462274558/1676462274581&quot;,&quot;1676462274557/1676462274558/1676462274582&quot;,&quot;1676462274557/1676462274558/1676462274583&quot;,&quot;1676462274557/1676462274558/1676462274584&quot;,&quot;1676462274557/1676462274558/1676462274585&quot;,&quot;1676462274557/1676462274558/1676462274586&quot;,&quot;1676462274557/1676462274558/1676462274587&quot;,&quot;1676462274557/1676462274558/1676462274588&quot;,&quot;1676462274557/1676462274558/1676462274589&quot;,&quot;1676462274557/1676462274558/1676462274590&quot;,&quot;1676462274557/1676462274558/1676462274591&quot;,&quot;1676462274557/1676462274558/1676462274592&quot;,&quot;1676462274557/1676462274558/1676462274593&quot;,&quot;1676462274557/1676462274558/1676462274594&quot;,&quot;1676462274557/1676462274558/1676462274595&quot;,&quot;1676462274557/1676462274558/1676462274596&quot;,&quot;1676462274557/1676462274558/1676462274597&quot;,&quot;1676462274557/1676462274558/1676462274598&quot;,&quot;1676462274557/1676462274558/1676462274599&quot;,&quot;1676462274557/1676462274558/1676462274600&quot;,&quot;1676462274557/1676462274558/1676462274601&quot;,&quot;1676462274557/1676462274558/1676462274602&quot;,&quot;1676462274557/1676462274558/1676462274603&quot;,&quot;1676462274557/1676462274558/1676462274604&quot;,&quot;1676462274557/1676462274558/1676462274605&quot;,&quot;1676462274557/1676462274558/1676462274606&quot;,&quot;1676462274557/1676462274558/1676462274607&quot;,&quot;1676462274557/1676462274558/1676462274608&quot;,&quot;1676462274557/1676462274558/1676462274609&quot;,&quot;1676462274557/1676462274558/1676462274610&quot;,&quot;1676462274557/1676462274558/1676462274611&quot;,&quot;1676462274557/1676462274558/1676462274612&quot;,&quot;1676462274557/1676462274558/1676462274613&quot;,&quot;1676462274557/1676462274558/1676462274614&quot;,&quot;1676462274557/1676462274558/1676462274615&quot;,&quot;1676462274557/1676462274558/1676462274616&quot;,&quot;1676462274557/1676462274558/1676462274617&quot;,&quot;1676462274557/1676462274558/1676462274618&quot;,&quot;1676462274557/1676462274558/1676462274619&quot;,&quot;1676462274557/1676462274558/1676462274620&quot;,&quot;1676462274557/1676462274558/1676462274621&quot;,&quot;1676462274557/1676462274558/1676462274622&quot;,&quot;1676462274557/1676462274558/1676462274623&quot;,&quot;1676462274557/1676462274558/1676462274624&quot;,&quot;1676462274557/1676462274558/1676462274625&quot;,&quot;1676462274557/1676462274558/1676462274626&quot;,&quot;1676462274557/1676462274558/1676462274627&quot;,&quot;1676462274557/1676462274558/1676462274628&quot;,&quot;1676462274557/1676462274558/1676462274629&quot;,&quot;1676462274557/1676462274558/1676462274630&quot;,&quot;1676462274557/1676462274558/1676462274631&quot;,&quot;1676462274557/1676462274558/1676462274632&quot;,&quot;1676462274557/1676462274558/1676462274633&quot;,&quot;1676462274557/1676462274558/1676462274634&quot;,&quot;1676462274557/1676462274558/1676462274635&quot;,&quot;1676462274557/1676462274558/1676462274636&quot;,&quot;1676462274557/1676462274558/1676462274637&quot;,&quot;1676462274557/1676462274558/1676462274638&quot;,&quot;1676462274557/1676462274558/1676462274639&quot;,&quot;1676462274557/1676462274558/1676462274640&quot;,&quot;1676462274557/1676462274558/1676462274641&quot;,&quot;1676462274557/1676462274558/1676462274642&quot;,&quot;1676462274557/1676462274558/1676462274643&quot;,&quot;1676462274557/1676462274558/1676462274644&quot;,&quot;1676462274557/1676462274558/1676462274645&quot;,&quot;1676462274557/1676462274558/1676462274646&quot;,&quot;1676462274557/1676462274558/1676462274647&quot;,&quot;1676462274557/1676462274558/1676462274648&quot;,&quot;1676462274557/1676462274558/1676462274649&quot;,&quot;1676462274557/1676462274558/1676462274650&quot;,&quot;1676462274557/1676462274558/1676462274651&quot;,&quot;1676462274557/1676462274558/1676462274652&quot;,&quot;1676462274557/1676462274558/1676462274653&quot;,&quot;1676462274557/1676462274558/1676462274654&quot;,&quot;1676462274557/1676462274558/1676462274655&quot;,&quot;1676462274557/1676462274558/1676462274656&quot;,&quot;1676462274557/1676462274558/1676462274657&quot;,&quot;1676462274557/1676462274558/1676462274658&quot;,&quot;1676462274557/1676462274558/1676462274761&quot;,&quot;1676462274557/1676462274558/1676462274762&quot;,&quot;1676462274557/1676462274558/1676462274763&quot;,&quot;1676462274557/1676462274558/1676462274764&quot;,&quot;1676462274557/1676462274558/1676462274765&quot;,&quot;1676462274557/1676462274558/1676462274766&quot;,&quot;1676462274557/1676462274558/1676462274767&quot;,&quot;1676462274557/1676462274558/1676462274768&quot;,&quot;1676462274557/1676462274558/1676462274769&quot;,&quot;1676462274557/1676462274558/1676462274770&quot;,&quot;1676462274557/1676462274558/1676462274771&quot;,&quot;1676462274557/1676462274558/1676462274772&quot;,&quot;1676462274557/1676462274558/1676462274773&quot;,&quot;1676462274557/1676462274558/1676462274774&quot;,&quot;1676462274557/1676462274558/1676462274775&quot;,&quot;1676462274557/1676462274558/1676462274776&quot;,&quot;1676462274557/1676462274558/1676462274777&quot;,&quot;1676462274557/1676462274558/1676462274778&quot;,&quot;1676462274557/1676462274558/1676462274779&quot;,&quot;1676462274557/1676462274558/1676462274780&quot;,&quot;1676462274557/1676462274558/1676462274781&quot;,&quot;1676462274557/1676462274558/1676462274782&quot;,&quot;1676462274557/1676462274558/1676462274783&quot;,&quot;1676462274557/1676462274558/1676462274784&quot;,&quot;1676462274557/1676462274558/1676462274785&quot;,&quot;1676462274557/1676462274558/1676462274786&quot;,&quot;1676462274557/1676462274558/1676462274787&quot;,&quot;1676462274557/1676462274558/1676462274788&quot;,&quot;1676462274557/1676462274558/1676462274789&quot;,&quot;1676462274557/1676462274558/1676462274790&quot;,&quot;1676462274557/1676462274558/1676462274791&quot;,&quot;1676462274557/1676462274558/1676462274792&quot;,&quot;1676462274557/1676462274558/1676462274793&quot;,&quot;1676462274557/1676462274558/1676462274794&quot;,&quot;1676462274557/1676462274558/1676462274795&quot;,&quot;1676462274557/1676462274558/1676462274796&quot;,&quot;1676462274557/1676462274558/1676462274797&quot;,&quot;1676462274557/1676462274558/1676462274798&quot;,&quot;1676462274557/1676462274558/1676462274799&quot;,&quot;1676462274557/1676462274558/1676462274800&quot;,&quot;1676462274557/1676462274558/1676462274801&quot;,&quot;1676462274557/1676462274558/1676462274802&quot;,&quot;1676462274557/1676462274558/1676462274803&quot;,&quot;1676462274557/1676462274558/1676462274804&quot;,&quot;1676462274557/1676462274558/1676462274805&quot;,&quot;1676462274557/1676462274558/1676462274806&quot;,&quot;1676462274557/1676462274558/1676462274807&quot;,&quot;1676462274557/1676462274558/1676462274808&quot;,&quot;1676462274557/1676462274558/1676462274809&quot;,&quot;1676462274557/1676462274558/1676462274810&quot;,&quot;1676462274557/1676462274558/1676462274811&quot;,&quot;1676462274557/1676462274558/1676462274812&quot;,&quot;1676462274557/1676462274558/1676462274813&quot;,&quot;1676462274557/1676462274558/1676462274814&quot;,&quot;1676462274557/1676462274558/1676462274815&quot;,&quot;1676462274557/1676462274558/1676462274816&quot;,&quot;1676462274557/1676462274558/1676462274817&quot;,&quot;1676462274557/1676462274558/1676462274818&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1676462274659/1676462274660/1676462274671&quot;,&quot;1676462274659/1676462274660/1676462274672&quot;,&quot;1676462274659/1676462274660/1676462274673&quot;,&quot;1676462274659/1676462274660/1676462274674&quot;,&quot;1676462274659/1676462274660/1676462274675&quot;,&quot;1676462274659/1676462274660/1676462274676&quot;,&quot;1676462274659/1676462274660/1676462274677&quot;,&quot;1676462274659/1676462274660/1676462274678&quot;,&quot;1676462274659/1676462274660/1676462274679&quot;,&quot;1676462274659/1676462274660/1676462274680&quot;,&quot;1676462274659/1676462274660/1676462274681&quot;,&quot;1676462274659/1676462274660/1676462274682&quot;,&quot;1676462274659/1676462274660/1676462274683&quot;,&quot;1676462274659/1676462274660/1676462274684&quot;,&quot;1676462274659/1676462274660/1676462274685&quot;,&quot;1676462274659/1676462274660/1676462274686&quot;,&quot;1676462274659/1676462274660/1676462274687&quot;,&quot;1676462274659/1676462274660/1676462274688&quot;,&quot;1676462274659/1676462274660/1676462274689&quot;,&quot;1676462274659/1676462274660/1676462274690&quot;,&quot;1676462274659/1676462274660/1676462274691&quot;,&quot;1676462274659/1676462274660/1676462274692&quot;,&quot;1676462274659/1676462274660/1676462274693&quot;,&quot;1676462274659/1676462274660/1676462274694&quot;,&quot;1676462274659/1676462274660/1676462274695&quot;,&quot;1676462274659/1676462274660/1676462274696&quot;,&quot;1676462274659/1676462274660/1676462274697&quot;,&quot;1676462274659/1676462274660/1676462274698&quot;,&quot;1676462274659/1676462274660/1676462274699&quot;,&quot;1676462274659/1676462274660/1676462274700&quot;,&quot;1676462274659/1676462274660/1676462274701&quot;,&quot;1676462274659/1676462274660/1676462274702&quot;,&quot;1676462274659/1676462274660/1676462274703&quot;,&quot;1676462274659/1676462274660/1676462274704&quot;,&quot;1676462274659/1676462274660/1676462274705&quot;,&quot;1676462274659/1676462274660/1676462274706&quot;,&quot;1676462274659/1676462274660/1676462274707&quot;,&quot;1676462274659/1676462274660/1676462274708&quot;,&quot;1676462274659/1676462274660/1676462274709&quot;,&quot;1676462274659/1676462274660/1676462274710&quot;,&quot;1676462274659/1676462274660/1676462274711&quot;,&quot;1676462274659/1676462274660/1676462274712&quot;,&quot;1676462274659/1676462274660/1676462274713&quot;,&quot;1676462274659/1676462274660/1676462274714&quot;,&quot;1676462274659/1676462274660/1676462274715&quot;,&quot;1676462274659/1676462274660/1676462274716&quot;,&quot;1676462274659/1676462274660/1676462274717&quot;,&quot;1676462274659/1676462274660/1676462274718&quot;,&quot;1676462274659/1676462274660/1676462274719&quot;,&quot;1676462274659/1676462274660/1676462274720&quot;,&quot;1676462274659/1676462274660/1676462274721&quot;,&quot;1676462274659/1676462274660/1676462274722&quot;,&quot;1676462274659/1676462274660/1676462274723&quot;,&quot;1676462274659/1676462274660/1676462274724&quot;,&quot;1676462274659/1676462274660/1676462274725&quot;,&quot;1676462274659/1676462274660/1676462274726&quot;,&quot;1676462274659/1676462274660/1676462274727&quot;,&quot;1676462274659/1676462274660/1676462274728&quot;,&quot;1676462274659/1676462274660/1676462274729&quot;,&quot;1676462274659/1676462274660/1676462274730&quot;,&quot;1676462274659/1676462274660/1676462274731&quot;,&quot;1676462274659/1676462274660/1676462274732&quot;,&quot;1676462274659/1676462274660/1676462274733&quot;,&quot;1676462274659/1676462274660/1676462274734&quot;,&quot;1676462274659/1676462274660/1676462274735&quot;,&quot;1676462274659/1676462274660/1676462274736&quot;,&quot;1676462274659/1676462274660/1676462274737&quot;,&quot;1676462274659/1676462274660/1676462274738&quot;,&quot;1676462274659/1676462274660/1676462274739&quot;,&quot;1676462274659/1676462274660/1676462274740&quot;,&quot;1676462274659/1676462274660/1676462274741&quot;,&quot;1676462274659/1676462274660/1676462274742&quot;,&quot;1676462274659/1676462274660/1676462274743&quot;,&quot;1676462274659/1676462274660/1676462274744&quot;,&quot;1676462274659/1676462274660/1676462274745&quot;,&quot;1676462274659/1676462274660/1676462274746&quot;,&quot;1676462274659/1676462274660/1676462274747&quot;,&quot;1676462274659/1676462274660/1676462274748&quot;,&quot;1676462274659/1676462274660/1676462274749&quot;,&quot;1676462274659/1676462274660/1676462274750&quot;,&quot;1676462274659/1676462274660/1676462274751&quot;,&quot;1676462274659/1676462274660/1676462274752&quot;,&quot;1676462274659/1676462274660/1676462274753&quot;,&quot;1676462274659/1676462274660/1676462274754&quot;,&quot;1676462274659/1676462274660/1676462274755&quot;,&quot;1676462274659/1676462274660/1676462274756&quot;,&quot;1676462274659/1676462274660/1676462274757&quot;,&quot;1676462274659/1676462274660/1676462274758&quot;,&quot;1676462274659/1676462274660/1676462274759&quot;,&quot;1676462274659/1676462274660/1676462274760&quot;,&quot;1676462274659/1676462274660/1676462274836&quot;,&quot;1676462274659/1676462274660/1676462274837&quot;,&quot;1676462274659/1676462274660/1676462274838&quot;,&quot;1676462274659/1676462274660/1676462274839&quot;,&quot;1676462274659/1676462274660/1676462274840&quot;,&quot;1676462274659/1676462274660/1676462274841&quot;,&quot;1676462274659/1676462274660/1676462274842&quot;,&quot;1676462274659/1676462274660/1676462274843&quot;,&quot;1676462274659/1676462274660/1676462274844&quot;,&quot;1676462274659/1676462274660/1676462274845&quot;,&quot;1676462274659/1676462274660/1676462274846&quot;,&quot;1676462274659/1676462274660/1676462274847&quot;,&quot;1676462274659/1676462274660/1676462274848&quot;,&quot;1676462274659/1676462274660/1676462274849&quot;,&quot;1676462274659/1676462274660/1676462274850&quot;,&quot;1676462274659/1676462274660/1676462274851&quot;,&quot;1676462274659/1676462274660/1676462274852&quot;,&quot;1676462274659/1676462274660/1676462274853&quot;,&quot;1676462274659/1676462274660/1676462274854&quot;,&quot;1676462274659/1676462274660/1676462274855&quot;,&quot;1676462274659/1676462274660/1676462274856&quot;,&quot;1676462274659/1676462274660/1676462274857&quot;,&quot;1676462274659/1676462274660/1676462274858&quot;,&quot;1676462274659/1676462274660/1676462274859&quot;,&quot;1676462274659/1676462274660/1676462274860&quot;,&quot;1676462274659/1676462274660/1676462274861&quot;,&quot;1676462274659/1676462274660/1676462274862&quot;,&quot;1676462274659/1676462274660/1676462274863&quot;,&quot;1676462274659/1676462274660/1676462274864&quot;,&quot;1676462274659/1676462274660/1676462274865&quot;,&quot;1676462274659/1676462274660/1676462274866&quot;,&quot;1676462274659/1676462274660/1676462274867&quot;,&quot;1676462274659/1676462274660/1676462274868&quot;,&quot;1676462274659/1676462274660/1676462274869&quot;,&quot;1676462274659/1676462274660/1676462274870&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + &quot;500LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_500LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
              <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x rules" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">${noOfLockRulesInClass}</stringProp>
          </LoopController>
          <hashTree>
            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
              <stringProp name="CounterConfig.start">1</stringProp>
              <stringProp name="CounterConfig.end"></stringProp>
              <stringProp name="CounterConfig.incr">1</stringProp>
              <stringProp name="CounterConfig.name">lockRulesCount</stringProp>
              <stringProp name="CounterConfig.format"></stringProp>
              <boolProp name="CounterConfig.per_user">false</boolProp>
            </CounterConfig>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544525043137/1544525159358/1544525246748&quot;,&quot;1544525043137/1544525159358/1544525263160&quot;,&quot;1544525043137/1544525280855/1544525289279&quot;,&quot;1544525590768/1544525595533/1544525611432&quot;,&quot;1544525590768/1544525595533/1544525627465&quot;,&quot;1544525590768/1544525595533/1544525635696&quot;,&quot;1544525590768/1544525595533/1544525649026&quot;,&quot;1544525590768/1544525595533/1544525663048&quot;,&quot;1544525590768/1544525595533/1544525679427&quot;,&quot;1544525590768/1544525683364/1544525709799&quot;,&quot;1544525590768/1544525683364/1544525720457&quot;,&quot;1544525590768/1544525683364/1544525729515&quot;,&quot;1544525590768/1544525683364/1544525734676&quot;,&quot;1544525590768/1544525683364/1544525756801&quot;,&quot;1544525590768/1544525683364/1544525778291&quot;,&quot;1544526345845/1544526589100/1544526606750&quot;,&quot;1544526345845/1544526589100/1544526610825&quot;,&quot;1544526345845/1544526589100/1544526623799&quot;,&quot;1544526345845/1544526589100/1544526638110&quot;,&quot;1544526345845/1544526589100/1544526644717&quot;,&quot;1544526345845/1544526589100/1544526657285&quot;,&quot;1544526345845/1544526671965/1544526688230&quot;,&quot;1544526345845/1544526671965/1544526695320&quot;,&quot;1544526345845/1544526671965/1544526710051&quot;,&quot;1544526345845/1544526671965/1544526721801&quot;,&quot;1544526345845/1544526671965/1544526728620&quot;,&quot;1544526345845/1544526671965/1544526763389&quot;,&quot;1544526345845/1544526961740/1544526980657&quot;,&quot;1544526345845/1544526961740/1544526994099&quot;,&quot;1544526345845/1544526961740/1544527008225&quot;,&quot;1544526345845/1544528319371/1544528334775&quot;,&quot;1544526345845/1544528319371/1544528345283&quot;,&quot;1544526345845/1544528319371/1544528367998&quot;,&quot;1544591089661/1544591099675/1544591165699&quot;,&quot;1544591089661/1544591099675/1544591181584&quot;,&quot;1544591089661/1544591099675/1544591198772&quot;,&quot;1544591089661/1544591099675/1544591219876&quot;,&quot;1544591089661/1544591099675/1544591237488&quot;,&quot;1544591089661/1544591099675/1544591247402&quot;,&quot;1544591089661/1544591260222/1544591284840&quot;,&quot;1544591089661/1544591260222/1544591295680&quot;,&quot;1544591089661/1544591260222/1544591320423&quot;,&quot;1544591089661/1544591260222/1544591334581&quot;,&quot;1544591089661/1544591260222/1544591341221&quot;,&quot;1544591089661/1544591260222/1544591363137&quot;,&quot;1544591089661/1544591364773/1544591392809&quot;,&quot;1544591089661/1544591412698/1544591428190&quot;,&quot;1544591089661/1544591412698/1544591439057&quot;,&quot;1544591089661/1544591412698/1544591455780&quot;,&quot;1544591089661/1544591602655/1544591636888&quot;,&quot;1544591089661/1544591602655/1544591649137&quot;,&quot;1544591089661/1544591602655/1544591669971&quot;,&quot;1544591751639/1544591756584/1544591786410&quot;,&quot;1544591751639/1544591756584/1544591792950&quot;,&quot;1544591751639/1544591756584/1544591814105&quot;,&quot;1544591751639/1544591756584/1544591826125&quot;,&quot;1544591751639/1544591756584/1544591842867&quot;,&quot;1544591751639/1544591756584/1544591852005&quot;,&quot;1544591751639/1544591859950/1544591889129&quot;,&quot;1544591751639/1544591859950/1544591895035&quot;,&quot;1544591751639/1544591859950/1544591913490&quot;,&quot;1544591751639/1544591859950/1544591923488&quot;,&quot;1544591751639/1544591937229/1544591951092&quot;,&quot;1544591751639/1544591989858/1544592010989&quot;,&quot;1544591751639/1544591989858/1544592017149&quot;,&quot;1544591751639/1544591989858/1544592034736&quot;,&quot;1544591751639/1544592145731/1544592165309&quot;,&quot;1544591751639/1544592145731/1544592176780&quot;,&quot;1544591751639/1544592145731/1544592194540&quot;,&quot;1544592286221/1544592291887/1544592314873&quot;,&quot;1544592286221/1544592291887/1544592322911&quot;,&quot;1544592286221/1544592291887/1544592333414&quot;,&quot;1544592286221/1544592291887/1544592347743&quot;,&quot;1544592286221/1544592291887/1544592363784&quot;,&quot;1544592286221/1544592291887/1544592370486&quot;,&quot;1544592286221/1544592379241/1544592404760&quot;,&quot;1544592286221/1544592379241/1544592415158&quot;,&quot;1544592286221/1544592379241/1544592422449&quot;,&quot;1544592286221/1544592379241/1544592438186&quot;,&quot;1544592286221/1544592379241/1544592448263&quot;,&quot;1544592286221/1544592379241/1544592466092&quot;,&quot;1544592286221/1544592474205/1544592491253&quot;,&quot;1544592286221/1544592520233/1544592540334&quot;,&quot;1544592286221/1544592520233/1544592555974&quot;,&quot;1544592286221/1544592520233/1544592561671&quot;,&quot;1544592286221/1544592623523/1544592648386&quot;,&quot;1544592286221/1544592623523/1544592658543&quot;,&quot;1544592286221/1544592623523/1544592671565&quot;,&quot;1544592857014/1544592865722/1544593053271&quot;,&quot;1544592857014/1544592865722/1544593072380&quot;,&quot;1544592857014/1544592865722/1544593079694&quot;,&quot;1544592857014/1544592865722/1544593093552&quot;,&quot;1544592857014/1544592865722/1544593104748&quot;,&quot;1544592857014/1544592865722/1544593123201&quot;,&quot;1544592857014/1544593139545/1544593173865&quot;,&quot;1544592857014/1544593139545/1544593187008&quot;,&quot;1544592857014/1544593139545/1544593454057&quot;,&quot;1544592857014/1544593139545/1544593471128&quot;,&quot;1544592857014/1544593139545/1544593476327&quot;,&quot;1544592857014/1544593139545/1544593488247&quot;,&quot;1544592857014/1544593529004/1544593551477&quot;,&quot;1544592857014/1544593585947/1544593606215&quot;,&quot;1544592857014/1544593585947/1544593620647&quot;,&quot;1544592857014/1544593585947/1544593632079&quot;,&quot;1544592857014/1544593703192/1544593728070&quot;,&quot;1544592857014/1544593703192/1544593743725&quot;,&quot;1544592857014/1544593703192/1544593752239&quot;,&quot;1544593830881/1544593842258/1544593874472&quot;,&quot;1544593830881/1544593842258/1544593889640&quot;,&quot;1544593830881/1544593842258/1544593905062&quot;,&quot;1544593830881/1544593842258/1544593925051&quot;,&quot;1544593830881/1544593842258/1544593932560&quot;,&quot;1544593830881/1544593842258/1544593949312&quot;,&quot;1544593830881/1544593964252/1544594078882&quot;,&quot;1544593830881/1544593964252/1544594102416&quot;,&quot;1544593830881/1544593964252/1544594113782&quot;,&quot;1544593830881/1544593964252/1544594135462&quot;,&quot;1544593830881/1544593964252/1544594177257&quot;,&quot;1544593830881/1544593964252/1544594194047&quot;,&quot;1544593830881/1544596248781/1544596271349&quot;,&quot;1544593830881/1544596291616/1544596322099&quot;,&quot;1544593830881/1544596291616/1544596327463&quot;,&quot;1544593830881/1544596291616/1544596347700&quot;,&quot;1544593830881/1544596494652/1544596513093&quot;,&quot;1544593830881/1544596494652/1544596529922&quot;,&quot;1544593830881/1544596494652/1544596545929&quot;,&quot;1544596644314/1544596678647/1544596711546&quot;,&quot;1544596644314/1544596678647/1544596731689&quot;,&quot;1544596644314/1544596678647/1544596745950&quot;,&quot;1544596644314/1544596678647/1544596761923&quot;,&quot;1544596644314/1544596678647/1544596768254&quot;,&quot;1544596644314/1544596678647/1544596792897&quot;,&quot;1544596644314/1544596802487/1544596845016&quot;,&quot;1544596644314/1544596802487/1544596858389&quot;,&quot;1544596644314/1544596802487/1544596877787&quot;,&quot;1544596644314/1544596802487/1544596890399&quot;,&quot;1544596644314/1544596802487/1544596904838&quot;,&quot;1544596644314/1544596802487/1544596921860&quot;,&quot;1544596644314/1544597008306/1544597032165&quot;,&quot;1544596644314/1544597091060/1544597104557&quot;,&quot;1544596644314/1544597091060/1544597121860&quot;,&quot;1544596644314/1544597091060/1544597149347&quot;,&quot;1544596644314/1544597220792/1544597245750&quot;,&quot;1544596644314/1544597220792/1544597262426&quot;,&quot;1544596644314/1544597220792/1544597275965&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.util.Arrays;

String[] stringArray1 = {${__evalVar(${category}_Assignment)}};
String[] stringArray2 = {${1021_schl_PEs}};
int length = stringArray1.length + stringArray2.length;
String[] stringArray = new String[length];
// Copy elements of array1 to mergedArray
System.arraycopy(stringArray1, 0, stringArray, 0, stringArray1.length);

// Copy elements of array2 to mergedArray
System.arraycopy(stringArray2, 0, stringArray, stringArray1.length, stringArray2.length);

int randomIndex = (${lockRulesCount})%(stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
              <intProp name="ThroughputController.style">0</intProp>
              <boolProp name="ThroughputController.perThread">true</boolProp>
              <stringProp name="ThroughputController.maxThroughput">${50LOsLockRuleCount}</stringProp>
              <stringProp name="ThroughputController.percentThroughput">${20LOsPercentage}</stringProp>
            </ThroughputController>
            <hashTree>
              <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
                <stringProp name="maximumValue">999999</stringProp>
                <stringProp name="minimumValue">000000</stringProp>
                <stringProp name="outputFormat">000000</stringProp>
                <boolProp name="perThread">true</boolProp>
                <stringProp name="randomSeed"></stringProp>
                <stringProp name="variableName">randomNo</stringProp>
              </RandomVariableConfig>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="create a rule" enabled="true">
                <stringProp name="IncludeController.includepath">Create_a_rule_50LOs.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
              <intProp name="ThroughputController.style">0</intProp>
              <boolProp name="ThroughputController.perThread">true</boolProp>
              <stringProp name="ThroughputController.maxThroughput">${100LOsLockRuleCount}</stringProp>
              <stringProp name="ThroughputController.percentThroughput">${30LOsPercentage}</stringProp>
            </ThroughputController>
            <hashTree>
              <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
                <stringProp name="maximumValue">999999</stringProp>
                <stringProp name="minimumValue">000000</stringProp>
                <stringProp name="outputFormat">000000</stringProp>
                <boolProp name="perThread">true</boolProp>
                <stringProp name="randomSeed"></stringProp>
                <stringProp name="variableName">randomNo</stringProp>
              </RandomVariableConfig>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="create a rule" enabled="true">
                <stringProp name="IncludeController.includepath">Create_a_rule_100LOs.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
              <intProp name="ThroughputController.style">0</intProp>
              <boolProp name="ThroughputController.perThread">true</boolProp>
              <stringProp name="ThroughputController.maxThroughput">${150LOsLockRuleCount}</stringProp>
              <stringProp name="ThroughputController.percentThroughput">${50LOsPercentage}</stringProp>
            </ThroughputController>
            <hashTree>
              <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
                <stringProp name="maximumValue">999999</stringProp>
                <stringProp name="minimumValue">000000</stringProp>
                <stringProp name="outputFormat">000000</stringProp>
                <boolProp name="perThread">true</boolProp>
                <stringProp name="randomSeed"></stringProp>
                <stringProp name="variableName">randomNo</stringProp>
              </RandomVariableConfig>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="create a rule" enabled="true">
                <stringProp name="IncludeController.includepath">Create_a_rule_150LOs.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="create custom grading in a class" enabled="false"/>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a gradebook in a class" enabled="true">
              <stringProp name="IncludeController.includepath">Create_a_gradebook_in_a_class.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.util.Arrays;

String[] stringArray1 = {${__evalVar(${category}_Assignment)}};
String[] stringArray2 = {${1021_schl_PEs}};
int length = stringArray1.length + stringArray2.length;
String[] multiProducts = new String[length];
// Copy elements of array1 to mergedArray
System.arraycopy(stringArray1, 0, multiProducts, 0, stringArray1.length);

// Copy elements of array2 to mergedArray
System.arraycopy(stringArray2, 0, multiProducts, stringArray1.length, stringArray2.length);

String mergedColumnJson = &quot;[&quot;;
int customWeightage = 0;
int pendingWeightage = 0;
int remainingValue = 0;
String bundle = &quot;&quot;;

for (int i = 0; i &lt; multiProducts.length; i++) {
	bundle = multiProducts[i] + &quot;_bundle&quot;;
	mergedColumnJson += &quot;{\&quot;column_id\&quot;: \&quot;&quot; + multiProducts[i] + &quot;\&quot;,\&quot;type\&quot;: \&quot;product\&quot;,\&quot;weightage\&quot;: \&quot;5\&quot;,\&quot;bundle-codes\&quot;: [\&quot;&quot; + vars.get(bundle) + &quot;\&quot;],\&quot;productcode\&quot;: \&quot;&quot; + multiProducts[i] + &quot;\&quot;},&quot;;
};

remainingValue = 100 - (5*(multiProducts.length));

customWeightage = remainingValue/${customGradingCount};
pendingWeightage = remainingValue%${customGradingCount};

for (int i = 1; i &lt;= ${customGradingCount}; i++) {
	if(i != ${customGradingCount}) {
		mergedColumnJson += &quot;{\&quot;column_id\&quot;: \&quot;PerfCustComp_&quot; + i + &quot;\&quot;,\&quot;type\&quot;: \&quot;custom\&quot;, \&quot;custom_component_code\&quot;: \&quot;PerfCustComp_&quot; + i + &quot;\&quot;, \&quot;title\&quot;: \&quot;PerfCustComp_&quot; + i + &quot;\&quot;, \&quot;weightage\&quot;: \&quot;&quot; + customWeightage + &quot;\&quot;,\&quot;scoring_type\&quot;: \&quot;SIMPLE\&quot;},&quot;;
	} else {
		int finalWeightage = customWeightage + pendingWeightage;
		mergedColumnJson += &quot;{\&quot;column_id\&quot;: \&quot;PerfCustComp_&quot; + i + &quot;\&quot;,\&quot;type\&quot;: \&quot;custom\&quot;, \&quot;custom_component_code\&quot;: \&quot;PerfCustComp_&quot; + i + &quot;\&quot;, \&quot;title\&quot;: \&quot;PerfCustComp_&quot; + i + &quot;\&quot;, \&quot;weightage\&quot;: \&quot;&quot; + finalWeightage + &quot;\&quot;,\&quot;scoring_type\&quot;: \&quot;SIMPLE\&quot;},&quot;;
	}
};

mergedColumnJson = mergedColumnJson.substring(0, mergedColumnJson.length() - 1) + &quot;]&quot;;

vars.put(&quot;mergedColumnJsonFinal&quot;, mergedColumnJson);</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
                <stringProp name="RandomTimer.range">${minWait}</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add columns to a particular gradebook of a class" enabled="true">
              <stringProp name="IncludeController.includepath">Add_columns_to_a_particular_gradebook_of_a_class_with_custom_components.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x students and join using classcode of current teacher" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">${noOfStudentsInClass}</stringProp>
          </LoopController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.util.Date;

Date date = new Date();
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;classcode&quot;);

studentextuserid = &quot;std&quot; + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;studentextuserid&quot;, studentextuserid);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">String[] stringArray1 = {${__evalVar(${category})}};
String[] stringArray2 = {&quot;perf39_100lo_1&quot;,&quot;perf39_100lo_2&quot;};
int length = stringArray1.length + stringArray2.length;
String[] multiProducts = new String[length];
// Copy elements of array1 to mergedArray
System.arraycopy(stringArray1, 0, multiProducts, 0, stringArray1.length);

// Copy elements of array2 to mergedArray
System.arraycopy(stringArray2, 0, multiProducts, stringArray1.length, stringArray2.length);

String mergedJson = &quot;[&quot;;

for (int i = 0; i &lt; multiProducts.length; i++) {
	mergedJson += &quot;{\&quot;productcode\&quot;: \&quot;&quot; + multiProducts[i] + &quot;\&quot;,\&quot;ext_product_meta\&quot;: {\&quot;startdate\&quot;:&quot; + &quot;${startDate}&quot; + &quot;,\&quot;enddate\&quot;:&quot; + &quot;${endDate}&quot; + &quot;}},&quot;;
}
mergedJson = mergedJson.substring(0, mergedJson.length() - 1) + &quot;]&quot;;

vars.put(&quot;provisionProductsArray&quot;, mergedJson);</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with product_code and class_code" enabled="true">
              <stringProp name="IncludeController.includepath">join_Spaces_with_product_code_and_class_code_MultiProduct.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for writing data into csv file" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">timestamp = vars.get(&quot;date&quot;);

FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameStd&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;orgid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameTch&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;orgid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Core Data Template" enabled="false"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">template_new.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">category,noOfAssignmentsInClass,20LOsCount,30LOsCount,50LOsCount,noOfStudentsInClass,noOfLockRulesInClass,50LOsLockRuleCount,100LOsLockRuleCount,150LOsLockRuleCount,customGradingCount</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilenameTch" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilenameTch</stringProp>
                <stringProp name="Argument.value">scenario_tch_asnmt_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="outputCsvFilenameStd" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilenameStd</stringProp>
                <stringProp name="Argument.value">student_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="assignedPathList" elementType="Argument">
                <stringProp name="Argument.name">assignedPathList</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="title" elementType="Argument">
                <stringProp name="Argument.name">title</stringProp>
                <stringProp name="Argument.value">default gradebook 1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gradebook_id" elementType="Argument">
                <stringProp name="Argument.name">gradebook_id</stringProp>
                <stringProp name="Argument.value">default-gradebook</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="teacher_class_name" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;category&quot;);

extuserid = &quot;tch&quot; + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;extuserid&quot;, extuserid);

classname = &quot;class&quot; + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;classname&quot;, classname);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="true">
            <stringProp name="IncludeController.includepath">Join_a_space_with_space_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [60-65 sec]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">60000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class" enabled="true">
            <stringProp name="IncludeController.includepath">create_new_instructor_led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class - CONTEXT" enabled="false">
            <stringProp name="IncludeController.includepath">create_new_instructor_led_class_context.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">10000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate multi products with a class" enabled="true">
            <stringProp name="IncludeController.includepath">associate_multi_products_with_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [420-450]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">720000</stringProp>
              <stringProp name="RandomTimer.range">30000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
            <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;L10&quot;;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">//String[] stringArray = {&quot;perf35_400lo_1&quot;,&quot;perf35_500lo_1&quot;,&quot;perf38_300lo_1&quot;,&quot;perf38_630lo_1&quot;,&quot;perf38_630lo_2&quot;,&quot;perf40_630lo_1&quot;,&quot;perf40_630lo_2&quot;};

//int randomIndex = (int) (Math.random() * stringArray.length);

//String randomValue = perfprodct10;

vars.put(&quot;productcode&quot;, &quot;perfprodct11&quot;);</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">String[] itemCodes = { &quot;1631184898880/1631184933374&quot;};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
//prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + &quot;_&quot; + &quot;1LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
              <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_1LOs .jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x assignments" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">${noOfAssignmentsInClass}</stringProp>
          </LoopController>
          <hashTree>
            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
              <stringProp name="CounterConfig.start">1</stringProp>
              <stringProp name="CounterConfig.end">${noOfAssignmentsInClass}</stringProp>
              <stringProp name="CounterConfig.incr">1</stringProp>
              <stringProp name="CounterConfig.name">assignmentCount</stringProp>
              <stringProp name="CounterConfig.format"></stringProp>
              <boolProp name="CounterConfig.per_user">true</boolProp>
              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
            </CounterConfig>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544524003551/1544524304922/1544524359136&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544524003551/1544524012478/1544524057691&quot;,&quot;1544524003551/1544524012478/1544524030068&quot;,&quot;1544525043137/1544525058289/1544525097148&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544525043137/1544525058289/1544525137957&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1544524003551/1544524304922/1544524324762&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544525043137/1544525058289/1544525090848&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1544524003551/1544524012478/1544524071582&quot;,&quot;1544524003551/1544524304922/1544524341184&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544525043137/1544525058289/1544525125172&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1544524003551/1544524304922/1544524313700&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544524003551/1544524012478/1544524084276&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544524003551/1544524304922/1544524387792&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1544524003551/1544524012478/1544524099346&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1544525043137/1544525058289/1544525114886&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544524003551/1544524012478/1544524044427&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544524003551/1544524304922/1544524376121&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">String[] stringArray = {${__evalVar(${category}_Assignment)}};

int randomIndex = (int) (Math.random() * stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
              <intProp name="ThroughputController.style">0</intProp>
              <boolProp name="ThroughputController.perThread">true</boolProp>
              <stringProp name="ThroughputController.maxThroughput">${20LOsCount}</stringProp>
              <stringProp name="ThroughputController.percentThroughput">${20LOsPercentage}</stringProp>
            </ThroughputController>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + &quot;20LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_20LOs.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
              <intProp name="ThroughputController.style">0</intProp>
              <boolProp name="ThroughputController.perThread">true</boolProp>
              <stringProp name="ThroughputController.maxThroughput">${30LOsCount}</stringProp>
              <stringProp name="ThroughputController.percentThroughput">${30LOsPercentage}</stringProp>
            </ThroughputController>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + &quot;30LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_30LOs.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
              <intProp name="ThroughputController.style">0</intProp>
              <boolProp name="ThroughputController.perThread">true</boolProp>
              <stringProp name="ThroughputController.maxThroughput">${50LOsCount}</stringProp>
              <stringProp name="ThroughputController.percentThroughput">${50LOsPercentage}</stringProp>
            </ThroughputController>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + &quot;50LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_50LOs.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;H6&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
                <intProp name="ThroughputController.style">0</intProp>
                <boolProp name="ThroughputController.perThread">true</boolProp>
                <stringProp name="ThroughputController.maxThroughput">${__evalVar(${category}_100LOsCount)}</stringProp>
                <stringProp name="ThroughputController.percentThroughput">${20LOsPercentage}</stringProp>
              </ThroughputController>
              <hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] stringArray = {&quot;perf35_400lo_1&quot;,&quot;perf35_500lo_1&quot;,&quot;perf38_300lo_1&quot;,&quot;perf38_630lo_1&quot;,&quot;perf38_630lo_2&quot;,&quot;perf40_630lo_1&quot;,&quot;perf40_630lo_2&quot;};

int randomIndex = (int) (Math.random() * stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1544524003551/1544524012478/1544524030068&quot;,&quot;1544524003551/1544524012478/1544524044427&quot;,&quot;1544524003551/1544524012478/1544524057691&quot;,&quot;1544524003551/1544524012478/1544524071582&quot;,&quot;1544524003551/1544524012478/1544524084276&quot;,&quot;1544524003551/1544524012478/1544524099346&quot;,&quot;1544524003551/1544524304922/1544524313700&quot;,&quot;1544524003551/1544524304922/1544524324762&quot;,&quot;1544524003551/1544524304922/1544524341184&quot;,&quot;1544524003551/1544524304922/1544524359136&quot;,&quot;1544524003551/1544524304922/1544524376121&quot;,&quot;1544524003551/1544524304922/1544524387792&quot;,&quot;1544525043137/1544525058289/1544525090848&quot;,&quot;1544525043137/1544525058289/1544525097148&quot;,&quot;1544525043137/1544525058289/1544525114886&quot;,&quot;1544525043137/1544525058289/1544525125172&quot;,&quot;1544525043137/1544525058289/1544525137957&quot;,&quot;1544525043137/1544525058289/1544525143762&quot;,&quot;1544525043137/1544525159358/1544525175677&quot;,&quot;1544525043137/1544525159358/1544525192972&quot;,&quot;1544525043137/1544525159358/1544525217177&quot;,&quot;1544525043137/1544525159358/1544525239184&quot;,&quot;1544525043137/1544525159358/1544525246748&quot;,&quot;1544525043137/1544525159358/1544525263160&quot;,&quot;1544525043137/1544525280855/1544525289279&quot;,&quot;1544525590768/1544525595533/1544525611432&quot;,&quot;1544525590768/1544525595533/1544525627465&quot;,&quot;1544525590768/1544525595533/1544525635696&quot;,&quot;1544525590768/1544525595533/1544525649026&quot;,&quot;1544525590768/1544525595533/1544525663048&quot;,&quot;1544525590768/1544525595533/1544525679427&quot;,&quot;1544525590768/1544525683364/1544525709799&quot;,&quot;1544525590768/1544525683364/1544525720457&quot;,&quot;1544525590768/1544525683364/1544525729515&quot;,&quot;1544525590768/1544525683364/1544525734676&quot;,&quot;1544525590768/1544525683364/1544525756801&quot;,&quot;1544525590768/1544525683364/1544525778291&quot;,&quot;1544526345845/1544526589100/1544526606750&quot;,&quot;1544526345845/1544526589100/1544526610825&quot;,&quot;1544526345845/1544526589100/1544526623799&quot;,&quot;1544526345845/1544526589100/1544526638110&quot;,&quot;1544526345845/1544526589100/1544526644717&quot;,&quot;1544526345845/1544526589100/1544526657285&quot;,&quot;1544526345845/1544526671965/1544526688230&quot;,&quot;1544526345845/1544526671965/1544526695320&quot;,&quot;1544526345845/1544526671965/1544526710051&quot;,&quot;1544526345845/1544526671965/1544526721801&quot;,&quot;1544526345845/1544526671965/1544526728620&quot;,&quot;1544526345845/1544526671965/1544526763389&quot;,&quot;1544526345845/1544526961740/1544526980657&quot;,&quot;1544526345845/1544526961740/1544526994099&quot;,&quot;1544526345845/1544526961740/1544527008225&quot;,&quot;1544526345845/1544528319371/1544528334775&quot;,&quot;1544526345845/1544528319371/1544528345283&quot;,&quot;1544526345845/1544528319371/1544528367998&quot;,&quot;1544591089661/1544591099675/1544591165699&quot;,&quot;1544591089661/1544591099675/1544591181584&quot;,&quot;1544591089661/1544591099675/1544591198772&quot;,&quot;1544591089661/1544591099675/1544591219876&quot;,&quot;1544591089661/1544591099675/1544591237488&quot;,&quot;1544591089661/1544591099675/1544591247402&quot;,&quot;1544591089661/1544591260222/1544591284840&quot;,&quot;1544591089661/1544591260222/1544591295680&quot;,&quot;1544591089661/1544591260222/1544591320423&quot;,&quot;1544591089661/1544591260222/1544591334581&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + &quot;100LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_100LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
                <intProp name="ThroughputController.style">0</intProp>
                <boolProp name="ThroughputController.perThread">true</boolProp>
                <stringProp name="ThroughputController.maxThroughput">${__evalVar(${category}_300LOsCount)}</stringProp>
                <stringProp name="ThroughputController.percentThroughput">${20LOsPercentage}</stringProp>
              </ThroughputController>
              <hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] stringArray = {&quot;perf35_500lo_1&quot;,&quot;perf38_630lo_1&quot;,&quot;perf38_630lo_2&quot;,&quot;perf40_630lo_1&quot;,&quot;perf40_630lo_2&quot;};

int randomIndex = (int) (Math.random() * stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1544524003551/1544524012478/1544524030068&quot;,&quot;1544524003551/1544524012478/1544524044427&quot;,&quot;1544524003551/1544524012478/1544524057691&quot;,&quot;1544524003551/1544524012478/1544524071582&quot;,&quot;1544524003551/1544524012478/1544524084276&quot;,&quot;1544524003551/1544524012478/1544524099346&quot;,&quot;1544524003551/1544524304922/1544524313700&quot;,&quot;1544524003551/1544524304922/1544524324762&quot;,&quot;1544524003551/1544524304922/1544524341184&quot;,&quot;1544524003551/1544524304922/1544524359136&quot;,&quot;1544524003551/1544524304922/1544524376121&quot;,&quot;1544524003551/1544524304922/1544524387792&quot;,&quot;1544525043137/1544525058289/1544525090848&quot;,&quot;1544525043137/1544525058289/1544525097148&quot;,&quot;1544525043137/1544525058289/1544525114886&quot;,&quot;1544525043137/1544525058289/1544525125172&quot;,&quot;1544525043137/1544525058289/1544525137957&quot;,&quot;1544525043137/1544525058289/1544525143762&quot;,&quot;1544525043137/1544525159358/1544525175677&quot;,&quot;1544525043137/1544525159358/1544525192972&quot;,&quot;1544525043137/1544525159358/1544525217177&quot;,&quot;1544525043137/1544525159358/1544525239184&quot;,&quot;1544525043137/1544525159358/1544525246748&quot;,&quot;1544525043137/1544525159358/1544525263160&quot;,&quot;1544525043137/1544525280855/1544525289279&quot;,&quot;1544525590768/1544525595533/1544525611432&quot;,&quot;1544525590768/1544525595533/1544525627465&quot;,&quot;1544525590768/1544525595533/1544525635696&quot;,&quot;1544525590768/1544525595533/1544525649026&quot;,&quot;1544525590768/1544525595533/1544525663048&quot;,&quot;1544525590768/1544525595533/1544525679427&quot;,&quot;1544525590768/1544525683364/1544525709799&quot;,&quot;1544525590768/1544525683364/1544525720457&quot;,&quot;1544525590768/1544525683364/1544525729515&quot;,&quot;1544525590768/1544525683364/1544525734676&quot;,&quot;1544525590768/1544525683364/1544525756801&quot;,&quot;1544525590768/1544525683364/1544525778291&quot;,&quot;1544526345845/1544526589100/1544526606750&quot;,&quot;1544526345845/1544526589100/1544526610825&quot;,&quot;1544526345845/1544526589100/1544526623799&quot;,&quot;1544526345845/1544526589100/1544526638110&quot;,&quot;1544526345845/1544526589100/1544526644717&quot;,&quot;1544526345845/1544526589100/1544526657285&quot;,&quot;1544526345845/1544526671965/1544526688230&quot;,&quot;1544526345845/1544526671965/1544526695320&quot;,&quot;1544526345845/1544526671965/1544526710051&quot;,&quot;1544526345845/1544526671965/1544526721801&quot;,&quot;1544526345845/1544526671965/1544526728620&quot;,&quot;1544526345845/1544526671965/1544526763389&quot;,&quot;1544526345845/1544526961740/1544526980657&quot;,&quot;1544526345845/1544526961740/1544526994099&quot;,&quot;1544526345845/1544526961740/1544527008225&quot;,&quot;1544526345845/1544528319371/1544528334775&quot;,&quot;1544526345845/1544528319371/1544528345283&quot;,&quot;1544526345845/1544528319371/1544528367998&quot;,&quot;1544591089661/1544591099675/1544591165699&quot;,&quot;1544591089661/1544591099675/1544591181584&quot;,&quot;1544591089661/1544591099675/1544591198772&quot;,&quot;1544591089661/1544591099675/1544591219876&quot;,&quot;1544591089661/1544591099675/1544591237488&quot;,&quot;1544591089661/1544591099675/1544591247402&quot;,&quot;1544591089661/1544591260222/1544591284840&quot;,&quot;1544591089661/1544591260222/1544591295680&quot;,&quot;1544591089661/1544591260222/1544591320423&quot;,&quot;1544591089661/1544591260222/1544591334581&quot;,&quot;1544591089661/1544591260222/1544591341221&quot;,&quot;1544591089661/1544591260222/1544591363137&quot;,&quot;1544591089661/1544591364773/1544591392809&quot;,&quot;1544591089661/1544591412698/1544591428190&quot;,&quot;1544591089661/1544591412698/1544591439057&quot;,&quot;1544591089661/1544591412698/1544591455780&quot;,&quot;1544591089661/1544591602655/1544591636888&quot;,&quot;1544591089661/1544591602655/1544591649137&quot;,&quot;1544591089661/1544591602655/1544591669971&quot;,&quot;1544591751639/1544591756584/1544591786410&quot;,&quot;1544591751639/1544591756584/1544591792950&quot;,&quot;1544591751639/1544591756584/1544591814105&quot;,&quot;1544591751639/1544591756584/1544591826125&quot;,&quot;1544591751639/1544591756584/1544591842867&quot;,&quot;1544591751639/1544591756584/1544591852005&quot;,&quot;1544591751639/1544591859950/1544591889129&quot;,&quot;1544591751639/1544591859950/1544591895035&quot;,&quot;1544591751639/1544591859950/1544591913490&quot;,&quot;1544591751639/1544591859950/1544591923488&quot;,&quot;1544591751639/1544591937229/1544591951092&quot;,&quot;1544591751639/1544591989858/1544592010989&quot;,&quot;1544591751639/1544591989858/1544592017149&quot;,&quot;1544591751639/1544591989858/1544592034736&quot;,&quot;1544591751639/1544592145731/1544592165309&quot;,&quot;1544591751639/1544592145731/1544592176780&quot;,&quot;1544591751639/1544592145731/1544592194540&quot;,&quot;1544592286221/1544592291887/1544592314873&quot;,&quot;1544592286221/1544592291887/1544592322911&quot;,&quot;1544592286221/1544592291887/1544592333414&quot;,&quot;1544592286221/1544592291887/1544592347743&quot;,&quot;1544592286221/1544592291887/1544592363784&quot;,&quot;1544592286221/1544592291887/1544592370486&quot;,&quot;1544592286221/1544592379241/1544592404760&quot;,&quot;1544592286221/1544592379241/1544592415158&quot;,&quot;1544592286221/1544592379241/1544592422449&quot;,&quot;1544592286221/1544592379241/1544592438186&quot;,&quot;1544592286221/1544592379241/1544592448263&quot;,&quot;1544592286221/1544592379241/1544592466092&quot;,&quot;1544592286221/1544592474205/1544592491253&quot;,&quot;1544592286221/1544592520233/1544592540334&quot;,&quot;1544592286221/1544592520233/1544592555974&quot;,&quot;1544592286221/1544592520233/1544592561671&quot;,&quot;1544592286221/1544592623523/1544592648386&quot;,&quot;1544592286221/1544592623523/1544592658543&quot;,&quot;1544592286221/1544592623523/1544592671565&quot;,&quot;1544592857014/1544592865722/1544593053271&quot;,&quot;1544592857014/1544592865722/1544593072380&quot;,&quot;1544592857014/1544592865722/1544593079694&quot;,&quot;1544592857014/1544592865722/1544593093552&quot;,&quot;1544592857014/1544592865722/1544593104748&quot;,&quot;1544592857014/1544592865722/1544593123201&quot;,&quot;1544592857014/1544593139545/1544593173865&quot;,&quot;1544592857014/1544593139545/1544593187008&quot;,&quot;1544592857014/1544593139545/1544593454057&quot;,&quot;1544592857014/1544593139545/1544593471128&quot;,&quot;1544592857014/1544593139545/1544593476327&quot;,&quot;1544592857014/1544593139545/1544593488247&quot;,&quot;1544592857014/1544593529004/1544593551477&quot;,&quot;1544592857014/1544593585947/1544593606215&quot;,&quot;1544592857014/1544593585947/1544593620647&quot;,&quot;1544592857014/1544593585947/1544593632079&quot;,&quot;1544592857014/1544593703192/1544593728070&quot;,&quot;1544592857014/1544593703192/1544593743725&quot;,&quot;1544592857014/1544593703192/1544593752239&quot;,&quot;1544593830881/1544593842258/1544593874472&quot;,&quot;1544593830881/1544593842258/1544593889640&quot;,&quot;1544593830881/1544593842258/1544593905062&quot;,&quot;1544593830881/1544593842258/1544593925051&quot;,&quot;1544593830881/1544593842258/1544593932560&quot;,&quot;1544593830881/1544593842258/1544593949312&quot;,&quot;1544593830881/1544593964252/1544594078882&quot;,&quot;1544593830881/1544593964252/1544594102416&quot;,&quot;1544593830881/1544593964252/1544594113782&quot;,&quot;1544593830881/1544593964252/1544594135462&quot;,&quot;1544593830881/1544593964252/1544594177257&quot;,&quot;1544593830881/1544593964252/1544594194047&quot;,&quot;1544593830881/1544596248781/1544596271349&quot;,&quot;1544593830881/1544596291616/1544596322099&quot;,&quot;1544593830881/1544596291616/1544596327463&quot;,&quot;1544593830881/1544596291616/1544596347700&quot;,&quot;1544593830881/1544596494652/1544596513093&quot;,&quot;1544593830881/1544596494652/1544596529922&quot;,&quot;1544593830881/1544596494652/1544596545929&quot;,&quot;1544596644314/1544596678647/1544596711546&quot;,&quot;1544596644314/1544596678647/1544596731689&quot;,&quot;1544596644314/1544596678647/1544596745950&quot;,&quot;1544596644314/1544596678647/1544596761923&quot;,&quot;1544596644314/1544596678647/1544596768254&quot;,&quot;1544596644314/1544596678647/1544596792897&quot;,&quot;1544596644314/1544596802487/1544596845016&quot;,&quot;1544596644314/1544596802487/1544596858389&quot;,&quot;1544596644314/1544596802487/1544596877787&quot;,&quot;1544596644314/1544596802487/1544596890399&quot;,&quot;1544596644314/1544596802487/1544596904838&quot;,&quot;1544596644314/1544596802487/1544596921860&quot;,&quot;1544596644314/1544597008306/1544597032165&quot;,&quot;1544596644314/1544597091060/1544597104557&quot;,&quot;1544596644314/1544597091060/1544597121860&quot;,&quot;1544596644314/1544597091060/1544597149347&quot;,&quot;1544596644314/1544597220792/1544597245750&quot;,&quot;1544596644314/1544597220792/1544597262426&quot;,&quot;1544596644314/1544597220792/1544597275965&quot;,&quot;1676462274557/1676462274558/1676462274559&quot;,&quot;1676462274557/1676462274558/1676462274560&quot;,&quot;1676462274557/1676462274558/1676462274561&quot;,&quot;1676462274557/1676462274558/1676462274562&quot;,&quot;1676462274557/1676462274558/1676462274563&quot;,&quot;1676462274557/1676462274558/1676462274564&quot;,&quot;1676462274557/1676462274558/1676462274565&quot;,&quot;1676462274557/1676462274558/1676462274566&quot;,&quot;1676462274557/1676462274558/1676462274567&quot;,&quot;1676462274557/1676462274558/1676462274568&quot;,&quot;1676462274557/1676462274558/1676462274569&quot;,&quot;1676462274557/1676462274558/1676462274570&quot;,&quot;1676462274557/1676462274558/1676462274571&quot;,&quot;1676462274557/1676462274558/1676462274572&quot;,&quot;1676462274557/1676462274558/1676462274573&quot;,&quot;1676462274557/1676462274558/1676462274574&quot;,&quot;1676462274557/1676462274558/1676462274575&quot;,&quot;1676462274557/1676462274558/1676462274576&quot;,&quot;1676462274557/1676462274558/1676462274577&quot;,&quot;1676462274557/1676462274558/1676462274578&quot;,&quot;1676462274557/1676462274558/1676462274579&quot;,&quot;1676462274557/1676462274558/1676462274580&quot;,&quot;1676462274557/1676462274558/1676462274581&quot;,&quot;1676462274557/1676462274558/1676462274582&quot;,&quot;1676462274557/1676462274558/1676462274583&quot;,&quot;1676462274557/1676462274558/1676462274584&quot;,&quot;1676462274557/1676462274558/1676462274585&quot;,&quot;1676462274557/1676462274558/1676462274586&quot;,&quot;1676462274557/1676462274558/1676462274587&quot;,&quot;1676462274557/1676462274558/1676462274588&quot;,&quot;1676462274557/1676462274558/1676462274589&quot;,&quot;1676462274557/1676462274558/1676462274590&quot;,&quot;1676462274557/1676462274558/1676462274591&quot;,&quot;1676462274557/1676462274558/1676462274592&quot;,&quot;1676462274557/1676462274558/1676462274593&quot;,&quot;1676462274557/1676462274558/1676462274594&quot;,&quot;1676462274557/1676462274558/1676462274595&quot;,&quot;1676462274557/1676462274558/1676462274596&quot;,&quot;1676462274557/1676462274558/1676462274597&quot;,&quot;1676462274557/1676462274558/1676462274598&quot;,&quot;1676462274557/1676462274558/1676462274599&quot;,&quot;1676462274557/1676462274558/1676462274600&quot;,&quot;1676462274557/1676462274558/1676462274601&quot;,&quot;1676462274557/1676462274558/1676462274602&quot;,&quot;1676462274557/1676462274558/1676462274603&quot;,&quot;1676462274557/1676462274558/1676462274604&quot;,&quot;1676462274557/1676462274558/1676462274605&quot;,&quot;1676462274557/1676462274558/1676462274606&quot;,&quot;1676462274557/1676462274558/1676462274607&quot;,&quot;1676462274557/1676462274558/1676462274608&quot;,&quot;1676462274557/1676462274558/1676462274609&quot;,&quot;1676462274557/1676462274558/1676462274610&quot;,&quot;1676462274557/1676462274558/1676462274611&quot;,&quot;1676462274557/1676462274558/1676462274612&quot;,&quot;1676462274557/1676462274558/1676462274613&quot;,&quot;1676462274557/1676462274558/1676462274614&quot;,&quot;1676462274557/1676462274558/1676462274615&quot;,&quot;1676462274557/1676462274558/1676462274616&quot;,&quot;1676462274557/1676462274558/1676462274617&quot;,&quot;1676462274557/1676462274558/1676462274618&quot;,&quot;1676462274557/1676462274558/1676462274619&quot;,&quot;1676462274557/1676462274558/1676462274620&quot;,&quot;1676462274557/1676462274558/1676462274621&quot;,&quot;1676462274557/1676462274558/1676462274622&quot;,&quot;1676462274557/1676462274558/1676462274623&quot;,&quot;1676462274557/1676462274558/1676462274624&quot;,&quot;1676462274557/1676462274558/1676462274625&quot;,&quot;1676462274557/1676462274558/1676462274626&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1676462274659/1676462274660/1676462274671&quot;,&quot;1676462274659/1676462274660/1676462274672&quot;,&quot;1676462274659/1676462274660/1676462274673&quot;,&quot;1676462274659/1676462274660/1676462274674&quot;,&quot;1676462274659/1676462274660/1676462274675&quot;,&quot;1676462274659/1676462274660/1676462274676&quot;,&quot;1676462274659/1676462274660/1676462274677&quot;,&quot;1676462274659/1676462274660/1676462274678&quot;,&quot;1676462274659/1676462274660/1676462274679&quot;,&quot;1676462274659/1676462274660/1676462274680&quot;,&quot;1676462274659/1676462274660/1676462274681&quot;,&quot;1676462274659/1676462274660/1676462274682&quot;,&quot;1676462274659/1676462274660/1676462274683&quot;,&quot;1676462274659/1676462274660/1676462274684&quot;,&quot;1676462274659/1676462274660/1676462274685&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + &quot;300LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_300LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
                <intProp name="ThroughputController.style">0</intProp>
                <boolProp name="ThroughputController.perThread">true</boolProp>
                <stringProp name="ThroughputController.maxThroughput">${__evalVar(${category}_500LOsCount)}</stringProp>
                <stringProp name="ThroughputController.percentThroughput">${20LOsPercentage}</stringProp>
              </ThroughputController>
              <hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] stringArray = {&quot;perf38_630lo_1&quot;,&quot;perf38_630lo_2&quot;,&quot;perf40_630lo_1&quot;,&quot;perf40_630lo_2&quot;};

int randomIndex = (int) (Math.random() * stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1544524003551/1544524012478/1544524030068&quot;,&quot;1544524003551/1544524012478/1544524044427&quot;,&quot;1544524003551/1544524012478/1544524057691&quot;,&quot;1544524003551/1544524012478/1544524071582&quot;,&quot;1544524003551/1544524012478/1544524084276&quot;,&quot;1544524003551/1544524012478/1544524099346&quot;,&quot;1544524003551/1544524304922/1544524313700&quot;,&quot;1544524003551/1544524304922/1544524324762&quot;,&quot;1544524003551/1544524304922/1544524341184&quot;,&quot;1544524003551/1544524304922/1544524359136&quot;,&quot;1544524003551/1544524304922/1544524376121&quot;,&quot;1544524003551/1544524304922/1544524387792&quot;,&quot;1544525043137/1544525058289/1544525090848&quot;,&quot;1544525043137/1544525058289/1544525097148&quot;,&quot;1544525043137/1544525058289/1544525114886&quot;,&quot;1544525043137/1544525058289/1544525125172&quot;,&quot;1544525043137/1544525058289/1544525137957&quot;,&quot;1544525043137/1544525058289/1544525143762&quot;,&quot;1544525043137/1544525159358/1544525175677&quot;,&quot;1544525043137/1544525159358/1544525192972&quot;,&quot;1544525043137/1544525159358/1544525217177&quot;,&quot;1544525043137/1544525159358/1544525239184&quot;,&quot;1544525043137/1544525159358/1544525246748&quot;,&quot;1544525043137/1544525159358/1544525263160&quot;,&quot;1544525043137/1544525280855/1544525289279&quot;,&quot;1544525590768/1544525595533/1544525611432&quot;,&quot;1544525590768/1544525595533/1544525627465&quot;,&quot;1544525590768/1544525595533/1544525635696&quot;,&quot;1544525590768/1544525595533/1544525649026&quot;,&quot;1544525590768/1544525595533/1544525663048&quot;,&quot;1544525590768/1544525595533/1544525679427&quot;,&quot;1544525590768/1544525683364/1544525709799&quot;,&quot;1544525590768/1544525683364/1544525720457&quot;,&quot;1544525590768/1544525683364/1544525729515&quot;,&quot;1544525590768/1544525683364/1544525734676&quot;,&quot;1544525590768/1544525683364/1544525756801&quot;,&quot;1544525590768/1544525683364/1544525778291&quot;,&quot;1544526345845/1544526589100/1544526606750&quot;,&quot;1544526345845/1544526589100/1544526610825&quot;,&quot;1544526345845/1544526589100/1544526623799&quot;,&quot;1544526345845/1544526589100/1544526638110&quot;,&quot;1544526345845/1544526589100/1544526644717&quot;,&quot;1544526345845/1544526589100/1544526657285&quot;,&quot;1544526345845/1544526671965/1544526688230&quot;,&quot;1544526345845/1544526671965/1544526695320&quot;,&quot;1544526345845/1544526671965/1544526710051&quot;,&quot;1544526345845/1544526671965/1544526721801&quot;,&quot;1544526345845/1544526671965/1544526728620&quot;,&quot;1544526345845/1544526671965/1544526763389&quot;,&quot;1544526345845/1544526961740/1544526980657&quot;,&quot;1544526345845/1544526961740/1544526994099&quot;,&quot;1544526345845/1544526961740/1544527008225&quot;,&quot;1544526345845/1544528319371/1544528334775&quot;,&quot;1544526345845/1544528319371/1544528345283&quot;,&quot;1544526345845/1544528319371/1544528367998&quot;,&quot;1544591089661/1544591099675/1544591165699&quot;,&quot;1544591089661/1544591099675/1544591181584&quot;,&quot;1544591089661/1544591099675/1544591198772&quot;,&quot;1544591089661/1544591099675/1544591219876&quot;,&quot;1544591089661/1544591099675/1544591237488&quot;,&quot;1544591089661/1544591099675/1544591247402&quot;,&quot;1544591089661/1544591260222/1544591284840&quot;,&quot;1544591089661/1544591260222/1544591295680&quot;,&quot;1544591089661/1544591260222/1544591320423&quot;,&quot;1544591089661/1544591260222/1544591334581&quot;,&quot;1544591089661/1544591260222/1544591341221&quot;,&quot;1544591089661/1544591260222/1544591363137&quot;,&quot;1544591089661/1544591364773/1544591392809&quot;,&quot;1544591089661/1544591412698/1544591428190&quot;,&quot;1544591089661/1544591412698/1544591439057&quot;,&quot;1544591089661/1544591412698/1544591455780&quot;,&quot;1544591089661/1544591602655/1544591636888&quot;,&quot;1544591089661/1544591602655/1544591649137&quot;,&quot;1544591089661/1544591602655/1544591669971&quot;,&quot;1544591751639/1544591756584/1544591786410&quot;,&quot;1544591751639/1544591756584/1544591792950&quot;,&quot;1544591751639/1544591756584/1544591814105&quot;,&quot;1544591751639/1544591756584/1544591826125&quot;,&quot;1544591751639/1544591756584/1544591842867&quot;,&quot;1544591751639/1544591756584/1544591852005&quot;,&quot;1544591751639/1544591859950/1544591889129&quot;,&quot;1544591751639/1544591859950/1544591895035&quot;,&quot;1544591751639/1544591859950/1544591913490&quot;,&quot;1544591751639/1544591859950/1544591923488&quot;,&quot;1544591751639/1544591937229/1544591951092&quot;,&quot;1544591751639/1544591989858/1544592010989&quot;,&quot;1544591751639/1544591989858/1544592017149&quot;,&quot;1544591751639/1544591989858/1544592034736&quot;,&quot;1544591751639/1544592145731/1544592165309&quot;,&quot;1544591751639/1544592145731/1544592176780&quot;,&quot;1544591751639/1544592145731/1544592194540&quot;,&quot;1544592286221/1544592291887/1544592314873&quot;,&quot;1544592286221/1544592291887/1544592322911&quot;,&quot;1544592286221/1544592291887/1544592333414&quot;,&quot;1544592286221/1544592291887/1544592347743&quot;,&quot;1544592286221/1544592291887/1544592363784&quot;,&quot;1544592286221/1544592291887/1544592370486&quot;,&quot;1544592286221/1544592379241/1544592404760&quot;,&quot;1544592286221/1544592379241/1544592415158&quot;,&quot;1544592286221/1544592379241/1544592422449&quot;,&quot;1544592286221/1544592379241/1544592438186&quot;,&quot;1544592286221/1544592379241/1544592448263&quot;,&quot;1544592286221/1544592379241/1544592466092&quot;,&quot;1544592286221/1544592474205/1544592491253&quot;,&quot;1544592286221/1544592520233/1544592540334&quot;,&quot;1544592286221/1544592520233/1544592555974&quot;,&quot;1544592286221/1544592520233/1544592561671&quot;,&quot;1544592286221/1544592623523/1544592648386&quot;,&quot;1544592286221/1544592623523/1544592658543&quot;,&quot;1544592286221/1544592623523/1544592671565&quot;,&quot;1544592857014/1544592865722/1544593053271&quot;,&quot;1544592857014/1544592865722/1544593072380&quot;,&quot;1544592857014/1544592865722/1544593079694&quot;,&quot;1544592857014/1544592865722/1544593093552&quot;,&quot;1544592857014/1544592865722/1544593104748&quot;,&quot;1544592857014/1544592865722/1544593123201&quot;,&quot;1544592857014/1544593139545/1544593173865&quot;,&quot;1544592857014/1544593139545/1544593187008&quot;,&quot;1544592857014/1544593139545/1544593454057&quot;,&quot;1544592857014/1544593139545/1544593471128&quot;,&quot;1544592857014/1544593139545/1544593476327&quot;,&quot;1544592857014/1544593139545/1544593488247&quot;,&quot;1544592857014/1544593529004/1544593551477&quot;,&quot;1544592857014/1544593585947/1544593606215&quot;,&quot;1544592857014/1544593585947/1544593620647&quot;,&quot;1544592857014/1544593585947/1544593632079&quot;,&quot;1544592857014/1544593703192/1544593728070&quot;,&quot;1544592857014/1544593703192/1544593743725&quot;,&quot;1544592857014/1544593703192/1544593752239&quot;,&quot;1544593830881/1544593842258/1544593874472&quot;,&quot;1544593830881/1544593842258/1544593889640&quot;,&quot;1544593830881/1544593842258/1544593905062&quot;,&quot;1544593830881/1544593842258/1544593925051&quot;,&quot;1544593830881/1544593842258/1544593932560&quot;,&quot;1544593830881/1544593842258/1544593949312&quot;,&quot;1544593830881/1544593964252/1544594078882&quot;,&quot;1544593830881/1544593964252/1544594102416&quot;,&quot;1544593830881/1544593964252/1544594113782&quot;,&quot;1544593830881/1544593964252/1544594135462&quot;,&quot;1544593830881/1544593964252/1544594177257&quot;,&quot;1544593830881/1544593964252/1544594194047&quot;,&quot;1544593830881/1544596248781/1544596271349&quot;,&quot;1544593830881/1544596291616/1544596322099&quot;,&quot;1544593830881/1544596291616/1544596327463&quot;,&quot;1544593830881/1544596291616/1544596347700&quot;,&quot;1544593830881/1544596494652/1544596513093&quot;,&quot;1544593830881/1544596494652/1544596529922&quot;,&quot;1544593830881/1544596494652/1544596545929&quot;,&quot;1544596644314/1544596678647/1544596711546&quot;,&quot;1544596644314/1544596678647/1544596731689&quot;,&quot;1544596644314/1544596678647/1544596745950&quot;,&quot;1544596644314/1544596678647/1544596761923&quot;,&quot;1544596644314/1544596678647/1544596768254&quot;,&quot;1544596644314/1544596678647/1544596792897&quot;,&quot;1544596644314/1544596802487/1544596845016&quot;,&quot;1544596644314/1544596802487/1544596858389&quot;,&quot;1544596644314/1544596802487/1544596877787&quot;,&quot;1544596644314/1544596802487/1544596890399&quot;,&quot;1544596644314/1544596802487/1544596904838&quot;,&quot;1544596644314/1544596802487/1544596921860&quot;,&quot;1544596644314/1544597008306/1544597032165&quot;,&quot;1544596644314/1544597091060/1544597104557&quot;,&quot;1544596644314/1544597091060/1544597121860&quot;,&quot;1544596644314/1544597091060/1544597149347&quot;,&quot;1544596644314/1544597220792/1544597245750&quot;,&quot;1544596644314/1544597220792/1544597262426&quot;,&quot;1544596644314/1544597220792/1544597275965&quot;,&quot;1676462274557/1676462274558/1676462274559&quot;,&quot;1676462274557/1676462274558/1676462274560&quot;,&quot;1676462274557/1676462274558/1676462274561&quot;,&quot;1676462274557/1676462274558/1676462274562&quot;,&quot;1676462274557/1676462274558/1676462274563&quot;,&quot;1676462274557/1676462274558/1676462274564&quot;,&quot;1676462274557/1676462274558/1676462274565&quot;,&quot;1676462274557/1676462274558/1676462274566&quot;,&quot;1676462274557/1676462274558/1676462274567&quot;,&quot;1676462274557/1676462274558/1676462274568&quot;,&quot;1676462274557/1676462274558/1676462274569&quot;,&quot;1676462274557/1676462274558/1676462274570&quot;,&quot;1676462274557/1676462274558/1676462274571&quot;,&quot;1676462274557/1676462274558/1676462274572&quot;,&quot;1676462274557/1676462274558/1676462274573&quot;,&quot;1676462274557/1676462274558/1676462274574&quot;,&quot;1676462274557/1676462274558/1676462274575&quot;,&quot;1676462274557/1676462274558/1676462274576&quot;,&quot;1676462274557/1676462274558/1676462274577&quot;,&quot;1676462274557/1676462274558/1676462274578&quot;,&quot;1676462274557/1676462274558/1676462274579&quot;,&quot;1676462274557/1676462274558/1676462274580&quot;,&quot;1676462274557/1676462274558/1676462274581&quot;,&quot;1676462274557/1676462274558/1676462274582&quot;,&quot;1676462274557/1676462274558/1676462274583&quot;,&quot;1676462274557/1676462274558/1676462274584&quot;,&quot;1676462274557/1676462274558/1676462274585&quot;,&quot;1676462274557/1676462274558/1676462274586&quot;,&quot;1676462274557/1676462274558/1676462274587&quot;,&quot;1676462274557/1676462274558/1676462274588&quot;,&quot;1676462274557/1676462274558/1676462274589&quot;,&quot;1676462274557/1676462274558/1676462274590&quot;,&quot;1676462274557/1676462274558/1676462274591&quot;,&quot;1676462274557/1676462274558/1676462274592&quot;,&quot;1676462274557/1676462274558/1676462274593&quot;,&quot;1676462274557/1676462274558/1676462274594&quot;,&quot;1676462274557/1676462274558/1676462274595&quot;,&quot;1676462274557/1676462274558/1676462274596&quot;,&quot;1676462274557/1676462274558/1676462274597&quot;,&quot;1676462274557/1676462274558/1676462274598&quot;,&quot;1676462274557/1676462274558/1676462274599&quot;,&quot;1676462274557/1676462274558/1676462274600&quot;,&quot;1676462274557/1676462274558/1676462274601&quot;,&quot;1676462274557/1676462274558/1676462274602&quot;,&quot;1676462274557/1676462274558/1676462274603&quot;,&quot;1676462274557/1676462274558/1676462274604&quot;,&quot;1676462274557/1676462274558/1676462274605&quot;,&quot;1676462274557/1676462274558/1676462274606&quot;,&quot;1676462274557/1676462274558/1676462274607&quot;,&quot;1676462274557/1676462274558/1676462274608&quot;,&quot;1676462274557/1676462274558/1676462274609&quot;,&quot;1676462274557/1676462274558/1676462274610&quot;,&quot;1676462274557/1676462274558/1676462274611&quot;,&quot;1676462274557/1676462274558/1676462274612&quot;,&quot;1676462274557/1676462274558/1676462274613&quot;,&quot;1676462274557/1676462274558/1676462274614&quot;,&quot;1676462274557/1676462274558/1676462274615&quot;,&quot;1676462274557/1676462274558/1676462274616&quot;,&quot;1676462274557/1676462274558/1676462274617&quot;,&quot;1676462274557/1676462274558/1676462274618&quot;,&quot;1676462274557/1676462274558/1676462274619&quot;,&quot;1676462274557/1676462274558/1676462274620&quot;,&quot;1676462274557/1676462274558/1676462274621&quot;,&quot;1676462274557/1676462274558/1676462274622&quot;,&quot;1676462274557/1676462274558/1676462274623&quot;,&quot;1676462274557/1676462274558/1676462274624&quot;,&quot;1676462274557/1676462274558/1676462274625&quot;,&quot;1676462274557/1676462274558/1676462274626&quot;,&quot;1676462274557/1676462274558/1676462274627&quot;,&quot;1676462274557/1676462274558/1676462274628&quot;,&quot;1676462274557/1676462274558/1676462274629&quot;,&quot;1676462274557/1676462274558/1676462274630&quot;,&quot;1676462274557/1676462274558/1676462274631&quot;,&quot;1676462274557/1676462274558/1676462274632&quot;,&quot;1676462274557/1676462274558/1676462274633&quot;,&quot;1676462274557/1676462274558/1676462274634&quot;,&quot;1676462274557/1676462274558/1676462274635&quot;,&quot;1676462274557/1676462274558/1676462274636&quot;,&quot;1676462274557/1676462274558/1676462274637&quot;,&quot;1676462274557/1676462274558/1676462274638&quot;,&quot;1676462274557/1676462274558/1676462274639&quot;,&quot;1676462274557/1676462274558/1676462274640&quot;,&quot;1676462274557/1676462274558/1676462274641&quot;,&quot;1676462274557/1676462274558/1676462274642&quot;,&quot;1676462274557/1676462274558/1676462274643&quot;,&quot;1676462274557/1676462274558/1676462274644&quot;,&quot;1676462274557/1676462274558/1676462274645&quot;,&quot;1676462274557/1676462274558/1676462274646&quot;,&quot;1676462274557/1676462274558/1676462274647&quot;,&quot;1676462274557/1676462274558/1676462274648&quot;,&quot;1676462274557/1676462274558/1676462274649&quot;,&quot;1676462274557/1676462274558/1676462274650&quot;,&quot;1676462274557/1676462274558/1676462274651&quot;,&quot;1676462274557/1676462274558/1676462274652&quot;,&quot;1676462274557/1676462274558/1676462274653&quot;,&quot;1676462274557/1676462274558/1676462274654&quot;,&quot;1676462274557/1676462274558/1676462274655&quot;,&quot;1676462274557/1676462274558/1676462274656&quot;,&quot;1676462274557/1676462274558/1676462274657&quot;,&quot;1676462274557/1676462274558/1676462274658&quot;,&quot;1676462274557/1676462274558/1676462274761&quot;,&quot;1676462274557/1676462274558/1676462274762&quot;,&quot;1676462274557/1676462274558/1676462274763&quot;,&quot;1676462274557/1676462274558/1676462274764&quot;,&quot;1676462274557/1676462274558/1676462274765&quot;,&quot;1676462274557/1676462274558/1676462274766&quot;,&quot;1676462274557/1676462274558/1676462274767&quot;,&quot;1676462274557/1676462274558/1676462274768&quot;,&quot;1676462274557/1676462274558/1676462274769&quot;,&quot;1676462274557/1676462274558/1676462274770&quot;,&quot;1676462274557/1676462274558/1676462274771&quot;,&quot;1676462274557/1676462274558/1676462274772&quot;,&quot;1676462274557/1676462274558/1676462274773&quot;,&quot;1676462274557/1676462274558/1676462274774&quot;,&quot;1676462274557/1676462274558/1676462274775&quot;,&quot;1676462274557/1676462274558/1676462274776&quot;,&quot;1676462274557/1676462274558/1676462274777&quot;,&quot;1676462274557/1676462274558/1676462274778&quot;,&quot;1676462274557/1676462274558/1676462274779&quot;,&quot;1676462274557/1676462274558/1676462274780&quot;,&quot;1676462274557/1676462274558/1676462274781&quot;,&quot;1676462274557/1676462274558/1676462274782&quot;,&quot;1676462274557/1676462274558/1676462274783&quot;,&quot;1676462274557/1676462274558/1676462274784&quot;,&quot;1676462274557/1676462274558/1676462274785&quot;,&quot;1676462274557/1676462274558/1676462274786&quot;,&quot;1676462274557/1676462274558/1676462274787&quot;,&quot;1676462274557/1676462274558/1676462274788&quot;,&quot;1676462274557/1676462274558/1676462274789&quot;,&quot;1676462274557/1676462274558/1676462274790&quot;,&quot;1676462274557/1676462274558/1676462274791&quot;,&quot;1676462274557/1676462274558/1676462274792&quot;,&quot;1676462274557/1676462274558/1676462274793&quot;,&quot;1676462274557/1676462274558/1676462274794&quot;,&quot;1676462274557/1676462274558/1676462274795&quot;,&quot;1676462274557/1676462274558/1676462274796&quot;,&quot;1676462274557/1676462274558/1676462274797&quot;,&quot;1676462274557/1676462274558/1676462274798&quot;,&quot;1676462274557/1676462274558/1676462274799&quot;,&quot;1676462274557/1676462274558/1676462274800&quot;,&quot;1676462274557/1676462274558/1676462274801&quot;,&quot;1676462274557/1676462274558/1676462274802&quot;,&quot;1676462274557/1676462274558/1676462274803&quot;,&quot;1676462274557/1676462274558/1676462274804&quot;,&quot;1676462274557/1676462274558/1676462274805&quot;,&quot;1676462274557/1676462274558/1676462274806&quot;,&quot;1676462274557/1676462274558/1676462274807&quot;,&quot;1676462274557/1676462274558/1676462274808&quot;,&quot;1676462274557/1676462274558/1676462274809&quot;,&quot;1676462274557/1676462274558/1676462274810&quot;,&quot;1676462274557/1676462274558/1676462274811&quot;,&quot;1676462274557/1676462274558/1676462274812&quot;,&quot;1676462274557/1676462274558/1676462274813&quot;,&quot;1676462274557/1676462274558/1676462274814&quot;,&quot;1676462274557/1676462274558/1676462274815&quot;,&quot;1676462274557/1676462274558/1676462274816&quot;,&quot;1676462274557/1676462274558/1676462274817&quot;,&quot;1676462274557/1676462274558/1676462274818&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1676462274659/1676462274660/1676462274671&quot;,&quot;1676462274659/1676462274660/1676462274672&quot;,&quot;1676462274659/1676462274660/1676462274673&quot;,&quot;1676462274659/1676462274660/1676462274674&quot;,&quot;1676462274659/1676462274660/1676462274675&quot;,&quot;1676462274659/1676462274660/1676462274676&quot;,&quot;1676462274659/1676462274660/1676462274677&quot;,&quot;1676462274659/1676462274660/1676462274678&quot;,&quot;1676462274659/1676462274660/1676462274679&quot;,&quot;1676462274659/1676462274660/1676462274680&quot;,&quot;1676462274659/1676462274660/1676462274681&quot;,&quot;1676462274659/1676462274660/1676462274682&quot;,&quot;1676462274659/1676462274660/1676462274683&quot;,&quot;1676462274659/1676462274660/1676462274684&quot;,&quot;1676462274659/1676462274660/1676462274685&quot;,&quot;1676462274659/1676462274660/1676462274686&quot;,&quot;1676462274659/1676462274660/1676462274687&quot;,&quot;1676462274659/1676462274660/1676462274688&quot;,&quot;1676462274659/1676462274660/1676462274689&quot;,&quot;1676462274659/1676462274660/1676462274690&quot;,&quot;1676462274659/1676462274660/1676462274691&quot;,&quot;1676462274659/1676462274660/1676462274692&quot;,&quot;1676462274659/1676462274660/1676462274693&quot;,&quot;1676462274659/1676462274660/1676462274694&quot;,&quot;1676462274659/1676462274660/1676462274695&quot;,&quot;1676462274659/1676462274660/1676462274696&quot;,&quot;1676462274659/1676462274660/1676462274697&quot;,&quot;1676462274659/1676462274660/1676462274698&quot;,&quot;1676462274659/1676462274660/1676462274699&quot;,&quot;1676462274659/1676462274660/1676462274700&quot;,&quot;1676462274659/1676462274660/1676462274701&quot;,&quot;1676462274659/1676462274660/1676462274702&quot;,&quot;1676462274659/1676462274660/1676462274703&quot;,&quot;1676462274659/1676462274660/1676462274704&quot;,&quot;1676462274659/1676462274660/1676462274705&quot;,&quot;1676462274659/1676462274660/1676462274706&quot;,&quot;1676462274659/1676462274660/1676462274707&quot;,&quot;1676462274659/1676462274660/1676462274708&quot;,&quot;1676462274659/1676462274660/1676462274709&quot;,&quot;1676462274659/1676462274660/1676462274710&quot;,&quot;1676462274659/1676462274660/1676462274711&quot;,&quot;1676462274659/1676462274660/1676462274712&quot;,&quot;1676462274659/1676462274660/1676462274713&quot;,&quot;1676462274659/1676462274660/1676462274714&quot;,&quot;1676462274659/1676462274660/1676462274715&quot;,&quot;1676462274659/1676462274660/1676462274716&quot;,&quot;1676462274659/1676462274660/1676462274717&quot;,&quot;1676462274659/1676462274660/1676462274718&quot;,&quot;1676462274659/1676462274660/1676462274719&quot;,&quot;1676462274659/1676462274660/1676462274720&quot;,&quot;1676462274659/1676462274660/1676462274721&quot;,&quot;1676462274659/1676462274660/1676462274722&quot;,&quot;1676462274659/1676462274660/1676462274723&quot;,&quot;1676462274659/1676462274660/1676462274724&quot;,&quot;1676462274659/1676462274660/1676462274725&quot;,&quot;1676462274659/1676462274660/1676462274726&quot;,&quot;1676462274659/1676462274660/1676462274727&quot;,&quot;1676462274659/1676462274660/1676462274728&quot;,&quot;1676462274659/1676462274660/1676462274729&quot;,&quot;1676462274659/1676462274660/1676462274730&quot;,&quot;1676462274659/1676462274660/1676462274731&quot;,&quot;1676462274659/1676462274660/1676462274732&quot;,&quot;1676462274659/1676462274660/1676462274733&quot;,&quot;1676462274659/1676462274660/1676462274734&quot;,&quot;1676462274659/1676462274660/1676462274735&quot;,&quot;1676462274659/1676462274660/1676462274736&quot;,&quot;1676462274659/1676462274660/1676462274737&quot;,&quot;1676462274659/1676462274660/1676462274738&quot;,&quot;1676462274659/1676462274660/1676462274739&quot;,&quot;1676462274659/1676462274660/1676462274740&quot;,&quot;1676462274659/1676462274660/1676462274741&quot;,&quot;1676462274659/1676462274660/1676462274742&quot;,&quot;1676462274659/1676462274660/1676462274743&quot;,&quot;1676462274659/1676462274660/1676462274744&quot;,&quot;1676462274659/1676462274660/1676462274745&quot;,&quot;1676462274659/1676462274660/1676462274746&quot;,&quot;1676462274659/1676462274660/1676462274747&quot;,&quot;1676462274659/1676462274660/1676462274748&quot;,&quot;1676462274659/1676462274660/1676462274749&quot;,&quot;1676462274659/1676462274660/1676462274750&quot;,&quot;1676462274659/1676462274660/1676462274751&quot;,&quot;1676462274659/1676462274660/1676462274752&quot;,&quot;1676462274659/1676462274660/1676462274753&quot;,&quot;1676462274659/1676462274660/1676462274754&quot;,&quot;1676462274659/1676462274660/1676462274755&quot;,&quot;1676462274659/1676462274660/1676462274756&quot;,&quot;1676462274659/1676462274660/1676462274757&quot;,&quot;1676462274659/1676462274660/1676462274758&quot;,&quot;1676462274659/1676462274660/1676462274759&quot;,&quot;1676462274659/1676462274660/1676462274760&quot;,&quot;1676462274659/1676462274660/1676462274836&quot;,&quot;1676462274659/1676462274660/1676462274837&quot;,&quot;1676462274659/1676462274660/1676462274838&quot;,&quot;1676462274659/1676462274660/1676462274839&quot;,&quot;1676462274659/1676462274660/1676462274840&quot;,&quot;1676462274659/1676462274660/1676462274841&quot;,&quot;1676462274659/1676462274660/1676462274842&quot;,&quot;1676462274659/1676462274660/1676462274843&quot;,&quot;1676462274659/1676462274660/1676462274844&quot;,&quot;1676462274659/1676462274660/1676462274845&quot;,&quot;1676462274659/1676462274660/1676462274846&quot;,&quot;1676462274659/1676462274660/1676462274847&quot;,&quot;1676462274659/1676462274660/1676462274848&quot;,&quot;1676462274659/1676462274660/1676462274849&quot;,&quot;1676462274659/1676462274660/1676462274850&quot;,&quot;1676462274659/1676462274660/1676462274851&quot;,&quot;1676462274659/1676462274660/1676462274852&quot;,&quot;1676462274659/1676462274660/1676462274853&quot;,&quot;1676462274659/1676462274660/1676462274854&quot;,&quot;1676462274659/1676462274660/1676462274855&quot;,&quot;1676462274659/1676462274660/1676462274856&quot;,&quot;1676462274659/1676462274660/1676462274857&quot;,&quot;1676462274659/1676462274660/1676462274858&quot;,&quot;1676462274659/1676462274660/1676462274859&quot;,&quot;1676462274659/1676462274660/1676462274860&quot;,&quot;1676462274659/1676462274660/1676462274861&quot;,&quot;1676462274659/1676462274660/1676462274862&quot;,&quot;1676462274659/1676462274660/1676462274863&quot;,&quot;1676462274659/1676462274660/1676462274864&quot;,&quot;1676462274659/1676462274660/1676462274865&quot;,&quot;1676462274659/1676462274660/1676462274866&quot;,&quot;1676462274659/1676462274660/1676462274867&quot;,&quot;1676462274659/1676462274660/1676462274868&quot;,&quot;1676462274659/1676462274660/1676462274869&quot;,&quot;1676462274659/1676462274660/1676462274870&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + &quot;500LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_500LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
              <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x rules" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">${noOfLockRulesInClass}</stringProp>
          </LoopController>
          <hashTree>
            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
              <stringProp name="CounterConfig.start">1</stringProp>
              <stringProp name="CounterConfig.end"></stringProp>
              <stringProp name="CounterConfig.incr">1</stringProp>
              <stringProp name="CounterConfig.name">lockRulesCount</stringProp>
              <stringProp name="CounterConfig.format"></stringProp>
              <boolProp name="CounterConfig.per_user">false</boolProp>
            </CounterConfig>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544525043137/1544525159358/1544525246748&quot;,&quot;1544525043137/1544525159358/1544525263160&quot;,&quot;1544525043137/1544525280855/1544525289279&quot;,&quot;1544525590768/1544525595533/1544525611432&quot;,&quot;1544525590768/1544525595533/1544525627465&quot;,&quot;1544525590768/1544525595533/1544525635696&quot;,&quot;1544525590768/1544525595533/1544525649026&quot;,&quot;1544525590768/1544525595533/1544525663048&quot;,&quot;1544525590768/1544525595533/1544525679427&quot;,&quot;1544525590768/1544525683364/1544525709799&quot;,&quot;1544525590768/1544525683364/1544525720457&quot;,&quot;1544525590768/1544525683364/1544525729515&quot;,&quot;1544525590768/1544525683364/1544525734676&quot;,&quot;1544525590768/1544525683364/1544525756801&quot;,&quot;1544525590768/1544525683364/1544525778291&quot;,&quot;1544526345845/1544526589100/1544526606750&quot;,&quot;1544526345845/1544526589100/1544526610825&quot;,&quot;1544526345845/1544526589100/1544526623799&quot;,&quot;1544526345845/1544526589100/1544526638110&quot;,&quot;1544526345845/1544526589100/1544526644717&quot;,&quot;1544526345845/1544526589100/1544526657285&quot;,&quot;1544526345845/1544526671965/1544526688230&quot;,&quot;1544526345845/1544526671965/1544526695320&quot;,&quot;1544526345845/1544526671965/1544526710051&quot;,&quot;1544526345845/1544526671965/1544526721801&quot;,&quot;1544526345845/1544526671965/1544526728620&quot;,&quot;1544526345845/1544526671965/1544526763389&quot;,&quot;1544526345845/1544526961740/1544526980657&quot;,&quot;1544526345845/1544526961740/1544526994099&quot;,&quot;1544526345845/1544526961740/1544527008225&quot;,&quot;1544526345845/1544528319371/1544528334775&quot;,&quot;1544526345845/1544528319371/1544528345283&quot;,&quot;1544526345845/1544528319371/1544528367998&quot;,&quot;1544591089661/1544591099675/1544591165699&quot;,&quot;1544591089661/1544591099675/1544591181584&quot;,&quot;1544591089661/1544591099675/1544591198772&quot;,&quot;1544591089661/1544591099675/1544591219876&quot;,&quot;1544591089661/1544591099675/1544591237488&quot;,&quot;1544591089661/1544591099675/1544591247402&quot;,&quot;1544591089661/1544591260222/1544591284840&quot;,&quot;1544591089661/1544591260222/1544591295680&quot;,&quot;1544591089661/1544591260222/1544591320423&quot;,&quot;1544591089661/1544591260222/1544591334581&quot;,&quot;1544591089661/1544591260222/1544591341221&quot;,&quot;1544591089661/1544591260222/1544591363137&quot;,&quot;1544591089661/1544591364773/1544591392809&quot;,&quot;1544591089661/1544591412698/1544591428190&quot;,&quot;1544591089661/1544591412698/1544591439057&quot;,&quot;1544591089661/1544591412698/1544591455780&quot;,&quot;1544591089661/1544591602655/1544591636888&quot;,&quot;1544591089661/1544591602655/1544591649137&quot;,&quot;1544591089661/1544591602655/1544591669971&quot;,&quot;1544591751639/1544591756584/1544591786410&quot;,&quot;1544591751639/1544591756584/1544591792950&quot;,&quot;1544591751639/1544591756584/1544591814105&quot;,&quot;1544591751639/1544591756584/1544591826125&quot;,&quot;1544591751639/1544591756584/1544591842867&quot;,&quot;1544591751639/1544591756584/1544591852005&quot;,&quot;1544591751639/1544591859950/1544591889129&quot;,&quot;1544591751639/1544591859950/1544591895035&quot;,&quot;1544591751639/1544591859950/1544591913490&quot;,&quot;1544591751639/1544591859950/1544591923488&quot;,&quot;1544591751639/1544591937229/1544591951092&quot;,&quot;1544591751639/1544591989858/1544592010989&quot;,&quot;1544591751639/1544591989858/1544592017149&quot;,&quot;1544591751639/1544591989858/1544592034736&quot;,&quot;1544591751639/1544592145731/1544592165309&quot;,&quot;1544591751639/1544592145731/1544592176780&quot;,&quot;1544591751639/1544592145731/1544592194540&quot;,&quot;1544592286221/1544592291887/1544592314873&quot;,&quot;1544592286221/1544592291887/1544592322911&quot;,&quot;1544592286221/1544592291887/1544592333414&quot;,&quot;1544592286221/1544592291887/1544592347743&quot;,&quot;1544592286221/1544592291887/1544592363784&quot;,&quot;1544592286221/1544592291887/1544592370486&quot;,&quot;1544592286221/1544592379241/1544592404760&quot;,&quot;1544592286221/1544592379241/1544592415158&quot;,&quot;1544592286221/1544592379241/1544592422449&quot;,&quot;1544592286221/1544592379241/1544592438186&quot;,&quot;1544592286221/1544592379241/1544592448263&quot;,&quot;1544592286221/1544592379241/1544592466092&quot;,&quot;1544592286221/1544592474205/1544592491253&quot;,&quot;1544592286221/1544592520233/1544592540334&quot;,&quot;1544592286221/1544592520233/1544592555974&quot;,&quot;1544592286221/1544592520233/1544592561671&quot;,&quot;1544592286221/1544592623523/1544592648386&quot;,&quot;1544592286221/1544592623523/1544592658543&quot;,&quot;1544592286221/1544592623523/1544592671565&quot;,&quot;1544592857014/1544592865722/1544593053271&quot;,&quot;1544592857014/1544592865722/1544593072380&quot;,&quot;1544592857014/1544592865722/1544593079694&quot;,&quot;1544592857014/1544592865722/1544593093552&quot;,&quot;1544592857014/1544592865722/1544593104748&quot;,&quot;1544592857014/1544592865722/1544593123201&quot;,&quot;1544592857014/1544593139545/1544593173865&quot;,&quot;1544592857014/1544593139545/1544593187008&quot;,&quot;1544592857014/1544593139545/1544593454057&quot;,&quot;1544592857014/1544593139545/1544593471128&quot;,&quot;1544592857014/1544593139545/1544593476327&quot;,&quot;1544592857014/1544593139545/1544593488247&quot;,&quot;1544592857014/1544593529004/1544593551477&quot;,&quot;1544592857014/1544593585947/1544593606215&quot;,&quot;1544592857014/1544593585947/1544593620647&quot;,&quot;1544592857014/1544593585947/1544593632079&quot;,&quot;1544592857014/1544593703192/1544593728070&quot;,&quot;1544592857014/1544593703192/1544593743725&quot;,&quot;1544592857014/1544593703192/1544593752239&quot;,&quot;1544593830881/1544593842258/1544593874472&quot;,&quot;1544593830881/1544593842258/1544593889640&quot;,&quot;1544593830881/1544593842258/1544593905062&quot;,&quot;1544593830881/1544593842258/1544593925051&quot;,&quot;1544593830881/1544593842258/1544593932560&quot;,&quot;1544593830881/1544593842258/1544593949312&quot;,&quot;1544593830881/1544593964252/1544594078882&quot;,&quot;1544593830881/1544593964252/1544594102416&quot;,&quot;1544593830881/1544593964252/1544594113782&quot;,&quot;1544593830881/1544593964252/1544594135462&quot;,&quot;1544593830881/1544593964252/1544594177257&quot;,&quot;1544593830881/1544593964252/1544594194047&quot;,&quot;1544593830881/1544596248781/1544596271349&quot;,&quot;1544593830881/1544596291616/1544596322099&quot;,&quot;1544593830881/1544596291616/1544596327463&quot;,&quot;1544593830881/1544596291616/1544596347700&quot;,&quot;1544593830881/1544596494652/1544596513093&quot;,&quot;1544593830881/1544596494652/1544596529922&quot;,&quot;1544593830881/1544596494652/1544596545929&quot;,&quot;1544596644314/1544596678647/1544596711546&quot;,&quot;1544596644314/1544596678647/1544596731689&quot;,&quot;1544596644314/1544596678647/1544596745950&quot;,&quot;1544596644314/1544596678647/1544596761923&quot;,&quot;1544596644314/1544596678647/1544596768254&quot;,&quot;1544596644314/1544596678647/1544596792897&quot;,&quot;1544596644314/1544596802487/1544596845016&quot;,&quot;1544596644314/1544596802487/1544596858389&quot;,&quot;1544596644314/1544596802487/1544596877787&quot;,&quot;1544596644314/1544596802487/1544596890399&quot;,&quot;1544596644314/1544596802487/1544596904838&quot;,&quot;1544596644314/1544596802487/1544596921860&quot;,&quot;1544596644314/1544597008306/1544597032165&quot;,&quot;1544596644314/1544597091060/1544597104557&quot;,&quot;1544596644314/1544597091060/1544597121860&quot;,&quot;1544596644314/1544597091060/1544597149347&quot;,&quot;1544596644314/1544597220792/1544597245750&quot;,&quot;1544596644314/1544597220792/1544597262426&quot;,&quot;1544596644314/1544597220792/1544597275965&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">String[] stringArray = {${__evalVar(${category}_Assignment)}};

int randomIndex = (${lockRulesCount})%(stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
              <intProp name="ThroughputController.style">0</intProp>
              <boolProp name="ThroughputController.perThread">true</boolProp>
              <stringProp name="ThroughputController.maxThroughput">${50LOsLockRuleCount}</stringProp>
              <stringProp name="ThroughputController.percentThroughput">${20LOsPercentage}</stringProp>
            </ThroughputController>
            <hashTree>
              <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
                <stringProp name="maximumValue">999999</stringProp>
                <stringProp name="minimumValue">000000</stringProp>
                <stringProp name="outputFormat">000000</stringProp>
                <boolProp name="perThread">true</boolProp>
                <stringProp name="randomSeed"></stringProp>
                <stringProp name="variableName">randomNo</stringProp>
              </RandomVariableConfig>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="create a rule" enabled="true">
                <stringProp name="IncludeController.includepath">Create_a_rule_50LOs.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
              <intProp name="ThroughputController.style">0</intProp>
              <boolProp name="ThroughputController.perThread">true</boolProp>
              <stringProp name="ThroughputController.maxThroughput">${100LOsLockRuleCount}</stringProp>
              <stringProp name="ThroughputController.percentThroughput">${30LOsPercentage}</stringProp>
            </ThroughputController>
            <hashTree>
              <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
                <stringProp name="maximumValue">999999</stringProp>
                <stringProp name="minimumValue">000000</stringProp>
                <stringProp name="outputFormat">000000</stringProp>
                <boolProp name="perThread">true</boolProp>
                <stringProp name="randomSeed"></stringProp>
                <stringProp name="variableName">randomNo</stringProp>
              </RandomVariableConfig>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="create a rule" enabled="true">
                <stringProp name="IncludeController.includepath">Create_a_rule_100LOs.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
              <intProp name="ThroughputController.style">0</intProp>
              <boolProp name="ThroughputController.perThread">true</boolProp>
              <stringProp name="ThroughputController.maxThroughput">${150LOsLockRuleCount}</stringProp>
              <stringProp name="ThroughputController.percentThroughput">${50LOsPercentage}</stringProp>
            </ThroughputController>
            <hashTree>
              <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
                <stringProp name="maximumValue">999999</stringProp>
                <stringProp name="minimumValue">000000</stringProp>
                <stringProp name="outputFormat">000000</stringProp>
                <boolProp name="perThread">true</boolProp>
                <stringProp name="randomSeed"></stringProp>
                <stringProp name="variableName">randomNo</stringProp>
              </RandomVariableConfig>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="create a rule" enabled="true">
                <stringProp name="IncludeController.includepath">Create_a_rule_150LOs.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="create custom grading in a class" enabled="false"/>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a gradebook in a class" enabled="true">
              <stringProp name="IncludeController.includepath">Create_a_gradebook_in_a_class.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">String[] multiProducts = {
    ${__evalVar(${category})}
};

String mergedColumnJson = &quot;[&quot;;
int customWeightage = 0;
int pendingWeightage = 0;
int remainingValue = 0;
String bundle = &quot;&quot;;

for (int i = 0; i &lt; multiProducts.length; i++) {
	bundle = multiProducts[i] + &quot;_bundle&quot;;
	mergedColumnJson += &quot;{\&quot;column_id\&quot;: \&quot;&quot; + multiProducts[i] + &quot;\&quot;,\&quot;type\&quot;: \&quot;product\&quot;,\&quot;weightage\&quot;: \&quot;5\&quot;,\&quot;bundle-codes\&quot;: [\&quot;&quot; + vars.get(bundle) + &quot;\&quot;],\&quot;productcode\&quot;: \&quot;&quot; + multiProducts[i] + &quot;\&quot;},&quot;;
};

remainingValue = 100 - (5*(multiProducts.length));

customWeightage = remainingValue/${customGradingCount};
pendingWeightage = remainingValue%${customGradingCount};

for (int i = 1; i &lt;= ${customGradingCount}; i++) {
	if(i != ${customGradingCount}) {
		mergedColumnJson += &quot;{\&quot;column_id\&quot;: \&quot;PerfCustComp_&quot; + i + &quot;\&quot;,\&quot;type\&quot;: \&quot;custom\&quot;, \&quot;custom_component_code\&quot;: \&quot;PerfCustComp_&quot; + i + &quot;\&quot;, \&quot;title\&quot;: \&quot;PerfCustComp_&quot; + i + &quot;\&quot;, \&quot;weightage\&quot;: \&quot;&quot; + customWeightage + &quot;\&quot;,\&quot;scoring_type\&quot;: \&quot;SIMPLE\&quot;},&quot;;
	} else {
		int finalWeightage = customWeightage + pendingWeightage;
		mergedColumnJson += &quot;{\&quot;column_id\&quot;: \&quot;PerfCustComp_&quot; + i + &quot;\&quot;,\&quot;type\&quot;: \&quot;custom\&quot;, \&quot;custom_component_code\&quot;: \&quot;PerfCustComp_&quot; + i + &quot;\&quot;, \&quot;title\&quot;: \&quot;PerfCustComp_&quot; + i + &quot;\&quot;, \&quot;weightage\&quot;: \&quot;&quot; + finalWeightage + &quot;\&quot;,\&quot;scoring_type\&quot;: \&quot;SIMPLE\&quot;},&quot;;
	}
};

mergedColumnJson = mergedColumnJson.substring(0, mergedColumnJson.length() - 1) + &quot;]&quot;;

vars.put(&quot;mergedColumnJsonFinal&quot;, mergedColumnJson);</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
                <stringProp name="RandomTimer.range">${minWait}</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add columns to a particular gradebook of a class" enabled="true">
              <stringProp name="IncludeController.includepath">Add_columns_to_a_particular_gradebook_of_a_class_with_custom_components.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x students and join using classcode of current teacher" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">${noOfStudentsInClass}</stringProp>
          </LoopController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.util.Date;

Date date = new Date();
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;classcode&quot;);

studentextuserid = &quot;std&quot; + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;studentextuserid&quot;, studentextuserid);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">String[] multiProducts = {
    ${__evalVar(${category})}
};

String mergedJson = &quot;[&quot;;

for (int i = 0; i &lt; multiProducts.length; i++) {
	mergedJson += &quot;{\&quot;productcode\&quot;: \&quot;&quot; + multiProducts[i] + &quot;\&quot;,\&quot;ext_product_meta\&quot;: {\&quot;startdate\&quot;:&quot; + &quot;${startDate}&quot; + &quot;,\&quot;enddate\&quot;:&quot; + &quot;${endDate}&quot; + &quot;}},&quot;;
}
mergedJson = mergedJson.substring(0, mergedJson.length() - 1) + &quot;]&quot;;

vars.put(&quot;provisionProductsArray&quot;, mergedJson);</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with product_code and class_code" enabled="true">
              <stringProp name="IncludeController.includepath">join_Spaces_with_product_code_and_class_code_MultiProduct.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for writing data into csv file" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">timestamp = vars.get(&quot;date&quot;);

FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameStd&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameTch&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Attempts and User State - Students" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>100.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">attempts.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">extuserid,cc,category</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
            <stringProp name="BeanShellSampler.query">String[] stringArray = {${__evalVar(${category}_Assignment)}};  

for (int i = 0; i &lt; stringArray.length; i++) {
    vars.put(vars.get(&quot;category&quot;) + &quot;_productcode&quot; + (i + 1), stringArray[i]);
}

vars.put(&quot;productcode&quot;, stringArray[0]);

vars.put(&quot;folderid&quot;, &quot;activity-state/&quot; + &quot;${orgid}&quot; + &quot;/&quot; + stringArray[0] + &quot;/1544525043137/1544525159358/1544525239184&quot;);
vars.put(&quot;productfolderid&quot;, &quot;product-state/&quot; + &quot;${orgid}&quot; + &quot;/&quot; + stringArray[0]);
vars.put(&quot;psfolderid&quot;, &quot;activity-state/&quot; + &quot;${orgid}&quot; + &quot;/&quot; + stringArray[0] + &quot;/1544592857014/1544593585947/1544593695538&quot;);</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="itemcode" elementType="Argument">
                <stringProp name="Argument.name">itemcode</stringProp>
                <stringProp name="Argument.value">1544525043137/1544525159358/1544525239184</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="psitemcode" elementType="Argument">
                <stringProp name="Argument.name">psitemcode</stringProp>
                <stringProp name="Argument.value">1544592857014/1544593585947/1544593695538</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="documentid" elementType="Argument">
                <stringProp name="Argument.name">documentid</stringProp>
                <stringProp name="Argument.value">lastKnown</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="timestamp" elementType="Argument">
                <stringProp name="Argument.name">timestamp</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_institution.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get classes of an user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_classes_of_an_user_institution.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get details for a specific class" enabled="true">
            <stringProp name="IncludeController.includepath">Get_details_for_a_specific_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
            <stringProp name="ForeachController.inputVal">${category}_productcode</stringProp>
            <stringProp name="ForeachController.returnVal">productcode</stringProp>
            <boolProp name="ForeachController.useSeparator">false</boolProp>
            <stringProp name="ForeachController.startIndex">0</stringProp>
            <stringProp name="ForeachController.endIndex">${__evalVar(${category}_Scorable_PE_Count)}</stringProp>
          </ForeachController>
          <hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="A Student simulating reading (Multiple pages) and post the statements" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${__jexl2(${__evalVar(${category}_Scorable)}*4)}</stringProp>
            </LoopController>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="filename">p_cat1.csv</stringProp>
                <stringProp name="fileEncoding"></stringProp>
                <stringProp name="variableNames">task,verb</stringProp>
                <boolProp name="ignoreFirstLine">false</boolProp>
                <stringProp name="delimiter">,</stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">true</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.thread</stringProp>
              </CSVDataSet>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="false">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">${userProgress_min_1011}</stringProp>
                  <stringProp name="RandomTimer.range">${userProgress_max_1011}</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add a new statement" enabled="true">
                <stringProp name="IncludeController.includepath">Add_statements.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="false">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">${userProgress_min_1011}</stringProp>
                  <stringProp name="RandomTimer.range">${userProgress_max_1011}</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update user&apos;s application state for a product or class (product)" enabled="false">
                <stringProp name="IncludeController.includepath">Update_user_application_state_for_a_product_or_class_product_.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create_documents_of_folders_for_learner_item_level" enabled="true">
            <stringProp name="IncludeController.includepath">Create_documents_of_folders_for_learner_item_level_scorable.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
            <stringProp name="ForeachController.inputVal">${category}_productcode</stringProp>
            <stringProp name="ForeachController.returnVal">productcode</stringProp>
            <boolProp name="ForeachController.useSeparator">false</boolProp>
            <stringProp name="ForeachController.startIndex">0</stringProp>
            <stringProp name="ForeachController.endIndex">${__evalVar(${category}_Pskill_PE_Count)}</stringProp>
          </ForeachController>
          <hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="A Student simulating reading (Multiple pages) and post the statements" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${__jexl2(${__evalVar(${category}_Pskill)}*4)}</stringProp>
            </LoopController>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="filename">product_sections_pskills_e1_4items_cat1.csv</stringProp>
                <stringProp name="fileEncoding"></stringProp>
                <stringProp name="variableNames">pstask,psverb</stringProp>
                <boolProp name="ignoreFirstLine">false</boolProp>
                <stringProp name="delimiter">,</stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">true</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.thread</stringProp>
              </CSVDataSet>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add a new statement" enabled="true">
                <stringProp name="IncludeController.includepath">Add_statements_pskill_contributesToCompletion.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create_documents_of_folders_for_learner_item_level" enabled="true">
            <stringProp name="IncludeController.includepath">Create_documents_of_folders_for_learner_item_level_pskill.jmx</stringProp>
          </IncludeController>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Get dlsuserid" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>100.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">attempts.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">extuserid,cc,category</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilename" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilename</stringProp>
                <stringProp name="Argument.value">dlsuserid_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_institution.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="false">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;extuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;cc&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;userid&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Lock Rules and Custom Grading" enabled="false"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">createRule.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid,classtitle,classCode,category</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilenameTch" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilenameTch</stringProp>
                <stringProp name="Argument.value">scenario_tch_asnmt_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="outputCsvFilenameStd" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilenameStd</stringProp>
                <stringProp name="Argument.value">student_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="assignedPathList" elementType="Argument">
                <stringProp name="Argument.name">assignedPathList</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="title" elementType="Argument">
                <stringProp name="Argument.name">title</stringProp>
                <stringProp name="Argument.value">default gradebook 1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gradebook_id" elementType="Argument">
                <stringProp name="Argument.name">gradebook_id</stringProp>
                <stringProp name="Argument.value">default-gradebook</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="get_classes_of_an_user" enabled="true">
            <stringProp name="IncludeController.includepath">get_classes_of_an_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_details_for_a_specific_class_All_Details" enabled="false">
            <stringProp name="IncludeController.includepath">Get_details_for_a_specific_class_All_Details.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get details for a specific class" enabled="true">
            <stringProp name="IncludeController.includepath">Get_details_for_a_specific_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x rules" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">${__evalVar(${category}_noOfLockRulesInClass)}</stringProp>
          </LoopController>
          <hashTree>
            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
              <stringProp name="CounterConfig.start">1</stringProp>
              <stringProp name="CounterConfig.end"></stringProp>
              <stringProp name="CounterConfig.incr">1</stringProp>
              <stringProp name="CounterConfig.name">lockRulesCount</stringProp>
              <stringProp name="CounterConfig.format"></stringProp>
              <boolProp name="CounterConfig.per_user">false</boolProp>
            </CounterConfig>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544525043137/1544525159358/1544525246748&quot;,&quot;1544525043137/1544525159358/1544525263160&quot;,&quot;1544525043137/1544525280855/1544525289279&quot;,&quot;1544525590768/1544525595533/1544525611432&quot;,&quot;1544525590768/1544525595533/1544525627465&quot;,&quot;1544525590768/1544525595533/1544525635696&quot;,&quot;1544525590768/1544525595533/1544525649026&quot;,&quot;1544525590768/1544525595533/1544525663048&quot;,&quot;1544525590768/1544525595533/1544525679427&quot;,&quot;1544525590768/1544525683364/1544525709799&quot;,&quot;1544525590768/1544525683364/1544525720457&quot;,&quot;1544525590768/1544525683364/1544525729515&quot;,&quot;1544525590768/1544525683364/1544525734676&quot;,&quot;1544525590768/1544525683364/1544525756801&quot;,&quot;1544525590768/1544525683364/1544525778291&quot;,&quot;1544526345845/1544526589100/1544526606750&quot;,&quot;1544526345845/1544526589100/1544526610825&quot;,&quot;1544526345845/1544526589100/1544526623799&quot;,&quot;1544526345845/1544526589100/1544526638110&quot;,&quot;1544526345845/1544526589100/1544526644717&quot;,&quot;1544526345845/1544526589100/1544526657285&quot;,&quot;1544526345845/1544526671965/1544526688230&quot;,&quot;1544526345845/1544526671965/1544526695320&quot;,&quot;1544526345845/1544526671965/1544526710051&quot;,&quot;1544526345845/1544526671965/1544526721801&quot;,&quot;1544526345845/1544526671965/1544526728620&quot;,&quot;1544526345845/1544526671965/1544526763389&quot;,&quot;1544526345845/1544526961740/1544526980657&quot;,&quot;1544526345845/1544526961740/1544526994099&quot;,&quot;1544526345845/1544526961740/1544527008225&quot;,&quot;1544526345845/1544528319371/1544528334775&quot;,&quot;1544526345845/1544528319371/1544528345283&quot;,&quot;1544526345845/1544528319371/1544528367998&quot;,&quot;1544591089661/1544591099675/1544591165699&quot;,&quot;1544591089661/1544591099675/1544591181584&quot;,&quot;1544591089661/1544591099675/1544591198772&quot;,&quot;1544591089661/1544591099675/1544591219876&quot;,&quot;1544591089661/1544591099675/1544591237488&quot;,&quot;1544591089661/1544591099675/1544591247402&quot;,&quot;1544591089661/1544591260222/1544591284840&quot;,&quot;1544591089661/1544591260222/1544591295680&quot;,&quot;1544591089661/1544591260222/1544591320423&quot;,&quot;1544591089661/1544591260222/1544591334581&quot;,&quot;1544591089661/1544591260222/1544591341221&quot;,&quot;1544591089661/1544591260222/1544591363137&quot;,&quot;1544591089661/1544591364773/1544591392809&quot;,&quot;1544591089661/1544591412698/1544591428190&quot;,&quot;1544591089661/1544591412698/1544591439057&quot;,&quot;1544591089661/1544591412698/1544591455780&quot;,&quot;1544591089661/1544591602655/1544591636888&quot;,&quot;1544591089661/1544591602655/1544591649137&quot;,&quot;1544591089661/1544591602655/1544591669971&quot;,&quot;1544591751639/1544591756584/1544591786410&quot;,&quot;1544591751639/1544591756584/1544591792950&quot;,&quot;1544591751639/1544591756584/1544591814105&quot;,&quot;1544591751639/1544591756584/1544591826125&quot;,&quot;1544591751639/1544591756584/1544591842867&quot;,&quot;1544591751639/1544591756584/1544591852005&quot;,&quot;1544591751639/1544591859950/1544591889129&quot;,&quot;1544591751639/1544591859950/1544591895035&quot;,&quot;1544591751639/1544591859950/1544591913490&quot;,&quot;1544591751639/1544591859950/1544591923488&quot;,&quot;1544591751639/1544591937229/1544591951092&quot;,&quot;1544591751639/1544591989858/1544592010989&quot;,&quot;1544591751639/1544591989858/1544592017149&quot;,&quot;1544591751639/1544591989858/1544592034736&quot;,&quot;1544591751639/1544592145731/1544592165309&quot;,&quot;1544591751639/1544592145731/1544592176780&quot;,&quot;1544591751639/1544592145731/1544592194540&quot;,&quot;1544592286221/1544592291887/1544592314873&quot;,&quot;1544592286221/1544592291887/1544592322911&quot;,&quot;1544592286221/1544592291887/1544592333414&quot;,&quot;1544592286221/1544592291887/1544592347743&quot;,&quot;1544592286221/1544592291887/1544592363784&quot;,&quot;1544592286221/1544592291887/1544592370486&quot;,&quot;1544592286221/1544592379241/1544592404760&quot;,&quot;1544592286221/1544592379241/1544592415158&quot;,&quot;1544592286221/1544592379241/1544592422449&quot;,&quot;1544592286221/1544592379241/1544592438186&quot;,&quot;1544592286221/1544592379241/1544592448263&quot;,&quot;1544592286221/1544592379241/1544592466092&quot;,&quot;1544592286221/1544592474205/1544592491253&quot;,&quot;1544592286221/1544592520233/1544592540334&quot;,&quot;1544592286221/1544592520233/1544592555974&quot;,&quot;1544592286221/1544592520233/1544592561671&quot;,&quot;1544592286221/1544592623523/1544592648386&quot;,&quot;1544592286221/1544592623523/1544592658543&quot;,&quot;1544592286221/1544592623523/1544592671565&quot;,&quot;1544592857014/1544592865722/1544593053271&quot;,&quot;1544592857014/1544592865722/1544593072380&quot;,&quot;1544592857014/1544592865722/1544593079694&quot;,&quot;1544592857014/1544592865722/1544593093552&quot;,&quot;1544592857014/1544592865722/1544593104748&quot;,&quot;1544592857014/1544592865722/1544593123201&quot;,&quot;1544592857014/1544593139545/1544593173865&quot;,&quot;1544592857014/1544593139545/1544593187008&quot;,&quot;1544592857014/1544593139545/1544593454057&quot;,&quot;1544592857014/1544593139545/1544593471128&quot;,&quot;1544592857014/1544593139545/1544593476327&quot;,&quot;1544592857014/1544593139545/1544593488247&quot;,&quot;1544592857014/1544593529004/1544593551477&quot;,&quot;1544592857014/1544593585947/1544593606215&quot;,&quot;1544592857014/1544593585947/1544593620647&quot;,&quot;1544592857014/1544593585947/1544593632079&quot;,&quot;1544592857014/1544593703192/1544593728070&quot;,&quot;1544592857014/1544593703192/1544593743725&quot;,&quot;1544592857014/1544593703192/1544593752239&quot;,&quot;1544593830881/1544593842258/1544593874472&quot;,&quot;1544593830881/1544593842258/1544593889640&quot;,&quot;1544593830881/1544593842258/1544593905062&quot;,&quot;1544593830881/1544593842258/1544593925051&quot;,&quot;1544593830881/1544593842258/1544593932560&quot;,&quot;1544593830881/1544593842258/1544593949312&quot;,&quot;1544593830881/1544593964252/1544594078882&quot;,&quot;1544593830881/1544593964252/1544594102416&quot;,&quot;1544593830881/1544593964252/1544594113782&quot;,&quot;1544593830881/1544593964252/1544594135462&quot;,&quot;1544593830881/1544593964252/1544594177257&quot;,&quot;1544593830881/1544593964252/1544594194047&quot;,&quot;1544593830881/1544596248781/1544596271349&quot;,&quot;1544593830881/1544596291616/1544596322099&quot;,&quot;1544593830881/1544596291616/1544596327463&quot;,&quot;1544593830881/1544596291616/1544596347700&quot;,&quot;1544593830881/1544596494652/1544596513093&quot;,&quot;1544593830881/1544596494652/1544596529922&quot;,&quot;1544593830881/1544596494652/1544596545929&quot;,&quot;1544596644314/1544596678647/1544596711546&quot;,&quot;1544596644314/1544596678647/1544596731689&quot;,&quot;1544596644314/1544596678647/1544596745950&quot;,&quot;1544596644314/1544596678647/1544596761923&quot;,&quot;1544596644314/1544596678647/1544596768254&quot;,&quot;1544596644314/1544596678647/1544596792897&quot;,&quot;1544596644314/1544596802487/1544596845016&quot;,&quot;1544596644314/1544596802487/1544596858389&quot;,&quot;1544596644314/1544596802487/1544596877787&quot;,&quot;1544596644314/1544596802487/1544596890399&quot;,&quot;1544596644314/1544596802487/1544596904838&quot;,&quot;1544596644314/1544596802487/1544596921860&quot;,&quot;1544596644314/1544597008306/1544597032165&quot;,&quot;1544596644314/1544597091060/1544597104557&quot;,&quot;1544596644314/1544597091060/1544597121860&quot;,&quot;1544596644314/1544597091060/1544597149347&quot;,&quot;1544596644314/1544597220792/1544597245750&quot;,&quot;1544596644314/1544597220792/1544597262426&quot;,&quot;1544596644314/1544597220792/1544597275965&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">String[] stringArray = {${__evalVar(${category}_Assignment)}};

int randomIndex = (${lockRulesCount})%(stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
              <intProp name="ThroughputController.style">0</intProp>
              <boolProp name="ThroughputController.perThread">true</boolProp>
              <stringProp name="ThroughputController.maxThroughput">${__evalVar(${category}_50LOsLockRuleCount)}</stringProp>
              <stringProp name="ThroughputController.percentThroughput">${20LOsPercentage}</stringProp>
            </ThroughputController>
            <hashTree>
              <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
                <stringProp name="maximumValue">999999</stringProp>
                <stringProp name="minimumValue">000000</stringProp>
                <stringProp name="outputFormat">000000</stringProp>
                <boolProp name="perThread">true</boolProp>
                <stringProp name="randomSeed"></stringProp>
                <stringProp name="variableName">randomNo</stringProp>
              </RandomVariableConfig>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="create a rule" enabled="true">
                <stringProp name="IncludeController.includepath">Create_a_rule_50LOs.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
              <intProp name="ThroughputController.style">0</intProp>
              <boolProp name="ThroughputController.perThread">true</boolProp>
              <stringProp name="ThroughputController.maxThroughput">${__evalVar(${category}_100LOsLockRuleCount)}</stringProp>
              <stringProp name="ThroughputController.percentThroughput">${30LOsPercentage}</stringProp>
            </ThroughputController>
            <hashTree>
              <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
                <stringProp name="maximumValue">999999</stringProp>
                <stringProp name="minimumValue">000000</stringProp>
                <stringProp name="outputFormat">000000</stringProp>
                <boolProp name="perThread">true</boolProp>
                <stringProp name="randomSeed"></stringProp>
                <stringProp name="variableName">randomNo</stringProp>
              </RandomVariableConfig>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="create a rule" enabled="true">
                <stringProp name="IncludeController.includepath">Create_a_rule_100LOs.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
              <intProp name="ThroughputController.style">0</intProp>
              <boolProp name="ThroughputController.perThread">true</boolProp>
              <stringProp name="ThroughputController.maxThroughput">${__evalVar(${category}_150LOsLockRuleCount)}</stringProp>
              <stringProp name="ThroughputController.percentThroughput">${50LOsPercentage}</stringProp>
            </ThroughputController>
            <hashTree>
              <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
                <stringProp name="maximumValue">999999</stringProp>
                <stringProp name="minimumValue">000000</stringProp>
                <stringProp name="outputFormat">000000</stringProp>
                <boolProp name="perThread">true</boolProp>
                <stringProp name="randomSeed"></stringProp>
                <stringProp name="variableName">randomNo</stringProp>
              </RandomVariableConfig>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="create a rule" enabled="true">
                <stringProp name="IncludeController.includepath">Create_a_rule_150LOs.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="create custom grading in a class" enabled="true"/>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a gradebook in a class" enabled="true">
              <stringProp name="IncludeController.includepath">Create_a_gradebook_in_a_class.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">String[] multiProducts = {
    ${__evalVar(${category})}
};

String mergedColumnJson = &quot;[&quot;;
int customWeightage = 0;
int pendingWeightage = 0;
int remainingValue = 0;
String bundle = &quot;&quot;;

for (int i = 0; i &lt; multiProducts.length; i++) {
	bundle = multiProducts[i] + &quot;_bundle&quot;;
	mergedColumnJson += &quot;{\&quot;column_id\&quot;: \&quot;&quot; + multiProducts[i] + &quot;\&quot;,\&quot;type\&quot;: \&quot;product\&quot;,\&quot;weightage\&quot;: \&quot;5\&quot;,\&quot;bundle-codes\&quot;: [\&quot;&quot; + vars.get(bundle) + &quot;\&quot;],\&quot;productcode\&quot;: \&quot;&quot; + multiProducts[i] + &quot;\&quot;},&quot;;
};

remainingValue = 100 - (5*(multiProducts.length));

customWeightage = remainingValue/(${__evalVar(${category}_customGradingCount)});
pendingWeightage = remainingValue%(${__evalVar(${category}_customGradingCount)});

for (int i = 1; i &lt;= ${__evalVar(${category}_customGradingCount)}; i++) {
	if(i != ${__evalVar(${category}_customGradingCount)}) {
		mergedColumnJson += &quot;{\&quot;column_id\&quot;: \&quot;PerfCustComp_&quot; + i + &quot;\&quot;,\&quot;type\&quot;: \&quot;custom\&quot;, \&quot;custom_component_code\&quot;: \&quot;PerfCustComp_&quot; + i + &quot;\&quot;, \&quot;title\&quot;: \&quot;PerfCustComp_&quot; + i + &quot;\&quot;, \&quot;weightage\&quot;: \&quot;&quot; + customWeightage + &quot;\&quot;,\&quot;scoring_type\&quot;: \&quot;SIMPLE\&quot;},&quot;;
	} else {
		int finalWeightage = customWeightage + pendingWeightage;
		mergedColumnJson += &quot;{\&quot;column_id\&quot;: \&quot;PerfCustComp_&quot; + i + &quot;\&quot;,\&quot;type\&quot;: \&quot;custom\&quot;, \&quot;custom_component_code\&quot;: \&quot;PerfCustComp_&quot; + i + &quot;\&quot;, \&quot;title\&quot;: \&quot;PerfCustComp_&quot; + i + &quot;\&quot;, \&quot;weightage\&quot;: \&quot;&quot; + finalWeightage + &quot;\&quot;,\&quot;scoring_type\&quot;: \&quot;SIMPLE\&quot;},&quot;;
	}
};

mergedColumnJson = mergedColumnJson.substring(0, mergedColumnJson.length() - 1) + &quot;]&quot;;

vars.put(&quot;mergedColumnJsonFinal&quot;, mergedColumnJson);</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
                <stringProp name="RandomTimer.range">${minWait}</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add columns to a particular gradebook of a class" enabled="true">
              <stringProp name="IncludeController.includepath">Add_columns_to_a_particular_gradebook_of_a_class_with_custom_components.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Create 5 rules if rule count is less than 5" enabled="false"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">createRule.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid,classtitle,classCode,category</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilenameTch" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilenameTch</stringProp>
                <stringProp name="Argument.value">scenario_tch_asnmt_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="outputCsvFilenameStd" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilenameStd</stringProp>
                <stringProp name="Argument.value">student_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="assignedPathList" elementType="Argument">
                <stringProp name="Argument.name">assignedPathList</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="title" elementType="Argument">
                <stringProp name="Argument.name">title</stringProp>
                <stringProp name="Argument.value">default gradebook 1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gradebook_id" elementType="Argument">
                <stringProp name="Argument.name">gradebook_id</stringProp>
                <stringProp name="Argument.value">default-gradebook</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="rulesCountFile" elementType="Argument">
                <stringProp name="Argument.name">rulesCountFile</stringProp>
                <stringProp name="Argument.value">Rules_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
            <stringProp name="BeanShellSampler.query">String[] stringArray = {${__evalVar(${category}_Assignment)}};  


for (int i = 0; i &lt; stringArray.length; i++) {
    vars.put(vars.get(&quot;category&quot;) + &quot;_productcode&quot; + (i + 1), stringArray[i]);
}

vars.put(&quot;productcode&quot;, stringArray[0]);


</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="false">
            <stringProp name="BeanShellSampler.query">String[] stringArray = {${__evalVar(${category}_Assignment)}};
int stringArrayLen = stringArray.length;

</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="get_classes_of_an_user" enabled="true">
            <stringProp name="IncludeController.includepath">get_classes_of_an_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_details_for_a_specific_class_All_Details" enabled="false">
            <stringProp name="IncludeController.includepath">Get_details_for_a_specific_class_All_Details.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get details for a specific class" enabled="true">
            <stringProp name="IncludeController.includepath">Get_details_for_a_specific_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
            <stringProp name="ForeachController.inputVal">${category}_productcode</stringProp>
            <stringProp name="ForeachController.returnVal">productcode</stringProp>
            <boolProp name="ForeachController.useSeparator">false</boolProp>
            <stringProp name="ForeachController.startIndex">0</stringProp>
            <stringProp name="ForeachController.endIndex">20</stringProp>
          </ForeachController>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all rules" enabled="true">
              <stringProp name="IncludeController.includepath">Get_all_the_rules.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for writing data into csv file" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
              <stringProp name="BeanShellSampler.query">
FileOutputStream out = new FileOutputStream(vars.get(&quot;rulesCountFile&quot;),true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;extuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;productcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;rulesCount&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();


</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
              <stringProp name="IfController.condition">&quot;${rulesCount}&quot; &lt; 5;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544525043137/1544525159358/1544525246748&quot;,&quot;1544525043137/1544525159358/1544525263160&quot;,&quot;1544525043137/1544525280855/1544525289279&quot;,&quot;1544525590768/1544525595533/1544525611432&quot;,&quot;1544525590768/1544525595533/1544525627465&quot;,&quot;1544525590768/1544525595533/1544525635696&quot;,&quot;1544525590768/1544525595533/1544525649026&quot;,&quot;1544525590768/1544525595533/1544525663048&quot;,&quot;1544525590768/1544525595533/1544525679427&quot;,&quot;1544525590768/1544525683364/1544525709799&quot;,&quot;1544525590768/1544525683364/1544525720457&quot;,&quot;1544525590768/1544525683364/1544525729515&quot;,&quot;1544525590768/1544525683364/1544525734676&quot;,&quot;1544525590768/1544525683364/1544525756801&quot;,&quot;1544525590768/1544525683364/1544525778291&quot;,&quot;1544526345845/1544526589100/1544526606750&quot;,&quot;1544526345845/1544526589100/1544526610825&quot;,&quot;1544526345845/1544526589100/1544526623799&quot;,&quot;1544526345845/1544526589100/1544526638110&quot;,&quot;1544526345845/1544526589100/1544526644717&quot;,&quot;1544526345845/1544526589100/1544526657285&quot;,&quot;1544526345845/1544526671965/1544526688230&quot;,&quot;1544526345845/1544526671965/1544526695320&quot;,&quot;1544526345845/1544526671965/1544526710051&quot;,&quot;1544526345845/1544526671965/1544526721801&quot;,&quot;1544526345845/1544526671965/1544526728620&quot;,&quot;1544526345845/1544526671965/1544526763389&quot;,&quot;1544526345845/1544526961740/1544526980657&quot;,&quot;1544526345845/1544526961740/1544526994099&quot;,&quot;1544526345845/1544526961740/1544527008225&quot;,&quot;1544526345845/1544528319371/1544528334775&quot;,&quot;1544526345845/1544528319371/1544528345283&quot;,&quot;1544526345845/1544528319371/1544528367998&quot;,&quot;1544591089661/1544591099675/1544591165699&quot;,&quot;1544591089661/1544591099675/1544591181584&quot;,&quot;1544591089661/1544591099675/1544591198772&quot;,&quot;1544591089661/1544591099675/1544591219876&quot;,&quot;1544591089661/1544591099675/1544591237488&quot;,&quot;1544591089661/1544591099675/1544591247402&quot;,&quot;1544591089661/1544591260222/1544591284840&quot;,&quot;1544591089661/1544591260222/1544591295680&quot;,&quot;1544591089661/1544591260222/1544591320423&quot;,&quot;1544591089661/1544591260222/1544591334581&quot;,&quot;1544591089661/1544591260222/1544591341221&quot;,&quot;1544591089661/1544591260222/1544591363137&quot;,&quot;1544591089661/1544591364773/1544591392809&quot;,&quot;1544591089661/1544591412698/1544591428190&quot;,&quot;1544591089661/1544591412698/1544591439057&quot;,&quot;1544591089661/1544591412698/1544591455780&quot;,&quot;1544591089661/1544591602655/1544591636888&quot;,&quot;1544591089661/1544591602655/1544591649137&quot;,&quot;1544591089661/1544591602655/1544591669971&quot;,&quot;1544591751639/1544591756584/1544591786410&quot;,&quot;1544591751639/1544591756584/1544591792950&quot;,&quot;1544591751639/1544591756584/1544591814105&quot;,&quot;1544591751639/1544591756584/1544591826125&quot;,&quot;1544591751639/1544591756584/1544591842867&quot;,&quot;1544591751639/1544591756584/1544591852005&quot;,&quot;1544591751639/1544591859950/1544591889129&quot;,&quot;1544591751639/1544591859950/1544591895035&quot;,&quot;1544591751639/1544591859950/1544591913490&quot;,&quot;1544591751639/1544591859950/1544591923488&quot;,&quot;1544591751639/1544591937229/1544591951092&quot;,&quot;1544591751639/1544591989858/1544592010989&quot;,&quot;1544591751639/1544591989858/1544592017149&quot;,&quot;1544591751639/1544591989858/1544592034736&quot;,&quot;1544591751639/1544592145731/1544592165309&quot;,&quot;1544591751639/1544592145731/1544592176780&quot;,&quot;1544591751639/1544592145731/1544592194540&quot;,&quot;1544592286221/1544592291887/1544592314873&quot;,&quot;1544592286221/1544592291887/1544592322911&quot;,&quot;1544592286221/1544592291887/1544592333414&quot;,&quot;1544592286221/1544592291887/1544592347743&quot;,&quot;1544592286221/1544592291887/1544592363784&quot;,&quot;1544592286221/1544592291887/1544592370486&quot;,&quot;1544592286221/1544592379241/1544592404760&quot;,&quot;1544592286221/1544592379241/1544592415158&quot;,&quot;1544592286221/1544592379241/1544592422449&quot;,&quot;1544592286221/1544592379241/1544592438186&quot;,&quot;1544592286221/1544592379241/1544592448263&quot;,&quot;1544592286221/1544592379241/1544592466092&quot;,&quot;1544592286221/1544592474205/1544592491253&quot;,&quot;1544592286221/1544592520233/1544592540334&quot;,&quot;1544592286221/1544592520233/1544592555974&quot;,&quot;1544592286221/1544592520233/1544592561671&quot;,&quot;1544592286221/1544592623523/1544592648386&quot;,&quot;1544592286221/1544592623523/1544592658543&quot;,&quot;1544592286221/1544592623523/1544592671565&quot;,&quot;1544592857014/1544592865722/1544593053271&quot;,&quot;1544592857014/1544592865722/1544593072380&quot;,&quot;1544592857014/1544592865722/1544593079694&quot;,&quot;1544592857014/1544592865722/1544593093552&quot;,&quot;1544592857014/1544592865722/1544593104748&quot;,&quot;1544592857014/1544592865722/1544593123201&quot;,&quot;1544592857014/1544593139545/1544593173865&quot;,&quot;1544592857014/1544593139545/1544593187008&quot;,&quot;1544592857014/1544593139545/1544593454057&quot;,&quot;1544592857014/1544593139545/1544593471128&quot;,&quot;1544592857014/1544593139545/1544593476327&quot;,&quot;1544592857014/1544593139545/1544593488247&quot;,&quot;1544592857014/1544593529004/1544593551477&quot;,&quot;1544592857014/1544593585947/1544593606215&quot;,&quot;1544592857014/1544593585947/1544593620647&quot;,&quot;1544592857014/1544593585947/1544593632079&quot;,&quot;1544592857014/1544593703192/1544593728070&quot;,&quot;1544592857014/1544593703192/1544593743725&quot;,&quot;1544592857014/1544593703192/1544593752239&quot;,&quot;1544593830881/1544593842258/1544593874472&quot;,&quot;1544593830881/1544593842258/1544593889640&quot;,&quot;1544593830881/1544593842258/1544593905062&quot;,&quot;1544593830881/1544593842258/1544593925051&quot;,&quot;1544593830881/1544593842258/1544593932560&quot;,&quot;1544593830881/1544593842258/1544593949312&quot;,&quot;1544593830881/1544593964252/1544594078882&quot;,&quot;1544593830881/1544593964252/1544594102416&quot;,&quot;1544593830881/1544593964252/1544594113782&quot;,&quot;1544593830881/1544593964252/1544594135462&quot;,&quot;1544593830881/1544593964252/1544594177257&quot;,&quot;1544593830881/1544593964252/1544594194047&quot;,&quot;1544593830881/1544596248781/1544596271349&quot;,&quot;1544593830881/1544596291616/1544596322099&quot;,&quot;1544593830881/1544596291616/1544596327463&quot;,&quot;1544593830881/1544596291616/1544596347700&quot;,&quot;1544593830881/1544596494652/1544596513093&quot;,&quot;1544593830881/1544596494652/1544596529922&quot;,&quot;1544593830881/1544596494652/1544596545929&quot;,&quot;1544596644314/1544596678647/1544596711546&quot;,&quot;1544596644314/1544596678647/1544596731689&quot;,&quot;1544596644314/1544596678647/1544596745950&quot;,&quot;1544596644314/1544596678647/1544596761923&quot;,&quot;1544596644314/1544596678647/1544596768254&quot;,&quot;1544596644314/1544596678647/1544596792897&quot;,&quot;1544596644314/1544596802487/1544596845016&quot;,&quot;1544596644314/1544596802487/1544596858389&quot;,&quot;1544596644314/1544596802487/1544596877787&quot;,&quot;1544596644314/1544596802487/1544596890399&quot;,&quot;1544596644314/1544596802487/1544596904838&quot;,&quot;1544596644314/1544596802487/1544596921860&quot;,&quot;1544596644314/1544597008306/1544597032165&quot;,&quot;1544596644314/1544597091060/1544597104557&quot;,&quot;1544596644314/1544597091060/1544597121860&quot;,&quot;1544596644314/1544597091060/1544597149347&quot;,&quot;1544596644314/1544597220792/1544597245750&quot;,&quot;1544596644314/1544597220792/1544597262426&quot;,&quot;1544596644314/1544597220792/1544597275965&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">5</stringProp>
              </LoopController>
              <hashTree>
                <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
                  <stringProp name="maximumValue">999999</stringProp>
                  <stringProp name="minimumValue">000000</stringProp>
                  <stringProp name="outputFormat">000000</stringProp>
                  <boolProp name="perThread">true</boolProp>
                  <stringProp name="randomSeed"></stringProp>
                  <stringProp name="variableName">randomNo</stringProp>
                </RandomVariableConfig>
                <hashTree/>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">1</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">lockRulesCount</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">false</boolProp>
                </CounterConfig>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="create a rule" enabled="true">
                  <stringProp name="IncludeController.includepath">Create_a_rule_50LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Get rules Count" enabled="false"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">1040_ruleCreation.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid,classtitle,classCode,category</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilenameTch" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilenameTch</stringProp>
                <stringProp name="Argument.value">scenario_tch_asnmt_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="outputCsvFilenameStd" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilenameStd</stringProp>
                <stringProp name="Argument.value">student_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="assignedPathList" elementType="Argument">
                <stringProp name="Argument.name">assignedPathList</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="title" elementType="Argument">
                <stringProp name="Argument.name">title</stringProp>
                <stringProp name="Argument.value">default gradebook 1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gradebook_id" elementType="Argument">
                <stringProp name="Argument.name">gradebook_id</stringProp>
                <stringProp name="Argument.value">default-gradebook</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="rulesCountFile" elementType="Argument">
                <stringProp name="Argument.name">rulesCountFile</stringProp>
                <stringProp name="Argument.value">Rules_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
            <stringProp name="BeanShellSampler.query">String[] stringArray = {${__evalVar(${category}_Assignment)}};  


for (int i = 0; i &lt; stringArray.length; i++) {
    vars.put(vars.get(&quot;category&quot;) + &quot;_productcode&quot; + (i + 1), stringArray[i]);
}

vars.put(&quot;productcode&quot;, stringArray[0]);


</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="false">
            <stringProp name="BeanShellSampler.query">String[] stringArray = {${__evalVar(${category}_Assignment)}};
int stringArrayLen = stringArray.length;

</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="get_classes_of_an_user" enabled="true">
            <stringProp name="IncludeController.includepath">get_classes_of_an_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_details_for_a_specific_class_All_Details" enabled="false">
            <stringProp name="IncludeController.includepath">Get_details_for_a_specific_class_All_Details.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get details for a specific class" enabled="true">
            <stringProp name="IncludeController.includepath">Get_details_for_a_specific_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
            <stringProp name="ForeachController.inputVal">${category}_productcode</stringProp>
            <stringProp name="ForeachController.returnVal">productcode</stringProp>
            <boolProp name="ForeachController.useSeparator">false</boolProp>
            <stringProp name="ForeachController.startIndex">0</stringProp>
            <stringProp name="ForeachController.endIndex">20</stringProp>
          </ForeachController>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all rules" enabled="true">
              <stringProp name="IncludeController.includepath">Get_all_the_rules.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for writing data into csv file" enabled="false">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="false">
              <stringProp name="BeanShellSampler.query">
FileOutputStream out = new FileOutputStream(vars.get(&quot;rulesCountFile&quot;),true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;extuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;productcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;rulesCount&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();


</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query">int rulesCount = Integer.parseInt(vars.get(&quot;rulesCount&quot; ));
if(rulesCount &lt; 5){
Failure = true;
FailureMessage = &quot;rulesCount = &quot; + rulesCount + &quot; is less than &quot; + &quot;5&quot;;}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Get students" enabled="false"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">getStudents.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid,classtitle,classCode,category</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilenameTch" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilenameTch</stringProp>
                <stringProp name="Argument.value">scenario_tch_asnmt_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="outputCsvFilenameStd" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilenameStd</stringProp>
                <stringProp name="Argument.value">student_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="assignedPathList" elementType="Argument">
                <stringProp name="Argument.name">assignedPathList</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="title" elementType="Argument">
                <stringProp name="Argument.name">title</stringProp>
                <stringProp name="Argument.value">default gradebook 1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gradebook_id" elementType="Argument">
                <stringProp name="Argument.name">gradebook_id</stringProp>
                <stringProp name="Argument.value">default-gradebook</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="getStudent" elementType="Argument">
                <stringProp name="Argument.name">getStudent</stringProp>
                <stringProp name="Argument.value">getStudent_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
            <stringProp name="BeanShellSampler.query">String[] stringArray = {${__evalVar(${category}_Assignment)}};  


for (int i = 0; i &lt; stringArray.length; i++) {
    vars.put(vars.get(&quot;category&quot;) + &quot;_productcode&quot; + (i + 1), stringArray[i]);
}

vars.put(&quot;productcode&quot;, stringArray[0]);


</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="get_classes_of_an_user" enabled="true">
            <stringProp name="IncludeController.includepath">get_classes_of_an_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_details_for_a_specific_class_All_Details" enabled="false">
            <stringProp name="IncludeController.includepath">Get_details_for_a_specific_class_All_Details.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get details for a specific class" enabled="true">
            <stringProp name="IncludeController.includepath">Get_details_for_a_specific_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_members_of _a_class" enabled="true">
            <stringProp name="IncludeController.includepath">Get_one_member_of _a_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
            <stringProp name="BeanShellSampler.query">
FileOutputStream out = new FileOutputStream(vars.get(&quot;getStudent&quot;),true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;extuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;stdUserid&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();


</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Get all student details of class" enabled="false"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">getStudents.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid,classtitle,classCode,category</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilenameTch" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilenameTch</stringProp>
                <stringProp name="Argument.value">scenario_tch_asnmt_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="outputCsvFilenameStd" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilenameStd</stringProp>
                <stringProp name="Argument.value">student_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="assignedPathList" elementType="Argument">
                <stringProp name="Argument.name">assignedPathList</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="title" elementType="Argument">
                <stringProp name="Argument.name">title</stringProp>
                <stringProp name="Argument.value">default gradebook 1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gradebook_id" elementType="Argument">
                <stringProp name="Argument.name">gradebook_id</stringProp>
                <stringProp name="Argument.value">default-gradebook</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="getStudent" elementType="Argument">
                <stringProp name="Argument.name">getStudent</stringProp>
                <stringProp name="Argument.value">getStudent_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
            <stringProp name="BeanShellSampler.query">String[] stringArray = {${__evalVar(${category}_Assignment)}};  


for (int i = 0; i &lt; stringArray.length; i++) {
    vars.put(vars.get(&quot;category&quot;) + &quot;_productcode&quot; + (i + 1), stringArray[i]);
}

vars.put(&quot;productcode&quot;, stringArray[0]);


</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="get_classes_of_an_user" enabled="true">
            <stringProp name="IncludeController.includepath">get_classes_of_an_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_details_for_a_specific_class_All_Details" enabled="false">
            <stringProp name="IncludeController.includepath">Get_details_for_a_specific_class_All_Details.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get details for a specific class" enabled="true">
            <stringProp name="IncludeController.includepath">Get_details_for_a_specific_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_members_of _a_class" enabled="true">
            <stringProp name="IncludeController.includepath">Get_members_of_a_class_All.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
            <stringProp name="BeanShellSampler.query">
for (int i = 0; i &lt; entities.length; i++) {
    vars.put(vars.get(&quot;category&quot;) + &quot;_productcode&quot; + (i + 1), stringArray[i]);
}
FileOutputStream out = new FileOutputStream(vars.get(&quot;getStudent&quot;),true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;extuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;stdUserid&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();


</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Custom Grading" enabled="false"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">createRule.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid,classtitle,classCode,category</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilenameTch" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilenameTch</stringProp>
                <stringProp name="Argument.value">scenario_tch_asnmt_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="outputCsvFilenameStd" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilenameStd</stringProp>
                <stringProp name="Argument.value">student_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="assignedPathList" elementType="Argument">
                <stringProp name="Argument.name">assignedPathList</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="title" elementType="Argument">
                <stringProp name="Argument.name">title</stringProp>
                <stringProp name="Argument.value">default gradebook 1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gradebook_id" elementType="Argument">
                <stringProp name="Argument.name">gradebook_id</stringProp>
                <stringProp name="Argument.value">default-gradebook</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="false">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="get_classes_of_an_user" enabled="true">
            <stringProp name="IncludeController.includepath">get_classes_of_an_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get details for a specific class" enabled="true">
            <stringProp name="IncludeController.includepath">Get_details_for_a_specific_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="create custom grading in a class" enabled="true"/>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a gradebook in a class" enabled="true">
              <stringProp name="IncludeController.includepath">Create_a_gradebook_in_a_class.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">String[] multiProducts = {
    ${__evalVar(${category})}
};

String mergedColumnJson = &quot;[&quot;;
int customWeightage = 0;
int pendingWeightage = 0;
int remainingValue = 0;
String bundle = &quot;&quot;;

for (int i = 0; i &lt; multiProducts.length; i++) {
	bundle = multiProducts[i] + &quot;_bundle&quot;;
	mergedColumnJson += &quot;{\&quot;column_id\&quot;: \&quot;&quot; + multiProducts[i] + &quot;\&quot;,\&quot;type\&quot;: \&quot;product\&quot;,\&quot;weightage\&quot;: \&quot;5\&quot;,\&quot;bundle-codes\&quot;: [\&quot;&quot; + vars.get(bundle) + &quot;\&quot;],\&quot;productcode\&quot;: \&quot;&quot; + multiProducts[i] + &quot;\&quot;},&quot;;
};

remainingValue = 100 - (5*(multiProducts.length));

customWeightage = remainingValue/(${__evalVar(${category}_customGradingCount)});
pendingWeightage = remainingValue%(${__evalVar(${category}_customGradingCount)});

for (int i = 1; i &lt;= ${__evalVar(${category}_customGradingCount)}; i++) {
	if(i != ${__evalVar(${category}_customGradingCount)}) {
		mergedColumnJson += &quot;{\&quot;column_id\&quot;: \&quot;PerfCustComp_&quot; + i + &quot;\&quot;,\&quot;type\&quot;: \&quot;custom\&quot;, \&quot;custom_component_code\&quot;: \&quot;PerfCustComp_&quot; + i + &quot;\&quot;, \&quot;title\&quot;: \&quot;PerfCustComp_&quot; + i + &quot;\&quot;, \&quot;weightage\&quot;: \&quot;&quot; + customWeightage + &quot;\&quot;,\&quot;scoring_type\&quot;: \&quot;SIMPLE\&quot;},&quot;;
	} else {
		int finalWeightage = customWeightage + pendingWeightage;
		mergedColumnJson += &quot;{\&quot;column_id\&quot;: \&quot;PerfCustComp_&quot; + i + &quot;\&quot;,\&quot;type\&quot;: \&quot;custom\&quot;, \&quot;custom_component_code\&quot;: \&quot;PerfCustComp_&quot; + i + &quot;\&quot;, \&quot;title\&quot;: \&quot;PerfCustComp_&quot; + i + &quot;\&quot;, \&quot;weightage\&quot;: \&quot;&quot; + finalWeightage + &quot;\&quot;,\&quot;scoring_type\&quot;: \&quot;SIMPLE\&quot;},&quot;;
	}
};

mergedColumnJson = mergedColumnJson.substring(0, mergedColumnJson.length() - 1) + &quot;]&quot;;

vars.put(&quot;mergedColumnJsonFinal&quot;, mergedColumnJson);</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
                <stringProp name="RandomTimer.range">${minWait}</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add columns to a particular gradebook of a class" enabled="true">
              <stringProp name="IncludeController.includepath">Add_columns_to_a_particular_gradebook_of_a_class_with_custom_components.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Lock Rules" enabled="false"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">createRule.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid,classtitle,classCode,category</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilenameTch" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilenameTch</stringProp>
                <stringProp name="Argument.value">scenario_tch_asnmt_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="outputCsvFilenameStd" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilenameStd</stringProp>
                <stringProp name="Argument.value">student_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="assignedPathList" elementType="Argument">
                <stringProp name="Argument.name">assignedPathList</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="title" elementType="Argument">
                <stringProp name="Argument.name">title</stringProp>
                <stringProp name="Argument.value">default gradebook 1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gradebook_id" elementType="Argument">
                <stringProp name="Argument.name">gradebook_id</stringProp>
                <stringProp name="Argument.value">default-gradebook</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="get_classes_of_an_user" enabled="true">
            <stringProp name="IncludeController.includepath">get_classes_of_an_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get details for a specific class" enabled="true">
            <stringProp name="IncludeController.includepath">Get_details_for_a_specific_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x rules" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">${__evalVar(${category}_noOfLockRulesInClass)}</stringProp>
          </LoopController>
          <hashTree>
            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
              <stringProp name="CounterConfig.start">1</stringProp>
              <stringProp name="CounterConfig.end"></stringProp>
              <stringProp name="CounterConfig.incr">1</stringProp>
              <stringProp name="CounterConfig.name">lockRulesCount</stringProp>
              <stringProp name="CounterConfig.format"></stringProp>
              <boolProp name="CounterConfig.per_user">false</boolProp>
            </CounterConfig>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544525043137/1544525159358/1544525246748&quot;,&quot;1544525043137/1544525159358/1544525263160&quot;,&quot;1544525043137/1544525280855/1544525289279&quot;,&quot;1544525590768/1544525595533/1544525611432&quot;,&quot;1544525590768/1544525595533/1544525627465&quot;,&quot;1544525590768/1544525595533/1544525635696&quot;,&quot;1544525590768/1544525595533/1544525649026&quot;,&quot;1544525590768/1544525595533/1544525663048&quot;,&quot;1544525590768/1544525595533/1544525679427&quot;,&quot;1544525590768/1544525683364/1544525709799&quot;,&quot;1544525590768/1544525683364/1544525720457&quot;,&quot;1544525590768/1544525683364/1544525729515&quot;,&quot;1544525590768/1544525683364/1544525734676&quot;,&quot;1544525590768/1544525683364/1544525756801&quot;,&quot;1544525590768/1544525683364/1544525778291&quot;,&quot;1544526345845/1544526589100/1544526606750&quot;,&quot;1544526345845/1544526589100/1544526610825&quot;,&quot;1544526345845/1544526589100/1544526623799&quot;,&quot;1544526345845/1544526589100/1544526638110&quot;,&quot;1544526345845/1544526589100/1544526644717&quot;,&quot;1544526345845/1544526589100/1544526657285&quot;,&quot;1544526345845/1544526671965/1544526688230&quot;,&quot;1544526345845/1544526671965/1544526695320&quot;,&quot;1544526345845/1544526671965/1544526710051&quot;,&quot;1544526345845/1544526671965/1544526721801&quot;,&quot;1544526345845/1544526671965/1544526728620&quot;,&quot;1544526345845/1544526671965/1544526763389&quot;,&quot;1544526345845/1544526961740/1544526980657&quot;,&quot;1544526345845/1544526961740/1544526994099&quot;,&quot;1544526345845/1544526961740/1544527008225&quot;,&quot;1544526345845/1544528319371/1544528334775&quot;,&quot;1544526345845/1544528319371/1544528345283&quot;,&quot;1544526345845/1544528319371/1544528367998&quot;,&quot;1544591089661/1544591099675/1544591165699&quot;,&quot;1544591089661/1544591099675/1544591181584&quot;,&quot;1544591089661/1544591099675/1544591198772&quot;,&quot;1544591089661/1544591099675/1544591219876&quot;,&quot;1544591089661/1544591099675/1544591237488&quot;,&quot;1544591089661/1544591099675/1544591247402&quot;,&quot;1544591089661/1544591260222/1544591284840&quot;,&quot;1544591089661/1544591260222/1544591295680&quot;,&quot;1544591089661/1544591260222/1544591320423&quot;,&quot;1544591089661/1544591260222/1544591334581&quot;,&quot;1544591089661/1544591260222/1544591341221&quot;,&quot;1544591089661/1544591260222/1544591363137&quot;,&quot;1544591089661/1544591364773/1544591392809&quot;,&quot;1544591089661/1544591412698/1544591428190&quot;,&quot;1544591089661/1544591412698/1544591439057&quot;,&quot;1544591089661/1544591412698/1544591455780&quot;,&quot;1544591089661/1544591602655/1544591636888&quot;,&quot;1544591089661/1544591602655/1544591649137&quot;,&quot;1544591089661/1544591602655/1544591669971&quot;,&quot;1544591751639/1544591756584/1544591786410&quot;,&quot;1544591751639/1544591756584/1544591792950&quot;,&quot;1544591751639/1544591756584/1544591814105&quot;,&quot;1544591751639/1544591756584/1544591826125&quot;,&quot;1544591751639/1544591756584/1544591842867&quot;,&quot;1544591751639/1544591756584/1544591852005&quot;,&quot;1544591751639/1544591859950/1544591889129&quot;,&quot;1544591751639/1544591859950/1544591895035&quot;,&quot;1544591751639/1544591859950/1544591913490&quot;,&quot;1544591751639/1544591859950/1544591923488&quot;,&quot;1544591751639/1544591937229/1544591951092&quot;,&quot;1544591751639/1544591989858/1544592010989&quot;,&quot;1544591751639/1544591989858/1544592017149&quot;,&quot;1544591751639/1544591989858/1544592034736&quot;,&quot;1544591751639/1544592145731/1544592165309&quot;,&quot;1544591751639/1544592145731/1544592176780&quot;,&quot;1544591751639/1544592145731/1544592194540&quot;,&quot;1544592286221/1544592291887/1544592314873&quot;,&quot;1544592286221/1544592291887/1544592322911&quot;,&quot;1544592286221/1544592291887/1544592333414&quot;,&quot;1544592286221/1544592291887/1544592347743&quot;,&quot;1544592286221/1544592291887/1544592363784&quot;,&quot;1544592286221/1544592291887/1544592370486&quot;,&quot;1544592286221/1544592379241/1544592404760&quot;,&quot;1544592286221/1544592379241/1544592415158&quot;,&quot;1544592286221/1544592379241/1544592422449&quot;,&quot;1544592286221/1544592379241/1544592438186&quot;,&quot;1544592286221/1544592379241/1544592448263&quot;,&quot;1544592286221/1544592379241/1544592466092&quot;,&quot;1544592286221/1544592474205/1544592491253&quot;,&quot;1544592286221/1544592520233/1544592540334&quot;,&quot;1544592286221/1544592520233/1544592555974&quot;,&quot;1544592286221/1544592520233/1544592561671&quot;,&quot;1544592286221/1544592623523/1544592648386&quot;,&quot;1544592286221/1544592623523/1544592658543&quot;,&quot;1544592286221/1544592623523/1544592671565&quot;,&quot;1544592857014/1544592865722/1544593053271&quot;,&quot;1544592857014/1544592865722/1544593072380&quot;,&quot;1544592857014/1544592865722/1544593079694&quot;,&quot;1544592857014/1544592865722/1544593093552&quot;,&quot;1544592857014/1544592865722/1544593104748&quot;,&quot;1544592857014/1544592865722/1544593123201&quot;,&quot;1544592857014/1544593139545/1544593173865&quot;,&quot;1544592857014/1544593139545/1544593187008&quot;,&quot;1544592857014/1544593139545/1544593454057&quot;,&quot;1544592857014/1544593139545/1544593471128&quot;,&quot;1544592857014/1544593139545/1544593476327&quot;,&quot;1544592857014/1544593139545/1544593488247&quot;,&quot;1544592857014/1544593529004/1544593551477&quot;,&quot;1544592857014/1544593585947/1544593606215&quot;,&quot;1544592857014/1544593585947/1544593620647&quot;,&quot;1544592857014/1544593585947/1544593632079&quot;,&quot;1544592857014/1544593703192/1544593728070&quot;,&quot;1544592857014/1544593703192/1544593743725&quot;,&quot;1544592857014/1544593703192/1544593752239&quot;,&quot;1544593830881/1544593842258/1544593874472&quot;,&quot;1544593830881/1544593842258/1544593889640&quot;,&quot;1544593830881/1544593842258/1544593905062&quot;,&quot;1544593830881/1544593842258/1544593925051&quot;,&quot;1544593830881/1544593842258/1544593932560&quot;,&quot;1544593830881/1544593842258/1544593949312&quot;,&quot;1544593830881/1544593964252/1544594078882&quot;,&quot;1544593830881/1544593964252/1544594102416&quot;,&quot;1544593830881/1544593964252/1544594113782&quot;,&quot;1544593830881/1544593964252/1544594135462&quot;,&quot;1544593830881/1544593964252/1544594177257&quot;,&quot;1544593830881/1544593964252/1544594194047&quot;,&quot;1544593830881/1544596248781/1544596271349&quot;,&quot;1544593830881/1544596291616/1544596322099&quot;,&quot;1544593830881/1544596291616/1544596327463&quot;,&quot;1544593830881/1544596291616/1544596347700&quot;,&quot;1544593830881/1544596494652/1544596513093&quot;,&quot;1544593830881/1544596494652/1544596529922&quot;,&quot;1544593830881/1544596494652/1544596545929&quot;,&quot;1544596644314/1544596678647/1544596711546&quot;,&quot;1544596644314/1544596678647/1544596731689&quot;,&quot;1544596644314/1544596678647/1544596745950&quot;,&quot;1544596644314/1544596678647/1544596761923&quot;,&quot;1544596644314/1544596678647/1544596768254&quot;,&quot;1544596644314/1544596678647/1544596792897&quot;,&quot;1544596644314/1544596802487/1544596845016&quot;,&quot;1544596644314/1544596802487/1544596858389&quot;,&quot;1544596644314/1544596802487/1544596877787&quot;,&quot;1544596644314/1544596802487/1544596890399&quot;,&quot;1544596644314/1544596802487/1544596904838&quot;,&quot;1544596644314/1544596802487/1544596921860&quot;,&quot;1544596644314/1544597008306/1544597032165&quot;,&quot;1544596644314/1544597091060/1544597104557&quot;,&quot;1544596644314/1544597091060/1544597121860&quot;,&quot;1544596644314/1544597091060/1544597149347&quot;,&quot;1544596644314/1544597220792/1544597245750&quot;,&quot;1544596644314/1544597220792/1544597262426&quot;,&quot;1544596644314/1544597220792/1544597275965&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">String[] stringArray = {${__evalVar(${category}_Assignment)}};

int randomIndex = (${lockRulesCount})%(stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
              <intProp name="ThroughputController.style">0</intProp>
              <boolProp name="ThroughputController.perThread">true</boolProp>
              <stringProp name="ThroughputController.maxThroughput">${__evalVar(${category}_50LOsLockRuleCount)}</stringProp>
              <stringProp name="ThroughputController.percentThroughput">${20LOsPercentage}</stringProp>
            </ThroughputController>
            <hashTree>
              <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
                <stringProp name="maximumValue">999999</stringProp>
                <stringProp name="minimumValue">000000</stringProp>
                <stringProp name="outputFormat">000000</stringProp>
                <boolProp name="perThread">true</boolProp>
                <stringProp name="randomSeed"></stringProp>
                <stringProp name="variableName">randomNo</stringProp>
              </RandomVariableConfig>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="create a rule" enabled="true">
                <stringProp name="IncludeController.includepath">Create_a_rule_50LOs.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
              <intProp name="ThroughputController.style">0</intProp>
              <boolProp name="ThroughputController.perThread">true</boolProp>
              <stringProp name="ThroughputController.maxThroughput">${__evalVar(${category}_100LOsLockRuleCount)}</stringProp>
              <stringProp name="ThroughputController.percentThroughput">${30LOsPercentage}</stringProp>
            </ThroughputController>
            <hashTree>
              <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
                <stringProp name="maximumValue">999999</stringProp>
                <stringProp name="minimumValue">000000</stringProp>
                <stringProp name="outputFormat">000000</stringProp>
                <boolProp name="perThread">true</boolProp>
                <stringProp name="randomSeed"></stringProp>
                <stringProp name="variableName">randomNo</stringProp>
              </RandomVariableConfig>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="create a rule" enabled="true">
                <stringProp name="IncludeController.includepath">Create_a_rule_100LOs.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
              <intProp name="ThroughputController.style">0</intProp>
              <boolProp name="ThroughputController.perThread">true</boolProp>
              <stringProp name="ThroughputController.maxThroughput">${__evalVar(${category}_150LOsLockRuleCount)}</stringProp>
              <stringProp name="ThroughputController.percentThroughput">${50LOsPercentage}</stringProp>
            </ThroughputController>
            <hashTree>
              <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
                <stringProp name="maximumValue">999999</stringProp>
                <stringProp name="minimumValue">000000</stringProp>
                <stringProp name="outputFormat">000000</stringProp>
                <boolProp name="perThread">true</boolProp>
                <stringProp name="randomSeed"></stringProp>
                <stringProp name="variableName">randomNo</stringProp>
              </RandomVariableConfig>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="create a rule" enabled="true">
                <stringProp name="IncludeController.includepath">Create_a_rule_150LOs.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="User State - Students" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>100.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">attempts.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">extuserid,cc,category</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
            <stringProp name="BeanShellSampler.query">String[] stringArray = {${__evalVar(${category}_Assignment)}};  

for (int i = 0; i &lt; stringArray.length; i++) {
    vars.put(vars.get(&quot;category&quot;) + &quot;_productcode&quot; + (i + 1), stringArray[i]);
}

vars.put(&quot;productcode&quot;, stringArray[0]);

vars.put(&quot;folderid&quot;, &quot;activity-state/&quot; + &quot;${orgid}&quot; + &quot;/&quot; + stringArray[0] + &quot;/1544525043137/1544525159358/1544525239184&quot;);
vars.put(&quot;productfolderid&quot;, &quot;product-state/&quot; + &quot;${orgid}&quot; + &quot;/&quot; + stringArray[0]);
vars.put(&quot;psfolderid&quot;, &quot;activity-state/&quot; + &quot;${orgid}&quot; + &quot;/&quot; + stringArray[0] + &quot;/1544592857014/1544593585947/1544593695538&quot;);</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="itemcode" elementType="Argument">
                <stringProp name="Argument.name">itemcode</stringProp>
                <stringProp name="Argument.value">1544525043137/1544525159358/1544525239184</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="psitemcode" elementType="Argument">
                <stringProp name="Argument.name">psitemcode</stringProp>
                <stringProp name="Argument.value">1544592857014/1544593585947/1544593695538</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="documentid" elementType="Argument">
                <stringProp name="Argument.name">documentid</stringProp>
                <stringProp name="Argument.value">lastKnown</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="timestamp" elementType="Argument">
                <stringProp name="Argument.name">timestamp</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_institution.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get classes of an user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_classes_of_an_user_institution.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get details for a specific class" enabled="true">
            <stringProp name="IncludeController.includepath">Get_details_for_a_specific_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create_documents_of_folders_for_learner_item_level" enabled="true">
            <stringProp name="IncludeController.includepath">Create_documents_of_folders_for_learner_item_level_scorable.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create_documents_of_folders_for_learner_item_level" enabled="true">
            <stringProp name="IncludeController.includepath">Create_documents_of_folders_for_learner_item_level_pskill.jmx</stringProp>
          </IncludeController>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Class Assignments" enabled="false"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">createAssignment.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid,classtitle,classcode,category</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="get_classes_of_an_user" enabled="true">
            <stringProp name="IncludeController.includepath">get_classes_of_an_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get details for a specific class" enabled="true">
            <stringProp name="IncludeController.includepath">Get_details_for_a_specific_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x assignments" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">${__evalVar(${category}_noOfAssignmentsInClass)}</stringProp>
          </LoopController>
          <hashTree>
            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
              <stringProp name="CounterConfig.start">1</stringProp>
              <stringProp name="CounterConfig.end">${__evalVar(${category}_noOfAssignmentsInClass)}</stringProp>
              <stringProp name="CounterConfig.incr">1</stringProp>
              <stringProp name="CounterConfig.name">assignmentCount</stringProp>
              <stringProp name="CounterConfig.format"></stringProp>
              <boolProp name="CounterConfig.per_user">true</boolProp>
              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
            </CounterConfig>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544524003551/1544524304922/1544524359136&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544524003551/1544524012478/1544524057691&quot;,&quot;1544524003551/1544524012478/1544524030068&quot;,&quot;1544525043137/1544525058289/1544525097148&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544525043137/1544525058289/1544525137957&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1544524003551/1544524304922/1544524324762&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544525043137/1544525058289/1544525090848&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1544524003551/1544524012478/1544524071582&quot;,&quot;1544524003551/1544524304922/1544524341184&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544525043137/1544525058289/1544525125172&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1544524003551/1544524304922/1544524313700&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544524003551/1544524012478/1544524084276&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544524003551/1544524304922/1544524387792&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1544524003551/1544524012478/1544524099346&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1544525043137/1544525058289/1544525114886&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544524003551/1544524012478/1544524044427&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544524003551/1544524304922/1544524376121&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">String[] stringArray = {${__evalVar(${category}_Assignment)}};

int randomIndex = (int) (Math.random() * stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
              <intProp name="ThroughputController.style">0</intProp>
              <boolProp name="ThroughputController.perThread">true</boolProp>
              <stringProp name="ThroughputController.maxThroughput">${__evalVar(${category}_20LOsCount)}</stringProp>
              <stringProp name="ThroughputController.percentThroughput">${20LOsPercentage}</stringProp>
            </ThroughputController>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + &quot;20LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_20LOs.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
              <intProp name="ThroughputController.style">0</intProp>
              <boolProp name="ThroughputController.perThread">true</boolProp>
              <stringProp name="ThroughputController.maxThroughput">${__evalVar(${category}_30LOsCount)}</stringProp>
              <stringProp name="ThroughputController.percentThroughput">${30LOsPercentage}</stringProp>
            </ThroughputController>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + &quot;30LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_30LOs.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
              <intProp name="ThroughputController.style">0</intProp>
              <boolProp name="ThroughputController.perThread">true</boolProp>
              <stringProp name="ThroughputController.maxThroughput">${__evalVar(${category}_50LOsCount)}</stringProp>
              <stringProp name="ThroughputController.percentThroughput">${50LOsPercentage}</stringProp>
            </ThroughputController>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + &quot;50LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_50LOs.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;H6&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
                <intProp name="ThroughputController.style">0</intProp>
                <boolProp name="ThroughputController.perThread">true</boolProp>
                <stringProp name="ThroughputController.maxThroughput">${__evalVar(${category}_100LOsCount)}</stringProp>
                <stringProp name="ThroughputController.percentThroughput">${20LOsPercentage}</stringProp>
              </ThroughputController>
              <hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] stringArray = {&quot;perf35_400lo_1&quot;,&quot;perf35_500lo_1&quot;,&quot;perf38_300lo_1&quot;,&quot;perf38_630lo_1&quot;,&quot;perf38_630lo_2&quot;,&quot;perf40_630lo_1&quot;,&quot;perf40_630lo_2&quot;};

int randomIndex = (int) (Math.random() * stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1544524003551/1544524012478/1544524030068&quot;,&quot;1544524003551/1544524012478/1544524044427&quot;,&quot;1544524003551/1544524012478/1544524057691&quot;,&quot;1544524003551/1544524012478/1544524071582&quot;,&quot;1544524003551/1544524012478/1544524084276&quot;,&quot;1544524003551/1544524012478/1544524099346&quot;,&quot;1544524003551/1544524304922/1544524313700&quot;,&quot;1544524003551/1544524304922/1544524324762&quot;,&quot;1544524003551/1544524304922/1544524341184&quot;,&quot;1544524003551/1544524304922/1544524359136&quot;,&quot;1544524003551/1544524304922/1544524376121&quot;,&quot;1544524003551/1544524304922/1544524387792&quot;,&quot;1544525043137/1544525058289/1544525090848&quot;,&quot;1544525043137/1544525058289/1544525097148&quot;,&quot;1544525043137/1544525058289/1544525114886&quot;,&quot;1544525043137/1544525058289/1544525125172&quot;,&quot;1544525043137/1544525058289/1544525137957&quot;,&quot;1544525043137/1544525058289/1544525143762&quot;,&quot;1544525043137/1544525159358/1544525175677&quot;,&quot;1544525043137/1544525159358/1544525192972&quot;,&quot;1544525043137/1544525159358/1544525217177&quot;,&quot;1544525043137/1544525159358/1544525239184&quot;,&quot;1544525043137/1544525159358/1544525246748&quot;,&quot;1544525043137/1544525159358/1544525263160&quot;,&quot;1544525043137/1544525280855/1544525289279&quot;,&quot;1544525590768/1544525595533/1544525611432&quot;,&quot;1544525590768/1544525595533/1544525627465&quot;,&quot;1544525590768/1544525595533/1544525635696&quot;,&quot;1544525590768/1544525595533/1544525649026&quot;,&quot;1544525590768/1544525595533/1544525663048&quot;,&quot;1544525590768/1544525595533/1544525679427&quot;,&quot;1544525590768/1544525683364/1544525709799&quot;,&quot;1544525590768/1544525683364/1544525720457&quot;,&quot;1544525590768/1544525683364/1544525729515&quot;,&quot;1544525590768/1544525683364/1544525734676&quot;,&quot;1544525590768/1544525683364/1544525756801&quot;,&quot;1544525590768/1544525683364/1544525778291&quot;,&quot;1544526345845/1544526589100/1544526606750&quot;,&quot;1544526345845/1544526589100/1544526610825&quot;,&quot;1544526345845/1544526589100/1544526623799&quot;,&quot;1544526345845/1544526589100/1544526638110&quot;,&quot;1544526345845/1544526589100/1544526644717&quot;,&quot;1544526345845/1544526589100/1544526657285&quot;,&quot;1544526345845/1544526671965/1544526688230&quot;,&quot;1544526345845/1544526671965/1544526695320&quot;,&quot;1544526345845/1544526671965/1544526710051&quot;,&quot;1544526345845/1544526671965/1544526721801&quot;,&quot;1544526345845/1544526671965/1544526728620&quot;,&quot;1544526345845/1544526671965/1544526763389&quot;,&quot;1544526345845/1544526961740/1544526980657&quot;,&quot;1544526345845/1544526961740/1544526994099&quot;,&quot;1544526345845/1544526961740/1544527008225&quot;,&quot;1544526345845/1544528319371/1544528334775&quot;,&quot;1544526345845/1544528319371/1544528345283&quot;,&quot;1544526345845/1544528319371/1544528367998&quot;,&quot;1544591089661/1544591099675/1544591165699&quot;,&quot;1544591089661/1544591099675/1544591181584&quot;,&quot;1544591089661/1544591099675/1544591198772&quot;,&quot;1544591089661/1544591099675/1544591219876&quot;,&quot;1544591089661/1544591099675/1544591237488&quot;,&quot;1544591089661/1544591099675/1544591247402&quot;,&quot;1544591089661/1544591260222/1544591284840&quot;,&quot;1544591089661/1544591260222/1544591295680&quot;,&quot;1544591089661/1544591260222/1544591320423&quot;,&quot;1544591089661/1544591260222/1544591334581&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + &quot;100LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_100LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
                <intProp name="ThroughputController.style">0</intProp>
                <boolProp name="ThroughputController.perThread">true</boolProp>
                <stringProp name="ThroughputController.maxThroughput">${__evalVar(${category}_300LOsCount)}</stringProp>
                <stringProp name="ThroughputController.percentThroughput">${20LOsPercentage}</stringProp>
              </ThroughputController>
              <hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] stringArray = {&quot;perf35_500lo_1&quot;,&quot;perf38_630lo_1&quot;,&quot;perf38_630lo_2&quot;,&quot;perf40_630lo_1&quot;,&quot;perf40_630lo_2&quot;};

int randomIndex = (int) (Math.random() * stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1544524003551/1544524012478/1544524030068&quot;,&quot;1544524003551/1544524012478/1544524044427&quot;,&quot;1544524003551/1544524012478/1544524057691&quot;,&quot;1544524003551/1544524012478/1544524071582&quot;,&quot;1544524003551/1544524012478/1544524084276&quot;,&quot;1544524003551/1544524012478/1544524099346&quot;,&quot;1544524003551/1544524304922/1544524313700&quot;,&quot;1544524003551/1544524304922/1544524324762&quot;,&quot;1544524003551/1544524304922/1544524341184&quot;,&quot;1544524003551/1544524304922/1544524359136&quot;,&quot;1544524003551/1544524304922/1544524376121&quot;,&quot;1544524003551/1544524304922/1544524387792&quot;,&quot;1544525043137/1544525058289/1544525090848&quot;,&quot;1544525043137/1544525058289/1544525097148&quot;,&quot;1544525043137/1544525058289/1544525114886&quot;,&quot;1544525043137/1544525058289/1544525125172&quot;,&quot;1544525043137/1544525058289/1544525137957&quot;,&quot;1544525043137/1544525058289/1544525143762&quot;,&quot;1544525043137/1544525159358/1544525175677&quot;,&quot;1544525043137/1544525159358/1544525192972&quot;,&quot;1544525043137/1544525159358/1544525217177&quot;,&quot;1544525043137/1544525159358/1544525239184&quot;,&quot;1544525043137/1544525159358/1544525246748&quot;,&quot;1544525043137/1544525159358/1544525263160&quot;,&quot;1544525043137/1544525280855/1544525289279&quot;,&quot;1544525590768/1544525595533/1544525611432&quot;,&quot;1544525590768/1544525595533/1544525627465&quot;,&quot;1544525590768/1544525595533/1544525635696&quot;,&quot;1544525590768/1544525595533/1544525649026&quot;,&quot;1544525590768/1544525595533/1544525663048&quot;,&quot;1544525590768/1544525595533/1544525679427&quot;,&quot;1544525590768/1544525683364/1544525709799&quot;,&quot;1544525590768/1544525683364/1544525720457&quot;,&quot;1544525590768/1544525683364/1544525729515&quot;,&quot;1544525590768/1544525683364/1544525734676&quot;,&quot;1544525590768/1544525683364/1544525756801&quot;,&quot;1544525590768/1544525683364/1544525778291&quot;,&quot;1544526345845/1544526589100/1544526606750&quot;,&quot;1544526345845/1544526589100/1544526610825&quot;,&quot;1544526345845/1544526589100/1544526623799&quot;,&quot;1544526345845/1544526589100/1544526638110&quot;,&quot;1544526345845/1544526589100/1544526644717&quot;,&quot;1544526345845/1544526589100/1544526657285&quot;,&quot;1544526345845/1544526671965/1544526688230&quot;,&quot;1544526345845/1544526671965/1544526695320&quot;,&quot;1544526345845/1544526671965/1544526710051&quot;,&quot;1544526345845/1544526671965/1544526721801&quot;,&quot;1544526345845/1544526671965/1544526728620&quot;,&quot;1544526345845/1544526671965/1544526763389&quot;,&quot;1544526345845/1544526961740/1544526980657&quot;,&quot;1544526345845/1544526961740/1544526994099&quot;,&quot;1544526345845/1544526961740/1544527008225&quot;,&quot;1544526345845/1544528319371/1544528334775&quot;,&quot;1544526345845/1544528319371/1544528345283&quot;,&quot;1544526345845/1544528319371/1544528367998&quot;,&quot;1544591089661/1544591099675/1544591165699&quot;,&quot;1544591089661/1544591099675/1544591181584&quot;,&quot;1544591089661/1544591099675/1544591198772&quot;,&quot;1544591089661/1544591099675/1544591219876&quot;,&quot;1544591089661/1544591099675/1544591237488&quot;,&quot;1544591089661/1544591099675/1544591247402&quot;,&quot;1544591089661/1544591260222/1544591284840&quot;,&quot;1544591089661/1544591260222/1544591295680&quot;,&quot;1544591089661/1544591260222/1544591320423&quot;,&quot;1544591089661/1544591260222/1544591334581&quot;,&quot;1544591089661/1544591260222/1544591341221&quot;,&quot;1544591089661/1544591260222/1544591363137&quot;,&quot;1544591089661/1544591364773/1544591392809&quot;,&quot;1544591089661/1544591412698/1544591428190&quot;,&quot;1544591089661/1544591412698/1544591439057&quot;,&quot;1544591089661/1544591412698/1544591455780&quot;,&quot;1544591089661/1544591602655/1544591636888&quot;,&quot;1544591089661/1544591602655/1544591649137&quot;,&quot;1544591089661/1544591602655/1544591669971&quot;,&quot;1544591751639/1544591756584/1544591786410&quot;,&quot;1544591751639/1544591756584/1544591792950&quot;,&quot;1544591751639/1544591756584/1544591814105&quot;,&quot;1544591751639/1544591756584/1544591826125&quot;,&quot;1544591751639/1544591756584/1544591842867&quot;,&quot;1544591751639/1544591756584/1544591852005&quot;,&quot;1544591751639/1544591859950/1544591889129&quot;,&quot;1544591751639/1544591859950/1544591895035&quot;,&quot;1544591751639/1544591859950/1544591913490&quot;,&quot;1544591751639/1544591859950/1544591923488&quot;,&quot;1544591751639/1544591937229/1544591951092&quot;,&quot;1544591751639/1544591989858/1544592010989&quot;,&quot;1544591751639/1544591989858/1544592017149&quot;,&quot;1544591751639/1544591989858/1544592034736&quot;,&quot;1544591751639/1544592145731/1544592165309&quot;,&quot;1544591751639/1544592145731/1544592176780&quot;,&quot;1544591751639/1544592145731/1544592194540&quot;,&quot;1544592286221/1544592291887/1544592314873&quot;,&quot;1544592286221/1544592291887/1544592322911&quot;,&quot;1544592286221/1544592291887/1544592333414&quot;,&quot;1544592286221/1544592291887/1544592347743&quot;,&quot;1544592286221/1544592291887/1544592363784&quot;,&quot;1544592286221/1544592291887/1544592370486&quot;,&quot;1544592286221/1544592379241/1544592404760&quot;,&quot;1544592286221/1544592379241/1544592415158&quot;,&quot;1544592286221/1544592379241/1544592422449&quot;,&quot;1544592286221/1544592379241/1544592438186&quot;,&quot;1544592286221/1544592379241/1544592448263&quot;,&quot;1544592286221/1544592379241/1544592466092&quot;,&quot;1544592286221/1544592474205/1544592491253&quot;,&quot;1544592286221/1544592520233/1544592540334&quot;,&quot;1544592286221/1544592520233/1544592555974&quot;,&quot;1544592286221/1544592520233/1544592561671&quot;,&quot;1544592286221/1544592623523/1544592648386&quot;,&quot;1544592286221/1544592623523/1544592658543&quot;,&quot;1544592286221/1544592623523/1544592671565&quot;,&quot;1544592857014/1544592865722/1544593053271&quot;,&quot;1544592857014/1544592865722/1544593072380&quot;,&quot;1544592857014/1544592865722/1544593079694&quot;,&quot;1544592857014/1544592865722/1544593093552&quot;,&quot;1544592857014/1544592865722/1544593104748&quot;,&quot;1544592857014/1544592865722/1544593123201&quot;,&quot;1544592857014/1544593139545/1544593173865&quot;,&quot;1544592857014/1544593139545/1544593187008&quot;,&quot;1544592857014/1544593139545/1544593454057&quot;,&quot;1544592857014/1544593139545/1544593471128&quot;,&quot;1544592857014/1544593139545/1544593476327&quot;,&quot;1544592857014/1544593139545/1544593488247&quot;,&quot;1544592857014/1544593529004/1544593551477&quot;,&quot;1544592857014/1544593585947/1544593606215&quot;,&quot;1544592857014/1544593585947/1544593620647&quot;,&quot;1544592857014/1544593585947/1544593632079&quot;,&quot;1544592857014/1544593703192/1544593728070&quot;,&quot;1544592857014/1544593703192/1544593743725&quot;,&quot;1544592857014/1544593703192/1544593752239&quot;,&quot;1544593830881/1544593842258/1544593874472&quot;,&quot;1544593830881/1544593842258/1544593889640&quot;,&quot;1544593830881/1544593842258/1544593905062&quot;,&quot;1544593830881/1544593842258/1544593925051&quot;,&quot;1544593830881/1544593842258/1544593932560&quot;,&quot;1544593830881/1544593842258/1544593949312&quot;,&quot;1544593830881/1544593964252/1544594078882&quot;,&quot;1544593830881/1544593964252/1544594102416&quot;,&quot;1544593830881/1544593964252/1544594113782&quot;,&quot;1544593830881/1544593964252/1544594135462&quot;,&quot;1544593830881/1544593964252/1544594177257&quot;,&quot;1544593830881/1544593964252/1544594194047&quot;,&quot;1544593830881/1544596248781/1544596271349&quot;,&quot;1544593830881/1544596291616/1544596322099&quot;,&quot;1544593830881/1544596291616/1544596327463&quot;,&quot;1544593830881/1544596291616/1544596347700&quot;,&quot;1544593830881/1544596494652/1544596513093&quot;,&quot;1544593830881/1544596494652/1544596529922&quot;,&quot;1544593830881/1544596494652/1544596545929&quot;,&quot;1544596644314/1544596678647/1544596711546&quot;,&quot;1544596644314/1544596678647/1544596731689&quot;,&quot;1544596644314/1544596678647/1544596745950&quot;,&quot;1544596644314/1544596678647/1544596761923&quot;,&quot;1544596644314/1544596678647/1544596768254&quot;,&quot;1544596644314/1544596678647/1544596792897&quot;,&quot;1544596644314/1544596802487/1544596845016&quot;,&quot;1544596644314/1544596802487/1544596858389&quot;,&quot;1544596644314/1544596802487/1544596877787&quot;,&quot;1544596644314/1544596802487/1544596890399&quot;,&quot;1544596644314/1544596802487/1544596904838&quot;,&quot;1544596644314/1544596802487/1544596921860&quot;,&quot;1544596644314/1544597008306/1544597032165&quot;,&quot;1544596644314/1544597091060/1544597104557&quot;,&quot;1544596644314/1544597091060/1544597121860&quot;,&quot;1544596644314/1544597091060/1544597149347&quot;,&quot;1544596644314/1544597220792/1544597245750&quot;,&quot;1544596644314/1544597220792/1544597262426&quot;,&quot;1544596644314/1544597220792/1544597275965&quot;,&quot;1676462274557/1676462274558/1676462274559&quot;,&quot;1676462274557/1676462274558/1676462274560&quot;,&quot;1676462274557/1676462274558/1676462274561&quot;,&quot;1676462274557/1676462274558/1676462274562&quot;,&quot;1676462274557/1676462274558/1676462274563&quot;,&quot;1676462274557/1676462274558/1676462274564&quot;,&quot;1676462274557/1676462274558/1676462274565&quot;,&quot;1676462274557/1676462274558/1676462274566&quot;,&quot;1676462274557/1676462274558/1676462274567&quot;,&quot;1676462274557/1676462274558/1676462274568&quot;,&quot;1676462274557/1676462274558/1676462274569&quot;,&quot;1676462274557/1676462274558/1676462274570&quot;,&quot;1676462274557/1676462274558/1676462274571&quot;,&quot;1676462274557/1676462274558/1676462274572&quot;,&quot;1676462274557/1676462274558/1676462274573&quot;,&quot;1676462274557/1676462274558/1676462274574&quot;,&quot;1676462274557/1676462274558/1676462274575&quot;,&quot;1676462274557/1676462274558/1676462274576&quot;,&quot;1676462274557/1676462274558/1676462274577&quot;,&quot;1676462274557/1676462274558/1676462274578&quot;,&quot;1676462274557/1676462274558/1676462274579&quot;,&quot;1676462274557/1676462274558/1676462274580&quot;,&quot;1676462274557/1676462274558/1676462274581&quot;,&quot;1676462274557/1676462274558/1676462274582&quot;,&quot;1676462274557/1676462274558/1676462274583&quot;,&quot;1676462274557/1676462274558/1676462274584&quot;,&quot;1676462274557/1676462274558/1676462274585&quot;,&quot;1676462274557/1676462274558/1676462274586&quot;,&quot;1676462274557/1676462274558/1676462274587&quot;,&quot;1676462274557/1676462274558/1676462274588&quot;,&quot;1676462274557/1676462274558/1676462274589&quot;,&quot;1676462274557/1676462274558/1676462274590&quot;,&quot;1676462274557/1676462274558/1676462274591&quot;,&quot;1676462274557/1676462274558/1676462274592&quot;,&quot;1676462274557/1676462274558/1676462274593&quot;,&quot;1676462274557/1676462274558/1676462274594&quot;,&quot;1676462274557/1676462274558/1676462274595&quot;,&quot;1676462274557/1676462274558/1676462274596&quot;,&quot;1676462274557/1676462274558/1676462274597&quot;,&quot;1676462274557/1676462274558/1676462274598&quot;,&quot;1676462274557/1676462274558/1676462274599&quot;,&quot;1676462274557/1676462274558/1676462274600&quot;,&quot;1676462274557/1676462274558/1676462274601&quot;,&quot;1676462274557/1676462274558/1676462274602&quot;,&quot;1676462274557/1676462274558/1676462274603&quot;,&quot;1676462274557/1676462274558/1676462274604&quot;,&quot;1676462274557/1676462274558/1676462274605&quot;,&quot;1676462274557/1676462274558/1676462274606&quot;,&quot;1676462274557/1676462274558/1676462274607&quot;,&quot;1676462274557/1676462274558/1676462274608&quot;,&quot;1676462274557/1676462274558/1676462274609&quot;,&quot;1676462274557/1676462274558/1676462274610&quot;,&quot;1676462274557/1676462274558/1676462274611&quot;,&quot;1676462274557/1676462274558/1676462274612&quot;,&quot;1676462274557/1676462274558/1676462274613&quot;,&quot;1676462274557/1676462274558/1676462274614&quot;,&quot;1676462274557/1676462274558/1676462274615&quot;,&quot;1676462274557/1676462274558/1676462274616&quot;,&quot;1676462274557/1676462274558/1676462274617&quot;,&quot;1676462274557/1676462274558/1676462274618&quot;,&quot;1676462274557/1676462274558/1676462274619&quot;,&quot;1676462274557/1676462274558/1676462274620&quot;,&quot;1676462274557/1676462274558/1676462274621&quot;,&quot;1676462274557/1676462274558/1676462274622&quot;,&quot;1676462274557/1676462274558/1676462274623&quot;,&quot;1676462274557/1676462274558/1676462274624&quot;,&quot;1676462274557/1676462274558/1676462274625&quot;,&quot;1676462274557/1676462274558/1676462274626&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1676462274659/1676462274660/1676462274671&quot;,&quot;1676462274659/1676462274660/1676462274672&quot;,&quot;1676462274659/1676462274660/1676462274673&quot;,&quot;1676462274659/1676462274660/1676462274674&quot;,&quot;1676462274659/1676462274660/1676462274675&quot;,&quot;1676462274659/1676462274660/1676462274676&quot;,&quot;1676462274659/1676462274660/1676462274677&quot;,&quot;1676462274659/1676462274660/1676462274678&quot;,&quot;1676462274659/1676462274660/1676462274679&quot;,&quot;1676462274659/1676462274660/1676462274680&quot;,&quot;1676462274659/1676462274660/1676462274681&quot;,&quot;1676462274659/1676462274660/1676462274682&quot;,&quot;1676462274659/1676462274660/1676462274683&quot;,&quot;1676462274659/1676462274660/1676462274684&quot;,&quot;1676462274659/1676462274660/1676462274685&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + &quot;300LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_300LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller" enabled="true">
                <intProp name="ThroughputController.style">0</intProp>
                <boolProp name="ThroughputController.perThread">true</boolProp>
                <stringProp name="ThroughputController.maxThroughput">${__evalVar(${category}_500LOsCount)}</stringProp>
                <stringProp name="ThroughputController.percentThroughput">${20LOsPercentage}</stringProp>
              </ThroughputController>
              <hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] stringArray = {&quot;perf38_630lo_1&quot;,&quot;perf38_630lo_2&quot;,&quot;perf40_630lo_1&quot;,&quot;perf40_630lo_2&quot;};

int randomIndex = (int) (Math.random() * stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1544524003551/1544524012478/1544524030068&quot;,&quot;1544524003551/1544524012478/1544524044427&quot;,&quot;1544524003551/1544524012478/1544524057691&quot;,&quot;1544524003551/1544524012478/1544524071582&quot;,&quot;1544524003551/1544524012478/1544524084276&quot;,&quot;1544524003551/1544524012478/1544524099346&quot;,&quot;1544524003551/1544524304922/1544524313700&quot;,&quot;1544524003551/1544524304922/1544524324762&quot;,&quot;1544524003551/1544524304922/1544524341184&quot;,&quot;1544524003551/1544524304922/1544524359136&quot;,&quot;1544524003551/1544524304922/1544524376121&quot;,&quot;1544524003551/1544524304922/1544524387792&quot;,&quot;1544525043137/1544525058289/1544525090848&quot;,&quot;1544525043137/1544525058289/1544525097148&quot;,&quot;1544525043137/1544525058289/1544525114886&quot;,&quot;1544525043137/1544525058289/1544525125172&quot;,&quot;1544525043137/1544525058289/1544525137957&quot;,&quot;1544525043137/1544525058289/1544525143762&quot;,&quot;1544525043137/1544525159358/1544525175677&quot;,&quot;1544525043137/1544525159358/1544525192972&quot;,&quot;1544525043137/1544525159358/1544525217177&quot;,&quot;1544525043137/1544525159358/1544525239184&quot;,&quot;1544525043137/1544525159358/1544525246748&quot;,&quot;1544525043137/1544525159358/1544525263160&quot;,&quot;1544525043137/1544525280855/1544525289279&quot;,&quot;1544525590768/1544525595533/1544525611432&quot;,&quot;1544525590768/1544525595533/1544525627465&quot;,&quot;1544525590768/1544525595533/1544525635696&quot;,&quot;1544525590768/1544525595533/1544525649026&quot;,&quot;1544525590768/1544525595533/1544525663048&quot;,&quot;1544525590768/1544525595533/1544525679427&quot;,&quot;1544525590768/1544525683364/1544525709799&quot;,&quot;1544525590768/1544525683364/1544525720457&quot;,&quot;1544525590768/1544525683364/1544525729515&quot;,&quot;1544525590768/1544525683364/1544525734676&quot;,&quot;1544525590768/1544525683364/1544525756801&quot;,&quot;1544525590768/1544525683364/1544525778291&quot;,&quot;1544526345845/1544526589100/1544526606750&quot;,&quot;1544526345845/1544526589100/1544526610825&quot;,&quot;1544526345845/1544526589100/1544526623799&quot;,&quot;1544526345845/1544526589100/1544526638110&quot;,&quot;1544526345845/1544526589100/1544526644717&quot;,&quot;1544526345845/1544526589100/1544526657285&quot;,&quot;1544526345845/1544526671965/1544526688230&quot;,&quot;1544526345845/1544526671965/1544526695320&quot;,&quot;1544526345845/1544526671965/1544526710051&quot;,&quot;1544526345845/1544526671965/1544526721801&quot;,&quot;1544526345845/1544526671965/1544526728620&quot;,&quot;1544526345845/1544526671965/1544526763389&quot;,&quot;1544526345845/1544526961740/1544526980657&quot;,&quot;1544526345845/1544526961740/1544526994099&quot;,&quot;1544526345845/1544526961740/1544527008225&quot;,&quot;1544526345845/1544528319371/1544528334775&quot;,&quot;1544526345845/1544528319371/1544528345283&quot;,&quot;1544526345845/1544528319371/1544528367998&quot;,&quot;1544591089661/1544591099675/1544591165699&quot;,&quot;1544591089661/1544591099675/1544591181584&quot;,&quot;1544591089661/1544591099675/1544591198772&quot;,&quot;1544591089661/1544591099675/1544591219876&quot;,&quot;1544591089661/1544591099675/1544591237488&quot;,&quot;1544591089661/1544591099675/1544591247402&quot;,&quot;1544591089661/1544591260222/1544591284840&quot;,&quot;1544591089661/1544591260222/1544591295680&quot;,&quot;1544591089661/1544591260222/1544591320423&quot;,&quot;1544591089661/1544591260222/1544591334581&quot;,&quot;1544591089661/1544591260222/1544591341221&quot;,&quot;1544591089661/1544591260222/1544591363137&quot;,&quot;1544591089661/1544591364773/1544591392809&quot;,&quot;1544591089661/1544591412698/1544591428190&quot;,&quot;1544591089661/1544591412698/1544591439057&quot;,&quot;1544591089661/1544591412698/1544591455780&quot;,&quot;1544591089661/1544591602655/1544591636888&quot;,&quot;1544591089661/1544591602655/1544591649137&quot;,&quot;1544591089661/1544591602655/1544591669971&quot;,&quot;1544591751639/1544591756584/1544591786410&quot;,&quot;1544591751639/1544591756584/1544591792950&quot;,&quot;1544591751639/1544591756584/1544591814105&quot;,&quot;1544591751639/1544591756584/1544591826125&quot;,&quot;1544591751639/1544591756584/1544591842867&quot;,&quot;1544591751639/1544591756584/1544591852005&quot;,&quot;1544591751639/1544591859950/1544591889129&quot;,&quot;1544591751639/1544591859950/1544591895035&quot;,&quot;1544591751639/1544591859950/1544591913490&quot;,&quot;1544591751639/1544591859950/1544591923488&quot;,&quot;1544591751639/1544591937229/1544591951092&quot;,&quot;1544591751639/1544591989858/1544592010989&quot;,&quot;1544591751639/1544591989858/1544592017149&quot;,&quot;1544591751639/1544591989858/1544592034736&quot;,&quot;1544591751639/1544592145731/1544592165309&quot;,&quot;1544591751639/1544592145731/1544592176780&quot;,&quot;1544591751639/1544592145731/1544592194540&quot;,&quot;1544592286221/1544592291887/1544592314873&quot;,&quot;1544592286221/1544592291887/1544592322911&quot;,&quot;1544592286221/1544592291887/1544592333414&quot;,&quot;1544592286221/1544592291887/1544592347743&quot;,&quot;1544592286221/1544592291887/1544592363784&quot;,&quot;1544592286221/1544592291887/1544592370486&quot;,&quot;1544592286221/1544592379241/1544592404760&quot;,&quot;1544592286221/1544592379241/1544592415158&quot;,&quot;1544592286221/1544592379241/1544592422449&quot;,&quot;1544592286221/1544592379241/1544592438186&quot;,&quot;1544592286221/1544592379241/1544592448263&quot;,&quot;1544592286221/1544592379241/1544592466092&quot;,&quot;1544592286221/1544592474205/1544592491253&quot;,&quot;1544592286221/1544592520233/1544592540334&quot;,&quot;1544592286221/1544592520233/1544592555974&quot;,&quot;1544592286221/1544592520233/1544592561671&quot;,&quot;1544592286221/1544592623523/1544592648386&quot;,&quot;1544592286221/1544592623523/1544592658543&quot;,&quot;1544592286221/1544592623523/1544592671565&quot;,&quot;1544592857014/1544592865722/1544593053271&quot;,&quot;1544592857014/1544592865722/1544593072380&quot;,&quot;1544592857014/1544592865722/1544593079694&quot;,&quot;1544592857014/1544592865722/1544593093552&quot;,&quot;1544592857014/1544592865722/1544593104748&quot;,&quot;1544592857014/1544592865722/1544593123201&quot;,&quot;1544592857014/1544593139545/1544593173865&quot;,&quot;1544592857014/1544593139545/1544593187008&quot;,&quot;1544592857014/1544593139545/1544593454057&quot;,&quot;1544592857014/1544593139545/1544593471128&quot;,&quot;1544592857014/1544593139545/1544593476327&quot;,&quot;1544592857014/1544593139545/1544593488247&quot;,&quot;1544592857014/1544593529004/1544593551477&quot;,&quot;1544592857014/1544593585947/1544593606215&quot;,&quot;1544592857014/1544593585947/1544593620647&quot;,&quot;1544592857014/1544593585947/1544593632079&quot;,&quot;1544592857014/1544593703192/1544593728070&quot;,&quot;1544592857014/1544593703192/1544593743725&quot;,&quot;1544592857014/1544593703192/1544593752239&quot;,&quot;1544593830881/1544593842258/1544593874472&quot;,&quot;1544593830881/1544593842258/1544593889640&quot;,&quot;1544593830881/1544593842258/1544593905062&quot;,&quot;1544593830881/1544593842258/1544593925051&quot;,&quot;1544593830881/1544593842258/1544593932560&quot;,&quot;1544593830881/1544593842258/1544593949312&quot;,&quot;1544593830881/1544593964252/1544594078882&quot;,&quot;1544593830881/1544593964252/1544594102416&quot;,&quot;1544593830881/1544593964252/1544594113782&quot;,&quot;1544593830881/1544593964252/1544594135462&quot;,&quot;1544593830881/1544593964252/1544594177257&quot;,&quot;1544593830881/1544593964252/1544594194047&quot;,&quot;1544593830881/1544596248781/1544596271349&quot;,&quot;1544593830881/1544596291616/1544596322099&quot;,&quot;1544593830881/1544596291616/1544596327463&quot;,&quot;1544593830881/1544596291616/1544596347700&quot;,&quot;1544593830881/1544596494652/1544596513093&quot;,&quot;1544593830881/1544596494652/1544596529922&quot;,&quot;1544593830881/1544596494652/1544596545929&quot;,&quot;1544596644314/1544596678647/1544596711546&quot;,&quot;1544596644314/1544596678647/1544596731689&quot;,&quot;1544596644314/1544596678647/1544596745950&quot;,&quot;1544596644314/1544596678647/1544596761923&quot;,&quot;1544596644314/1544596678647/1544596768254&quot;,&quot;1544596644314/1544596678647/1544596792897&quot;,&quot;1544596644314/1544596802487/1544596845016&quot;,&quot;1544596644314/1544596802487/1544596858389&quot;,&quot;1544596644314/1544596802487/1544596877787&quot;,&quot;1544596644314/1544596802487/1544596890399&quot;,&quot;1544596644314/1544596802487/1544596904838&quot;,&quot;1544596644314/1544596802487/1544596921860&quot;,&quot;1544596644314/1544597008306/1544597032165&quot;,&quot;1544596644314/1544597091060/1544597104557&quot;,&quot;1544596644314/1544597091060/1544597121860&quot;,&quot;1544596644314/1544597091060/1544597149347&quot;,&quot;1544596644314/1544597220792/1544597245750&quot;,&quot;1544596644314/1544597220792/1544597262426&quot;,&quot;1544596644314/1544597220792/1544597275965&quot;,&quot;1676462274557/1676462274558/1676462274559&quot;,&quot;1676462274557/1676462274558/1676462274560&quot;,&quot;1676462274557/1676462274558/1676462274561&quot;,&quot;1676462274557/1676462274558/1676462274562&quot;,&quot;1676462274557/1676462274558/1676462274563&quot;,&quot;1676462274557/1676462274558/1676462274564&quot;,&quot;1676462274557/1676462274558/1676462274565&quot;,&quot;1676462274557/1676462274558/1676462274566&quot;,&quot;1676462274557/1676462274558/1676462274567&quot;,&quot;1676462274557/1676462274558/1676462274568&quot;,&quot;1676462274557/1676462274558/1676462274569&quot;,&quot;1676462274557/1676462274558/1676462274570&quot;,&quot;1676462274557/1676462274558/1676462274571&quot;,&quot;1676462274557/1676462274558/1676462274572&quot;,&quot;1676462274557/1676462274558/1676462274573&quot;,&quot;1676462274557/1676462274558/1676462274574&quot;,&quot;1676462274557/1676462274558/1676462274575&quot;,&quot;1676462274557/1676462274558/1676462274576&quot;,&quot;1676462274557/1676462274558/1676462274577&quot;,&quot;1676462274557/1676462274558/1676462274578&quot;,&quot;1676462274557/1676462274558/1676462274579&quot;,&quot;1676462274557/1676462274558/1676462274580&quot;,&quot;1676462274557/1676462274558/1676462274581&quot;,&quot;1676462274557/1676462274558/1676462274582&quot;,&quot;1676462274557/1676462274558/1676462274583&quot;,&quot;1676462274557/1676462274558/1676462274584&quot;,&quot;1676462274557/1676462274558/1676462274585&quot;,&quot;1676462274557/1676462274558/1676462274586&quot;,&quot;1676462274557/1676462274558/1676462274587&quot;,&quot;1676462274557/1676462274558/1676462274588&quot;,&quot;1676462274557/1676462274558/1676462274589&quot;,&quot;1676462274557/1676462274558/1676462274590&quot;,&quot;1676462274557/1676462274558/1676462274591&quot;,&quot;1676462274557/1676462274558/1676462274592&quot;,&quot;1676462274557/1676462274558/1676462274593&quot;,&quot;1676462274557/1676462274558/1676462274594&quot;,&quot;1676462274557/1676462274558/1676462274595&quot;,&quot;1676462274557/1676462274558/1676462274596&quot;,&quot;1676462274557/1676462274558/1676462274597&quot;,&quot;1676462274557/1676462274558/1676462274598&quot;,&quot;1676462274557/1676462274558/1676462274599&quot;,&quot;1676462274557/1676462274558/1676462274600&quot;,&quot;1676462274557/1676462274558/1676462274601&quot;,&quot;1676462274557/1676462274558/1676462274602&quot;,&quot;1676462274557/1676462274558/1676462274603&quot;,&quot;1676462274557/1676462274558/1676462274604&quot;,&quot;1676462274557/1676462274558/1676462274605&quot;,&quot;1676462274557/1676462274558/1676462274606&quot;,&quot;1676462274557/1676462274558/1676462274607&quot;,&quot;1676462274557/1676462274558/1676462274608&quot;,&quot;1676462274557/1676462274558/1676462274609&quot;,&quot;1676462274557/1676462274558/1676462274610&quot;,&quot;1676462274557/1676462274558/1676462274611&quot;,&quot;1676462274557/1676462274558/1676462274612&quot;,&quot;1676462274557/1676462274558/1676462274613&quot;,&quot;1676462274557/1676462274558/1676462274614&quot;,&quot;1676462274557/1676462274558/1676462274615&quot;,&quot;1676462274557/1676462274558/1676462274616&quot;,&quot;1676462274557/1676462274558/1676462274617&quot;,&quot;1676462274557/1676462274558/1676462274618&quot;,&quot;1676462274557/1676462274558/1676462274619&quot;,&quot;1676462274557/1676462274558/1676462274620&quot;,&quot;1676462274557/1676462274558/1676462274621&quot;,&quot;1676462274557/1676462274558/1676462274622&quot;,&quot;1676462274557/1676462274558/1676462274623&quot;,&quot;1676462274557/1676462274558/1676462274624&quot;,&quot;1676462274557/1676462274558/1676462274625&quot;,&quot;1676462274557/1676462274558/1676462274626&quot;,&quot;1676462274557/1676462274558/1676462274627&quot;,&quot;1676462274557/1676462274558/1676462274628&quot;,&quot;1676462274557/1676462274558/1676462274629&quot;,&quot;1676462274557/1676462274558/1676462274630&quot;,&quot;1676462274557/1676462274558/1676462274631&quot;,&quot;1676462274557/1676462274558/1676462274632&quot;,&quot;1676462274557/1676462274558/1676462274633&quot;,&quot;1676462274557/1676462274558/1676462274634&quot;,&quot;1676462274557/1676462274558/1676462274635&quot;,&quot;1676462274557/1676462274558/1676462274636&quot;,&quot;1676462274557/1676462274558/1676462274637&quot;,&quot;1676462274557/1676462274558/1676462274638&quot;,&quot;1676462274557/1676462274558/1676462274639&quot;,&quot;1676462274557/1676462274558/1676462274640&quot;,&quot;1676462274557/1676462274558/1676462274641&quot;,&quot;1676462274557/1676462274558/1676462274642&quot;,&quot;1676462274557/1676462274558/1676462274643&quot;,&quot;1676462274557/1676462274558/1676462274644&quot;,&quot;1676462274557/1676462274558/1676462274645&quot;,&quot;1676462274557/1676462274558/1676462274646&quot;,&quot;1676462274557/1676462274558/1676462274647&quot;,&quot;1676462274557/1676462274558/1676462274648&quot;,&quot;1676462274557/1676462274558/1676462274649&quot;,&quot;1676462274557/1676462274558/1676462274650&quot;,&quot;1676462274557/1676462274558/1676462274651&quot;,&quot;1676462274557/1676462274558/1676462274652&quot;,&quot;1676462274557/1676462274558/1676462274653&quot;,&quot;1676462274557/1676462274558/1676462274654&quot;,&quot;1676462274557/1676462274558/1676462274655&quot;,&quot;1676462274557/1676462274558/1676462274656&quot;,&quot;1676462274557/1676462274558/1676462274657&quot;,&quot;1676462274557/1676462274558/1676462274658&quot;,&quot;1676462274557/1676462274558/1676462274761&quot;,&quot;1676462274557/1676462274558/1676462274762&quot;,&quot;1676462274557/1676462274558/1676462274763&quot;,&quot;1676462274557/1676462274558/1676462274764&quot;,&quot;1676462274557/1676462274558/1676462274765&quot;,&quot;1676462274557/1676462274558/1676462274766&quot;,&quot;1676462274557/1676462274558/1676462274767&quot;,&quot;1676462274557/1676462274558/1676462274768&quot;,&quot;1676462274557/1676462274558/1676462274769&quot;,&quot;1676462274557/1676462274558/1676462274770&quot;,&quot;1676462274557/1676462274558/1676462274771&quot;,&quot;1676462274557/1676462274558/1676462274772&quot;,&quot;1676462274557/1676462274558/1676462274773&quot;,&quot;1676462274557/1676462274558/1676462274774&quot;,&quot;1676462274557/1676462274558/1676462274775&quot;,&quot;1676462274557/1676462274558/1676462274776&quot;,&quot;1676462274557/1676462274558/1676462274777&quot;,&quot;1676462274557/1676462274558/1676462274778&quot;,&quot;1676462274557/1676462274558/1676462274779&quot;,&quot;1676462274557/1676462274558/1676462274780&quot;,&quot;1676462274557/1676462274558/1676462274781&quot;,&quot;1676462274557/1676462274558/1676462274782&quot;,&quot;1676462274557/1676462274558/1676462274783&quot;,&quot;1676462274557/1676462274558/1676462274784&quot;,&quot;1676462274557/1676462274558/1676462274785&quot;,&quot;1676462274557/1676462274558/1676462274786&quot;,&quot;1676462274557/1676462274558/1676462274787&quot;,&quot;1676462274557/1676462274558/1676462274788&quot;,&quot;1676462274557/1676462274558/1676462274789&quot;,&quot;1676462274557/1676462274558/1676462274790&quot;,&quot;1676462274557/1676462274558/1676462274791&quot;,&quot;1676462274557/1676462274558/1676462274792&quot;,&quot;1676462274557/1676462274558/1676462274793&quot;,&quot;1676462274557/1676462274558/1676462274794&quot;,&quot;1676462274557/1676462274558/1676462274795&quot;,&quot;1676462274557/1676462274558/1676462274796&quot;,&quot;1676462274557/1676462274558/1676462274797&quot;,&quot;1676462274557/1676462274558/1676462274798&quot;,&quot;1676462274557/1676462274558/1676462274799&quot;,&quot;1676462274557/1676462274558/1676462274800&quot;,&quot;1676462274557/1676462274558/1676462274801&quot;,&quot;1676462274557/1676462274558/1676462274802&quot;,&quot;1676462274557/1676462274558/1676462274803&quot;,&quot;1676462274557/1676462274558/1676462274804&quot;,&quot;1676462274557/1676462274558/1676462274805&quot;,&quot;1676462274557/1676462274558/1676462274806&quot;,&quot;1676462274557/1676462274558/1676462274807&quot;,&quot;1676462274557/1676462274558/1676462274808&quot;,&quot;1676462274557/1676462274558/1676462274809&quot;,&quot;1676462274557/1676462274558/1676462274810&quot;,&quot;1676462274557/1676462274558/1676462274811&quot;,&quot;1676462274557/1676462274558/1676462274812&quot;,&quot;1676462274557/1676462274558/1676462274813&quot;,&quot;1676462274557/1676462274558/1676462274814&quot;,&quot;1676462274557/1676462274558/1676462274815&quot;,&quot;1676462274557/1676462274558/1676462274816&quot;,&quot;1676462274557/1676462274558/1676462274817&quot;,&quot;1676462274557/1676462274558/1676462274818&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1676462274659/1676462274660/1676462274671&quot;,&quot;1676462274659/1676462274660/1676462274672&quot;,&quot;1676462274659/1676462274660/1676462274673&quot;,&quot;1676462274659/1676462274660/1676462274674&quot;,&quot;1676462274659/1676462274660/1676462274675&quot;,&quot;1676462274659/1676462274660/1676462274676&quot;,&quot;1676462274659/1676462274660/1676462274677&quot;,&quot;1676462274659/1676462274660/1676462274678&quot;,&quot;1676462274659/1676462274660/1676462274679&quot;,&quot;1676462274659/1676462274660/1676462274680&quot;,&quot;1676462274659/1676462274660/1676462274681&quot;,&quot;1676462274659/1676462274660/1676462274682&quot;,&quot;1676462274659/1676462274660/1676462274683&quot;,&quot;1676462274659/1676462274660/1676462274684&quot;,&quot;1676462274659/1676462274660/1676462274685&quot;,&quot;1676462274659/1676462274660/1676462274686&quot;,&quot;1676462274659/1676462274660/1676462274687&quot;,&quot;1676462274659/1676462274660/1676462274688&quot;,&quot;1676462274659/1676462274660/1676462274689&quot;,&quot;1676462274659/1676462274660/1676462274690&quot;,&quot;1676462274659/1676462274660/1676462274691&quot;,&quot;1676462274659/1676462274660/1676462274692&quot;,&quot;1676462274659/1676462274660/1676462274693&quot;,&quot;1676462274659/1676462274660/1676462274694&quot;,&quot;1676462274659/1676462274660/1676462274695&quot;,&quot;1676462274659/1676462274660/1676462274696&quot;,&quot;1676462274659/1676462274660/1676462274697&quot;,&quot;1676462274659/1676462274660/1676462274698&quot;,&quot;1676462274659/1676462274660/1676462274699&quot;,&quot;1676462274659/1676462274660/1676462274700&quot;,&quot;1676462274659/1676462274660/1676462274701&quot;,&quot;1676462274659/1676462274660/1676462274702&quot;,&quot;1676462274659/1676462274660/1676462274703&quot;,&quot;1676462274659/1676462274660/1676462274704&quot;,&quot;1676462274659/1676462274660/1676462274705&quot;,&quot;1676462274659/1676462274660/1676462274706&quot;,&quot;1676462274659/1676462274660/1676462274707&quot;,&quot;1676462274659/1676462274660/1676462274708&quot;,&quot;1676462274659/1676462274660/1676462274709&quot;,&quot;1676462274659/1676462274660/1676462274710&quot;,&quot;1676462274659/1676462274660/1676462274711&quot;,&quot;1676462274659/1676462274660/1676462274712&quot;,&quot;1676462274659/1676462274660/1676462274713&quot;,&quot;1676462274659/1676462274660/1676462274714&quot;,&quot;1676462274659/1676462274660/1676462274715&quot;,&quot;1676462274659/1676462274660/1676462274716&quot;,&quot;1676462274659/1676462274660/1676462274717&quot;,&quot;1676462274659/1676462274660/1676462274718&quot;,&quot;1676462274659/1676462274660/1676462274719&quot;,&quot;1676462274659/1676462274660/1676462274720&quot;,&quot;1676462274659/1676462274660/1676462274721&quot;,&quot;1676462274659/1676462274660/1676462274722&quot;,&quot;1676462274659/1676462274660/1676462274723&quot;,&quot;1676462274659/1676462274660/1676462274724&quot;,&quot;1676462274659/1676462274660/1676462274725&quot;,&quot;1676462274659/1676462274660/1676462274726&quot;,&quot;1676462274659/1676462274660/1676462274727&quot;,&quot;1676462274659/1676462274660/1676462274728&quot;,&quot;1676462274659/1676462274660/1676462274729&quot;,&quot;1676462274659/1676462274660/1676462274730&quot;,&quot;1676462274659/1676462274660/1676462274731&quot;,&quot;1676462274659/1676462274660/1676462274732&quot;,&quot;1676462274659/1676462274660/1676462274733&quot;,&quot;1676462274659/1676462274660/1676462274734&quot;,&quot;1676462274659/1676462274660/1676462274735&quot;,&quot;1676462274659/1676462274660/1676462274736&quot;,&quot;1676462274659/1676462274660/1676462274737&quot;,&quot;1676462274659/1676462274660/1676462274738&quot;,&quot;1676462274659/1676462274660/1676462274739&quot;,&quot;1676462274659/1676462274660/1676462274740&quot;,&quot;1676462274659/1676462274660/1676462274741&quot;,&quot;1676462274659/1676462274660/1676462274742&quot;,&quot;1676462274659/1676462274660/1676462274743&quot;,&quot;1676462274659/1676462274660/1676462274744&quot;,&quot;1676462274659/1676462274660/1676462274745&quot;,&quot;1676462274659/1676462274660/1676462274746&quot;,&quot;1676462274659/1676462274660/1676462274747&quot;,&quot;1676462274659/1676462274660/1676462274748&quot;,&quot;1676462274659/1676462274660/1676462274749&quot;,&quot;1676462274659/1676462274660/1676462274750&quot;,&quot;1676462274659/1676462274660/1676462274751&quot;,&quot;1676462274659/1676462274660/1676462274752&quot;,&quot;1676462274659/1676462274660/1676462274753&quot;,&quot;1676462274659/1676462274660/1676462274754&quot;,&quot;1676462274659/1676462274660/1676462274755&quot;,&quot;1676462274659/1676462274660/1676462274756&quot;,&quot;1676462274659/1676462274660/1676462274757&quot;,&quot;1676462274659/1676462274660/1676462274758&quot;,&quot;1676462274659/1676462274660/1676462274759&quot;,&quot;1676462274659/1676462274660/1676462274760&quot;,&quot;1676462274659/1676462274660/1676462274836&quot;,&quot;1676462274659/1676462274660/1676462274837&quot;,&quot;1676462274659/1676462274660/1676462274838&quot;,&quot;1676462274659/1676462274660/1676462274839&quot;,&quot;1676462274659/1676462274660/1676462274840&quot;,&quot;1676462274659/1676462274660/1676462274841&quot;,&quot;1676462274659/1676462274660/1676462274842&quot;,&quot;1676462274659/1676462274660/1676462274843&quot;,&quot;1676462274659/1676462274660/1676462274844&quot;,&quot;1676462274659/1676462274660/1676462274845&quot;,&quot;1676462274659/1676462274660/1676462274846&quot;,&quot;1676462274659/1676462274660/1676462274847&quot;,&quot;1676462274659/1676462274660/1676462274848&quot;,&quot;1676462274659/1676462274660/1676462274849&quot;,&quot;1676462274659/1676462274660/1676462274850&quot;,&quot;1676462274659/1676462274660/1676462274851&quot;,&quot;1676462274659/1676462274660/1676462274852&quot;,&quot;1676462274659/1676462274660/1676462274853&quot;,&quot;1676462274659/1676462274660/1676462274854&quot;,&quot;1676462274659/1676462274660/1676462274855&quot;,&quot;1676462274659/1676462274660/1676462274856&quot;,&quot;1676462274659/1676462274660/1676462274857&quot;,&quot;1676462274659/1676462274660/1676462274858&quot;,&quot;1676462274659/1676462274660/1676462274859&quot;,&quot;1676462274659/1676462274660/1676462274860&quot;,&quot;1676462274659/1676462274660/1676462274861&quot;,&quot;1676462274659/1676462274660/1676462274862&quot;,&quot;1676462274659/1676462274660/1676462274863&quot;,&quot;1676462274659/1676462274660/1676462274864&quot;,&quot;1676462274659/1676462274660/1676462274865&quot;,&quot;1676462274659/1676462274660/1676462274866&quot;,&quot;1676462274659/1676462274660/1676462274867&quot;,&quot;1676462274659/1676462274660/1676462274868&quot;,&quot;1676462274659/1676462274660/1676462274869&quot;,&quot;1676462274659/1676462274660/1676462274870&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + &quot;500LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_500LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
              <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Template - Old" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilenameTch" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilenameTch</stringProp>
                <stringProp name="Argument.value">scenario_tch_asnmt_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="outputCsvFilenameStd" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilenameStd</stringProp>
                <stringProp name="Argument.value">student_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">template.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">category,noOfAssignmentsInClass-1,noOfLOsInAssignment-1,noOfAssignmentsInClass-2,noOfLOsInAssignment-2,noOfAssignmentsInClass-3,noOfLOsInAssignment-3,noOfStudentsInClass</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="teacher_name" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

extuserid = &quot;tch&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;extuserid&quot;, extuserid);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="class_name" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

classname = &quot;class&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;classname&quot;, classname);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="assignedPathList" elementType="Argument">
                <stringProp name="Argument.name">assignedPathList</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="true">
            <stringProp name="IncludeController.includepath">Join_a_space_with_space_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [60-65 sec]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">60000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class" enabled="true">
            <stringProp name="IncludeController.includepath">create_new_instructor_led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class - CONTEXT" enabled="false">
            <stringProp name="IncludeController.includepath">create_new_instructor_led_class_context.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">10000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - 3B8PE - 300LOs" enabled="true">
            <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;3B8PE&quot;;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">String[] multiProducts = {
    &quot;evpel1&quot;, &quot;perfb1pe1&quot;, &quot;perfb1pe2&quot;, &quot;perfprod21&quot;, &quot;perfprod22&quot;,
    &quot;perfprod23&quot;, &quot;perfprod24&quot;, &quot;perfprod25&quot;
};

String multiProductsAsString = &quot;\&quot;evpel1\&quot;, \&quot;perfb1pe1\&quot;, \&quot;perfb1pe2\&quot;, \&quot;perfprod21\&quot;, \&quot;perfprod22\&quot;,\&quot;perfprod23\&quot;, \&quot;perfprod24\&quot;, \&quot;perfprod25\&quot;&quot;;

for (int i = 0; i &lt; multiProducts.length; i++) {
    vars.put(&quot;multiProduct&quot; + (i + 1), multiProducts[i]);
}

vars.put(&quot;productArrayString&quot;, multiProductsAsString);
vars.put(&quot;productcode&quot;, multiProducts[0]);
vars.put(&quot;peCount&quot;, String.valueOf(multiProducts.length));</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate multi products with a class" enabled="true">
              <stringProp name="IncludeController.includepath">associate_multi_products_with_class.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [300-330]" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">300000</stringProp>
                <stringProp name="RandomTimer.range">30000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x assignments" enabled="false">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfAssignmentsInClass-1}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end">${noOfAssignmentsInClass}</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">assignmentCount</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix5 = vars.get(&quot;noOfLOsInAssignment&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix5 + &quot;LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <InterleaveControl guiclass="InterleaveControlGui" testclass="InterleaveControl" testname="Interleave Controller" enabled="true">
                <intProp name="InterleaveControl.style">1</intProp>
                <boolProp name="InterleaveControl.accrossThreads">false</boolProp>
              </InterleaveControl>
              <hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;evpel1&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfb1pe1&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfb1pe2&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod21&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod22&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod23&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod24&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod25&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment}&quot; == &quot;20&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_20LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment}&quot; == &quot;30&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_30LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment}&quot; == &quot;50&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_50LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
                <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x assignments - 1" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfAssignmentsInClass-1}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end">${noOfAssignmentsInClass-1}</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">assignmentCount</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix5 = vars.get(&quot;noOfLOsInAssignment-1&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix5 + &quot;LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544524003551/1544524304922/1544524359136&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544524003551/1544524012478/1544524057691&quot;,&quot;1544524003551/1544524012478/1544524030068&quot;,&quot;1544525043137/1544525058289/1544525097148&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544525043137/1544525058289/1544525137957&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1544524003551/1544524304922/1544524324762&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544525043137/1544525058289/1544525090848&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1544524003551/1544524012478/1544524071582&quot;,&quot;1544524003551/1544524304922/1544524341184&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544525043137/1544525058289/1544525125172&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1544524003551/1544524304922/1544524313700&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544524003551/1544524012478/1544524084276&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544524003551/1544524304922/1544524387792&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1544524003551/1544524012478/1544524099346&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1544525043137/1544525058289/1544525114886&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544524003551/1544524012478/1544524044427&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544524003551/1544524304922/1544524376121&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] stringArray = {&quot;evpel1&quot;, &quot;perfb1pe1&quot;, &quot;perfb1pe2&quot;, &quot;perfprod21&quot;, &quot;perfprod22&quot;,
    &quot;perfprod23&quot;, &quot;perfprod24&quot;, &quot;perfprod25&quot;};

int randomIndex = (int) (Math.random() * stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;20&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_20LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;30&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_30LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;50&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_50LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
                <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">1000</stringProp>
                  <stringProp name="RandomTimer.range">500</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x rules" enabled="false">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfAccessRulesInClass}</stringProp>
            </LoopController>
            <hashTree>
              <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
                <stringProp name="maximumValue">9999</stringProp>
                <stringProp name="minimumValue">0000</stringProp>
                <stringProp name="outputFormat">0000</stringProp>
                <boolProp name="perThread">true</boolProp>
                <stringProp name="randomSeed"></stringProp>
                <stringProp name="variableName">randomNo</stringProp>
              </RandomVariableConfig>
              <hashTree/>
              <InterleaveControl guiclass="InterleaveControlGui" testclass="InterleaveControl" testname="Interleave Controller" enabled="true">
                <intProp name="InterleaveControl.style">1</intProp>
                <boolProp name="InterleaveControl.accrossThreads">false</boolProp>
              </InterleaveControl>
              <hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;evpel1&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfb1pe1&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfb1pe2&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod21&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod22&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod23&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod24&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod25&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAccessRule}&quot; == &quot;50&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a rule" enabled="true">
                  <stringProp name="IncludeController.includepath">Create_a_rule_100LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAccessRule}&quot; == &quot;100&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a rule" enabled="true">
                  <stringProp name="IncludeController.includepath">Create_a_rule_100LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x students and join using classcode of current teacher" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfStudentsInClass}</stringProp>
            </LoopController>
            <hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">import java.util.Date;

Date date = new Date();
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;classcode&quot;);

studentextuserid = &quot;std&quot; + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;studentextuserid&quot;, studentextuserid);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] multiProducts = {
    &quot;evpel1&quot;, &quot;perfb1pe1&quot;, &quot;perfb1pe2&quot;, &quot;perfprod21&quot;, &quot;perfprod22&quot;,
    &quot;perfprod23&quot;, &quot;perfprod24&quot;, &quot;perfprod25&quot;
};

for (int i = 0; i &lt; multiProducts.length; i++) {
    vars.put(&quot;multiProduct&quot; + (i + 1), multiProducts[i]);
}

vars.put(&quot;productcode&quot;, multiProducts[0]);
vars.put(&quot;peCount&quot;, String.valueOf(multiProducts.length));</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with product_code and class_code" enabled="true">
                <stringProp name="IncludeController.includepath">join_Spaces_with_product_code_and_class_code.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [20-30 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                  <stringProp name="RandomTimer.range">10000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">multiProduct</stringProp>
                <stringProp name="ForeachController.returnVal">multiProduct</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">1</stringProp>
                <stringProp name="ForeachController.endIndex">${peCount}</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Entitle User with Product" enabled="true">
                  <stringProp name="IncludeController.includepath">Entitle_User_With_Product.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [15-25 sec]" enabled="false">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">15000</stringProp>
                  <stringProp name="RandomTimer.range">10000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="false">
                <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_student.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">timestamp = vars.get(&quot;date&quot;);

FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameStd&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
              <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameTch&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - 3B10PE - 500LOs" enabled="true">
            <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;3B10PE&quot;;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">String[] multiProducts = {
    &quot;perfprod3&quot;, &quot;perfprod4&quot;, &quot;perfprod5&quot;, &quot;perfprod6&quot;, &quot;perfprod7&quot;,
    &quot;perfprod8&quot;, &quot;perfprod9&quot;, &quot;perfprod10&quot;, &quot;perfprod11&quot;, &quot;perfprod12&quot;
};

String multiProductsAsString = &quot;\&quot;perfprod3\&quot;, \&quot;perfprod4\&quot;, \&quot;perfprod5\&quot;, \&quot;perfprod6\&quot;, \&quot;perfprod7\&quot;,\&quot;perfprod8\&quot;, \&quot;perfprod9\&quot;, \&quot;perfprod10\&quot;, \&quot;perfprod11\&quot;, \&quot;perfprod12\&quot;&quot;;

for (int i = 0; i &lt; multiProducts.length; i++) {
    vars.put(&quot;multiProduct&quot; + (i + 1), multiProducts[i]);
}

vars.put(&quot;productArrayString&quot;, multiProductsAsString);
vars.put(&quot;productcode&quot;, multiProducts[0]);
vars.put(&quot;peCount&quot;, String.valueOf(multiProducts.length));</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate multi products with a class" enabled="true">
              <stringProp name="IncludeController.includepath">associate_multi_products_with_class.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [300-330]" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">300000</stringProp>
                <stringProp name="RandomTimer.range">30000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x assignments" enabled="false">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfAssignmentsInClass}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end">${noOfAssignmentsInClass}</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">assignmentCount</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix5 = vars.get(&quot;noOfLOsInAssignment&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix5 + &quot;LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <InterleaveControl guiclass="InterleaveControlGui" testclass="InterleaveControl" testname="Interleave Controller" enabled="true">
                <intProp name="InterleaveControl.style">1</intProp>
                <boolProp name="InterleaveControl.accrossThreads">false</boolProp>
              </InterleaveControl>
              <hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod3&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod4&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod5&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod6&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod7&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod8&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod9&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod10&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod11&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod12&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment}&quot; == &quot;20&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_20LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment}&quot; == &quot;30&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_30LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment}&quot; == &quot;50&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_50LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
                <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x assignments - 1" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfAssignmentsInClass-1}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end">${noOfAssignmentsInClass-1}</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">assignmentCount</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix5 = vars.get(&quot;noOfLOsInAssignment-1&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix5 + &quot;LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544524003551/1544524304922/1544524359136&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544524003551/1544524012478/1544524057691&quot;,&quot;1544524003551/1544524012478/1544524030068&quot;,&quot;1544525043137/1544525058289/1544525097148&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544525043137/1544525058289/1544525137957&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1544524003551/1544524304922/1544524324762&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544525043137/1544525058289/1544525090848&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1544524003551/1544524012478/1544524071582&quot;,&quot;1544524003551/1544524304922/1544524341184&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544525043137/1544525058289/1544525125172&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1544524003551/1544524304922/1544524313700&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544524003551/1544524012478/1544524084276&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544524003551/1544524304922/1544524387792&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1544524003551/1544524012478/1544524099346&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1544525043137/1544525058289/1544525114886&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544524003551/1544524012478/1544524044427&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544524003551/1544524304922/1544524376121&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] stringArray = {&quot;perfprod3&quot;, &quot;perfprod4&quot;, &quot;perfprod5&quot;, &quot;perfprod6&quot;, &quot;perfprod7&quot;,
    &quot;perfprod8&quot;, &quot;perfprod9&quot;, &quot;perfprod10&quot;, &quot;perfprod11&quot;, &quot;perfprod12&quot;};

int randomIndex = (int) (Math.random() * stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;20&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_20LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;30&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_30LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;50&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_50LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
                <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">1000</stringProp>
                  <stringProp name="RandomTimer.range">500</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x students and join using classcode of current teacher" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfStudentsInClass}</stringProp>
            </LoopController>
            <hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">import java.util.Date;

Date date = new Date();
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;classcode&quot;);

studentextuserid = &quot;std&quot; + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;studentextuserid&quot;, studentextuserid);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] multiProducts = {
    &quot;perfprod3&quot;, &quot;perfprod4&quot;, &quot;perfprod5&quot;, &quot;perfprod6&quot;, &quot;perfprod7&quot;,
    &quot;perfprod8&quot;, &quot;perfprod9&quot;, &quot;perfprod10&quot;, &quot;perfprod11&quot;, &quot;perfprod12&quot;
};

for (int i = 0; i &lt; multiProducts.length; i++) {
    vars.put(&quot;multiProduct&quot; + (i + 1), multiProducts[i]);
}

vars.put(&quot;productcode&quot;, multiProducts[0]);
vars.put(&quot;peCount&quot;, String.valueOf(multiProducts.length));</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with product_code and class_code" enabled="true">
                <stringProp name="IncludeController.includepath">join_Spaces_with_product_code_and_class_code.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">multiProduct</stringProp>
                <stringProp name="ForeachController.returnVal">multiProduct</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">1</stringProp>
                <stringProp name="ForeachController.endIndex">${peCount}</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Entitle User with Product" enabled="true">
                  <stringProp name="IncludeController.includepath">Entitle_User_With_Product.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="false">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="false">
                <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_student.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">timestamp = vars.get(&quot;date&quot;);

FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameStd&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
              <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameTch&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - 3B15PE - 500LOs" enabled="true">
            <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;3B15PE&quot;;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">String[] multiProducts = {
    &quot;perfprod5&quot;, &quot;perfprod6&quot;, &quot;perfprod7&quot;,
    &quot;perfprod8&quot;, &quot;perfprod9&quot;, &quot;perfprod10&quot;, &quot;perfprod11&quot;, &quot;perfprod12&quot;, 
    &quot;perfprod86&quot;, &quot;perfprod87&quot;, &quot;perfprod88&quot;, &quot;perfprod89&quot;, &quot;perfprod90&quot;, 
    &quot;perfprod91&quot;, &quot;perfprod92&quot; 
};

String multiProductsAsString = &quot;\&quot;perfprod5\&quot;, \&quot;perfprod6\&quot;, \&quot;perfprod7\&quot;, \&quot;perfprod8\&quot;, \&quot;perfprod9\&quot;, \&quot;perfprod10\&quot;, \&quot;perfprod11\&quot;, \&quot;perfprod12\&quot;, \&quot;perfprod86\&quot;, \&quot;perfprod87\&quot;, \&quot;perfprod88\&quot;, \&quot;perfprod89\&quot;, \&quot;perfprod90\&quot;, \&quot;perfprod91\&quot;, \&quot;perfprod92\&quot;&quot;;

for (int i = 0; i &lt; multiProducts.length; i++) {
    vars.put(&quot;multiProduct&quot; + (i + 1), multiProducts[i]);
}

vars.put(&quot;productArrayString&quot;, multiProductsAsString);
vars.put(&quot;productcode&quot;, multiProducts[0]);
vars.put(&quot;peCount&quot;, String.valueOf(multiProducts.length));</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate multi products with a class" enabled="true">
              <stringProp name="IncludeController.includepath">associate_multi_products_with_class.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [300-330]" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">300000</stringProp>
                <stringProp name="RandomTimer.range">30000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x assignments" enabled="false">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfAssignmentsInClass}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end">${noOfAssignmentsInClass}</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">assignmentCount</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix5 = vars.get(&quot;noOfLOsInAssignment&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix5 + &quot;LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <InterleaveControl guiclass="InterleaveControlGui" testclass="InterleaveControl" testname="Interleave Controller" enabled="true">
                <intProp name="InterleaveControl.style">1</intProp>
                <boolProp name="InterleaveControl.accrossThreads">false</boolProp>
              </InterleaveControl>
              <hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod5&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod6&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod7&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod8&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod9&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod10&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod11&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod12&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod86&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod87&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod88&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod89&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod90&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod91&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod92&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment}&quot; == &quot;20&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_20LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment}&quot; == &quot;30&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_30LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment}&quot; == &quot;50&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_50LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
                <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x assignments - 1" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfAssignmentsInClass-1}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end">${noOfAssignmentsInClass-1}</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">assignmentCount</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix5 = vars.get(&quot;noOfLOsInAssignment-1&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix5 + &quot;LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544524003551/1544524304922/1544524359136&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544524003551/1544524012478/1544524057691&quot;,&quot;1544524003551/1544524012478/1544524030068&quot;,&quot;1544525043137/1544525058289/1544525097148&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544525043137/1544525058289/1544525137957&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1544524003551/1544524304922/1544524324762&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544525043137/1544525058289/1544525090848&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1544524003551/1544524012478/1544524071582&quot;,&quot;1544524003551/1544524304922/1544524341184&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544525043137/1544525058289/1544525125172&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1544524003551/1544524304922/1544524313700&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544524003551/1544524012478/1544524084276&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544524003551/1544524304922/1544524387792&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1544524003551/1544524012478/1544524099346&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1544525043137/1544525058289/1544525114886&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544524003551/1544524012478/1544524044427&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544524003551/1544524304922/1544524376121&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] stringArray = {&quot;perfprod5&quot;, &quot;perfprod6&quot;, &quot;perfprod7&quot;,
    &quot;perfprod8&quot;, &quot;perfprod9&quot;, &quot;perfprod10&quot;, &quot;perfprod11&quot;, &quot;perfprod12&quot;, 
    &quot;perfprod86&quot;, &quot;perfprod87&quot;, &quot;perfprod88&quot;, &quot;perfprod89&quot;, &quot;perfprod90&quot;, 
    &quot;perfprod91&quot;, &quot;perfprod92&quot;};

int randomIndex = (int) (Math.random() * stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;20&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_20LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;30&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_30LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;50&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_50LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
                <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="false">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x students and join using classcode of current teacher" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfStudentsInClass}</stringProp>
            </LoopController>
            <hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">import java.util.Date;

Date date = new Date();
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;classcode&quot;);

studentextuserid = &quot;std&quot; + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;studentextuserid&quot;, studentextuserid);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] multiProducts = {
    &quot;perfprod5&quot;, &quot;perfprod6&quot;, &quot;perfprod7&quot;,
    &quot;perfprod8&quot;, &quot;perfprod9&quot;, &quot;perfprod10&quot;, &quot;perfprod11&quot;, &quot;perfprod12&quot;, 
    &quot;perfprod86&quot;, &quot;perfprod87&quot;, &quot;perfprod88&quot;, &quot;perfprod89&quot;, &quot;perfprod90&quot;, 
    &quot;perfprod91&quot;, &quot;perfprod92&quot;
};

for (int i = 0; i &lt; multiProducts.length; i++) {
    vars.put(&quot;multiProduct&quot; + (i + 1), multiProducts[i]);
}

vars.put(&quot;productcode&quot;, multiProducts[0]);
vars.put(&quot;peCount&quot;, String.valueOf(multiProducts.length));</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with product_code and class_code" enabled="true">
                <stringProp name="IncludeController.includepath">join_Spaces_with_product_code_and_class_code.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">multiProduct</stringProp>
                <stringProp name="ForeachController.returnVal">multiProduct</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">1</stringProp>
                <stringProp name="ForeachController.endIndex">${peCount}</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Entitle User with Product" enabled="true">
                  <stringProp name="IncludeController.includepath">Entitle_User_With_Product.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="false">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="false">
                <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_student.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">timestamp = vars.get(&quot;date&quot;);

FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameStd&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
              <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameTch&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - 2B15PE - 650LOs" enabled="true">
            <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;2B15PE&quot;;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">String[] multiProducts = {
    &quot;perfprod41&quot;, &quot;perfprod42&quot;, &quot;perfprod43&quot;, &quot;perfprod44&quot;, &quot;perfprod45&quot;,
    &quot;perfprod46&quot;, &quot;perfprod47&quot;, &quot;perfprod48&quot;, &quot;perfprod49&quot;, &quot;perfprod50&quot;,
    &quot;perfprod101&quot;, &quot;perfprod102&quot;, &quot;perfprod103&quot;, &quot;perfprod104&quot;, &quot;perfprod105&quot;
};

String multiProductsAsString = &quot;\&quot;perfprod41\&quot;, \&quot;perfprod42\&quot;, \&quot;perfprod43\&quot;, \&quot;perfprod44\&quot;, \&quot;perfprod45\&quot;, \&quot;perfprod46\&quot;, \&quot;perfprod47\&quot;, \&quot;perfprod48\&quot;, \&quot;perfprod49\&quot;, \&quot;perfprod50\&quot;, \&quot;perfprod101\&quot;, \&quot;perfprod102\&quot;, \&quot;perfprod103\&quot;, \&quot;perfprod104\&quot;, \&quot;perfprod105\&quot;&quot;;

for (int i = 0; i &lt; multiProducts.length; i++) {
    vars.put(&quot;multiProduct&quot; + (i + 1), multiProducts[i]);
}

vars.put(&quot;productArrayString&quot;, multiProductsAsString);
vars.put(&quot;productcode&quot;, multiProducts[0]);
vars.put(&quot;peCount&quot;, String.valueOf(multiProducts.length));</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate multi products with a class" enabled="true">
              <stringProp name="IncludeController.includepath">associate_multi_products_with_class.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [300-330]" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">300000</stringProp>
                <stringProp name="RandomTimer.range">30000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x assignments" enabled="false">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfAssignmentsInClass}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end">${noOfAssignmentsInClass}</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">assignmentCount</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix5 = vars.get(&quot;noOfLOsInAssignment&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix5 + &quot;LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <InterleaveControl guiclass="InterleaveControlGui" testclass="InterleaveControl" testname="Interleave Controller" enabled="true">
                <intProp name="InterleaveControl.style">1</intProp>
                <boolProp name="InterleaveControl.accrossThreads">false</boolProp>
              </InterleaveControl>
              <hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod41&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod42&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod43&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod44&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod45&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod46&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod47&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod48&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod49&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod50&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod101&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod102&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod103&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod104&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod105&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment}&quot; == &quot;20&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_20LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment}&quot; == &quot;30&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_30LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment}&quot; == &quot;50&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_50LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
                <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x assignments - 1" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfAssignmentsInClass-1}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end">${noOfAssignmentsInClass-1}</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">assignmentCount</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix5 = vars.get(&quot;noOfLOsInAssignment-1&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix5 + &quot;LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544593830881/1544593964252/1544594102416&quot;,&quot;1676462274659/1676462274660/1676462274700&quot;,&quot;1676462274557/1676462274558/1676462274576&quot;,&quot;1676462274659/1676462274660/1676462274713&quot;,&quot;1544592857014/1544592865722/1544593072380&quot;,&quot;1676462274557/1676462274558/1676462274571&quot;,&quot;1544592857014/1544592865722/1544593123201&quot;,&quot;1544593830881/1544593842258/1544593905062&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1676462274659/1676462274660/1676462274755&quot;,&quot;1676462274557/1676462274558/1676462274588&quot;,&quot;1676462274557/1676462274558/1676462274585&quot;,&quot;1544593830881/1544596291616/1544596322099&quot;,&quot;1676462274659/1676462274660/1676462274729&quot;,&quot;1544596644314/1544596678647/1544596745950&quot;,&quot;1544593830881/1544593842258/1544593925051&quot;,&quot;1676462274659/1676462274660/1676462274863&quot;,&quot;1544524003551/1544524012478/1544524084276&quot;,&quot;1676462274659/1676462274660/1676462274719&quot;,&quot;1544524003551/1544524304922/1544524313700&quot;,&quot;1676462274659/1676462274660/1676462274862&quot;,&quot;1544592286221/1544592379241/1544592438186&quot;,&quot;1676462274557/1676462274558/1676462274602&quot;,&quot;1676462274659/1676462274660/1676462274689&quot;,&quot;1676462274659/1676462274660/1676462274724&quot;,&quot;1544591089661/1544591260222/1544591284840&quot;,&quot;1676462274659/1676462274660/1676462274858&quot;,&quot;1676462274557/1676462274558/1676462274590&quot;,&quot;1544592857014/1544593139545/1544593488247&quot;,&quot;1676462274659/1676462274660/1676462274733&quot;,&quot;1544596644314/1544596802487/1544596921860&quot;,&quot;1676462274659/1676462274660/1676462274759&quot;,&quot;1676462274557/1676462274558/1676462274614&quot;,&quot;1676462274557/1676462274558/1676462274560&quot;,&quot;1544526345845/1544526671965/1544526688230&quot;,&quot;1544593830881/1544593964252/1544594177257&quot;,&quot;1676462274659/1676462274660/1676462274753&quot;,&quot;1676462274659/1676462274660/1676462274672&quot;,&quot;1676462274659/1676462274660/1676462274747&quot;,&quot;1544525590768/1544525595533/1544525649026&quot;,&quot;1676462274659/1676462274660/1676462274848&quot;,&quot;1544591089661/1544591260222/1544591363137&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1676462274659/1676462274660/1676462274756&quot;,&quot;1676462274659/1676462274660/1676462274860&quot;,&quot;1544593830881/1544596494652/1544596529922&quot;,&quot;1676462274659/1676462274660/1676462274857&quot;,&quot;1676462274557/1676462274558/1676462274615&quot;,&quot;1676462274659/1676462274660/1676462274851&quot;,&quot;1544592286221/1544592474205/1544592491253&quot;,&quot;1544591751639/1544591756584/1544591852005&quot;,&quot;1676462274659/1676462274660/1676462274715&quot;,&quot;1544525043137/1544525159358/1544525175677&quot;,&quot;1676462274557/1676462274558/1676462274568&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592857014/1544592865722/1544593093552&quot;,&quot;1676462274557/1676462274558/1676462274570&quot;,&quot;1676462274659/1676462274660/1676462274866&quot;,&quot;1544525590768/1544525595533/1544525627465&quot;,&quot;1544525590768/1544525683364/1544525729515&quot;,&quot;1544525043137/1544525058289/1544525090848&quot;,&quot;1676462274659/1676462274660/1676462274701&quot;,&quot;1544591751639/1544592145731/1544592176780&quot;,&quot;1676462274659/1676462274660/1676462274859&quot;,&quot;1676462274557/1676462274558/1676462274609&quot;,&quot;1676462274659/1676462274660/1676462274718&quot;,&quot;1676462274557/1676462274558/1676462274580&quot;,&quot;1544525590768/1544525595533/1544525635696&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544525043137/1544525058289/1544525137957&quot;,&quot;1676462274659/1676462274660/1676462274855&quot;,&quot;1544592286221/1544592379241/1544592404760&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544591751639/1544591989858/1544592034736&quot;,&quot;1544592286221/1544592379241/1544592422449&quot;,&quot;1676462274659/1676462274660/1676462274699&quot;,&quot;1544592857014/1544592865722/1544593104748&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1544525043137/1544525159358/1544525239184&quot;,&quot;1676462274659/1676462274660/1676462274717&quot;,&quot;1676462274659/1676462274660/1676462274728&quot;,&quot;1676462274557/1676462274558/1676462274610&quot;,&quot;1676462274557/1676462274558/1676462274598&quot;,&quot;1544524003551/1544524012478/1544524057691&quot;,&quot;1544524003551/1544524304922/1544524359136&quot;,&quot;1676462274659/1676462274660/1676462274870&quot;,&quot;1676462274659/1676462274660/1676462274704&quot;,&quot;1544526345845/1544526589100/1544526657285&quot;,&quot;1544526345845/1544526589100/1544526610825&quot;,&quot;1544524003551/1544524012478/1544524099346&quot;,&quot;1544526345845/1544526589100/1544526623799&quot;,&quot;1544591751639/1544591859950/1544591895035&quot;,&quot;1676462274659/1676462274660/1676462274708&quot;,&quot;1676462274659/1676462274660/1676462274838&quot;,&quot;1676462274557/1676462274558/1676462274608&quot;,&quot;1544525043137/1544525058289/1544525114886&quot;,&quot;1676462274659/1676462274660/1676462274836&quot;,&quot;1544592286221/1544592520233/1544592540334&quot;,&quot;1544591089661/1544591364773/1544591392809&quot;,&quot;1544526345845/1544528319371/1544528345283&quot;,&quot;1676462274557/1676462274558/1676462274578&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544593830881/1544593842258/1544593889640&quot;,&quot;1676462274557/1676462274558/1676462274566&quot;,&quot;1544591089661/1544591099675/1544591237488&quot;,&quot;1676462274659/1676462274660/1676462274853&quot;,&quot;1544526345845/1544526671965/1544526721801&quot;,&quot;1544596644314/1544596802487/1544596845016&quot;,&quot;1676462274659/1676462274660/1676462274842&quot;,&quot;1544525590768/1544525595533/1544525663048&quot;,&quot;1544592857014/1544593139545/1544593476327&quot;,&quot;1544591089661/1544591602655/1544591636888&quot;,&quot;1544526345845/1544528319371/1544528334775&quot;,&quot;1544592286221/1544592291887/1544592370486&quot;,&quot;1544591089661/1544591260222/1544591295680&quot;,&quot;1676462274659/1676462274660/1676462274844&quot;,&quot;1676462274557/1676462274558/1676462274589&quot;,&quot;1544592857014/1544593529004/1544593551477&quot;,&quot;1544526345845/1544526671965/1544526695320&quot;,&quot;1676462274557/1676462274558/1676462274601&quot;,&quot;1544526345845/1544526589100/1544526638110&quot;,&quot;1676462274659/1676462274660/1676462274692&quot;,&quot;1544525043137/1544525159358/1544525217177&quot;,&quot;1676462274557/1676462274558/1676462274599&quot;,&quot;1676462274659/1676462274660/1676462274730&quot;,&quot;1676462274659/1676462274660/1676462274745&quot;,&quot;1676462274557/1676462274558/1676462274569&quot;,&quot;1676462274557/1676462274558/1676462274572&quot;,&quot;1544596644314/1544597091060/1544597121860&quot;,&quot;1544596644314/1544596678647/1544596768254&quot;,&quot;1544596644314/1544596678647/1544596792897&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544596678647/1544596761923&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1676462274659/1676462274660/1676462274738&quot;,&quot;1544592286221/1544592520233/1544592555974&quot;,&quot;1544592857014/1544593139545/1544593187008&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544596644314/1544597220792/1544597275965&quot;,&quot;1676462274659/1676462274660/1676462274839&quot;,&quot;1676462274659/1676462274660/1676462274749&quot;,&quot;1544524003551/1544524304922/1544524324762&quot;,&quot;1544591751639/1544591937229/1544591951092&quot;,&quot;1676462274659/1676462274660/1676462274869&quot;,&quot;1544525043137/1544525159358/1544525263160&quot;,&quot;1676462274557/1676462274558/1676462274582&quot;,&quot;1544593830881/1544593964252/1544594135462&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544526345845/1544526589100/1544526606750&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1676462274557/1676462274558/1676462274607&quot;,&quot;1676462274557/1676462274558/1676462274603&quot;,&quot;1676462274659/1676462274660/1676462274723&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544592286221/1544592623523/1544592658543&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274557/1676462274558/1676462274596&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1544596644314/1544597008306/1544597032165&quot;,&quot;1544525590768/1544525683364/1544525756801&quot;,&quot;1544591089661/1544591412698/1544591455780&quot;,&quot;1544591751639/1544591756584/1544591814105&quot;,&quot;1676462274659/1676462274660/1676462274673&quot;,&quot;1676462274659/1676462274660/1676462274694&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1544526345845/1544526671965/1544526710051&quot;,&quot;1676462274659/1676462274660/1676462274681&quot;,&quot;1544596644314/1544596802487/1544596877787&quot;,&quot;1676462274659/1676462274660/1676462274711&quot;,&quot;1676462274557/1676462274558/1676462274613&quot;,&quot;1544525590768/1544525683364/1544525709799&quot;,&quot;1676462274659/1676462274660/1676462274685&quot;,&quot;1544526345845/1544526961740/1544527008225&quot;,&quot;1676462274659/1676462274660/1676462274714&quot;,&quot;1544525043137/1544525058289/1544525125172&quot;,&quot;1544525043137/1544525159358/1544525192972&quot;,&quot;1544525590768/1544525683364/1544525720457&quot;,&quot;1676462274659/1676462274660/1676462274748&quot;,&quot;1544524003551/1544524012478/1544524030068&quot;,&quot;1676462274659/1676462274660/1676462274757&quot;,&quot;1544524003551/1544524304922/1544524387792&quot;,&quot;1676462274659/1676462274660/1676462274840&quot;,&quot;1676462274557/1676462274558/1676462274561&quot;,&quot;1544591751639/1544591756584/1544591786410&quot;,&quot;1544526345845/1544526671965/1544526763389&quot;,&quot;1544596644314/1544596678647/1544596731689&quot;,&quot;1676462274659/1676462274660/1676462274852&quot;,&quot;1676462274659/1676462274660/1676462274677&quot;,&quot;1544525590768/1544525595533/1544525611432&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1544591751639/1544591756584/1544591842867&quot;,&quot;1544593830881/1544596291616/1544596327463&quot;,&quot;1676462274659/1676462274660/1676462274712&quot;,&quot;1676462274659/1676462274660/1676462274845&quot;,&quot;1544592286221/1544592379241/1544592448263&quot;,&quot;1544593830881/1544593964252/1544594078882&quot;,&quot;1676462274557/1676462274558/1676462274562&quot;,&quot;1544524003551/1544524304922/1544524376121&quot;,&quot;1676462274659/1676462274660/1676462274735&quot;,&quot;1544592857014/1544593139545/1544593454057&quot;,&quot;1676462274659/1676462274660/1676462274850&quot;,&quot;1544592857014/1544593585947/1544593632079&quot;,&quot;1544592286221/1544592379241/1544592415158&quot;,&quot;1544592286221/1544592623523/1544592648386&quot;,&quot;1676462274557/1676462274558/1676462274586&quot;,&quot;1676462274659/1676462274660/1676462274740&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593585947/1544593606215&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1544591751639/1544591859950/1544591923488&quot;,&quot;1676462274659/1676462274660/1676462274725&quot;,&quot;1544592857014/1544593703192/1544593752239&quot;,&quot;1676462274659/1676462274660/1676462274710&quot;,&quot;1544593830881/1544596494652/1544596513093&quot;,&quot;1544525590768/1544525683364/1544525734676&quot;,&quot;1544593830881/1544593842258/1544593932560&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1544592857014/1544593703192/1544593743725&quot;,&quot;1544525043137/1544525058289/1544525097148&quot;,&quot;1544596644314/1544597220792/1544597245750&quot;,&quot;1676462274557/1676462274558/1676462274573&quot;,&quot;1544592857014/1544592865722/1544593079694&quot;,&quot;1544591751639/1544591756584/1544591792950&quot;,&quot;1676462274659/1676462274660/1676462274736&quot;,&quot;1676462274659/1676462274660/1676462274691&quot;,&quot;1676462274659/1676462274660/1676462274837&quot;,&quot;1676462274557/1676462274558/1676462274584&quot;,&quot;1676462274659/1676462274660/1676462274695&quot;,&quot;1676462274659/1676462274660/1676462274679&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1676462274557/1676462274558/1676462274612&quot;,&quot;1676462274659/1676462274660/1676462274737&quot;,&quot;1676462274659/1676462274660/1676462274849&quot;,&quot;1544525590768/1544525595533/1544525679427&quot;,&quot;1544524003551/1544524304922/1544524341184&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1676462274659/1676462274660/1676462274758&quot;,&quot;1676462274659/1676462274660/1676462274854&quot;,&quot;1676462274659/1676462274660/1676462274690&quot;,&quot;1544596644314/1544597220792/1544597262426&quot;,&quot;1676462274557/1676462274558/1676462274591&quot;,&quot;1676462274659/1676462274660/1676462274846&quot;,&quot;1676462274659/1676462274660/1676462274856&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1676462274557/1676462274558/1676462274611&quot;,&quot;1676462274659/1676462274660/1676462274703&quot;,&quot;1676462274557/1676462274558/1676462274593&quot;,&quot;1676462274659/1676462274660/1676462274702&quot;,&quot;1676462274557/1676462274558/1676462274605&quot;,&quot;1676462274659/1676462274660/1676462274843&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544593830881/1544593964252/1544594113782&quot;,&quot;1544593830881/1544593964252/1544594194047&quot;,&quot;1676462274659/1676462274660/1676462274671&quot;,&quot;1676462274557/1676462274558/1676462274604&quot;,&quot;1676462274659/1676462274660/1676462274721&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544591089661/1544591260222/1544591320423&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544591751639/1544591989858/1544592017149&quot;,&quot;1676462274557/1676462274558/1676462274581&quot;,&quot;1676462274659/1676462274660/1676462274680&quot;,&quot;1544592857014/1544593585947/1544593620647&quot;,&quot;1676462274659/1676462274660/1676462274746&quot;,&quot;1544596644314/1544596802487/1544596858389&quot;,&quot;1544526345845/1544526961740/1544526994099&quot;,&quot;1676462274659/1676462274660/1676462274697&quot;,&quot;1544591089661/1544591412698/1544591439057&quot;,&quot;1544592286221/1544592379241/1544592466092&quot;,&quot;1544593830881/1544596494652/1544596545929&quot;,&quot;1676462274557/1676462274558/1676462274592&quot;,&quot;1676462274659/1676462274660/1676462274865&quot;,&quot;1676462274557/1676462274558/1676462274565&quot;,&quot;1676462274659/1676462274660/1676462274741&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544592286221/1544592291887/1544592347743&quot;,&quot;1544596644314/1544597091060/1544597104557&quot;,&quot;1544524003551/1544524012478/1544524044427&quot;,&quot;1676462274557/1676462274558/1676462274564&quot;,&quot;1676462274659/1676462274660/1676462274727&quot;,&quot;1676462274659/1676462274660/1676462274705&quot;,&quot;1544591751639/1544591859950/1544591889129&quot;,&quot;1676462274659/1676462274660/1676462274744&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1676462274659/1676462274660/1676462274696&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1676462274557/1676462274558/1676462274583&quot;,&quot;1544526345845/1544526589100/1544526644717&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1676462274557/1676462274558/1676462274616&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1676462274659/1676462274660/1676462274693&quot;,&quot;1544592286221/1544592291887/1544592333414&quot;,&quot;1676462274659/1676462274660/1676462274739&quot;,&quot;1676462274659/1676462274660/1676462274707&quot;,&quot;1544591089661/1544591602655/1544591649137&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1676462274557/1676462274558/1676462274563&quot;,&quot;1544596644314/1544596802487/1544596904838&quot;,&quot;1676462274557/1676462274558/1676462274600&quot;,&quot;1676462274659/1676462274660/1676462274720&quot;,&quot;1544591089661/1544591412698/1544591428190&quot;,&quot;1676462274557/1676462274558/1676462274594&quot;,&quot;1676462274557/1676462274558/1676462274567&quot;,&quot;1676462274659/1676462274660/1676462274678&quot;,&quot;1544592857014/1544593703192/1544593728070&quot;,&quot;1544593830881/1544596248781/1544596271349&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1676462274659/1676462274660/1676462274754&quot;,&quot;1544593830881/1544593842258/1544593874472&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1676462274659/1676462274660/1676462274698&quot;,&quot;1544593830881/1544596291616/1544596347700&quot;,&quot;1544592286221/1544592291887/1544592314873&quot;,&quot;1544524003551/1544524012478/1544524071582&quot;,&quot;1676462274659/1676462274660/1676462274687&quot;,&quot;1544592857014/1544593139545/1544593471128&quot;,&quot;1676462274659/1676462274660/1676462274847&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544591751639/1544591859950/1544591913490&quot;,&quot;1544592857014/1544592865722/1544593053271&quot;,&quot;1676462274557/1676462274558/1676462274606&quot;,&quot;1676462274659/1676462274660/1676462274726&quot;,&quot;1676462274659/1676462274660/1676462274709&quot;,&quot;1676462274659/1676462274660/1676462274722&quot;,&quot;1544591751639/1544591989858/1544592010989&quot;,&quot;1544593830881/1544593842258/1544593949312&quot;,&quot;1544591751639/1544591756584/1544591826125&quot;,&quot;1676462274659/1676462274660/1676462274867&quot;,&quot;1544526345845/1544526961740/1544526980657&quot;,&quot;1676462274659/1676462274660/1676462274674&quot;,&quot;1544592857014/1544593139545/1544593173865&quot;,&quot;1676462274659/1676462274660/1676462274731&quot;,&quot;1676462274659/1676462274660/1676462274732&quot;,&quot;1544596644314/1544596802487/1544596890399&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274686&quot;,&quot;1676462274557/1676462274558/1676462274579&quot;,&quot;1676462274659/1676462274660/1676462274751&quot;,&quot;1544591089661/1544591099675/1544591198772&quot;,&quot;1544591089661/1544591260222/1544591341221&quot;,&quot;1544596644314/1544596678647/1544596711546&quot;,&quot;1544591089661/1544591099675/1544591219876&quot;,&quot;1544525043137/1544525159358/1544525246748&quot;,&quot;1544591089661/1544591099675/1544591247402&quot;,&quot;1676462274659/1676462274660/1676462274682&quot;,&quot;1676462274557/1676462274558/1676462274597&quot;,&quot;1676462274557/1676462274558/1676462274577&quot;,&quot;1676462274557/1676462274558/1676462274595&quot;,&quot;1676462274659/1676462274660/1676462274752&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544592286221/1544592291887/1544592322911&quot;,&quot;1676462274659/1676462274660/1676462274688&quot;,&quot;1676462274659/1676462274660/1676462274760&quot;,&quot;1544591089661/1544591260222/1544591334581&quot;,&quot;1544591751639/1544592145731/1544592165309&quot;,&quot;1544592286221/1544592623523/1544592671565&quot;,&quot;1676462274659/1676462274660/1676462274706&quot;,&quot;1676462274557/1676462274558/1676462274575&quot;,&quot;1544525043137/1544525058289/1544525143762&quot;,&quot;1544525590768/1544525683364/1544525778291&quot;,&quot;1676462274659/1676462274660/1676462274861&quot;,&quot;1676462274659/1676462274660/1676462274716&quot;,&quot;1676462274557/1676462274558/1676462274574&quot;,&quot;1676462274659/1676462274660/1676462274676&quot;,&quot;1676462274557/1676462274558/1676462274559&quot;,&quot;1544596644314/1544597091060/1544597149347&quot;,&quot;1544526345845/1544526671965/1544526728620&quot;,&quot;1676462274659/1676462274660/1676462274734&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1676462274659/1676462274660/1676462274868&quot;,&quot;1544526345845/1544528319371/1544528367998&quot;,&quot;1676462274659/1676462274660/1676462274864&quot;,&quot;1676462274557/1676462274558/1676462274587&quot;,&quot;1544591089661/1544591099675/1544591181584&quot;,&quot;1676462274659/1676462274660/1676462274742&quot;,&quot;1676462274659/1676462274660/1676462274683&quot;,&quot;1676462274659/1676462274660/1676462274675&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274750&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544591751639/1544592145731/1544592194540&quot;,&quot;1544592286221/1544592520233/1544592561671&quot;,&quot;1676462274659/1676462274660/1676462274841&quot;,&quot;1544525043137/1544525280855/1544525289279&quot;,&quot;1544591089661/1544591099675/1544591165699&quot;,&quot;1544592286221/1544592291887/1544592363784&quot;,&quot;1676462274659/1676462274660/1676462274684&quot;,&quot;1544591089661/1544591602655/1544591669971&quot;,&quot;1676462274659/1676462274660/1676462274743&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] stringArray = {&quot;perfprod41&quot;, &quot;perfprod42&quot;, &quot;perfprod43&quot;, &quot;perfprod44&quot;, &quot;perfprod45&quot;,
    &quot;perfprod46&quot;, &quot;perfprod47&quot;, &quot;perfprod48&quot;, &quot;perfprod49&quot;, &quot;perfprod50&quot;,
    &quot;perfprod101&quot;, &quot;perfprod102&quot;, &quot;perfprod103&quot;, &quot;perfprod104&quot;, &quot;perfprod105&quot;};

int randomIndex = (int) (Math.random() * stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;20&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_20LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;30&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_30LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;50&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_50LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;200&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_200LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;400&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_400LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
                <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="false">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x students and join using classcode of current teacher" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfStudentsInClass}</stringProp>
            </LoopController>
            <hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">import java.util.Date;

Date date = new Date();
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;classcode&quot;);

studentextuserid = &quot;std&quot; + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;studentextuserid&quot;, studentextuserid);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] multiProducts = {
    &quot;perfprod41&quot;, &quot;perfprod42&quot;, &quot;perfprod43&quot;, &quot;perfprod44&quot;, &quot;perfprod45&quot;,
    &quot;perfprod46&quot;, &quot;perfprod47&quot;, &quot;perfprod48&quot;, &quot;perfprod49&quot;, &quot;perfprod50&quot;,
    &quot;perfprod101&quot;, &quot;perfprod102&quot;, &quot;perfprod103&quot;, &quot;perfprod104&quot;, &quot;perfprod105&quot;
};

for (int i = 0; i &lt; multiProducts.length; i++) {
    vars.put(&quot;multiProduct&quot; + (i + 1), multiProducts[i]);
}

vars.put(&quot;productcode&quot;, multiProducts[0]);
vars.put(&quot;peCount&quot;, String.valueOf(multiProducts.length));</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with product_code and class_code" enabled="true">
                <stringProp name="IncludeController.includepath">join_Spaces_with_product_code_and_class_code.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">multiProduct</stringProp>
                <stringProp name="ForeachController.returnVal">multiProduct</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">1</stringProp>
                <stringProp name="ForeachController.endIndex">${peCount}</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Entitle User with Product" enabled="true">
                  <stringProp name="IncludeController.includepath">Entitle_User_With_Product.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="false">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="false">
                <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_student.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">timestamp = vars.get(&quot;date&quot;);

FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameStd&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
              <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameTch&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - 5B15PE - 300-650LOs" enabled="false">
            <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;5B15PE&quot;;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">String[] multiProducts = {
    &quot;evpel1&quot;, &quot;perfb1pe1&quot;, &quot;perfb1pe2&quot;, &quot;perfprod3&quot;, &quot;perfprod4&quot;, &quot;perfprod5&quot;, &quot;perfprod6&quot;, &quot;perfprod7&quot;, &quot;perfprod8&quot;, &quot;perfprod101&quot;, &quot;perfprod102&quot;, &quot;perfprod103&quot;, &quot;perfprod104&quot;, &quot;perfprod105&quot;, &quot;perfprodct3&quot;
};

String multiProductsAsString = &quot;\&quot;evpel1\&quot;, \&quot;perfb1pe1\&quot;, \&quot;perfb1pe2\&quot;, \&quot;perfprod3\&quot;, \&quot;perfprod4\&quot;, \&quot;perfprod5\&quot;, \&quot;perfprod6\&quot;, \&quot;perfprod7\&quot;, \&quot;perfprod8\&quot;, \&quot;perfprod101\&quot;, \&quot;perfprod102\&quot;, \&quot;perfprod103\&quot;, \&quot;perfprod104\&quot;, \&quot;perfprod105\&quot;, \&quot;perfprodct3\&quot;&quot;;

for (int i = 0; i &lt; multiProducts.length; i++) {
    vars.put(&quot;multiProduct&quot; + (i + 1), multiProducts[i]);
}

vars.put(&quot;productArrayString&quot;, multiProductsAsString);
vars.put(&quot;productcode&quot;, multiProducts[0]);
vars.put(&quot;peCount&quot;, String.valueOf(multiProducts.length));</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate multi products with a class" enabled="true">
              <stringProp name="IncludeController.includepath">associate_multi_products_with_class.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
                <stringProp name="RandomTimer.range">5000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [300-330]" enabled="false">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">300000</stringProp>
                <stringProp name="RandomTimer.range">30000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x assignments - 1" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfAssignmentsInClass-1}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end">${noOfAssignmentsInClass-1}</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">assignmentCount</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix5 = vars.get(&quot;noOfLOsInAssignment-1&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix5 + &quot;LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544524003551/1544524304922/1544524359136&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544524003551/1544524012478/1544524057691&quot;,&quot;1544524003551/1544524012478/1544524030068&quot;,&quot;1544525043137/1544525058289/1544525097148&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544525043137/1544525058289/1544525137957&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1544524003551/1544524304922/1544524324762&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544525043137/1544525058289/1544525090848&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1544524003551/1544524012478/1544524071582&quot;,&quot;1544524003551/1544524304922/1544524341184&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544525043137/1544525058289/1544525125172&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1544524003551/1544524304922/1544524313700&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544524003551/1544524012478/1544524084276&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544524003551/1544524304922/1544524387792&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1544524003551/1544524012478/1544524099346&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1544525043137/1544525058289/1544525114886&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544524003551/1544524012478/1544524044427&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544524003551/1544524304922/1544524376121&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] stringArray = {&quot;evpel1&quot;, &quot;perfb1pe1&quot;, &quot;perfb1pe2&quot;, &quot;perfprod3&quot;, &quot;perfprod4&quot;, &quot;perfprod5&quot;, &quot;perfprod6&quot;, &quot;perfprod7&quot;, &quot;perfprod8&quot;, &quot;perfprod101&quot;, &quot;perfprod102&quot;, &quot;perfprod103&quot;, &quot;perfprod104&quot;, &quot;perfprod105&quot;};

int randomIndex = (int) (Math.random() * stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;20&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_20LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;30&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_30LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;50&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_50LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
                <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x assignments - 2" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfAssignmentsInClass-2}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end">${noOfAssignmentsInClass-2}</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">assignmentCount</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix5 = vars.get(&quot;noOfLOsInAssignment-2&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix5 + &quot;LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1676462274659/1676462274660/1676462274741&quot;,&quot;1676462274659/1676462274660/1676462274707&quot;,&quot;1676462274659/1676462274660/1676462274744&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544591089661/1544591260222/1544591363137&quot;,&quot;1676462274659/1676462274660/1676462274671&quot;,&quot;1676462274659/1676462274660/1676462274732&quot;,&quot;1544524003551/1544524012478/1544524071582&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1676462274659/1676462274660/1676462274676&quot;,&quot;1676462274659/1676462274660/1676462274683&quot;,&quot;1544591089661/1544591602655/1544591669971&quot;,&quot;1544525590768/1544525683364/1544525729515&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1676462274659/1676462274660/1676462274701&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544525043137/1544525058289/1544525137957&quot;,&quot;1544591089661/1544591099675/1544591198772&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1676462274659/1676462274660/1676462274703&quot;,&quot;1544525043137/1544525159358/1544525192972&quot;,&quot;1676462274659/1676462274660/1676462274711&quot;,&quot;1544591089661/1544591099675/1544591165699&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544525043137/1544525159358/1544525175677&quot;,&quot;1544591089661/1544591364773/1544591392809&quot;,&quot;1676462274659/1676462274660/1676462274677&quot;,&quot;1544524003551/1544524304922/1544524324762&quot;,&quot;1676462274659/1676462274660/1676462274684&quot;,&quot;1544526345845/1544526671965/1544526695320&quot;,&quot;1676462274659/1676462274660/1676462274731&quot;,&quot;1544591089661/1544591602655/1544591649137&quot;,&quot;1676462274659/1676462274660/1676462274728&quot;,&quot;1544524003551/1544524012478/1544524030068&quot;,&quot;1676462274659/1676462274660/1676462274737&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1544526345845/1544526589100/1544526657285&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1676462274659/1676462274660/1676462274700&quot;,&quot;1544525043137/1544525159358/1544525263160&quot;,&quot;1544591089661/1544591260222/1544591320423&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1676462274659/1676462274660/1676462274723&quot;,&quot;1676462274659/1676462274660/1676462274724&quot;,&quot;1544525590768/1544525595533/1544525627465&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1676462274659/1676462274660/1676462274691&quot;,&quot;1676462274659/1676462274660/1676462274733&quot;,&quot;1676462274659/1676462274660/1676462274678&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1676462274659/1676462274660/1676462274705&quot;,&quot;1544526345845/1544526961740/1544527008225&quot;,&quot;1544524003551/1544524012478/1544524044427&quot;,&quot;1676462274659/1676462274660/1676462274714&quot;,&quot;1544591089661/1544591099675/1544591237488&quot;,&quot;1676462274659/1676462274660/1676462274713&quot;,&quot;1676462274659/1676462274660/1676462274740&quot;,&quot;1676462274659/1676462274660/1676462274729&quot;,&quot;1676462274659/1676462274660/1676462274699&quot;,&quot;1676462274659/1676462274660/1676462274693&quot;,&quot;1676462274659/1676462274660/1676462274687&quot;,&quot;1544591089661/1544591099675/1544591219876&quot;,&quot;1544526345845/1544526589100/1544526606750&quot;,&quot;1544525043137/1544525280855/1544525289279&quot;,&quot;1676462274659/1676462274660/1676462274719&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274715&quot;,&quot;1676462274659/1676462274660/1676462274708&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274702&quot;,&quot;1544525590768/1544525683364/1544525720457&quot;,&quot;1676462274659/1676462274660/1676462274675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544526345845/1544526589100/1544526638110&quot;,&quot;1676462274659/1676462274660/1676462274709&quot;,&quot;1676462274659/1676462274660/1676462274672&quot;,&quot;1676462274659/1676462274660/1676462274685&quot;,&quot;1544525590768/1544525595533/1544525635696&quot;,&quot;1676462274659/1676462274660/1676462274743&quot;,&quot;1676462274659/1676462274660/1676462274690&quot;,&quot;1676462274659/1676462274660/1676462274712&quot;,&quot;1544524003551/1544524304922/1544524313700&quot;,&quot;1544526345845/1544528319371/1544528367998&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544525590768/1544525683364/1544525756801&quot;,&quot;1676462274659/1676462274660/1676462274688&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1676462274659/1676462274660/1676462274745&quot;,&quot;1544525590768/1544525683364/1544525778291&quot;,&quot;1544525043137/1544525159358/1544525246748&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1676462274659/1676462274660/1676462274730&quot;,&quot;1676462274659/1676462274660/1676462274726&quot;,&quot;1676462274659/1676462274660/1676462274686&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274742&quot;,&quot;1544524003551/1544524304922/1544524359136&quot;,&quot;1544524003551/1544524304922/1544524376121&quot;,&quot;1676462274659/1676462274660/1676462274698&quot;,&quot;1676462274659/1676462274660/1676462274697&quot;,&quot;1676462274659/1676462274660/1676462274682&quot;,&quot;1544591089661/1544591260222/1544591334581&quot;,&quot;1676462274659/1676462274660/1676462274673&quot;,&quot;1544525043137/1544525159358/1544525217177&quot;,&quot;1544591089661/1544591260222/1544591341221&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274704&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1676462274659/1676462274660/1676462274717&quot;,&quot;1544526345845/1544526589100/1544526610825&quot;,&quot;1544591089661/1544591099675/1544591181584&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1676462274659/1676462274660/1676462274694&quot;,&quot;1676462274659/1676462274660/1676462274722&quot;,&quot;1544526345845/1544526671965/1544526721801&quot;,&quot;1544591089661/1544591412698/1544591455780&quot;,&quot;1544525043137/1544525159358/1544525239184&quot;,&quot;1676462274659/1676462274660/1676462274692&quot;,&quot;1676462274659/1676462274660/1676462274738&quot;,&quot;1676462274659/1676462274660/1676462274716&quot;,&quot;1544526345845/1544526671965/1544526728620&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544591089661/1544591412698/1544591428190&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1676462274659/1676462274660/1676462274734&quot;,&quot;1676462274659/1676462274660/1676462274736&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1544525590768/1544525595533/1544525679427&quot;,&quot;1676462274659/1676462274660/1676462274718&quot;,&quot;1544526345845/1544526671965/1544526763389&quot;,&quot;1676462274659/1676462274660/1676462274679&quot;,&quot;1676462274659/1676462274660/1676462274689&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544591089661/1544591412698/1544591439057&quot;,&quot;1676462274659/1676462274660/1676462274706&quot;,&quot;1544591089661/1544591099675/1544591247402&quot;,&quot;1676462274659/1676462274660/1676462274680&quot;,&quot;1544591089661/1544591260222/1544591295680&quot;,&quot;1544524003551/1544524304922/1544524341184&quot;,&quot;1544525590768/1544525683364/1544525734676&quot;,&quot;1676462274659/1676462274660/1676462274735&quot;,&quot;1676462274659/1676462274660/1676462274721&quot;,&quot;1544524003551/1544524012478/1544524084276&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1676462274659/1676462274660/1676462274696&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274739&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544526345845/1544526589100/1544526644717&quot;,&quot;1676462274659/1676462274660/1676462274727&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544525590768/1544525683364/1544525709799&quot;,&quot;1544524003551/1544524012478/1544524099346&quot;,&quot;1544526345845/1544526589100/1544526623799&quot;,&quot;1544525590768/1544525595533/1544525649026&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1676462274659/1676462274660/1676462274725&quot;,&quot;1544525590768/1544525595533/1544525611432&quot;,&quot;1544524003551/1544524012478/1544524057691&quot;,&quot;1544525043137/1544525058289/1544525125172&quot;,&quot;1544591089661/1544591260222/1544591284840&quot;,&quot;1544525590768/1544525595533/1544525663048&quot;,&quot;1544526345845/1544526671965/1544526710051&quot;,&quot;1544525043137/1544525058289/1544525143762&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544525043137/1544525058289/1544525114886&quot;,&quot;1544591089661/1544591602655/1544591636888&quot;,&quot;1544526345845/1544528319371/1544528345283&quot;,&quot;1544591751639/1544591756584/1544591786410&quot;,&quot;1544526345845/1544526961740/1544526980657&quot;,&quot;1676462274659/1676462274660/1676462274674&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1676462274659/1676462274660/1676462274720&quot;,&quot;1544524003551/1544524304922/1544524387792&quot;,&quot;1544525043137/1544525058289/1544525097148&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544526345845/1544528319371/1544528334775&quot;,&quot;1676462274659/1676462274660/1676462274695&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274710&quot;,&quot;1676462274659/1676462274660/1676462274681&quot;,&quot;1544526345845/1544526961740/1544526994099&quot;,&quot;1544526345845/1544526671965/1544526688230&quot;,&quot;1544525043137/1544525058289/1544525090848&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] stringArray = {&quot;perfprod3&quot;, &quot;perfprod4&quot;, &quot;perfprod5&quot;, &quot;perfprod6&quot;, &quot;perfprod7&quot;, &quot;perfprod8&quot;, &quot;perfprod101&quot;, &quot;perfprod102&quot;, &quot;perfprod103&quot;, &quot;perfprod104&quot;, &quot;perfprod105&quot;};

int randomIndex = (int) (Math.random() * stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="false">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">def variableNames = [&quot;perfprod3&quot;, &quot;perfprod4&quot;, &quot;perfprod5&quot;, &quot;perfprod6&quot;, &quot;perfprod7&quot;, &quot;perfprod8&quot;, &quot;perfprod101&quot;, &quot;perfprod102&quot;, &quot;perfprod103&quot;, &quot;perfprod104&quot;, &quot;perfprod105&quot;];

def randomIndex = (int) (Math.random() * variableNames.size());

def randomVariableName = variableNames[randomIndex];

def randomValue = vars.get(randomVariableName);

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <InterleaveControl guiclass="InterleaveControlGui" testclass="InterleaveControl" testname="Interleave Controller" enabled="false">
                <intProp name="InterleaveControl.style">1</intProp>
                <boolProp name="InterleaveControl.accrossThreads">false</boolProp>
              </InterleaveControl>
              <hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfb1pe1&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfb1pe2&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod21&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod22&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod23&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod24&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod25&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-2}&quot; == &quot;100&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_100LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-2}&quot; == &quot;200&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_200LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
                <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x assignments - 3" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfAssignmentsInClass-3}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end">${noOfAssignmentsInClass-3}</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">assignmentCount</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix5 = vars.get(&quot;noOfLOsInAssignment-3&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix5 + &quot;LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544593830881/1544593964252/1544594102416&quot;,&quot;1676462274659/1676462274660/1676462274700&quot;,&quot;1676462274557/1676462274558/1676462274576&quot;,&quot;1676462274659/1676462274660/1676462274713&quot;,&quot;1544592857014/1544592865722/1544593072380&quot;,&quot;1676462274557/1676462274558/1676462274571&quot;,&quot;1544592857014/1544592865722/1544593123201&quot;,&quot;1544593830881/1544593842258/1544593905062&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1676462274659/1676462274660/1676462274755&quot;,&quot;1676462274557/1676462274558/1676462274588&quot;,&quot;1676462274557/1676462274558/1676462274585&quot;,&quot;1544593830881/1544596291616/1544596322099&quot;,&quot;1676462274659/1676462274660/1676462274729&quot;,&quot;1544596644314/1544596678647/1544596745950&quot;,&quot;1544593830881/1544593842258/1544593925051&quot;,&quot;1676462274659/1676462274660/1676462274863&quot;,&quot;1544524003551/1544524012478/1544524084276&quot;,&quot;1676462274659/1676462274660/1676462274719&quot;,&quot;1544524003551/1544524304922/1544524313700&quot;,&quot;1676462274659/1676462274660/1676462274862&quot;,&quot;1544592286221/1544592379241/1544592438186&quot;,&quot;1676462274557/1676462274558/1676462274602&quot;,&quot;1676462274659/1676462274660/1676462274689&quot;,&quot;1676462274659/1676462274660/1676462274724&quot;,&quot;1544591089661/1544591260222/1544591284840&quot;,&quot;1676462274659/1676462274660/1676462274858&quot;,&quot;1676462274557/1676462274558/1676462274590&quot;,&quot;1544592857014/1544593139545/1544593488247&quot;,&quot;1676462274659/1676462274660/1676462274733&quot;,&quot;1544596644314/1544596802487/1544596921860&quot;,&quot;1676462274659/1676462274660/1676462274759&quot;,&quot;1676462274557/1676462274558/1676462274614&quot;,&quot;1676462274557/1676462274558/1676462274560&quot;,&quot;1544526345845/1544526671965/1544526688230&quot;,&quot;1544593830881/1544593964252/1544594177257&quot;,&quot;1676462274659/1676462274660/1676462274753&quot;,&quot;1676462274659/1676462274660/1676462274672&quot;,&quot;1676462274659/1676462274660/1676462274747&quot;,&quot;1544525590768/1544525595533/1544525649026&quot;,&quot;1676462274659/1676462274660/1676462274848&quot;,&quot;1544591089661/1544591260222/1544591363137&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1676462274659/1676462274660/1676462274756&quot;,&quot;1676462274659/1676462274660/1676462274860&quot;,&quot;1544593830881/1544596494652/1544596529922&quot;,&quot;1676462274659/1676462274660/1676462274857&quot;,&quot;1676462274557/1676462274558/1676462274615&quot;,&quot;1676462274659/1676462274660/1676462274851&quot;,&quot;1544592286221/1544592474205/1544592491253&quot;,&quot;1544591751639/1544591756584/1544591852005&quot;,&quot;1676462274659/1676462274660/1676462274715&quot;,&quot;1544525043137/1544525159358/1544525175677&quot;,&quot;1676462274557/1676462274558/1676462274568&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592857014/1544592865722/1544593093552&quot;,&quot;1676462274557/1676462274558/1676462274570&quot;,&quot;1676462274659/1676462274660/1676462274866&quot;,&quot;1544525590768/1544525595533/1544525627465&quot;,&quot;1544525590768/1544525683364/1544525729515&quot;,&quot;1544525043137/1544525058289/1544525090848&quot;,&quot;1676462274659/1676462274660/1676462274701&quot;,&quot;1544591751639/1544592145731/1544592176780&quot;,&quot;1676462274659/1676462274660/1676462274859&quot;,&quot;1676462274557/1676462274558/1676462274609&quot;,&quot;1676462274659/1676462274660/1676462274718&quot;,&quot;1676462274557/1676462274558/1676462274580&quot;,&quot;1544525590768/1544525595533/1544525635696&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544525043137/1544525058289/1544525137957&quot;,&quot;1676462274659/1676462274660/1676462274855&quot;,&quot;1544592286221/1544592379241/1544592404760&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544591751639/1544591989858/1544592034736&quot;,&quot;1544592286221/1544592379241/1544592422449&quot;,&quot;1676462274659/1676462274660/1676462274699&quot;,&quot;1544592857014/1544592865722/1544593104748&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1544525043137/1544525159358/1544525239184&quot;,&quot;1676462274659/1676462274660/1676462274717&quot;,&quot;1676462274659/1676462274660/1676462274728&quot;,&quot;1676462274557/1676462274558/1676462274610&quot;,&quot;1676462274557/1676462274558/1676462274598&quot;,&quot;1544524003551/1544524012478/1544524057691&quot;,&quot;1544524003551/1544524304922/1544524359136&quot;,&quot;1676462274659/1676462274660/1676462274870&quot;,&quot;1676462274659/1676462274660/1676462274704&quot;,&quot;1544526345845/1544526589100/1544526657285&quot;,&quot;1544526345845/1544526589100/1544526610825&quot;,&quot;1544524003551/1544524012478/1544524099346&quot;,&quot;1544526345845/1544526589100/1544526623799&quot;,&quot;1544591751639/1544591859950/1544591895035&quot;,&quot;1676462274659/1676462274660/1676462274708&quot;,&quot;1676462274659/1676462274660/1676462274838&quot;,&quot;1676462274557/1676462274558/1676462274608&quot;,&quot;1544525043137/1544525058289/1544525114886&quot;,&quot;1676462274659/1676462274660/1676462274836&quot;,&quot;1544592286221/1544592520233/1544592540334&quot;,&quot;1544591089661/1544591364773/1544591392809&quot;,&quot;1544526345845/1544528319371/1544528345283&quot;,&quot;1676462274557/1676462274558/1676462274578&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544593830881/1544593842258/1544593889640&quot;,&quot;1676462274557/1676462274558/1676462274566&quot;,&quot;1544591089661/1544591099675/1544591237488&quot;,&quot;1676462274659/1676462274660/1676462274853&quot;,&quot;1544526345845/1544526671965/1544526721801&quot;,&quot;1544596644314/1544596802487/1544596845016&quot;,&quot;1676462274659/1676462274660/1676462274842&quot;,&quot;1544525590768/1544525595533/1544525663048&quot;,&quot;1544592857014/1544593139545/1544593476327&quot;,&quot;1544591089661/1544591602655/1544591636888&quot;,&quot;1544526345845/1544528319371/1544528334775&quot;,&quot;1544592286221/1544592291887/1544592370486&quot;,&quot;1544591089661/1544591260222/1544591295680&quot;,&quot;1676462274659/1676462274660/1676462274844&quot;,&quot;1676462274557/1676462274558/1676462274589&quot;,&quot;1544592857014/1544593529004/1544593551477&quot;,&quot;1544526345845/1544526671965/1544526695320&quot;,&quot;1676462274557/1676462274558/1676462274601&quot;,&quot;1544526345845/1544526589100/1544526638110&quot;,&quot;1676462274659/1676462274660/1676462274692&quot;,&quot;1544525043137/1544525159358/1544525217177&quot;,&quot;1676462274557/1676462274558/1676462274599&quot;,&quot;1676462274659/1676462274660/1676462274730&quot;,&quot;1676462274659/1676462274660/1676462274745&quot;,&quot;1676462274557/1676462274558/1676462274569&quot;,&quot;1676462274557/1676462274558/1676462274572&quot;,&quot;1544596644314/1544597091060/1544597121860&quot;,&quot;1544596644314/1544596678647/1544596768254&quot;,&quot;1544596644314/1544596678647/1544596792897&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544596678647/1544596761923&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1676462274659/1676462274660/1676462274738&quot;,&quot;1544592286221/1544592520233/1544592555974&quot;,&quot;1544592857014/1544593139545/1544593187008&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544596644314/1544597220792/1544597275965&quot;,&quot;1676462274659/1676462274660/1676462274839&quot;,&quot;1676462274659/1676462274660/1676462274749&quot;,&quot;1544524003551/1544524304922/1544524324762&quot;,&quot;1544591751639/1544591937229/1544591951092&quot;,&quot;1676462274659/1676462274660/1676462274869&quot;,&quot;1544525043137/1544525159358/1544525263160&quot;,&quot;1676462274557/1676462274558/1676462274582&quot;,&quot;1544593830881/1544593964252/1544594135462&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544526345845/1544526589100/1544526606750&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1676462274557/1676462274558/1676462274607&quot;,&quot;1676462274557/1676462274558/1676462274603&quot;,&quot;1676462274659/1676462274660/1676462274723&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544592286221/1544592623523/1544592658543&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274557/1676462274558/1676462274596&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1544596644314/1544597008306/1544597032165&quot;,&quot;1544525590768/1544525683364/1544525756801&quot;,&quot;1544591089661/1544591412698/1544591455780&quot;,&quot;1544591751639/1544591756584/1544591814105&quot;,&quot;1676462274659/1676462274660/1676462274673&quot;,&quot;1676462274659/1676462274660/1676462274694&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1544526345845/1544526671965/1544526710051&quot;,&quot;1676462274659/1676462274660/1676462274681&quot;,&quot;1544596644314/1544596802487/1544596877787&quot;,&quot;1676462274659/1676462274660/1676462274711&quot;,&quot;1676462274557/1676462274558/1676462274613&quot;,&quot;1544525590768/1544525683364/1544525709799&quot;,&quot;1676462274659/1676462274660/1676462274685&quot;,&quot;1544526345845/1544526961740/1544527008225&quot;,&quot;1676462274659/1676462274660/1676462274714&quot;,&quot;1544525043137/1544525058289/1544525125172&quot;,&quot;1544525043137/1544525159358/1544525192972&quot;,&quot;1544525590768/1544525683364/1544525720457&quot;,&quot;1676462274659/1676462274660/1676462274748&quot;,&quot;1544524003551/1544524012478/1544524030068&quot;,&quot;1676462274659/1676462274660/1676462274757&quot;,&quot;1544524003551/1544524304922/1544524387792&quot;,&quot;1676462274659/1676462274660/1676462274840&quot;,&quot;1676462274557/1676462274558/1676462274561&quot;,&quot;1544591751639/1544591756584/1544591786410&quot;,&quot;1544526345845/1544526671965/1544526763389&quot;,&quot;1544596644314/1544596678647/1544596731689&quot;,&quot;1676462274659/1676462274660/1676462274852&quot;,&quot;1676462274659/1676462274660/1676462274677&quot;,&quot;1544525590768/1544525595533/1544525611432&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1544591751639/1544591756584/1544591842867&quot;,&quot;1544593830881/1544596291616/1544596327463&quot;,&quot;1676462274659/1676462274660/1676462274712&quot;,&quot;1676462274659/1676462274660/1676462274845&quot;,&quot;1544592286221/1544592379241/1544592448263&quot;,&quot;1544593830881/1544593964252/1544594078882&quot;,&quot;1676462274557/1676462274558/1676462274562&quot;,&quot;1544524003551/1544524304922/1544524376121&quot;,&quot;1676462274659/1676462274660/1676462274735&quot;,&quot;1544592857014/1544593139545/1544593454057&quot;,&quot;1676462274659/1676462274660/1676462274850&quot;,&quot;1544592857014/1544593585947/1544593632079&quot;,&quot;1544592286221/1544592379241/1544592415158&quot;,&quot;1544592286221/1544592623523/1544592648386&quot;,&quot;1676462274557/1676462274558/1676462274586&quot;,&quot;1676462274659/1676462274660/1676462274740&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593585947/1544593606215&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1544591751639/1544591859950/1544591923488&quot;,&quot;1676462274659/1676462274660/1676462274725&quot;,&quot;1544592857014/1544593703192/1544593752239&quot;,&quot;1676462274659/1676462274660/1676462274710&quot;,&quot;1544593830881/1544596494652/1544596513093&quot;,&quot;1544525590768/1544525683364/1544525734676&quot;,&quot;1544593830881/1544593842258/1544593932560&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1544592857014/1544593703192/1544593743725&quot;,&quot;1544525043137/1544525058289/1544525097148&quot;,&quot;1544596644314/1544597220792/1544597245750&quot;,&quot;1676462274557/1676462274558/1676462274573&quot;,&quot;1544592857014/1544592865722/1544593079694&quot;,&quot;1544591751639/1544591756584/1544591792950&quot;,&quot;1676462274659/1676462274660/1676462274736&quot;,&quot;1676462274659/1676462274660/1676462274691&quot;,&quot;1676462274659/1676462274660/1676462274837&quot;,&quot;1676462274557/1676462274558/1676462274584&quot;,&quot;1676462274659/1676462274660/1676462274695&quot;,&quot;1676462274659/1676462274660/1676462274679&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1676462274557/1676462274558/1676462274612&quot;,&quot;1676462274659/1676462274660/1676462274737&quot;,&quot;1676462274659/1676462274660/1676462274849&quot;,&quot;1544525590768/1544525595533/1544525679427&quot;,&quot;1544524003551/1544524304922/1544524341184&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1676462274659/1676462274660/1676462274758&quot;,&quot;1676462274659/1676462274660/1676462274854&quot;,&quot;1676462274659/1676462274660/1676462274690&quot;,&quot;1544596644314/1544597220792/1544597262426&quot;,&quot;1676462274557/1676462274558/1676462274591&quot;,&quot;1676462274659/1676462274660/1676462274846&quot;,&quot;1676462274659/1676462274660/1676462274856&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1676462274557/1676462274558/1676462274611&quot;,&quot;1676462274659/1676462274660/1676462274703&quot;,&quot;1676462274557/1676462274558/1676462274593&quot;,&quot;1676462274659/1676462274660/1676462274702&quot;,&quot;1676462274557/1676462274558/1676462274605&quot;,&quot;1676462274659/1676462274660/1676462274843&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544593830881/1544593964252/1544594113782&quot;,&quot;1544593830881/1544593964252/1544594194047&quot;,&quot;1676462274659/1676462274660/1676462274671&quot;,&quot;1676462274557/1676462274558/1676462274604&quot;,&quot;1676462274659/1676462274660/1676462274721&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544591089661/1544591260222/1544591320423&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544591751639/1544591989858/1544592017149&quot;,&quot;1676462274557/1676462274558/1676462274581&quot;,&quot;1676462274659/1676462274660/1676462274680&quot;,&quot;1544592857014/1544593585947/1544593620647&quot;,&quot;1676462274659/1676462274660/1676462274746&quot;,&quot;1544596644314/1544596802487/1544596858389&quot;,&quot;1544526345845/1544526961740/1544526994099&quot;,&quot;1676462274659/1676462274660/1676462274697&quot;,&quot;1544591089661/1544591412698/1544591439057&quot;,&quot;1544592286221/1544592379241/1544592466092&quot;,&quot;1544593830881/1544596494652/1544596545929&quot;,&quot;1676462274557/1676462274558/1676462274592&quot;,&quot;1676462274659/1676462274660/1676462274865&quot;,&quot;1676462274557/1676462274558/1676462274565&quot;,&quot;1676462274659/1676462274660/1676462274741&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544592286221/1544592291887/1544592347743&quot;,&quot;1544596644314/1544597091060/1544597104557&quot;,&quot;1544524003551/1544524012478/1544524044427&quot;,&quot;1676462274557/1676462274558/1676462274564&quot;,&quot;1676462274659/1676462274660/1676462274727&quot;,&quot;1676462274659/1676462274660/1676462274705&quot;,&quot;1544591751639/1544591859950/1544591889129&quot;,&quot;1676462274659/1676462274660/1676462274744&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1676462274659/1676462274660/1676462274696&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1676462274557/1676462274558/1676462274583&quot;,&quot;1544526345845/1544526589100/1544526644717&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1676462274557/1676462274558/1676462274616&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1676462274659/1676462274660/1676462274693&quot;,&quot;1544592286221/1544592291887/1544592333414&quot;,&quot;1676462274659/1676462274660/1676462274739&quot;,&quot;1676462274659/1676462274660/1676462274707&quot;,&quot;1544591089661/1544591602655/1544591649137&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1676462274557/1676462274558/1676462274563&quot;,&quot;1544596644314/1544596802487/1544596904838&quot;,&quot;1676462274557/1676462274558/1676462274600&quot;,&quot;1676462274659/1676462274660/1676462274720&quot;,&quot;1544591089661/1544591412698/1544591428190&quot;,&quot;1676462274557/1676462274558/1676462274594&quot;,&quot;1676462274557/1676462274558/1676462274567&quot;,&quot;1676462274659/1676462274660/1676462274678&quot;,&quot;1544592857014/1544593703192/1544593728070&quot;,&quot;1544593830881/1544596248781/1544596271349&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1676462274659/1676462274660/1676462274754&quot;,&quot;1544593830881/1544593842258/1544593874472&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1676462274659/1676462274660/1676462274698&quot;,&quot;1544593830881/1544596291616/1544596347700&quot;,&quot;1544592286221/1544592291887/1544592314873&quot;,&quot;1544524003551/1544524012478/1544524071582&quot;,&quot;1676462274659/1676462274660/1676462274687&quot;,&quot;1544592857014/1544593139545/1544593471128&quot;,&quot;1676462274659/1676462274660/1676462274847&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544591751639/1544591859950/1544591913490&quot;,&quot;1544592857014/1544592865722/1544593053271&quot;,&quot;1676462274557/1676462274558/1676462274606&quot;,&quot;1676462274659/1676462274660/1676462274726&quot;,&quot;1676462274659/1676462274660/1676462274709&quot;,&quot;1676462274659/1676462274660/1676462274722&quot;,&quot;1544591751639/1544591989858/1544592010989&quot;,&quot;1544593830881/1544593842258/1544593949312&quot;,&quot;1544591751639/1544591756584/1544591826125&quot;,&quot;1676462274659/1676462274660/1676462274867&quot;,&quot;1544526345845/1544526961740/1544526980657&quot;,&quot;1676462274659/1676462274660/1676462274674&quot;,&quot;1544592857014/1544593139545/1544593173865&quot;,&quot;1676462274659/1676462274660/1676462274731&quot;,&quot;1676462274659/1676462274660/1676462274732&quot;,&quot;1544596644314/1544596802487/1544596890399&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274686&quot;,&quot;1676462274557/1676462274558/1676462274579&quot;,&quot;1676462274659/1676462274660/1676462274751&quot;,&quot;1544591089661/1544591099675/1544591198772&quot;,&quot;1544591089661/1544591260222/1544591341221&quot;,&quot;1544596644314/1544596678647/1544596711546&quot;,&quot;1544591089661/1544591099675/1544591219876&quot;,&quot;1544525043137/1544525159358/1544525246748&quot;,&quot;1544591089661/1544591099675/1544591247402&quot;,&quot;1676462274659/1676462274660/1676462274682&quot;,&quot;1676462274557/1676462274558/1676462274597&quot;,&quot;1676462274557/1676462274558/1676462274577&quot;,&quot;1676462274557/1676462274558/1676462274595&quot;,&quot;1676462274659/1676462274660/1676462274752&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544592286221/1544592291887/1544592322911&quot;,&quot;1676462274659/1676462274660/1676462274688&quot;,&quot;1676462274659/1676462274660/1676462274760&quot;,&quot;1544591089661/1544591260222/1544591334581&quot;,&quot;1544591751639/1544592145731/1544592165309&quot;,&quot;1544592286221/1544592623523/1544592671565&quot;,&quot;1676462274659/1676462274660/1676462274706&quot;,&quot;1676462274557/1676462274558/1676462274575&quot;,&quot;1544525043137/1544525058289/1544525143762&quot;,&quot;1544525590768/1544525683364/1544525778291&quot;,&quot;1676462274659/1676462274660/1676462274861&quot;,&quot;1676462274659/1676462274660/1676462274716&quot;,&quot;1676462274557/1676462274558/1676462274574&quot;,&quot;1676462274659/1676462274660/1676462274676&quot;,&quot;1676462274557/1676462274558/1676462274559&quot;,&quot;1544596644314/1544597091060/1544597149347&quot;,&quot;1544526345845/1544526671965/1544526728620&quot;,&quot;1676462274659/1676462274660/1676462274734&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1676462274659/1676462274660/1676462274868&quot;,&quot;1544526345845/1544528319371/1544528367998&quot;,&quot;1676462274659/1676462274660/1676462274864&quot;,&quot;1676462274557/1676462274558/1676462274587&quot;,&quot;1544591089661/1544591099675/1544591181584&quot;,&quot;1676462274659/1676462274660/1676462274742&quot;,&quot;1676462274659/1676462274660/1676462274683&quot;,&quot;1676462274659/1676462274660/1676462274675&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274750&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544591751639/1544592145731/1544592194540&quot;,&quot;1544592286221/1544592520233/1544592561671&quot;,&quot;1676462274659/1676462274660/1676462274841&quot;,&quot;1544525043137/1544525280855/1544525289279&quot;,&quot;1544591089661/1544591099675/1544591165699&quot;,&quot;1544592286221/1544592291887/1544592363784&quot;,&quot;1676462274659/1676462274660/1676462274684&quot;,&quot;1544591089661/1544591602655/1544591669971&quot;,&quot;1676462274659/1676462274660/1676462274743&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] stringArray = {&quot;perfprod101&quot;, &quot;perfprod102&quot;, &quot;perfprod103&quot;, &quot;perfprod104&quot;, &quot;perfprod105&quot;};

int randomIndex = (int) (Math.random() * stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="false">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">def variableNames = [&quot;perfprod101&quot;, &quot;perfprod102&quot;, &quot;perfprod103&quot;, &quot;perfprod104&quot;, &quot;perfprod105&quot;];

def randomIndex = (int) (Math.random() * variableNames.size());

def randomVariableName = variableNames[randomIndex];

def randomValue = vars.get(randomVariableName);

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <InterleaveControl guiclass="InterleaveControlGui" testclass="InterleaveControl" testname="Interleave Controller" enabled="false">
                <intProp name="InterleaveControl.style">1</intProp>
                <boolProp name="InterleaveControl.accrossThreads">false</boolProp>
              </InterleaveControl>
              <hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfb1pe1&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfb1pe2&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod21&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod22&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod23&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod24&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod25&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-3}&quot; == &quot;400&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_400LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
                <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x rules" enabled="false">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfAccessRulesInClass}</stringProp>
            </LoopController>
            <hashTree>
              <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
                <stringProp name="maximumValue">9999</stringProp>
                <stringProp name="minimumValue">0000</stringProp>
                <stringProp name="outputFormat">0000</stringProp>
                <boolProp name="perThread">true</boolProp>
                <stringProp name="randomSeed"></stringProp>
                <stringProp name="variableName">randomNo</stringProp>
              </RandomVariableConfig>
              <hashTree/>
              <InterleaveControl guiclass="InterleaveControlGui" testclass="InterleaveControl" testname="Interleave Controller" enabled="true">
                <intProp name="InterleaveControl.style">1</intProp>
                <boolProp name="InterleaveControl.accrossThreads">false</boolProp>
              </InterleaveControl>
              <hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;evpel1&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfb1pe1&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfb1pe2&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod21&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod22&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod23&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod24&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod25&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAccessRule}&quot; == &quot;50&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a rule" enabled="true">
                  <stringProp name="IncludeController.includepath">Create_a_rule_100LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAccessRule}&quot; == &quot;100&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a rule" enabled="true">
                  <stringProp name="IncludeController.includepath">Create_a_rule_100LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x students and join using classcode of current teacher" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfStudentsInClass}</stringProp>
            </LoopController>
            <hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">import java.util.Date;

Date date = new Date();
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;classcode&quot;);

studentextuserid = &quot;std&quot; + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;studentextuserid&quot;, studentextuserid);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] multiProducts = {
    &quot;evpel1&quot;, &quot;perfb1pe1&quot;, &quot;perfb1pe2&quot;, &quot;perfprod3&quot;, &quot;perfprod4&quot;, &quot;perfprod5&quot;, &quot;perfprod6&quot;, &quot;perfprod7&quot;, &quot;perfprod8&quot;, &quot;perfprod101&quot;, &quot;perfprod102&quot;, &quot;perfprod103&quot;, &quot;perfprod104&quot;, &quot;perfprod105&quot;, &quot;perfprodct3&quot;
};

for (int i = 0; i &lt; multiProducts.length; i++) {
    vars.put(&quot;multiProduct&quot; + (i + 1), multiProducts[i]);
}

vars.put(&quot;productcode&quot;, multiProducts[0]);
vars.put(&quot;peCount&quot;, String.valueOf(multiProducts.length));</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with product_code and class_code" enabled="true">
                <stringProp name="IncludeController.includepath">join_Spaces_with_product_code_and_class_code.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">multiProduct</stringProp>
                <stringProp name="ForeachController.returnVal">multiProduct</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">1</stringProp>
                <stringProp name="ForeachController.endIndex">${peCount}</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Entitle User with Product" enabled="true">
                  <stringProp name="IncludeController.includepath">Entitle_User_With_Product.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="false">
                <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_student.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">timestamp = vars.get(&quot;date&quot;);

FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameStd&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
              <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameTch&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Join Spaces with product_code and class_code" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="productcode" elementType="Argument">
                <stringProp name="Argument.name">productcode</stringProp>
                <stringProp name="Argument.value">perfprod81</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">1001.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">studentextuserid,classcode</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with product_code and class_code" enabled="true">
            <stringProp name="IncludeController.includepath">join_Spaces_with_product_code_and_class_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
            <stringProp name="ForeachController.inputVal">perf21pe1</stringProp>
            <stringProp name="ForeachController.returnVal">multiProduct</stringProp>
            <boolProp name="ForeachController.useSeparator">false</boolProp>
            <stringProp name="ForeachController.startIndex">1</stringProp>
            <stringProp name="ForeachController.endIndex">5</stringProp>
          </ForeachController>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Entitle User with Product" enabled="true">
              <stringProp name="IncludeController.includepath">Entitle_User_With_Product.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="false">
            <stringProp name="ForeachController.inputVal">cat2pe</stringProp>
            <stringProp name="ForeachController.returnVal">multiProduct</stringProp>
            <boolProp name="ForeachController.useSeparator">false</boolProp>
            <stringProp name="ForeachController.startIndex">2</stringProp>
            <stringProp name="ForeachController.endIndex">6</stringProp>
          </ForeachController>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Entitle User with Product" enabled="true">
              <stringProp name="IncludeController.includepath">Entitle_User_With_Product.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="false">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Associate Bulk classes to Perf Bundle 4" enabled="false"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">classCode.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">classCode</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - Multi Umbrella" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="multiProduct9" elementType="Argument">
                <stringProp name="Argument.name">multiProduct9</stringProp>
                <stringProp name="Argument.value">perfb4pe1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct10" elementType="Argument">
                <stringProp name="Argument.name">multiProduct10</stringProp>
                <stringProp name="Argument.value">perfb4pe2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct12-DNU" elementType="Argument">
                <stringProp name="Argument.name">multiProduct12-DNU</stringProp>
                <stringProp name="Argument.value">perfb3rb</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct13-DNU" elementType="Argument">
                <stringProp name="Argument.name">multiProduct13-DNU</stringProp>
                <stringProp name="Argument.value">perfb3pplus</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct4-DNU" elementType="Argument">
                <stringProp name="Argument.name">multiProduct4-DNU</stringProp>
                <stringProp name="Argument.value">perfb1rb</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct8-DNU" elementType="Argument">
                <stringProp name="Argument.name">multiProduct8-DNU</stringProp>
                <stringProp name="Argument.value">perfb2rb</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct7--DNU" elementType="Argument">
                <stringProp name="Argument.name">multiProduct7--DNU</stringProp>
                <stringProp name="Argument.value">perfb2ebook</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct16-DNU" elementType="Argument">
                <stringProp name="Argument.name">multiProduct16-DNU</stringProp>
                <stringProp name="Argument.value">perfb4ebook</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct17-DNU" elementType="Argument">
                <stringProp name="Argument.name">multiProduct17-DNU</stringProp>
                <stringProp name="Argument.value">perfb4rb</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct18-DNU" elementType="Argument">
                <stringProp name="Argument.name">multiProduct18-DNU</stringProp>
                <stringProp name="Argument.value">perfb4pplus</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="assignedPathList" elementType="Argument">
                <stringProp name="Argument.name">assignedPathList</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Validate Class Code" enabled="true">
            <stringProp name="IncludeController.includepath">validate_classcode.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
            <stringProp name="ForeachController.inputVal">multiProduct</stringProp>
            <stringProp name="ForeachController.returnVal">multiProduct</stringProp>
            <boolProp name="ForeachController.useSeparator">false</boolProp>
            <stringProp name="ForeachController.startIndex">8</stringProp>
            <stringProp name="ForeachController.endIndex">10</stringProp>
          </ForeachController>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class" enabled="true">
              <stringProp name="IncludeController.includepath">associate_a_product_with_class_MultiProduct.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
                <stringProp name="RandomTimer.range">5000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [300-330]" enabled="false">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">300000</stringProp>
              <stringProp name="RandomTimer.range">30000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create 5 assignments" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
              <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
              <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="false">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Entitle user with product codes" enabled="false"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">studentextuserid.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">studentextuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - Multi Umbrella" enabled="false">
            <collectionProp name="Arguments.arguments">
              <elementProp name="productcode" elementType="Argument">
                <stringProp name="Argument.name">productcode</stringProp>
                <stringProp name="Argument.value">evpel1</stringProp>
                <stringProp name="Argument.desc">used in assignment creation</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="totalPECount" elementType="Argument">
                <stringProp name="Argument.name">totalPECount</stringProp>
                <stringProp name="Argument.value">16</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct1" elementType="Argument">
                <stringProp name="Argument.name">multiProduct1</stringProp>
                <stringProp name="Argument.value">perfprod26</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct2" elementType="Argument">
                <stringProp name="Argument.name">multiProduct2</stringProp>
                <stringProp name="Argument.value">perfprod27</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct3" elementType="Argument">
                <stringProp name="Argument.name">multiProduct3</stringProp>
                <stringProp name="Argument.value">perfprod28</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct4" elementType="Argument">
                <stringProp name="Argument.name">multiProduct4</stringProp>
                <stringProp name="Argument.value">perfprod29</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct5" elementType="Argument">
                <stringProp name="Argument.name">multiProduct5</stringProp>
                <stringProp name="Argument.value">perfprod30</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct6" elementType="Argument">
                <stringProp name="Argument.name">multiProduct6</stringProp>
                <stringProp name="Argument.value">perfprod31</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct7" elementType="Argument">
                <stringProp name="Argument.name">multiProduct7</stringProp>
                <stringProp name="Argument.value">perfprod32</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct8" elementType="Argument">
                <stringProp name="Argument.name">multiProduct8</stringProp>
                <stringProp name="Argument.value">perfprod5</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct9" elementType="Argument">
                <stringProp name="Argument.name">multiProduct9</stringProp>
                <stringProp name="Argument.value">perfprod6</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct10" elementType="Argument">
                <stringProp name="Argument.name">multiProduct10</stringProp>
                <stringProp name="Argument.value">perfprod7</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct11" elementType="Argument">
                <stringProp name="Argument.name">multiProduct11</stringProp>
                <stringProp name="Argument.value">perfprod8</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct12" elementType="Argument">
                <stringProp name="Argument.name">multiProduct12</stringProp>
                <stringProp name="Argument.value">perfb2pe1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct13" elementType="Argument">
                <stringProp name="Argument.name">multiProduct13</stringProp>
                <stringProp name="Argument.value">perfprodct1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct14" elementType="Argument">
                <stringProp name="Argument.name">multiProduct14</stringProp>
                <stringProp name="Argument.value">perfb1pe1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct15" elementType="Argument">
                <stringProp name="Argument.name">multiProduct15</stringProp>
                <stringProp name="Argument.value">perfb1pe2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct16" elementType="Argument">
                <stringProp name="Argument.name">multiProduct16</stringProp>
                <stringProp name="Argument.value">perfb2pe2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct17" elementType="Argument">
                <stringProp name="Argument.name">multiProduct17</stringProp>
                <stringProp name="Argument.value">perfprod2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="false">
            <stringProp name="BeanShellSampler.query">var multiProduct1;
var multiProduct2;
var multiProduct3;
var productcode;

vars.put(&quot;multiProduct1&quot;, &quot;evpel1&quot;);
vars.put(&quot;multiProduct2&quot;, &quot;perfb1pe1&quot;);
vars.put(&quot;multiProduct3&quot;, &quot;perfb1pe2&quot;);
vars.put(&quot;productcode&quot;, &quot;evpel1&quot;);</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
            <stringProp name="ForeachController.inputVal">cat2pe</stringProp>
            <stringProp name="ForeachController.returnVal">multiProduct</stringProp>
            <boolProp name="ForeachController.useSeparator">false</boolProp>
            <stringProp name="ForeachController.startIndex">2</stringProp>
            <stringProp name="ForeachController.endIndex">6</stringProp>
          </ForeachController>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Entitle User with Product" enabled="true">
              <stringProp name="IncludeController.includepath">Entitle_User_With_Product.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="false">
            <stringProp name="ForeachController.inputVal">cat5pe</stringProp>
            <stringProp name="ForeachController.returnVal">multiProduct</stringProp>
            <boolProp name="ForeachController.useSeparator">false</boolProp>
            <stringProp name="ForeachController.startIndex">0</stringProp>
            <stringProp name="ForeachController.endIndex">5</stringProp>
          </ForeachController>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Entitle User with Product" enabled="true">
              <stringProp name="IncludeController.includepath">Entitle_User_With_Product.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="false">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
              <stringProp name="RandomTimer.range">500</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="unassociate bundles in a class" enabled="false"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">classes.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid,classtitle,classCode,category</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="get_classes_of_an_user" enabled="true">
            <stringProp name="IncludeController.includepath">get_classes_of_an_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_details_for_a_specific_class_All_Details" enabled="false">
            <stringProp name="IncludeController.includepath">Get_details_for_a_specific_class_All_Details.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get details for a specific class" enabled="true">
            <stringProp name="IncludeController.includepath">Get_details_for_a_specific_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller" enabled="true"/>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - 3B8PE - 300LOs" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;3B8PE&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">cat1pe</stringProp>
                <stringProp name="ForeachController.returnVal">multiProduct</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">8</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Unassociate product with a class" enabled="true">
                  <stringProp name="IncludeController.includepath">unassociate_a_product_with_class_MultiProduct.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - 3B10PE - 500LOs" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;3B10PE&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">cat2pe</stringProp>
                <stringProp name="ForeachController.returnVal">multiProduct</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">10</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Unassociate product with a class" enabled="true">
                  <stringProp name="IncludeController.includepath">unassociate_a_product_with_class_MultiProduct.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - 3B15PE - 500LOs" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;3B15PE&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">cat3pe</stringProp>
                <stringProp name="ForeachController.returnVal">multiProduct</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">8</stringProp>
                <stringProp name="ForeachController.endIndex">15</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Unassociate product with a class" enabled="true">
                  <stringProp name="IncludeController.includepath">unassociate_a_product_with_class_MultiProduct.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - 2B15PE - 650LOs" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;2B15PE&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">cat4pe</stringProp>
                <stringProp name="ForeachController.returnVal">multiProduct</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">15</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Unassociate product with a class" enabled="true">
                  <stringProp name="IncludeController.includepath">unassociate_a_product_with_class_MultiProduct.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="associate bundles in a class" enabled="false"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">classes.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid,classtitle,classCode,category</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="get_classes_of_an_user" enabled="true">
            <stringProp name="IncludeController.includepath">get_classes_of_an_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_details_for_a_specific_class_All_Details" enabled="false">
            <stringProp name="IncludeController.includepath">Get_details_for_a_specific_class_All_Details.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get details for a specific class" enabled="true">
            <stringProp name="IncludeController.includepath">Get_details_for_a_specific_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller" enabled="true"/>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - 3B8PE - 300LOs" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;3B8PE&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] multiProducts = {
    &quot;evpel1&quot;, &quot;perfb1pe1&quot;, &quot;perfb1pe2&quot;, &quot;perfprod21&quot;, &quot;perfprod22&quot;,
    &quot;perfprod23&quot;, &quot;perfprod24&quot;, &quot;perfprod25&quot;
};

String multiProductsAsString = &quot;\&quot;evpel1\&quot;, \&quot;perfb1pe1\&quot;, \&quot;perfb1pe2\&quot;, \&quot;perfprod21\&quot;, \&quot;perfprod22\&quot;,\&quot;perfprod23\&quot;, \&quot;perfprod24\&quot;, \&quot;perfprod25\&quot;&quot;;

for (int i = 0; i &lt; multiProducts.length; i++) {
    vars.put(&quot;multiProduct&quot; + (i + 1), multiProducts[i]);
}

vars.put(&quot;productArrayString&quot;, multiProductsAsString);
vars.put(&quot;productcode&quot;, multiProducts[0]);
vars.put(&quot;peCount&quot;, String.valueOf(multiProducts.length));</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate multi products with a class" enabled="true">
                <stringProp name="IncludeController.includepath">associate_multi_products_with_class.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - 3B10PE - 500LOs" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;3B10PE&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] multiProducts = {
    &quot;perfprod3&quot;, &quot;perfprod4&quot;, &quot;perfprod5&quot;, &quot;perfprod6&quot;, &quot;perfprod7&quot;,
    &quot;perfprod8&quot;, &quot;perfprod9&quot;, &quot;perfprod10&quot;, &quot;perfprod11&quot;, &quot;perfprod12&quot;
};

String multiProductsAsString = &quot;\&quot;perfprod3\&quot;, \&quot;perfprod4\&quot;, \&quot;perfprod5\&quot;, \&quot;perfprod6\&quot;, \&quot;perfprod7\&quot;,\&quot;perfprod8\&quot;, \&quot;perfprod9\&quot;, \&quot;perfprod10\&quot;, \&quot;perfprod11\&quot;, \&quot;perfprod12\&quot;&quot;;

for (int i = 0; i &lt; multiProducts.length; i++) {
    vars.put(&quot;multiProduct&quot; + (i + 1), multiProducts[i]);
}

vars.put(&quot;productArrayString&quot;, multiProductsAsString);
vars.put(&quot;productcode&quot;, multiProducts[0]);
vars.put(&quot;peCount&quot;, String.valueOf(multiProducts.length));</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate multi products with a class" enabled="true">
                <stringProp name="IncludeController.includepath">associate_multi_products_with_class.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - 3B15PE - 500LOs" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;3B15PE&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="false">
                <stringProp name="BeanShellSampler.query">String[] multiProducts = {
    &quot;perfprod5&quot;, &quot;perfprod6&quot;, &quot;perfprod7&quot;,
    &quot;perfprod8&quot;, &quot;perfprod9&quot;, &quot;perfprod10&quot;, &quot;perfprod11&quot;, &quot;perfprod12&quot;, 
    &quot;perfprod86&quot;, &quot;perfprod87&quot;, &quot;perfprod88&quot;, &quot;perfprod89&quot;, &quot;perfprod90&quot;, 
    &quot;perfprod91&quot;, &quot;perfprod92&quot; 
};

String multiProductsAsString = &quot;\&quot;perfprod5\&quot;, \&quot;perfprod6\&quot;, \&quot;perfprod7\&quot;, \&quot;perfprod8\&quot;, \&quot;perfprod9\&quot;, \&quot;perfprod10\&quot;, \&quot;perfprod11\&quot;, \&quot;perfprod12\&quot;, \&quot;perfprod86\&quot;, \&quot;perfprod87\&quot;, \&quot;perfprod88\&quot;, \&quot;perfprod89\&quot;, \&quot;perfprod90\&quot;, \&quot;perfprod91\&quot;, \&quot;perfprod92\&quot;&quot;;

for (int i = 0; i &lt; multiProducts.length; i++) {
    vars.put(&quot;multiProduct&quot; + (i + 1), multiProducts[i]);
}

vars.put(&quot;productArrayString&quot;, multiProductsAsString);
vars.put(&quot;productcode&quot;, multiProducts[0]);
vars.put(&quot;peCount&quot;, String.valueOf(multiProducts.length));</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] multiProducts = {
    &quot;perfprod3&quot;, &quot;perfprod4&quot; 
};

String multiProductsAsString = &quot;\&quot;perfprod3\&quot;, \&quot;perfprod4\&quot;&quot;;

for (int i = 0; i &lt; multiProducts.length; i++) {
    vars.put(&quot;multiProduct&quot; + (i + 1), multiProducts[i]);
}

vars.put(&quot;productArrayString&quot;, multiProductsAsString);
vars.put(&quot;productcode&quot;, multiProducts[0]);
vars.put(&quot;peCount&quot;, String.valueOf(multiProducts.length));</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate multi products with a class" enabled="true">
                <stringProp name="IncludeController.includepath">associate_multi_products_with_class.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - 2B15PE - 650LOs" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;2B15PE&quot;;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] multiProducts = {
    &quot;perfprod41&quot;, &quot;perfprod42&quot;, &quot;perfprod43&quot;, &quot;perfprod44&quot;, &quot;perfprod45&quot;,
    &quot;perfprod46&quot;, &quot;perfprod47&quot;, &quot;perfprod48&quot;, &quot;perfprod49&quot;, &quot;perfprod50&quot;,
    &quot;perfprod101&quot;, &quot;perfprod102&quot;, &quot;perfprod103&quot;, &quot;perfprod104&quot;, &quot;perfprod105&quot;
};

String multiProductsAsString = &quot;\&quot;perfprod41\&quot;, \&quot;perfprod42\&quot;, \&quot;perfprod43\&quot;, \&quot;perfprod44\&quot;, \&quot;perfprod45\&quot;, \&quot;perfprod46\&quot;, \&quot;perfprod47\&quot;, \&quot;perfprod48\&quot;, \&quot;perfprod49\&quot;, \&quot;perfprod50\&quot;, \&quot;perfprod101\&quot;, \&quot;perfprod102\&quot;, \&quot;perfprod103\&quot;, \&quot;perfprod104\&quot;, \&quot;perfprod105\&quot;&quot;;

for (int i = 0; i &lt; multiProducts.length; i++) {
    vars.put(&quot;multiProduct&quot; + (i + 1), multiProducts[i]);
}

vars.put(&quot;productArrayString&quot;, multiProductsAsString);
vars.put(&quot;productcode&quot;, multiProducts[0]);
vars.put(&quot;peCount&quot;, String.valueOf(multiProducts.length));</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate multi products with a class" enabled="true">
                <stringProp name="IncludeController.includepath">associate_multi_products_with_class.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="enroll teacher into classes" enabled="false"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">teacherClasses.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid,classtitle,classCode,category</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
            <collectionProp name="Arguments.arguments">
              <elementProp name="title" elementType="Argument">
                <stringProp name="Argument.name">title</stringProp>
                <stringProp name="Argument.value">default gradebook 1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="customComponentCode1" elementType="Argument">
                <stringProp name="Argument.name">customComponentCode1</stringProp>
                <stringProp name="Argument.value">EIdigHz_CRgy4ICVb7Vgr</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="customComponentName1" elementType="Argument">
                <stringProp name="Argument.name">customComponentName1</stringProp>
                <stringProp name="Argument.value">Grading Category 2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gradebook_id" elementType="Argument">
                <stringProp name="Argument.name">gradebook_id</stringProp>
                <stringProp name="Argument.value">default-gradebook</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Validate Class Code" enabled="true">
            <stringProp name="IncludeController.includepath">validate_classcode.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname=" Enroll self in a class" enabled="true">
            <stringProp name="IncludeController.includepath">enroll_self_in_a_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="T1-C1 - Distributed" enabled="false"/>
        <hashTree>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
            <stringProp name="CounterConfig.start">1</stringProp>
            <stringProp name="CounterConfig.end"></stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">counter</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">false</boolProp>
          </CounterConfig>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilenameTch" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilenameTch</stringProp>
                <stringProp name="Argument.value">scenario_tch_asnmt_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="outputCsvFilenameStd" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilenameStd</stringProp>
                <stringProp name="Argument.value">student_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">template.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">category,noOfAssignmentsInClass-1,noOfLOsInAssignment-1,noOfAssignmentsInClass-2,noOfLOsInAssignment-2,noOfAssignmentsInClass-3,noOfLOsInAssignment-3,noOfStudentsInClass</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="teacher_name" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;counter&quot;);

extuserid = &quot;tch&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4;
vars.put(&quot;extuserid&quot;, extuserid);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="class_name" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;counter&quot;);

classname = &quot;class&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4;
vars.put(&quot;classname&quot;, classname);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="assignedPathList" elementType="Argument">
                <stringProp name="Argument.name">assignedPathList</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="true">
            <stringProp name="IncludeController.includepath">Join_a_space_with_space_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [60-65 sec]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">60000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class" enabled="true">
            <stringProp name="IncludeController.includepath">create_new_instructor_led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class - CONTEXT" enabled="false">
            <stringProp name="IncludeController.includepath">create_new_instructor_led_class_context.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="false">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">10000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - 3B8PE - 300LOs" enabled="false">
            <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;3B8PE&quot;;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">String[] multiProducts = {
    &quot;evpel1&quot;, &quot;perfb1pe1&quot;, &quot;perfb1pe2&quot;, &quot;perfprod21&quot;, &quot;perfprod22&quot;,
    &quot;perfprod23&quot;, &quot;perfprod24&quot;, &quot;perfprod25&quot;
};

String multiProductsAsString = &quot;\&quot;evpel1\&quot;, \&quot;perfb1pe1\&quot;, \&quot;perfb1pe2\&quot;, \&quot;perfprod21\&quot;, \&quot;perfprod22\&quot;,\&quot;perfprod23\&quot;, \&quot;perfprod24\&quot;, \&quot;perfprod25\&quot;&quot;;

for (int i = 0; i &lt; multiProducts.length; i++) {
    vars.put(&quot;multiProduct&quot; + (i + 1), multiProducts[i]);
}

vars.put(&quot;productArrayString&quot;, multiProductsAsString);
vars.put(&quot;productcode&quot;, multiProducts[0]);
vars.put(&quot;peCount&quot;, String.valueOf(multiProducts.length));</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate multi products with a class" enabled="true">
              <stringProp name="IncludeController.includepath">associate_multi_products_with_class.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [300-330]" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">300000</stringProp>
                <stringProp name="RandomTimer.range">30000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x assignments" enabled="false">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfAssignmentsInClass-1}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end">${noOfAssignmentsInClass}</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">assignmentCount</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix5 = vars.get(&quot;noOfLOsInAssignment&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix5 + &quot;LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <InterleaveControl guiclass="InterleaveControlGui" testclass="InterleaveControl" testname="Interleave Controller" enabled="true">
                <intProp name="InterleaveControl.style">1</intProp>
                <boolProp name="InterleaveControl.accrossThreads">false</boolProp>
              </InterleaveControl>
              <hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;evpel1&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfb1pe1&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfb1pe2&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod21&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod22&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod23&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod24&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod25&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment}&quot; == &quot;20&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_20LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment}&quot; == &quot;30&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_30LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment}&quot; == &quot;50&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_50LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
                <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x assignments - 1" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfAssignmentsInClass-1}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end">${noOfAssignmentsInClass-1}</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">assignmentCount</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix5 = vars.get(&quot;noOfLOsInAssignment-1&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix5 + &quot;LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544524003551/1544524304922/1544524359136&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544524003551/1544524012478/1544524057691&quot;,&quot;1544524003551/1544524012478/1544524030068&quot;,&quot;1544525043137/1544525058289/1544525097148&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544525043137/1544525058289/1544525137957&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1544524003551/1544524304922/1544524324762&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544525043137/1544525058289/1544525090848&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1544524003551/1544524012478/1544524071582&quot;,&quot;1544524003551/1544524304922/1544524341184&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544525043137/1544525058289/1544525125172&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1544524003551/1544524304922/1544524313700&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544524003551/1544524012478/1544524084276&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544524003551/1544524304922/1544524387792&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1544524003551/1544524012478/1544524099346&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1544525043137/1544525058289/1544525114886&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544524003551/1544524012478/1544524044427&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544524003551/1544524304922/1544524376121&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] stringArray = {&quot;evpel1&quot;, &quot;perfb1pe1&quot;, &quot;perfb1pe2&quot;, &quot;perfprod21&quot;, &quot;perfprod22&quot;,
    &quot;perfprod23&quot;, &quot;perfprod24&quot;, &quot;perfprod25&quot;};

int randomIndex = (int) (Math.random() * stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;20&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_20LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;30&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_30LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;50&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_50LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
                <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">1000</stringProp>
                  <stringProp name="RandomTimer.range">500</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x rules" enabled="false">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfAccessRulesInClass}</stringProp>
            </LoopController>
            <hashTree>
              <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
                <stringProp name="maximumValue">9999</stringProp>
                <stringProp name="minimumValue">0000</stringProp>
                <stringProp name="outputFormat">0000</stringProp>
                <boolProp name="perThread">true</boolProp>
                <stringProp name="randomSeed"></stringProp>
                <stringProp name="variableName">randomNo</stringProp>
              </RandomVariableConfig>
              <hashTree/>
              <InterleaveControl guiclass="InterleaveControlGui" testclass="InterleaveControl" testname="Interleave Controller" enabled="true">
                <intProp name="InterleaveControl.style">1</intProp>
                <boolProp name="InterleaveControl.accrossThreads">false</boolProp>
              </InterleaveControl>
              <hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;evpel1&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfb1pe1&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfb1pe2&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod21&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod22&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod23&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod24&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod25&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAccessRule}&quot; == &quot;50&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a rule" enabled="true">
                  <stringProp name="IncludeController.includepath">Create_a_rule_100LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAccessRule}&quot; == &quot;100&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a rule" enabled="true">
                  <stringProp name="IncludeController.includepath">Create_a_rule_100LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x students and join using classcode of current teacher" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfStudentsInClass}</stringProp>
            </LoopController>
            <hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">import java.util.Date;

Date date = new Date();
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;classcode&quot;);

studentextuserid = &quot;std&quot; + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;studentextuserid&quot;, studentextuserid);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] multiProducts = {
    &quot;evpel1&quot;, &quot;perfb1pe1&quot;, &quot;perfb1pe2&quot;, &quot;perfprod21&quot;, &quot;perfprod22&quot;,
    &quot;perfprod23&quot;, &quot;perfprod24&quot;, &quot;perfprod25&quot;
};

for (int i = 0; i &lt; multiProducts.length; i++) {
    vars.put(&quot;multiProduct&quot; + (i + 1), multiProducts[i]);
}

vars.put(&quot;productcode&quot;, multiProducts[0]);
vars.put(&quot;peCount&quot;, String.valueOf(multiProducts.length));</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with product_code and class_code" enabled="true">
                <stringProp name="IncludeController.includepath">join_Spaces_with_product_code_and_class_code.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [20-30 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                  <stringProp name="RandomTimer.range">10000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">multiProduct</stringProp>
                <stringProp name="ForeachController.returnVal">multiProduct</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">1</stringProp>
                <stringProp name="ForeachController.endIndex">${peCount}</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Entitle User with Product" enabled="true">
                  <stringProp name="IncludeController.includepath">Entitle_User_With_Product.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [15-25 sec]" enabled="false">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">15000</stringProp>
                  <stringProp name="RandomTimer.range">10000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="false">
                <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_student.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">timestamp = vars.get(&quot;date&quot;);

FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameStd&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - 3B10PE - 500LOs" enabled="false">
            <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;3B10PE&quot;;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">String[] multiProducts = {
    &quot;perfprod3&quot;, &quot;perfprod4&quot;, &quot;perfprod5&quot;, &quot;perfprod6&quot;, &quot;perfprod7&quot;,
    &quot;perfprod8&quot;, &quot;perfprod9&quot;, &quot;perfprod10&quot;, &quot;perfprod11&quot;, &quot;perfprod12&quot;
};

String multiProductsAsString = &quot;\&quot;perfprod3\&quot;, \&quot;perfprod4\&quot;, \&quot;perfprod5\&quot;, \&quot;perfprod6\&quot;, \&quot;perfprod7\&quot;,\&quot;perfprod8\&quot;, \&quot;perfprod9\&quot;, \&quot;perfprod10\&quot;, \&quot;perfprod11\&quot;, \&quot;perfprod12\&quot;&quot;;

for (int i = 0; i &lt; multiProducts.length; i++) {
    vars.put(&quot;multiProduct&quot; + (i + 1), multiProducts[i]);
}

vars.put(&quot;productArrayString&quot;, multiProductsAsString);
vars.put(&quot;productcode&quot;, multiProducts[0]);
vars.put(&quot;peCount&quot;, String.valueOf(multiProducts.length));</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate multi products with a class" enabled="true">
              <stringProp name="IncludeController.includepath">associate_multi_products_with_class.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [300-330]" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">300000</stringProp>
                <stringProp name="RandomTimer.range">30000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x assignments" enabled="false">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfAssignmentsInClass}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end">${noOfAssignmentsInClass}</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">assignmentCount</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix5 = vars.get(&quot;noOfLOsInAssignment&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix5 + &quot;LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <InterleaveControl guiclass="InterleaveControlGui" testclass="InterleaveControl" testname="Interleave Controller" enabled="true">
                <intProp name="InterleaveControl.style">1</intProp>
                <boolProp name="InterleaveControl.accrossThreads">false</boolProp>
              </InterleaveControl>
              <hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod3&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod4&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod5&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod6&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod7&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod8&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod9&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod10&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod11&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod12&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment}&quot; == &quot;20&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_20LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment}&quot; == &quot;30&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_30LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment}&quot; == &quot;50&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_50LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
                <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x assignments - 1" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfAssignmentsInClass-1}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end">${noOfAssignmentsInClass-1}</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">assignmentCount</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix5 = vars.get(&quot;noOfLOsInAssignment-1&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix5 + &quot;LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544524003551/1544524304922/1544524359136&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544524003551/1544524012478/1544524057691&quot;,&quot;1544524003551/1544524012478/1544524030068&quot;,&quot;1544525043137/1544525058289/1544525097148&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544525043137/1544525058289/1544525137957&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1544524003551/1544524304922/1544524324762&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544525043137/1544525058289/1544525090848&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1544524003551/1544524012478/1544524071582&quot;,&quot;1544524003551/1544524304922/1544524341184&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544525043137/1544525058289/1544525125172&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1544524003551/1544524304922/1544524313700&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544524003551/1544524012478/1544524084276&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544524003551/1544524304922/1544524387792&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1544524003551/1544524012478/1544524099346&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1544525043137/1544525058289/1544525114886&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544524003551/1544524012478/1544524044427&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544524003551/1544524304922/1544524376121&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] stringArray = {&quot;perfprod3&quot;, &quot;perfprod4&quot;, &quot;perfprod5&quot;, &quot;perfprod6&quot;, &quot;perfprod7&quot;,
    &quot;perfprod8&quot;, &quot;perfprod9&quot;, &quot;perfprod10&quot;, &quot;perfprod11&quot;, &quot;perfprod12&quot;};

int randomIndex = (int) (Math.random() * stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;20&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_20LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;30&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_30LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;50&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_50LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
                <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">1000</stringProp>
                  <stringProp name="RandomTimer.range">500</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x students and join using classcode of current teacher" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfStudentsInClass}</stringProp>
            </LoopController>
            <hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">import java.util.Date;

Date date = new Date();
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;classcode&quot;);

studentextuserid = &quot;std&quot; + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;studentextuserid&quot;, studentextuserid);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] multiProducts = {
    &quot;perfprod3&quot;, &quot;perfprod4&quot;, &quot;perfprod5&quot;, &quot;perfprod6&quot;, &quot;perfprod7&quot;,
    &quot;perfprod8&quot;, &quot;perfprod9&quot;, &quot;perfprod10&quot;, &quot;perfprod11&quot;, &quot;perfprod12&quot;
};

for (int i = 0; i &lt; multiProducts.length; i++) {
    vars.put(&quot;multiProduct&quot; + (i + 1), multiProducts[i]);
}

vars.put(&quot;productcode&quot;, multiProducts[0]);
vars.put(&quot;peCount&quot;, String.valueOf(multiProducts.length));</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with product_code and class_code" enabled="true">
                <stringProp name="IncludeController.includepath">join_Spaces_with_product_code_and_class_code.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">multiProduct</stringProp>
                <stringProp name="ForeachController.returnVal">multiProduct</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">1</stringProp>
                <stringProp name="ForeachController.endIndex">${peCount}</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Entitle User with Product" enabled="true">
                  <stringProp name="IncludeController.includepath">Entitle_User_With_Product.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="false">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="false">
                <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_student.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">timestamp = vars.get(&quot;date&quot;);

FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameStd&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
              <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameTch&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - 3B15PE - 500LOs" enabled="false">
            <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;3B15PE&quot;;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">String[] multiProducts = {
    &quot;perfprod5&quot;, &quot;perfprod6&quot;, &quot;perfprod7&quot;,
    &quot;perfprod8&quot;, &quot;perfprod9&quot;, &quot;perfprod10&quot;, &quot;perfprod11&quot;, &quot;perfprod12&quot;, 
    &quot;perfprod86&quot;, &quot;perfprod87&quot;, &quot;perfprod88&quot;, &quot;perfprod89&quot;, &quot;perfprod90&quot;, 
    &quot;perfprod91&quot;, &quot;perfprod92&quot; 
};

String multiProductsAsString = &quot;\&quot;perfprod5\&quot;, \&quot;perfprod6\&quot;, \&quot;perfprod7\&quot;, \&quot;perfprod8\&quot;, \&quot;perfprod9\&quot;, \&quot;perfprod10\&quot;, \&quot;perfprod11\&quot;, \&quot;perfprod12\&quot;, \&quot;perfprod86\&quot;, \&quot;perfprod87\&quot;, \&quot;perfprod88\&quot;, \&quot;perfprod89\&quot;, \&quot;perfprod90\&quot;, \&quot;perfprod91\&quot;, \&quot;perfprod92\&quot;&quot;;

for (int i = 0; i &lt; multiProducts.length; i++) {
    vars.put(&quot;multiProduct&quot; + (i + 1), multiProducts[i]);
}

vars.put(&quot;productArrayString&quot;, multiProductsAsString);
vars.put(&quot;productcode&quot;, multiProducts[0]);
vars.put(&quot;peCount&quot;, String.valueOf(multiProducts.length));</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate multi products with a class" enabled="true">
              <stringProp name="IncludeController.includepath">associate_multi_products_with_class.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [300-330]" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">300000</stringProp>
                <stringProp name="RandomTimer.range">30000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x assignments" enabled="false">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfAssignmentsInClass}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end">${noOfAssignmentsInClass}</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">assignmentCount</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix5 = vars.get(&quot;noOfLOsInAssignment&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix5 + &quot;LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <InterleaveControl guiclass="InterleaveControlGui" testclass="InterleaveControl" testname="Interleave Controller" enabled="true">
                <intProp name="InterleaveControl.style">1</intProp>
                <boolProp name="InterleaveControl.accrossThreads">false</boolProp>
              </InterleaveControl>
              <hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod5&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod6&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod7&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod8&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod9&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod10&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod11&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod12&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod86&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod87&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod88&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod89&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod90&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod91&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod92&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment}&quot; == &quot;20&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_20LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment}&quot; == &quot;30&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_30LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment}&quot; == &quot;50&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_50LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
                <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x assignments - 1" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfAssignmentsInClass-1}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end">${noOfAssignmentsInClass-1}</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">assignmentCount</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix5 = vars.get(&quot;noOfLOsInAssignment-1&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix5 + &quot;LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544524003551/1544524304922/1544524359136&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544524003551/1544524012478/1544524057691&quot;,&quot;1544524003551/1544524012478/1544524030068&quot;,&quot;1544525043137/1544525058289/1544525097148&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544525043137/1544525058289/1544525137957&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1544524003551/1544524304922/1544524324762&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544525043137/1544525058289/1544525090848&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1544524003551/1544524012478/1544524071582&quot;,&quot;1544524003551/1544524304922/1544524341184&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544525043137/1544525058289/1544525125172&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1544524003551/1544524304922/1544524313700&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544524003551/1544524012478/1544524084276&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544524003551/1544524304922/1544524387792&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1544524003551/1544524012478/1544524099346&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1544525043137/1544525058289/1544525114886&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544524003551/1544524012478/1544524044427&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544524003551/1544524304922/1544524376121&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] stringArray = {&quot;perfprod5&quot;, &quot;perfprod6&quot;, &quot;perfprod7&quot;,
    &quot;perfprod8&quot;, &quot;perfprod9&quot;, &quot;perfprod10&quot;, &quot;perfprod11&quot;, &quot;perfprod12&quot;, 
    &quot;perfprod86&quot;, &quot;perfprod87&quot;, &quot;perfprod88&quot;, &quot;perfprod89&quot;, &quot;perfprod90&quot;, 
    &quot;perfprod91&quot;, &quot;perfprod92&quot;};

int randomIndex = (int) (Math.random() * stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;20&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_20LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;30&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_30LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;50&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_50LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
                <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="false">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x students and join using classcode of current teacher" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfStudentsInClass}</stringProp>
            </LoopController>
            <hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">import java.util.Date;

Date date = new Date();
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;classcode&quot;);

studentextuserid = &quot;std&quot; + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;studentextuserid&quot;, studentextuserid);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] multiProducts = {
    &quot;perfprod5&quot;, &quot;perfprod6&quot;, &quot;perfprod7&quot;,
    &quot;perfprod8&quot;, &quot;perfprod9&quot;, &quot;perfprod10&quot;, &quot;perfprod11&quot;, &quot;perfprod12&quot;, 
    &quot;perfprod86&quot;, &quot;perfprod87&quot;, &quot;perfprod88&quot;, &quot;perfprod89&quot;, &quot;perfprod90&quot;, 
    &quot;perfprod91&quot;, &quot;perfprod92&quot;
};

for (int i = 0; i &lt; multiProducts.length; i++) {
    vars.put(&quot;multiProduct&quot; + (i + 1), multiProducts[i]);
}

vars.put(&quot;productcode&quot;, multiProducts[0]);
vars.put(&quot;peCount&quot;, String.valueOf(multiProducts.length));</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with product_code and class_code" enabled="true">
                <stringProp name="IncludeController.includepath">join_Spaces_with_product_code_and_class_code.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">multiProduct</stringProp>
                <stringProp name="ForeachController.returnVal">multiProduct</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">1</stringProp>
                <stringProp name="ForeachController.endIndex">${peCount}</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Entitle User with Product" enabled="true">
                  <stringProp name="IncludeController.includepath">Entitle_User_With_Product.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="false">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="false">
                <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_student.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">timestamp = vars.get(&quot;date&quot;);

FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameStd&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
              <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameTch&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - 2B15PE - 650LOs" enabled="false">
            <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;2B15PE&quot;;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">String[] multiProducts = {
    &quot;perfprod41&quot;, &quot;perfprod42&quot;, &quot;perfprod43&quot;, &quot;perfprod44&quot;, &quot;perfprod45&quot;,
    &quot;perfprod46&quot;, &quot;perfprod47&quot;, &quot;perfprod48&quot;, &quot;perfprod49&quot;, &quot;perfprod50&quot;,
    &quot;perfprod101&quot;, &quot;perfprod102&quot;, &quot;perfprod103&quot;, &quot;perfprod104&quot;, &quot;perfprod105&quot;
};

String multiProductsAsString = &quot;\&quot;perfprod41\&quot;, \&quot;perfprod42\&quot;, \&quot;perfprod43\&quot;, \&quot;perfprod44\&quot;, \&quot;perfprod45\&quot;, \&quot;perfprod46\&quot;, \&quot;perfprod47\&quot;, \&quot;perfprod48\&quot;, \&quot;perfprod49\&quot;, \&quot;perfprod50\&quot;, \&quot;perfprod101\&quot;, \&quot;perfprod102\&quot;, \&quot;perfprod103\&quot;, \&quot;perfprod104\&quot;, \&quot;perfprod105\&quot;&quot;;

for (int i = 0; i &lt; multiProducts.length; i++) {
    vars.put(&quot;multiProduct&quot; + (i + 1), multiProducts[i]);
}

vars.put(&quot;productArrayString&quot;, multiProductsAsString);
vars.put(&quot;productcode&quot;, multiProducts[0]);
vars.put(&quot;peCount&quot;, String.valueOf(multiProducts.length));</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate multi products with a class" enabled="true">
              <stringProp name="IncludeController.includepath">associate_multi_products_with_class.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [300-330]" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">300000</stringProp>
                <stringProp name="RandomTimer.range">30000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x assignments" enabled="false">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfAssignmentsInClass}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end">${noOfAssignmentsInClass}</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">assignmentCount</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix5 = vars.get(&quot;noOfLOsInAssignment&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix5 + &quot;LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <InterleaveControl guiclass="InterleaveControlGui" testclass="InterleaveControl" testname="Interleave Controller" enabled="true">
                <intProp name="InterleaveControl.style">1</intProp>
                <boolProp name="InterleaveControl.accrossThreads">false</boolProp>
              </InterleaveControl>
              <hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod41&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod42&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod43&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod44&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod45&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod46&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod47&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod48&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod49&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod50&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod101&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod102&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod103&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod104&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod105&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment}&quot; == &quot;20&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_20LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment}&quot; == &quot;30&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_30LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment}&quot; == &quot;50&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_50LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
                <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x assignments - 1" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfAssignmentsInClass-1}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end">${noOfAssignmentsInClass-1}</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">assignmentCount</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix5 = vars.get(&quot;noOfLOsInAssignment-1&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix5 + &quot;LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544593830881/1544593964252/1544594102416&quot;,&quot;1676462274659/1676462274660/1676462274700&quot;,&quot;1676462274557/1676462274558/1676462274576&quot;,&quot;1676462274659/1676462274660/1676462274713&quot;,&quot;1544592857014/1544592865722/1544593072380&quot;,&quot;1676462274557/1676462274558/1676462274571&quot;,&quot;1544592857014/1544592865722/1544593123201&quot;,&quot;1544593830881/1544593842258/1544593905062&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1676462274659/1676462274660/1676462274755&quot;,&quot;1676462274557/1676462274558/1676462274588&quot;,&quot;1676462274557/1676462274558/1676462274585&quot;,&quot;1544593830881/1544596291616/1544596322099&quot;,&quot;1676462274659/1676462274660/1676462274729&quot;,&quot;1544596644314/1544596678647/1544596745950&quot;,&quot;1544593830881/1544593842258/1544593925051&quot;,&quot;1676462274659/1676462274660/1676462274863&quot;,&quot;1544524003551/1544524012478/1544524084276&quot;,&quot;1676462274659/1676462274660/1676462274719&quot;,&quot;1544524003551/1544524304922/1544524313700&quot;,&quot;1676462274659/1676462274660/1676462274862&quot;,&quot;1544592286221/1544592379241/1544592438186&quot;,&quot;1676462274557/1676462274558/1676462274602&quot;,&quot;1676462274659/1676462274660/1676462274689&quot;,&quot;1676462274659/1676462274660/1676462274724&quot;,&quot;1544591089661/1544591260222/1544591284840&quot;,&quot;1676462274659/1676462274660/1676462274858&quot;,&quot;1676462274557/1676462274558/1676462274590&quot;,&quot;1544592857014/1544593139545/1544593488247&quot;,&quot;1676462274659/1676462274660/1676462274733&quot;,&quot;1544596644314/1544596802487/1544596921860&quot;,&quot;1676462274659/1676462274660/1676462274759&quot;,&quot;1676462274557/1676462274558/1676462274614&quot;,&quot;1676462274557/1676462274558/1676462274560&quot;,&quot;1544526345845/1544526671965/1544526688230&quot;,&quot;1544593830881/1544593964252/1544594177257&quot;,&quot;1676462274659/1676462274660/1676462274753&quot;,&quot;1676462274659/1676462274660/1676462274672&quot;,&quot;1676462274659/1676462274660/1676462274747&quot;,&quot;1544525590768/1544525595533/1544525649026&quot;,&quot;1676462274659/1676462274660/1676462274848&quot;,&quot;1544591089661/1544591260222/1544591363137&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1676462274659/1676462274660/1676462274756&quot;,&quot;1676462274659/1676462274660/1676462274860&quot;,&quot;1544593830881/1544596494652/1544596529922&quot;,&quot;1676462274659/1676462274660/1676462274857&quot;,&quot;1676462274557/1676462274558/1676462274615&quot;,&quot;1676462274659/1676462274660/1676462274851&quot;,&quot;1544592286221/1544592474205/1544592491253&quot;,&quot;1544591751639/1544591756584/1544591852005&quot;,&quot;1676462274659/1676462274660/1676462274715&quot;,&quot;1544525043137/1544525159358/1544525175677&quot;,&quot;1676462274557/1676462274558/1676462274568&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592857014/1544592865722/1544593093552&quot;,&quot;1676462274557/1676462274558/1676462274570&quot;,&quot;1676462274659/1676462274660/1676462274866&quot;,&quot;1544525590768/1544525595533/1544525627465&quot;,&quot;1544525590768/1544525683364/1544525729515&quot;,&quot;1544525043137/1544525058289/1544525090848&quot;,&quot;1676462274659/1676462274660/1676462274701&quot;,&quot;1544591751639/1544592145731/1544592176780&quot;,&quot;1676462274659/1676462274660/1676462274859&quot;,&quot;1676462274557/1676462274558/1676462274609&quot;,&quot;1676462274659/1676462274660/1676462274718&quot;,&quot;1676462274557/1676462274558/1676462274580&quot;,&quot;1544525590768/1544525595533/1544525635696&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544525043137/1544525058289/1544525137957&quot;,&quot;1676462274659/1676462274660/1676462274855&quot;,&quot;1544592286221/1544592379241/1544592404760&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544591751639/1544591989858/1544592034736&quot;,&quot;1544592286221/1544592379241/1544592422449&quot;,&quot;1676462274659/1676462274660/1676462274699&quot;,&quot;1544592857014/1544592865722/1544593104748&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1544525043137/1544525159358/1544525239184&quot;,&quot;1676462274659/1676462274660/1676462274717&quot;,&quot;1676462274659/1676462274660/1676462274728&quot;,&quot;1676462274557/1676462274558/1676462274610&quot;,&quot;1676462274557/1676462274558/1676462274598&quot;,&quot;1544524003551/1544524012478/1544524057691&quot;,&quot;1544524003551/1544524304922/1544524359136&quot;,&quot;1676462274659/1676462274660/1676462274870&quot;,&quot;1676462274659/1676462274660/1676462274704&quot;,&quot;1544526345845/1544526589100/1544526657285&quot;,&quot;1544526345845/1544526589100/1544526610825&quot;,&quot;1544524003551/1544524012478/1544524099346&quot;,&quot;1544526345845/1544526589100/1544526623799&quot;,&quot;1544591751639/1544591859950/1544591895035&quot;,&quot;1676462274659/1676462274660/1676462274708&quot;,&quot;1676462274659/1676462274660/1676462274838&quot;,&quot;1676462274557/1676462274558/1676462274608&quot;,&quot;1544525043137/1544525058289/1544525114886&quot;,&quot;1676462274659/1676462274660/1676462274836&quot;,&quot;1544592286221/1544592520233/1544592540334&quot;,&quot;1544591089661/1544591364773/1544591392809&quot;,&quot;1544526345845/1544528319371/1544528345283&quot;,&quot;1676462274557/1676462274558/1676462274578&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544593830881/1544593842258/1544593889640&quot;,&quot;1676462274557/1676462274558/1676462274566&quot;,&quot;1544591089661/1544591099675/1544591237488&quot;,&quot;1676462274659/1676462274660/1676462274853&quot;,&quot;1544526345845/1544526671965/1544526721801&quot;,&quot;1544596644314/1544596802487/1544596845016&quot;,&quot;1676462274659/1676462274660/1676462274842&quot;,&quot;1544525590768/1544525595533/1544525663048&quot;,&quot;1544592857014/1544593139545/1544593476327&quot;,&quot;1544591089661/1544591602655/1544591636888&quot;,&quot;1544526345845/1544528319371/1544528334775&quot;,&quot;1544592286221/1544592291887/1544592370486&quot;,&quot;1544591089661/1544591260222/1544591295680&quot;,&quot;1676462274659/1676462274660/1676462274844&quot;,&quot;1676462274557/1676462274558/1676462274589&quot;,&quot;1544592857014/1544593529004/1544593551477&quot;,&quot;1544526345845/1544526671965/1544526695320&quot;,&quot;1676462274557/1676462274558/1676462274601&quot;,&quot;1544526345845/1544526589100/1544526638110&quot;,&quot;1676462274659/1676462274660/1676462274692&quot;,&quot;1544525043137/1544525159358/1544525217177&quot;,&quot;1676462274557/1676462274558/1676462274599&quot;,&quot;1676462274659/1676462274660/1676462274730&quot;,&quot;1676462274659/1676462274660/1676462274745&quot;,&quot;1676462274557/1676462274558/1676462274569&quot;,&quot;1676462274557/1676462274558/1676462274572&quot;,&quot;1544596644314/1544597091060/1544597121860&quot;,&quot;1544596644314/1544596678647/1544596768254&quot;,&quot;1544596644314/1544596678647/1544596792897&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544596678647/1544596761923&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1676462274659/1676462274660/1676462274738&quot;,&quot;1544592286221/1544592520233/1544592555974&quot;,&quot;1544592857014/1544593139545/1544593187008&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544596644314/1544597220792/1544597275965&quot;,&quot;1676462274659/1676462274660/1676462274839&quot;,&quot;1676462274659/1676462274660/1676462274749&quot;,&quot;1544524003551/1544524304922/1544524324762&quot;,&quot;1544591751639/1544591937229/1544591951092&quot;,&quot;1676462274659/1676462274660/1676462274869&quot;,&quot;1544525043137/1544525159358/1544525263160&quot;,&quot;1676462274557/1676462274558/1676462274582&quot;,&quot;1544593830881/1544593964252/1544594135462&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544526345845/1544526589100/1544526606750&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1676462274557/1676462274558/1676462274607&quot;,&quot;1676462274557/1676462274558/1676462274603&quot;,&quot;1676462274659/1676462274660/1676462274723&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544592286221/1544592623523/1544592658543&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274557/1676462274558/1676462274596&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1544596644314/1544597008306/1544597032165&quot;,&quot;1544525590768/1544525683364/1544525756801&quot;,&quot;1544591089661/1544591412698/1544591455780&quot;,&quot;1544591751639/1544591756584/1544591814105&quot;,&quot;1676462274659/1676462274660/1676462274673&quot;,&quot;1676462274659/1676462274660/1676462274694&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1544526345845/1544526671965/1544526710051&quot;,&quot;1676462274659/1676462274660/1676462274681&quot;,&quot;1544596644314/1544596802487/1544596877787&quot;,&quot;1676462274659/1676462274660/1676462274711&quot;,&quot;1676462274557/1676462274558/1676462274613&quot;,&quot;1544525590768/1544525683364/1544525709799&quot;,&quot;1676462274659/1676462274660/1676462274685&quot;,&quot;1544526345845/1544526961740/1544527008225&quot;,&quot;1676462274659/1676462274660/1676462274714&quot;,&quot;1544525043137/1544525058289/1544525125172&quot;,&quot;1544525043137/1544525159358/1544525192972&quot;,&quot;1544525590768/1544525683364/1544525720457&quot;,&quot;1676462274659/1676462274660/1676462274748&quot;,&quot;1544524003551/1544524012478/1544524030068&quot;,&quot;1676462274659/1676462274660/1676462274757&quot;,&quot;1544524003551/1544524304922/1544524387792&quot;,&quot;1676462274659/1676462274660/1676462274840&quot;,&quot;1676462274557/1676462274558/1676462274561&quot;,&quot;1544591751639/1544591756584/1544591786410&quot;,&quot;1544526345845/1544526671965/1544526763389&quot;,&quot;1544596644314/1544596678647/1544596731689&quot;,&quot;1676462274659/1676462274660/1676462274852&quot;,&quot;1676462274659/1676462274660/1676462274677&quot;,&quot;1544525590768/1544525595533/1544525611432&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1544591751639/1544591756584/1544591842867&quot;,&quot;1544593830881/1544596291616/1544596327463&quot;,&quot;1676462274659/1676462274660/1676462274712&quot;,&quot;1676462274659/1676462274660/1676462274845&quot;,&quot;1544592286221/1544592379241/1544592448263&quot;,&quot;1544593830881/1544593964252/1544594078882&quot;,&quot;1676462274557/1676462274558/1676462274562&quot;,&quot;1544524003551/1544524304922/1544524376121&quot;,&quot;1676462274659/1676462274660/1676462274735&quot;,&quot;1544592857014/1544593139545/1544593454057&quot;,&quot;1676462274659/1676462274660/1676462274850&quot;,&quot;1544592857014/1544593585947/1544593632079&quot;,&quot;1544592286221/1544592379241/1544592415158&quot;,&quot;1544592286221/1544592623523/1544592648386&quot;,&quot;1676462274557/1676462274558/1676462274586&quot;,&quot;1676462274659/1676462274660/1676462274740&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593585947/1544593606215&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1544591751639/1544591859950/1544591923488&quot;,&quot;1676462274659/1676462274660/1676462274725&quot;,&quot;1544592857014/1544593703192/1544593752239&quot;,&quot;1676462274659/1676462274660/1676462274710&quot;,&quot;1544593830881/1544596494652/1544596513093&quot;,&quot;1544525590768/1544525683364/1544525734676&quot;,&quot;1544593830881/1544593842258/1544593932560&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1544592857014/1544593703192/1544593743725&quot;,&quot;1544525043137/1544525058289/1544525097148&quot;,&quot;1544596644314/1544597220792/1544597245750&quot;,&quot;1676462274557/1676462274558/1676462274573&quot;,&quot;1544592857014/1544592865722/1544593079694&quot;,&quot;1544591751639/1544591756584/1544591792950&quot;,&quot;1676462274659/1676462274660/1676462274736&quot;,&quot;1676462274659/1676462274660/1676462274691&quot;,&quot;1676462274659/1676462274660/1676462274837&quot;,&quot;1676462274557/1676462274558/1676462274584&quot;,&quot;1676462274659/1676462274660/1676462274695&quot;,&quot;1676462274659/1676462274660/1676462274679&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1676462274557/1676462274558/1676462274612&quot;,&quot;1676462274659/1676462274660/1676462274737&quot;,&quot;1676462274659/1676462274660/1676462274849&quot;,&quot;1544525590768/1544525595533/1544525679427&quot;,&quot;1544524003551/1544524304922/1544524341184&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1676462274659/1676462274660/1676462274758&quot;,&quot;1676462274659/1676462274660/1676462274854&quot;,&quot;1676462274659/1676462274660/1676462274690&quot;,&quot;1544596644314/1544597220792/1544597262426&quot;,&quot;1676462274557/1676462274558/1676462274591&quot;,&quot;1676462274659/1676462274660/1676462274846&quot;,&quot;1676462274659/1676462274660/1676462274856&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1676462274557/1676462274558/1676462274611&quot;,&quot;1676462274659/1676462274660/1676462274703&quot;,&quot;1676462274557/1676462274558/1676462274593&quot;,&quot;1676462274659/1676462274660/1676462274702&quot;,&quot;1676462274557/1676462274558/1676462274605&quot;,&quot;1676462274659/1676462274660/1676462274843&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544593830881/1544593964252/1544594113782&quot;,&quot;1544593830881/1544593964252/1544594194047&quot;,&quot;1676462274659/1676462274660/1676462274671&quot;,&quot;1676462274557/1676462274558/1676462274604&quot;,&quot;1676462274659/1676462274660/1676462274721&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544591089661/1544591260222/1544591320423&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544591751639/1544591989858/1544592017149&quot;,&quot;1676462274557/1676462274558/1676462274581&quot;,&quot;1676462274659/1676462274660/1676462274680&quot;,&quot;1544592857014/1544593585947/1544593620647&quot;,&quot;1676462274659/1676462274660/1676462274746&quot;,&quot;1544596644314/1544596802487/1544596858389&quot;,&quot;1544526345845/1544526961740/1544526994099&quot;,&quot;1676462274659/1676462274660/1676462274697&quot;,&quot;1544591089661/1544591412698/1544591439057&quot;,&quot;1544592286221/1544592379241/1544592466092&quot;,&quot;1544593830881/1544596494652/1544596545929&quot;,&quot;1676462274557/1676462274558/1676462274592&quot;,&quot;1676462274659/1676462274660/1676462274865&quot;,&quot;1676462274557/1676462274558/1676462274565&quot;,&quot;1676462274659/1676462274660/1676462274741&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544592286221/1544592291887/1544592347743&quot;,&quot;1544596644314/1544597091060/1544597104557&quot;,&quot;1544524003551/1544524012478/1544524044427&quot;,&quot;1676462274557/1676462274558/1676462274564&quot;,&quot;1676462274659/1676462274660/1676462274727&quot;,&quot;1676462274659/1676462274660/1676462274705&quot;,&quot;1544591751639/1544591859950/1544591889129&quot;,&quot;1676462274659/1676462274660/1676462274744&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1676462274659/1676462274660/1676462274696&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1676462274557/1676462274558/1676462274583&quot;,&quot;1544526345845/1544526589100/1544526644717&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1676462274557/1676462274558/1676462274616&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1676462274659/1676462274660/1676462274693&quot;,&quot;1544592286221/1544592291887/1544592333414&quot;,&quot;1676462274659/1676462274660/1676462274739&quot;,&quot;1676462274659/1676462274660/1676462274707&quot;,&quot;1544591089661/1544591602655/1544591649137&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1676462274557/1676462274558/1676462274563&quot;,&quot;1544596644314/1544596802487/1544596904838&quot;,&quot;1676462274557/1676462274558/1676462274600&quot;,&quot;1676462274659/1676462274660/1676462274720&quot;,&quot;1544591089661/1544591412698/1544591428190&quot;,&quot;1676462274557/1676462274558/1676462274594&quot;,&quot;1676462274557/1676462274558/1676462274567&quot;,&quot;1676462274659/1676462274660/1676462274678&quot;,&quot;1544592857014/1544593703192/1544593728070&quot;,&quot;1544593830881/1544596248781/1544596271349&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1676462274659/1676462274660/1676462274754&quot;,&quot;1544593830881/1544593842258/1544593874472&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1676462274659/1676462274660/1676462274698&quot;,&quot;1544593830881/1544596291616/1544596347700&quot;,&quot;1544592286221/1544592291887/1544592314873&quot;,&quot;1544524003551/1544524012478/1544524071582&quot;,&quot;1676462274659/1676462274660/1676462274687&quot;,&quot;1544592857014/1544593139545/1544593471128&quot;,&quot;1676462274659/1676462274660/1676462274847&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544591751639/1544591859950/1544591913490&quot;,&quot;1544592857014/1544592865722/1544593053271&quot;,&quot;1676462274557/1676462274558/1676462274606&quot;,&quot;1676462274659/1676462274660/1676462274726&quot;,&quot;1676462274659/1676462274660/1676462274709&quot;,&quot;1676462274659/1676462274660/1676462274722&quot;,&quot;1544591751639/1544591989858/1544592010989&quot;,&quot;1544593830881/1544593842258/1544593949312&quot;,&quot;1544591751639/1544591756584/1544591826125&quot;,&quot;1676462274659/1676462274660/1676462274867&quot;,&quot;1544526345845/1544526961740/1544526980657&quot;,&quot;1676462274659/1676462274660/1676462274674&quot;,&quot;1544592857014/1544593139545/1544593173865&quot;,&quot;1676462274659/1676462274660/1676462274731&quot;,&quot;1676462274659/1676462274660/1676462274732&quot;,&quot;1544596644314/1544596802487/1544596890399&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274686&quot;,&quot;1676462274557/1676462274558/1676462274579&quot;,&quot;1676462274659/1676462274660/1676462274751&quot;,&quot;1544591089661/1544591099675/1544591198772&quot;,&quot;1544591089661/1544591260222/1544591341221&quot;,&quot;1544596644314/1544596678647/1544596711546&quot;,&quot;1544591089661/1544591099675/1544591219876&quot;,&quot;1544525043137/1544525159358/1544525246748&quot;,&quot;1544591089661/1544591099675/1544591247402&quot;,&quot;1676462274659/1676462274660/1676462274682&quot;,&quot;1676462274557/1676462274558/1676462274597&quot;,&quot;1676462274557/1676462274558/1676462274577&quot;,&quot;1676462274557/1676462274558/1676462274595&quot;,&quot;1676462274659/1676462274660/1676462274752&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544592286221/1544592291887/1544592322911&quot;,&quot;1676462274659/1676462274660/1676462274688&quot;,&quot;1676462274659/1676462274660/1676462274760&quot;,&quot;1544591089661/1544591260222/1544591334581&quot;,&quot;1544591751639/1544592145731/1544592165309&quot;,&quot;1544592286221/1544592623523/1544592671565&quot;,&quot;1676462274659/1676462274660/1676462274706&quot;,&quot;1676462274557/1676462274558/1676462274575&quot;,&quot;1544525043137/1544525058289/1544525143762&quot;,&quot;1544525590768/1544525683364/1544525778291&quot;,&quot;1676462274659/1676462274660/1676462274861&quot;,&quot;1676462274659/1676462274660/1676462274716&quot;,&quot;1676462274557/1676462274558/1676462274574&quot;,&quot;1676462274659/1676462274660/1676462274676&quot;,&quot;1676462274557/1676462274558/1676462274559&quot;,&quot;1544596644314/1544597091060/1544597149347&quot;,&quot;1544526345845/1544526671965/1544526728620&quot;,&quot;1676462274659/1676462274660/1676462274734&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1676462274659/1676462274660/1676462274868&quot;,&quot;1544526345845/1544528319371/1544528367998&quot;,&quot;1676462274659/1676462274660/1676462274864&quot;,&quot;1676462274557/1676462274558/1676462274587&quot;,&quot;1544591089661/1544591099675/1544591181584&quot;,&quot;1676462274659/1676462274660/1676462274742&quot;,&quot;1676462274659/1676462274660/1676462274683&quot;,&quot;1676462274659/1676462274660/1676462274675&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274750&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544591751639/1544592145731/1544592194540&quot;,&quot;1544592286221/1544592520233/1544592561671&quot;,&quot;1676462274659/1676462274660/1676462274841&quot;,&quot;1544525043137/1544525280855/1544525289279&quot;,&quot;1544591089661/1544591099675/1544591165699&quot;,&quot;1544592286221/1544592291887/1544592363784&quot;,&quot;1676462274659/1676462274660/1676462274684&quot;,&quot;1544591089661/1544591602655/1544591669971&quot;,&quot;1676462274659/1676462274660/1676462274743&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] stringArray = {&quot;perfprod41&quot;, &quot;perfprod42&quot;, &quot;perfprod43&quot;, &quot;perfprod44&quot;, &quot;perfprod45&quot;,
    &quot;perfprod46&quot;, &quot;perfprod47&quot;, &quot;perfprod48&quot;, &quot;perfprod49&quot;, &quot;perfprod50&quot;,
    &quot;perfprod101&quot;, &quot;perfprod102&quot;, &quot;perfprod103&quot;, &quot;perfprod104&quot;, &quot;perfprod105&quot;};

int randomIndex = (int) (Math.random() * stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;20&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_20LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;30&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_30LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;50&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_50LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;200&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_200LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;400&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_400LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
                <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="false">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x students and join using classcode of current teacher" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfStudentsInClass}</stringProp>
            </LoopController>
            <hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">import java.util.Date;

Date date = new Date();
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;classcode&quot;);

studentextuserid = &quot;std&quot; + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;studentextuserid&quot;, studentextuserid);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] multiProducts = {
    &quot;perfprod41&quot;, &quot;perfprod42&quot;, &quot;perfprod43&quot;, &quot;perfprod44&quot;, &quot;perfprod45&quot;,
    &quot;perfprod46&quot;, &quot;perfprod47&quot;, &quot;perfprod48&quot;, &quot;perfprod49&quot;, &quot;perfprod50&quot;,
    &quot;perfprod101&quot;, &quot;perfprod102&quot;, &quot;perfprod103&quot;, &quot;perfprod104&quot;, &quot;perfprod105&quot;
};

for (int i = 0; i &lt; multiProducts.length; i++) {
    vars.put(&quot;multiProduct&quot; + (i + 1), multiProducts[i]);
}

vars.put(&quot;productcode&quot;, multiProducts[0]);
vars.put(&quot;peCount&quot;, String.valueOf(multiProducts.length));</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with product_code and class_code" enabled="true">
                <stringProp name="IncludeController.includepath">join_Spaces_with_product_code_and_class_code.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">multiProduct</stringProp>
                <stringProp name="ForeachController.returnVal">multiProduct</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">1</stringProp>
                <stringProp name="ForeachController.endIndex">${peCount}</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Entitle User with Product" enabled="true">
                  <stringProp name="IncludeController.includepath">Entitle_User_With_Product.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="false">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="false">
                <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_student.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">timestamp = vars.get(&quot;date&quot;);

FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameStd&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
              <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameTch&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - 5B15PE - 300-650LOs" enabled="false">
            <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;5B15PE&quot;;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">String[] multiProducts = {
    &quot;evpel1&quot;, &quot;perfb1pe1&quot;, &quot;perfb1pe2&quot;, &quot;perfprod3&quot;, &quot;perfprod4&quot;, &quot;perfprod5&quot;, &quot;perfprod6&quot;, &quot;perfprod7&quot;, &quot;perfprod8&quot;, &quot;perfprod101&quot;, &quot;perfprod102&quot;, &quot;perfprod103&quot;, &quot;perfprod104&quot;, &quot;perfprod105&quot;, &quot;perfprodct3&quot;
};

String multiProductsAsString = &quot;\&quot;evpel1\&quot;, \&quot;perfb1pe1\&quot;, \&quot;perfb1pe2\&quot;, \&quot;perfprod3\&quot;, \&quot;perfprod4\&quot;, \&quot;perfprod5\&quot;, \&quot;perfprod6\&quot;, \&quot;perfprod7\&quot;, \&quot;perfprod8\&quot;, \&quot;perfprod101\&quot;, \&quot;perfprod102\&quot;, \&quot;perfprod103\&quot;, \&quot;perfprod104\&quot;, \&quot;perfprod105\&quot;, \&quot;perfprodct3\&quot;&quot;;

for (int i = 0; i &lt; multiProducts.length; i++) {
    vars.put(&quot;multiProduct&quot; + (i + 1), multiProducts[i]);
}

vars.put(&quot;productArrayString&quot;, multiProductsAsString);
vars.put(&quot;productcode&quot;, multiProducts[0]);
vars.put(&quot;peCount&quot;, String.valueOf(multiProducts.length));</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate multi products with a class" enabled="true">
              <stringProp name="IncludeController.includepath">associate_multi_products_with_class.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
                <stringProp name="RandomTimer.range">5000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [300-330]" enabled="false">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">300000</stringProp>
                <stringProp name="RandomTimer.range">30000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x assignments - 1" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfAssignmentsInClass-1}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end">${noOfAssignmentsInClass-1}</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">assignmentCount</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix5 = vars.get(&quot;noOfLOsInAssignment-1&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix5 + &quot;LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544524003551/1544524304922/1544524359136&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544524003551/1544524012478/1544524057691&quot;,&quot;1544524003551/1544524012478/1544524030068&quot;,&quot;1544525043137/1544525058289/1544525097148&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544525043137/1544525058289/1544525137957&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1544524003551/1544524304922/1544524324762&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544525043137/1544525058289/1544525090848&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1544524003551/1544524012478/1544524071582&quot;,&quot;1544524003551/1544524304922/1544524341184&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544525043137/1544525058289/1544525125172&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1544524003551/1544524304922/1544524313700&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544524003551/1544524012478/1544524084276&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544524003551/1544524304922/1544524387792&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1544524003551/1544524012478/1544524099346&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1544525043137/1544525058289/1544525114886&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544524003551/1544524012478/1544524044427&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544524003551/1544524304922/1544524376121&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] stringArray = {&quot;evpel1&quot;, &quot;perfb1pe1&quot;, &quot;perfb1pe2&quot;, &quot;perfprod3&quot;, &quot;perfprod4&quot;, &quot;perfprod5&quot;, &quot;perfprod6&quot;, &quot;perfprod7&quot;, &quot;perfprod8&quot;, &quot;perfprod101&quot;, &quot;perfprod102&quot;, &quot;perfprod103&quot;, &quot;perfprod104&quot;, &quot;perfprod105&quot;};

int randomIndex = (int) (Math.random() * stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;20&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_20LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;30&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_30LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;50&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_50LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
                <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x assignments - 2" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfAssignmentsInClass-2}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end">${noOfAssignmentsInClass-2}</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">assignmentCount</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix5 = vars.get(&quot;noOfLOsInAssignment-2&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix5 + &quot;LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1676462274659/1676462274660/1676462274741&quot;,&quot;1676462274659/1676462274660/1676462274707&quot;,&quot;1676462274659/1676462274660/1676462274744&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544591089661/1544591260222/1544591363137&quot;,&quot;1676462274659/1676462274660/1676462274671&quot;,&quot;1676462274659/1676462274660/1676462274732&quot;,&quot;1544524003551/1544524012478/1544524071582&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1676462274659/1676462274660/1676462274676&quot;,&quot;1676462274659/1676462274660/1676462274683&quot;,&quot;1544591089661/1544591602655/1544591669971&quot;,&quot;1544525590768/1544525683364/1544525729515&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1676462274659/1676462274660/1676462274701&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544525043137/1544525058289/1544525137957&quot;,&quot;1544591089661/1544591099675/1544591198772&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1676462274659/1676462274660/1676462274703&quot;,&quot;1544525043137/1544525159358/1544525192972&quot;,&quot;1676462274659/1676462274660/1676462274711&quot;,&quot;1544591089661/1544591099675/1544591165699&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544525043137/1544525159358/1544525175677&quot;,&quot;1544591089661/1544591364773/1544591392809&quot;,&quot;1676462274659/1676462274660/1676462274677&quot;,&quot;1544524003551/1544524304922/1544524324762&quot;,&quot;1676462274659/1676462274660/1676462274684&quot;,&quot;1544526345845/1544526671965/1544526695320&quot;,&quot;1676462274659/1676462274660/1676462274731&quot;,&quot;1544591089661/1544591602655/1544591649137&quot;,&quot;1676462274659/1676462274660/1676462274728&quot;,&quot;1544524003551/1544524012478/1544524030068&quot;,&quot;1676462274659/1676462274660/1676462274737&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1544526345845/1544526589100/1544526657285&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1676462274659/1676462274660/1676462274700&quot;,&quot;1544525043137/1544525159358/1544525263160&quot;,&quot;1544591089661/1544591260222/1544591320423&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1676462274659/1676462274660/1676462274723&quot;,&quot;1676462274659/1676462274660/1676462274724&quot;,&quot;1544525590768/1544525595533/1544525627465&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1676462274659/1676462274660/1676462274691&quot;,&quot;1676462274659/1676462274660/1676462274733&quot;,&quot;1676462274659/1676462274660/1676462274678&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1676462274659/1676462274660/1676462274705&quot;,&quot;1544526345845/1544526961740/1544527008225&quot;,&quot;1544524003551/1544524012478/1544524044427&quot;,&quot;1676462274659/1676462274660/1676462274714&quot;,&quot;1544591089661/1544591099675/1544591237488&quot;,&quot;1676462274659/1676462274660/1676462274713&quot;,&quot;1676462274659/1676462274660/1676462274740&quot;,&quot;1676462274659/1676462274660/1676462274729&quot;,&quot;1676462274659/1676462274660/1676462274699&quot;,&quot;1676462274659/1676462274660/1676462274693&quot;,&quot;1676462274659/1676462274660/1676462274687&quot;,&quot;1544591089661/1544591099675/1544591219876&quot;,&quot;1544526345845/1544526589100/1544526606750&quot;,&quot;1544525043137/1544525280855/1544525289279&quot;,&quot;1676462274659/1676462274660/1676462274719&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274715&quot;,&quot;1676462274659/1676462274660/1676462274708&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274702&quot;,&quot;1544525590768/1544525683364/1544525720457&quot;,&quot;1676462274659/1676462274660/1676462274675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544526345845/1544526589100/1544526638110&quot;,&quot;1676462274659/1676462274660/1676462274709&quot;,&quot;1676462274659/1676462274660/1676462274672&quot;,&quot;1676462274659/1676462274660/1676462274685&quot;,&quot;1544525590768/1544525595533/1544525635696&quot;,&quot;1676462274659/1676462274660/1676462274743&quot;,&quot;1676462274659/1676462274660/1676462274690&quot;,&quot;1676462274659/1676462274660/1676462274712&quot;,&quot;1544524003551/1544524304922/1544524313700&quot;,&quot;1544526345845/1544528319371/1544528367998&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544525590768/1544525683364/1544525756801&quot;,&quot;1676462274659/1676462274660/1676462274688&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1676462274659/1676462274660/1676462274745&quot;,&quot;1544525590768/1544525683364/1544525778291&quot;,&quot;1544525043137/1544525159358/1544525246748&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1676462274659/1676462274660/1676462274730&quot;,&quot;1676462274659/1676462274660/1676462274726&quot;,&quot;1676462274659/1676462274660/1676462274686&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274742&quot;,&quot;1544524003551/1544524304922/1544524359136&quot;,&quot;1544524003551/1544524304922/1544524376121&quot;,&quot;1676462274659/1676462274660/1676462274698&quot;,&quot;1676462274659/1676462274660/1676462274697&quot;,&quot;1676462274659/1676462274660/1676462274682&quot;,&quot;1544591089661/1544591260222/1544591334581&quot;,&quot;1676462274659/1676462274660/1676462274673&quot;,&quot;1544525043137/1544525159358/1544525217177&quot;,&quot;1544591089661/1544591260222/1544591341221&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274704&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1676462274659/1676462274660/1676462274717&quot;,&quot;1544526345845/1544526589100/1544526610825&quot;,&quot;1544591089661/1544591099675/1544591181584&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1676462274659/1676462274660/1676462274694&quot;,&quot;1676462274659/1676462274660/1676462274722&quot;,&quot;1544526345845/1544526671965/1544526721801&quot;,&quot;1544591089661/1544591412698/1544591455780&quot;,&quot;1544525043137/1544525159358/1544525239184&quot;,&quot;1676462274659/1676462274660/1676462274692&quot;,&quot;1676462274659/1676462274660/1676462274738&quot;,&quot;1676462274659/1676462274660/1676462274716&quot;,&quot;1544526345845/1544526671965/1544526728620&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544591089661/1544591412698/1544591428190&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1676462274659/1676462274660/1676462274734&quot;,&quot;1676462274659/1676462274660/1676462274736&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1544525590768/1544525595533/1544525679427&quot;,&quot;1676462274659/1676462274660/1676462274718&quot;,&quot;1544526345845/1544526671965/1544526763389&quot;,&quot;1676462274659/1676462274660/1676462274679&quot;,&quot;1676462274659/1676462274660/1676462274689&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544591089661/1544591412698/1544591439057&quot;,&quot;1676462274659/1676462274660/1676462274706&quot;,&quot;1544591089661/1544591099675/1544591247402&quot;,&quot;1676462274659/1676462274660/1676462274680&quot;,&quot;1544591089661/1544591260222/1544591295680&quot;,&quot;1544524003551/1544524304922/1544524341184&quot;,&quot;1544525590768/1544525683364/1544525734676&quot;,&quot;1676462274659/1676462274660/1676462274735&quot;,&quot;1676462274659/1676462274660/1676462274721&quot;,&quot;1544524003551/1544524012478/1544524084276&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1676462274659/1676462274660/1676462274696&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274739&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544526345845/1544526589100/1544526644717&quot;,&quot;1676462274659/1676462274660/1676462274727&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544525590768/1544525683364/1544525709799&quot;,&quot;1544524003551/1544524012478/1544524099346&quot;,&quot;1544526345845/1544526589100/1544526623799&quot;,&quot;1544525590768/1544525595533/1544525649026&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1676462274659/1676462274660/1676462274725&quot;,&quot;1544525590768/1544525595533/1544525611432&quot;,&quot;1544524003551/1544524012478/1544524057691&quot;,&quot;1544525043137/1544525058289/1544525125172&quot;,&quot;1544591089661/1544591260222/1544591284840&quot;,&quot;1544525590768/1544525595533/1544525663048&quot;,&quot;1544526345845/1544526671965/1544526710051&quot;,&quot;1544525043137/1544525058289/1544525143762&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544525043137/1544525058289/1544525114886&quot;,&quot;1544591089661/1544591602655/1544591636888&quot;,&quot;1544526345845/1544528319371/1544528345283&quot;,&quot;1544591751639/1544591756584/1544591786410&quot;,&quot;1544526345845/1544526961740/1544526980657&quot;,&quot;1676462274659/1676462274660/1676462274674&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1676462274659/1676462274660/1676462274720&quot;,&quot;1544524003551/1544524304922/1544524387792&quot;,&quot;1544525043137/1544525058289/1544525097148&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544526345845/1544528319371/1544528334775&quot;,&quot;1676462274659/1676462274660/1676462274695&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274710&quot;,&quot;1676462274659/1676462274660/1676462274681&quot;,&quot;1544526345845/1544526961740/1544526994099&quot;,&quot;1544526345845/1544526671965/1544526688230&quot;,&quot;1544525043137/1544525058289/1544525090848&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] stringArray = {&quot;perfprod3&quot;, &quot;perfprod4&quot;, &quot;perfprod5&quot;, &quot;perfprod6&quot;, &quot;perfprod7&quot;, &quot;perfprod8&quot;, &quot;perfprod101&quot;, &quot;perfprod102&quot;, &quot;perfprod103&quot;, &quot;perfprod104&quot;, &quot;perfprod105&quot;};

int randomIndex = (int) (Math.random() * stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="false">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">def variableNames = [&quot;perfprod3&quot;, &quot;perfprod4&quot;, &quot;perfprod5&quot;, &quot;perfprod6&quot;, &quot;perfprod7&quot;, &quot;perfprod8&quot;, &quot;perfprod101&quot;, &quot;perfprod102&quot;, &quot;perfprod103&quot;, &quot;perfprod104&quot;, &quot;perfprod105&quot;];

def randomIndex = (int) (Math.random() * variableNames.size());

def randomVariableName = variableNames[randomIndex];

def randomValue = vars.get(randomVariableName);

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <InterleaveControl guiclass="InterleaveControlGui" testclass="InterleaveControl" testname="Interleave Controller" enabled="false">
                <intProp name="InterleaveControl.style">1</intProp>
                <boolProp name="InterleaveControl.accrossThreads">false</boolProp>
              </InterleaveControl>
              <hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfb1pe1&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfb1pe2&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod21&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod22&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod23&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod24&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod25&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-2}&quot; == &quot;100&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_100LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-2}&quot; == &quot;200&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_200LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
                <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x assignments - 3" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfAssignmentsInClass-3}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end">${noOfAssignmentsInClass-3}</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">assignmentCount</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix5 = vars.get(&quot;noOfLOsInAssignment-3&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix5 + &quot;LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544593830881/1544593964252/1544594102416&quot;,&quot;1676462274659/1676462274660/1676462274700&quot;,&quot;1676462274557/1676462274558/1676462274576&quot;,&quot;1676462274659/1676462274660/1676462274713&quot;,&quot;1544592857014/1544592865722/1544593072380&quot;,&quot;1676462274557/1676462274558/1676462274571&quot;,&quot;1544592857014/1544592865722/1544593123201&quot;,&quot;1544593830881/1544593842258/1544593905062&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1676462274659/1676462274660/1676462274755&quot;,&quot;1676462274557/1676462274558/1676462274588&quot;,&quot;1676462274557/1676462274558/1676462274585&quot;,&quot;1544593830881/1544596291616/1544596322099&quot;,&quot;1676462274659/1676462274660/1676462274729&quot;,&quot;1544596644314/1544596678647/1544596745950&quot;,&quot;1544593830881/1544593842258/1544593925051&quot;,&quot;1676462274659/1676462274660/1676462274863&quot;,&quot;1544524003551/1544524012478/1544524084276&quot;,&quot;1676462274659/1676462274660/1676462274719&quot;,&quot;1544524003551/1544524304922/1544524313700&quot;,&quot;1676462274659/1676462274660/1676462274862&quot;,&quot;1544592286221/1544592379241/1544592438186&quot;,&quot;1676462274557/1676462274558/1676462274602&quot;,&quot;1676462274659/1676462274660/1676462274689&quot;,&quot;1676462274659/1676462274660/1676462274724&quot;,&quot;1544591089661/1544591260222/1544591284840&quot;,&quot;1676462274659/1676462274660/1676462274858&quot;,&quot;1676462274557/1676462274558/1676462274590&quot;,&quot;1544592857014/1544593139545/1544593488247&quot;,&quot;1676462274659/1676462274660/1676462274733&quot;,&quot;1544596644314/1544596802487/1544596921860&quot;,&quot;1676462274659/1676462274660/1676462274759&quot;,&quot;1676462274557/1676462274558/1676462274614&quot;,&quot;1676462274557/1676462274558/1676462274560&quot;,&quot;1544526345845/1544526671965/1544526688230&quot;,&quot;1544593830881/1544593964252/1544594177257&quot;,&quot;1676462274659/1676462274660/1676462274753&quot;,&quot;1676462274659/1676462274660/1676462274672&quot;,&quot;1676462274659/1676462274660/1676462274747&quot;,&quot;1544525590768/1544525595533/1544525649026&quot;,&quot;1676462274659/1676462274660/1676462274848&quot;,&quot;1544591089661/1544591260222/1544591363137&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1676462274659/1676462274660/1676462274756&quot;,&quot;1676462274659/1676462274660/1676462274860&quot;,&quot;1544593830881/1544596494652/1544596529922&quot;,&quot;1676462274659/1676462274660/1676462274857&quot;,&quot;1676462274557/1676462274558/1676462274615&quot;,&quot;1676462274659/1676462274660/1676462274851&quot;,&quot;1544592286221/1544592474205/1544592491253&quot;,&quot;1544591751639/1544591756584/1544591852005&quot;,&quot;1676462274659/1676462274660/1676462274715&quot;,&quot;1544525043137/1544525159358/1544525175677&quot;,&quot;1676462274557/1676462274558/1676462274568&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592857014/1544592865722/1544593093552&quot;,&quot;1676462274557/1676462274558/1676462274570&quot;,&quot;1676462274659/1676462274660/1676462274866&quot;,&quot;1544525590768/1544525595533/1544525627465&quot;,&quot;1544525590768/1544525683364/1544525729515&quot;,&quot;1544525043137/1544525058289/1544525090848&quot;,&quot;1676462274659/1676462274660/1676462274701&quot;,&quot;1544591751639/1544592145731/1544592176780&quot;,&quot;1676462274659/1676462274660/1676462274859&quot;,&quot;1676462274557/1676462274558/1676462274609&quot;,&quot;1676462274659/1676462274660/1676462274718&quot;,&quot;1676462274557/1676462274558/1676462274580&quot;,&quot;1544525590768/1544525595533/1544525635696&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544525043137/1544525058289/1544525137957&quot;,&quot;1676462274659/1676462274660/1676462274855&quot;,&quot;1544592286221/1544592379241/1544592404760&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544591751639/1544591989858/1544592034736&quot;,&quot;1544592286221/1544592379241/1544592422449&quot;,&quot;1676462274659/1676462274660/1676462274699&quot;,&quot;1544592857014/1544592865722/1544593104748&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1544525043137/1544525159358/1544525239184&quot;,&quot;1676462274659/1676462274660/1676462274717&quot;,&quot;1676462274659/1676462274660/1676462274728&quot;,&quot;1676462274557/1676462274558/1676462274610&quot;,&quot;1676462274557/1676462274558/1676462274598&quot;,&quot;1544524003551/1544524012478/1544524057691&quot;,&quot;1544524003551/1544524304922/1544524359136&quot;,&quot;1676462274659/1676462274660/1676462274870&quot;,&quot;1676462274659/1676462274660/1676462274704&quot;,&quot;1544526345845/1544526589100/1544526657285&quot;,&quot;1544526345845/1544526589100/1544526610825&quot;,&quot;1544524003551/1544524012478/1544524099346&quot;,&quot;1544526345845/1544526589100/1544526623799&quot;,&quot;1544591751639/1544591859950/1544591895035&quot;,&quot;1676462274659/1676462274660/1676462274708&quot;,&quot;1676462274659/1676462274660/1676462274838&quot;,&quot;1676462274557/1676462274558/1676462274608&quot;,&quot;1544525043137/1544525058289/1544525114886&quot;,&quot;1676462274659/1676462274660/1676462274836&quot;,&quot;1544592286221/1544592520233/1544592540334&quot;,&quot;1544591089661/1544591364773/1544591392809&quot;,&quot;1544526345845/1544528319371/1544528345283&quot;,&quot;1676462274557/1676462274558/1676462274578&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544593830881/1544593842258/1544593889640&quot;,&quot;1676462274557/1676462274558/1676462274566&quot;,&quot;1544591089661/1544591099675/1544591237488&quot;,&quot;1676462274659/1676462274660/1676462274853&quot;,&quot;1544526345845/1544526671965/1544526721801&quot;,&quot;1544596644314/1544596802487/1544596845016&quot;,&quot;1676462274659/1676462274660/1676462274842&quot;,&quot;1544525590768/1544525595533/1544525663048&quot;,&quot;1544592857014/1544593139545/1544593476327&quot;,&quot;1544591089661/1544591602655/1544591636888&quot;,&quot;1544526345845/1544528319371/1544528334775&quot;,&quot;1544592286221/1544592291887/1544592370486&quot;,&quot;1544591089661/1544591260222/1544591295680&quot;,&quot;1676462274659/1676462274660/1676462274844&quot;,&quot;1676462274557/1676462274558/1676462274589&quot;,&quot;1544592857014/1544593529004/1544593551477&quot;,&quot;1544526345845/1544526671965/1544526695320&quot;,&quot;1676462274557/1676462274558/1676462274601&quot;,&quot;1544526345845/1544526589100/1544526638110&quot;,&quot;1676462274659/1676462274660/1676462274692&quot;,&quot;1544525043137/1544525159358/1544525217177&quot;,&quot;1676462274557/1676462274558/1676462274599&quot;,&quot;1676462274659/1676462274660/1676462274730&quot;,&quot;1676462274659/1676462274660/1676462274745&quot;,&quot;1676462274557/1676462274558/1676462274569&quot;,&quot;1676462274557/1676462274558/1676462274572&quot;,&quot;1544596644314/1544597091060/1544597121860&quot;,&quot;1544596644314/1544596678647/1544596768254&quot;,&quot;1544596644314/1544596678647/1544596792897&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544596678647/1544596761923&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1676462274659/1676462274660/1676462274738&quot;,&quot;1544592286221/1544592520233/1544592555974&quot;,&quot;1544592857014/1544593139545/1544593187008&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544596644314/1544597220792/1544597275965&quot;,&quot;1676462274659/1676462274660/1676462274839&quot;,&quot;1676462274659/1676462274660/1676462274749&quot;,&quot;1544524003551/1544524304922/1544524324762&quot;,&quot;1544591751639/1544591937229/1544591951092&quot;,&quot;1676462274659/1676462274660/1676462274869&quot;,&quot;1544525043137/1544525159358/1544525263160&quot;,&quot;1676462274557/1676462274558/1676462274582&quot;,&quot;1544593830881/1544593964252/1544594135462&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544526345845/1544526589100/1544526606750&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1676462274557/1676462274558/1676462274607&quot;,&quot;1676462274557/1676462274558/1676462274603&quot;,&quot;1676462274659/1676462274660/1676462274723&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544592286221/1544592623523/1544592658543&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274557/1676462274558/1676462274596&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1544596644314/1544597008306/1544597032165&quot;,&quot;1544525590768/1544525683364/1544525756801&quot;,&quot;1544591089661/1544591412698/1544591455780&quot;,&quot;1544591751639/1544591756584/1544591814105&quot;,&quot;1676462274659/1676462274660/1676462274673&quot;,&quot;1676462274659/1676462274660/1676462274694&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1544526345845/1544526671965/1544526710051&quot;,&quot;1676462274659/1676462274660/1676462274681&quot;,&quot;1544596644314/1544596802487/1544596877787&quot;,&quot;1676462274659/1676462274660/1676462274711&quot;,&quot;1676462274557/1676462274558/1676462274613&quot;,&quot;1544525590768/1544525683364/1544525709799&quot;,&quot;1676462274659/1676462274660/1676462274685&quot;,&quot;1544526345845/1544526961740/1544527008225&quot;,&quot;1676462274659/1676462274660/1676462274714&quot;,&quot;1544525043137/1544525058289/1544525125172&quot;,&quot;1544525043137/1544525159358/1544525192972&quot;,&quot;1544525590768/1544525683364/1544525720457&quot;,&quot;1676462274659/1676462274660/1676462274748&quot;,&quot;1544524003551/1544524012478/1544524030068&quot;,&quot;1676462274659/1676462274660/1676462274757&quot;,&quot;1544524003551/1544524304922/1544524387792&quot;,&quot;1676462274659/1676462274660/1676462274840&quot;,&quot;1676462274557/1676462274558/1676462274561&quot;,&quot;1544591751639/1544591756584/1544591786410&quot;,&quot;1544526345845/1544526671965/1544526763389&quot;,&quot;1544596644314/1544596678647/1544596731689&quot;,&quot;1676462274659/1676462274660/1676462274852&quot;,&quot;1676462274659/1676462274660/1676462274677&quot;,&quot;1544525590768/1544525595533/1544525611432&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1544591751639/1544591756584/1544591842867&quot;,&quot;1544593830881/1544596291616/1544596327463&quot;,&quot;1676462274659/1676462274660/1676462274712&quot;,&quot;1676462274659/1676462274660/1676462274845&quot;,&quot;1544592286221/1544592379241/1544592448263&quot;,&quot;1544593830881/1544593964252/1544594078882&quot;,&quot;1676462274557/1676462274558/1676462274562&quot;,&quot;1544524003551/1544524304922/1544524376121&quot;,&quot;1676462274659/1676462274660/1676462274735&quot;,&quot;1544592857014/1544593139545/1544593454057&quot;,&quot;1676462274659/1676462274660/1676462274850&quot;,&quot;1544592857014/1544593585947/1544593632079&quot;,&quot;1544592286221/1544592379241/1544592415158&quot;,&quot;1544592286221/1544592623523/1544592648386&quot;,&quot;1676462274557/1676462274558/1676462274586&quot;,&quot;1676462274659/1676462274660/1676462274740&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593585947/1544593606215&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1544591751639/1544591859950/1544591923488&quot;,&quot;1676462274659/1676462274660/1676462274725&quot;,&quot;1544592857014/1544593703192/1544593752239&quot;,&quot;1676462274659/1676462274660/1676462274710&quot;,&quot;1544593830881/1544596494652/1544596513093&quot;,&quot;1544525590768/1544525683364/1544525734676&quot;,&quot;1544593830881/1544593842258/1544593932560&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1544592857014/1544593703192/1544593743725&quot;,&quot;1544525043137/1544525058289/1544525097148&quot;,&quot;1544596644314/1544597220792/1544597245750&quot;,&quot;1676462274557/1676462274558/1676462274573&quot;,&quot;1544592857014/1544592865722/1544593079694&quot;,&quot;1544591751639/1544591756584/1544591792950&quot;,&quot;1676462274659/1676462274660/1676462274736&quot;,&quot;1676462274659/1676462274660/1676462274691&quot;,&quot;1676462274659/1676462274660/1676462274837&quot;,&quot;1676462274557/1676462274558/1676462274584&quot;,&quot;1676462274659/1676462274660/1676462274695&quot;,&quot;1676462274659/1676462274660/1676462274679&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1676462274557/1676462274558/1676462274612&quot;,&quot;1676462274659/1676462274660/1676462274737&quot;,&quot;1676462274659/1676462274660/1676462274849&quot;,&quot;1544525590768/1544525595533/1544525679427&quot;,&quot;1544524003551/1544524304922/1544524341184&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1676462274659/1676462274660/1676462274758&quot;,&quot;1676462274659/1676462274660/1676462274854&quot;,&quot;1676462274659/1676462274660/1676462274690&quot;,&quot;1544596644314/1544597220792/1544597262426&quot;,&quot;1676462274557/1676462274558/1676462274591&quot;,&quot;1676462274659/1676462274660/1676462274846&quot;,&quot;1676462274659/1676462274660/1676462274856&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1676462274557/1676462274558/1676462274611&quot;,&quot;1676462274659/1676462274660/1676462274703&quot;,&quot;1676462274557/1676462274558/1676462274593&quot;,&quot;1676462274659/1676462274660/1676462274702&quot;,&quot;1676462274557/1676462274558/1676462274605&quot;,&quot;1676462274659/1676462274660/1676462274843&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544593830881/1544593964252/1544594113782&quot;,&quot;1544593830881/1544593964252/1544594194047&quot;,&quot;1676462274659/1676462274660/1676462274671&quot;,&quot;1676462274557/1676462274558/1676462274604&quot;,&quot;1676462274659/1676462274660/1676462274721&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544591089661/1544591260222/1544591320423&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544591751639/1544591989858/1544592017149&quot;,&quot;1676462274557/1676462274558/1676462274581&quot;,&quot;1676462274659/1676462274660/1676462274680&quot;,&quot;1544592857014/1544593585947/1544593620647&quot;,&quot;1676462274659/1676462274660/1676462274746&quot;,&quot;1544596644314/1544596802487/1544596858389&quot;,&quot;1544526345845/1544526961740/1544526994099&quot;,&quot;1676462274659/1676462274660/1676462274697&quot;,&quot;1544591089661/1544591412698/1544591439057&quot;,&quot;1544592286221/1544592379241/1544592466092&quot;,&quot;1544593830881/1544596494652/1544596545929&quot;,&quot;1676462274557/1676462274558/1676462274592&quot;,&quot;1676462274659/1676462274660/1676462274865&quot;,&quot;1676462274557/1676462274558/1676462274565&quot;,&quot;1676462274659/1676462274660/1676462274741&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544592286221/1544592291887/1544592347743&quot;,&quot;1544596644314/1544597091060/1544597104557&quot;,&quot;1544524003551/1544524012478/1544524044427&quot;,&quot;1676462274557/1676462274558/1676462274564&quot;,&quot;1676462274659/1676462274660/1676462274727&quot;,&quot;1676462274659/1676462274660/1676462274705&quot;,&quot;1544591751639/1544591859950/1544591889129&quot;,&quot;1676462274659/1676462274660/1676462274744&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1676462274659/1676462274660/1676462274696&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1676462274557/1676462274558/1676462274583&quot;,&quot;1544526345845/1544526589100/1544526644717&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1676462274557/1676462274558/1676462274616&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1676462274659/1676462274660/1676462274693&quot;,&quot;1544592286221/1544592291887/1544592333414&quot;,&quot;1676462274659/1676462274660/1676462274739&quot;,&quot;1676462274659/1676462274660/1676462274707&quot;,&quot;1544591089661/1544591602655/1544591649137&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1676462274557/1676462274558/1676462274563&quot;,&quot;1544596644314/1544596802487/1544596904838&quot;,&quot;1676462274557/1676462274558/1676462274600&quot;,&quot;1676462274659/1676462274660/1676462274720&quot;,&quot;1544591089661/1544591412698/1544591428190&quot;,&quot;1676462274557/1676462274558/1676462274594&quot;,&quot;1676462274557/1676462274558/1676462274567&quot;,&quot;1676462274659/1676462274660/1676462274678&quot;,&quot;1544592857014/1544593703192/1544593728070&quot;,&quot;1544593830881/1544596248781/1544596271349&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1676462274659/1676462274660/1676462274754&quot;,&quot;1544593830881/1544593842258/1544593874472&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1676462274659/1676462274660/1676462274698&quot;,&quot;1544593830881/1544596291616/1544596347700&quot;,&quot;1544592286221/1544592291887/1544592314873&quot;,&quot;1544524003551/1544524012478/1544524071582&quot;,&quot;1676462274659/1676462274660/1676462274687&quot;,&quot;1544592857014/1544593139545/1544593471128&quot;,&quot;1676462274659/1676462274660/1676462274847&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544591751639/1544591859950/1544591913490&quot;,&quot;1544592857014/1544592865722/1544593053271&quot;,&quot;1676462274557/1676462274558/1676462274606&quot;,&quot;1676462274659/1676462274660/1676462274726&quot;,&quot;1676462274659/1676462274660/1676462274709&quot;,&quot;1676462274659/1676462274660/1676462274722&quot;,&quot;1544591751639/1544591989858/1544592010989&quot;,&quot;1544593830881/1544593842258/1544593949312&quot;,&quot;1544591751639/1544591756584/1544591826125&quot;,&quot;1676462274659/1676462274660/1676462274867&quot;,&quot;1544526345845/1544526961740/1544526980657&quot;,&quot;1676462274659/1676462274660/1676462274674&quot;,&quot;1544592857014/1544593139545/1544593173865&quot;,&quot;1676462274659/1676462274660/1676462274731&quot;,&quot;1676462274659/1676462274660/1676462274732&quot;,&quot;1544596644314/1544596802487/1544596890399&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274686&quot;,&quot;1676462274557/1676462274558/1676462274579&quot;,&quot;1676462274659/1676462274660/1676462274751&quot;,&quot;1544591089661/1544591099675/1544591198772&quot;,&quot;1544591089661/1544591260222/1544591341221&quot;,&quot;1544596644314/1544596678647/1544596711546&quot;,&quot;1544591089661/1544591099675/1544591219876&quot;,&quot;1544525043137/1544525159358/1544525246748&quot;,&quot;1544591089661/1544591099675/1544591247402&quot;,&quot;1676462274659/1676462274660/1676462274682&quot;,&quot;1676462274557/1676462274558/1676462274597&quot;,&quot;1676462274557/1676462274558/1676462274577&quot;,&quot;1676462274557/1676462274558/1676462274595&quot;,&quot;1676462274659/1676462274660/1676462274752&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544592286221/1544592291887/1544592322911&quot;,&quot;1676462274659/1676462274660/1676462274688&quot;,&quot;1676462274659/1676462274660/1676462274760&quot;,&quot;1544591089661/1544591260222/1544591334581&quot;,&quot;1544591751639/1544592145731/1544592165309&quot;,&quot;1544592286221/1544592623523/1544592671565&quot;,&quot;1676462274659/1676462274660/1676462274706&quot;,&quot;1676462274557/1676462274558/1676462274575&quot;,&quot;1544525043137/1544525058289/1544525143762&quot;,&quot;1544525590768/1544525683364/1544525778291&quot;,&quot;1676462274659/1676462274660/1676462274861&quot;,&quot;1676462274659/1676462274660/1676462274716&quot;,&quot;1676462274557/1676462274558/1676462274574&quot;,&quot;1676462274659/1676462274660/1676462274676&quot;,&quot;1676462274557/1676462274558/1676462274559&quot;,&quot;1544596644314/1544597091060/1544597149347&quot;,&quot;1544526345845/1544526671965/1544526728620&quot;,&quot;1676462274659/1676462274660/1676462274734&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1676462274659/1676462274660/1676462274868&quot;,&quot;1544526345845/1544528319371/1544528367998&quot;,&quot;1676462274659/1676462274660/1676462274864&quot;,&quot;1676462274557/1676462274558/1676462274587&quot;,&quot;1544591089661/1544591099675/1544591181584&quot;,&quot;1676462274659/1676462274660/1676462274742&quot;,&quot;1676462274659/1676462274660/1676462274683&quot;,&quot;1676462274659/1676462274660/1676462274675&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274750&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544591751639/1544592145731/1544592194540&quot;,&quot;1544592286221/1544592520233/1544592561671&quot;,&quot;1676462274659/1676462274660/1676462274841&quot;,&quot;1544525043137/1544525280855/1544525289279&quot;,&quot;1544591089661/1544591099675/1544591165699&quot;,&quot;1544592286221/1544592291887/1544592363784&quot;,&quot;1676462274659/1676462274660/1676462274684&quot;,&quot;1544591089661/1544591602655/1544591669971&quot;,&quot;1676462274659/1676462274660/1676462274743&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] stringArray = {&quot;perfprod101&quot;, &quot;perfprod102&quot;, &quot;perfprod103&quot;, &quot;perfprod104&quot;, &quot;perfprod105&quot;};

int randomIndex = (int) (Math.random() * stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="false">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">def variableNames = [&quot;perfprod101&quot;, &quot;perfprod102&quot;, &quot;perfprod103&quot;, &quot;perfprod104&quot;, &quot;perfprod105&quot;];

def randomIndex = (int) (Math.random() * variableNames.size());

def randomVariableName = variableNames[randomIndex];

def randomValue = vars.get(randomVariableName);

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <InterleaveControl guiclass="InterleaveControlGui" testclass="InterleaveControl" testname="Interleave Controller" enabled="false">
                <intProp name="InterleaveControl.style">1</intProp>
                <boolProp name="InterleaveControl.accrossThreads">false</boolProp>
              </InterleaveControl>
              <hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfb1pe1&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfb1pe2&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod21&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod22&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod23&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod24&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod25&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-3}&quot; == &quot;400&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_400LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
                <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x rules" enabled="false">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfAccessRulesInClass}</stringProp>
            </LoopController>
            <hashTree>
              <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
                <stringProp name="maximumValue">9999</stringProp>
                <stringProp name="minimumValue">0000</stringProp>
                <stringProp name="outputFormat">0000</stringProp>
                <boolProp name="perThread">true</boolProp>
                <stringProp name="randomSeed"></stringProp>
                <stringProp name="variableName">randomNo</stringProp>
              </RandomVariableConfig>
              <hashTree/>
              <InterleaveControl guiclass="InterleaveControlGui" testclass="InterleaveControl" testname="Interleave Controller" enabled="true">
                <intProp name="InterleaveControl.style">1</intProp>
                <boolProp name="InterleaveControl.accrossThreads">false</boolProp>
              </InterleaveControl>
              <hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;evpel1&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfb1pe1&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfb1pe2&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod21&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod22&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod23&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod24&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod25&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAccessRule}&quot; == &quot;50&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a rule" enabled="true">
                  <stringProp name="IncludeController.includepath">Create_a_rule_100LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAccessRule}&quot; == &quot;100&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a rule" enabled="true">
                  <stringProp name="IncludeController.includepath">Create_a_rule_100LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x students and join using classcode of current teacher" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfStudentsInClass}</stringProp>
            </LoopController>
            <hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">import java.util.Date;

Date date = new Date();
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;classcode&quot;);

studentextuserid = &quot;std&quot; + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;studentextuserid&quot;, studentextuserid);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] multiProducts = {
    &quot;evpel1&quot;, &quot;perfb1pe1&quot;, &quot;perfb1pe2&quot;, &quot;perfprod3&quot;, &quot;perfprod4&quot;, &quot;perfprod5&quot;, &quot;perfprod6&quot;, &quot;perfprod7&quot;, &quot;perfprod8&quot;, &quot;perfprod101&quot;, &quot;perfprod102&quot;, &quot;perfprod103&quot;, &quot;perfprod104&quot;, &quot;perfprod105&quot;, &quot;perfprodct3&quot;
};

for (int i = 0; i &lt; multiProducts.length; i++) {
    vars.put(&quot;multiProduct&quot; + (i + 1), multiProducts[i]);
}

vars.put(&quot;productcode&quot;, multiProducts[0]);
vars.put(&quot;peCount&quot;, String.valueOf(multiProducts.length));</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with product_code and class_code" enabled="true">
                <stringProp name="IncludeController.includepath">join_Spaces_with_product_code_and_class_code.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">multiProduct</stringProp>
                <stringProp name="ForeachController.returnVal">multiProduct</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">1</stringProp>
                <stringProp name="ForeachController.endIndex">${peCount}</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Entitle User with Product" enabled="true">
                  <stringProp name="IncludeController.includepath">Entitle_User_With_Product.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="false">
                <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_student.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">timestamp = vars.get(&quot;date&quot;);

FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameStd&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
              <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameTch&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameTch&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1011 and 1012 - Combined - 1005 classes" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>100.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">1001.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">extuserid,cc,category</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_institution.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get classes of an user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_classes_of_an_user_institution.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get details for a specific class" enabled="true">
            <stringProp name="IncludeController.includepath">Get_details_for_a_specific_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller" enabled="true"/>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot;==&quot;${cat1}&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">cat1pe</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">2</stringProp>
                <stringProp name="ForeachController.endIndex">3</stringProp>
              </ForeachController>
              <hashTree>
                <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="A Student simulating reading (Multiple pages) and post the statements" enabled="true">
                  <boolProp name="LoopController.continue_forever">true</boolProp>
                  <stringProp name="LoopController.loops">${learningprogressnps_1011_cat1}</stringProp>
                </LoopController>
                <hashTree>
                  <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                    <stringProp name="filename">p_cat1.csv</stringProp>
                    <stringProp name="fileEncoding"></stringProp>
                    <stringProp name="variableNames">task,verb</stringProp>
                    <boolProp name="ignoreFirstLine">false</boolProp>
                    <stringProp name="delimiter">,</stringProp>
                    <boolProp name="quotedData">false</boolProp>
                    <boolProp name="recycle">true</boolProp>
                    <boolProp name="stopThread">false</boolProp>
                    <stringProp name="shareMode">shareMode.thread</stringProp>
                  </CSVDataSet>
                  <hashTree/>
                  <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="false">
                    <intProp name="ActionProcessor.action">1</intProp>
                    <intProp name="ActionProcessor.target">0</intProp>
                    <stringProp name="ActionProcessor.duration">0</stringProp>
                  </TestAction>
                  <hashTree>
                    <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                      <stringProp name="ConstantTimer.delay">${userProgress_min_1011}</stringProp>
                      <stringProp name="RandomTimer.range">${userProgress_max_1011}</stringProp>
                    </UniformRandomTimer>
                    <hashTree/>
                  </hashTree>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add a new statement" enabled="true">
                    <stringProp name="IncludeController.includepath">Add_statements.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                  <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="false">
                    <intProp name="ActionProcessor.action">1</intProp>
                    <intProp name="ActionProcessor.target">0</intProp>
                    <stringProp name="ActionProcessor.duration">0</stringProp>
                  </TestAction>
                  <hashTree>
                    <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                      <stringProp name="ConstantTimer.delay">${userProgress_min_1011}</stringProp>
                      <stringProp name="RandomTimer.range">${userProgress_max_1011}</stringProp>
                    </UniformRandomTimer>
                    <hashTree/>
                  </hashTree>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update user&apos;s application state for a product or class (product)" enabled="false">
                    <stringProp name="IncludeController.includepath">Update_user_application_state_for_a_product_or_class_product_.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot;==&quot;${cat2}&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">perf21pe</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">3</stringProp>
              </ForeachController>
              <hashTree>
                <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="A Student simulating reading (Multiple pages) and post the statements" enabled="true">
                  <boolProp name="LoopController.continue_forever">true</boolProp>
                  <stringProp name="LoopController.loops">${learningprogressnps_1011_cat2}</stringProp>
                </LoopController>
                <hashTree>
                  <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                    <stringProp name="filename">p_cat2.csv</stringProp>
                    <stringProp name="fileEncoding"></stringProp>
                    <stringProp name="variableNames">task,verb</stringProp>
                    <boolProp name="ignoreFirstLine">false</boolProp>
                    <stringProp name="delimiter">,</stringProp>
                    <boolProp name="quotedData">false</boolProp>
                    <boolProp name="recycle">true</boolProp>
                    <boolProp name="stopThread">false</boolProp>
                    <stringProp name="shareMode">shareMode.thread</stringProp>
                  </CSVDataSet>
                  <hashTree/>
                  <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="false">
                    <intProp name="ActionProcessor.action">1</intProp>
                    <intProp name="ActionProcessor.target">0</intProp>
                    <stringProp name="ActionProcessor.duration">0</stringProp>
                  </TestAction>
                  <hashTree>
                    <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                      <stringProp name="ConstantTimer.delay">${userProgress_min_1011}</stringProp>
                      <stringProp name="RandomTimer.range">${userProgress_max_1011}</stringProp>
                    </UniformRandomTimer>
                    <hashTree/>
                  </hashTree>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add a new statement" enabled="true">
                    <stringProp name="IncludeController.includepath">Add_statements.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                  <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="false">
                    <intProp name="ActionProcessor.action">1</intProp>
                    <intProp name="ActionProcessor.target">0</intProp>
                    <stringProp name="ActionProcessor.duration">0</stringProp>
                  </TestAction>
                  <hashTree>
                    <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                      <stringProp name="ConstantTimer.delay">${userProgress_min_1011}</stringProp>
                      <stringProp name="RandomTimer.range">${userProgress_max_1011}</stringProp>
                    </UniformRandomTimer>
                    <hashTree/>
                  </hashTree>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update user&apos;s application state for a product or class (product)" enabled="false">
                    <stringProp name="IncludeController.includepath">Update_user_application_state_for_a_product_or_class_product_.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot;==&quot;${cat3}&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">cat3pe</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">3</stringProp>
              </ForeachController>
              <hashTree>
                <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="A Student simulating reading (Multiple pages) and post the statements" enabled="true">
                  <boolProp name="LoopController.continue_forever">true</boolProp>
                  <stringProp name="LoopController.loops">${learningprogressnps_1011_cat3}</stringProp>
                </LoopController>
                <hashTree>
                  <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                    <stringProp name="filename">p_cat3.csv</stringProp>
                    <stringProp name="fileEncoding"></stringProp>
                    <stringProp name="variableNames">task,verb</stringProp>
                    <boolProp name="ignoreFirstLine">false</boolProp>
                    <stringProp name="delimiter">,</stringProp>
                    <boolProp name="quotedData">false</boolProp>
                    <boolProp name="recycle">true</boolProp>
                    <boolProp name="stopThread">false</boolProp>
                    <stringProp name="shareMode">shareMode.thread</stringProp>
                  </CSVDataSet>
                  <hashTree/>
                  <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="false">
                    <intProp name="ActionProcessor.action">1</intProp>
                    <intProp name="ActionProcessor.target">0</intProp>
                    <stringProp name="ActionProcessor.duration">0</stringProp>
                  </TestAction>
                  <hashTree>
                    <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                      <stringProp name="ConstantTimer.delay">${userProgress_min_1011}</stringProp>
                      <stringProp name="RandomTimer.range">${userProgress_max_1011}</stringProp>
                    </UniformRandomTimer>
                    <hashTree/>
                  </hashTree>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add a new statement" enabled="true">
                    <stringProp name="IncludeController.includepath">Add_statements.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                  <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="false">
                    <intProp name="ActionProcessor.action">1</intProp>
                    <intProp name="ActionProcessor.target">0</intProp>
                    <stringProp name="ActionProcessor.duration">0</stringProp>
                  </TestAction>
                  <hashTree>
                    <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                      <stringProp name="ConstantTimer.delay">${userProgress_min_1011}</stringProp>
                      <stringProp name="RandomTimer.range">${userProgress_max_1011}</stringProp>
                    </UniformRandomTimer>
                    <hashTree/>
                  </hashTree>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update user&apos;s application state for a product or class (product)" enabled="false">
                    <stringProp name="IncludeController.includepath">Update_user_application_state_for_a_product_or_class_product_.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot;==&quot;${cat4}&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">cat4pe</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">2</stringProp>
              </ForeachController>
              <hashTree>
                <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                  <stringProp name="IfController.condition">&quot;${productcode}&quot;==&quot;${cat4pe1}&quot;</stringProp>
                  <boolProp name="IfController.evaluateAll">false</boolProp>
                </IfController>
                <hashTree>
                  <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="A Student simulating reading (Multiple pages) and post the statements" enabled="true">
                    <boolProp name="LoopController.continue_forever">true</boolProp>
                    <stringProp name="LoopController.loops">${learningprogressnps_1011_cat4_pe1}</stringProp>
                  </LoopController>
                  <hashTree>
                    <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                      <stringProp name="filename">p_cat4.csv</stringProp>
                      <stringProp name="fileEncoding"></stringProp>
                      <stringProp name="variableNames">task,verb</stringProp>
                      <boolProp name="ignoreFirstLine">false</boolProp>
                      <stringProp name="delimiter">,</stringProp>
                      <boolProp name="quotedData">false</boolProp>
                      <boolProp name="recycle">true</boolProp>
                      <boolProp name="stopThread">false</boolProp>
                      <stringProp name="shareMode">shareMode.thread</stringProp>
                    </CSVDataSet>
                    <hashTree/>
                    <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="false">
                      <intProp name="ActionProcessor.action">1</intProp>
                      <intProp name="ActionProcessor.target">0</intProp>
                      <stringProp name="ActionProcessor.duration">0</stringProp>
                    </TestAction>
                    <hashTree>
                      <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                        <stringProp name="ConstantTimer.delay">${userProgress_min_1011}</stringProp>
                        <stringProp name="RandomTimer.range">${userProgress_max_1011}</stringProp>
                      </UniformRandomTimer>
                      <hashTree/>
                    </hashTree>
                    <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add a new statement" enabled="true">
                      <stringProp name="IncludeController.includepath">Add_statements.jmx</stringProp>
                    </IncludeController>
                    <hashTree/>
                    <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="false">
                      <intProp name="ActionProcessor.action">1</intProp>
                      <intProp name="ActionProcessor.target">0</intProp>
                      <stringProp name="ActionProcessor.duration">0</stringProp>
                    </TestAction>
                    <hashTree>
                      <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                        <stringProp name="ConstantTimer.delay">${userProgress_min_1011}</stringProp>
                        <stringProp name="RandomTimer.range">${userProgress_max_1011}</stringProp>
                      </UniformRandomTimer>
                      <hashTree/>
                    </hashTree>
                    <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update user&apos;s application state for a product or class (product)" enabled="false">
                      <stringProp name="IncludeController.includepath">Update_user_application_state_for_a_product_or_class_product_.jmx</stringProp>
                    </IncludeController>
                    <hashTree/>
                  </hashTree>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update user&apos;s application state for a product or class (product)" enabled="true">
                    <stringProp name="IncludeController.includepath">Update_user_application_state_for_a_product_or_class_product_multi_1011.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                </hashTree>
                <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                  <stringProp name="IfController.condition">&quot;${productcode}&quot;==&quot;${cat4pe2}&quot;</stringProp>
                  <boolProp name="IfController.evaluateAll">false</boolProp>
                </IfController>
                <hashTree>
                  <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="A Student simulating reading (Multiple pages) and post the statements" enabled="true">
                    <boolProp name="LoopController.continue_forever">true</boolProp>
                    <stringProp name="LoopController.loops">${learningprogressnps_1011_cat4_pe2}</stringProp>
                  </LoopController>
                  <hashTree>
                    <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                      <stringProp name="filename">p_cat4.csv</stringProp>
                      <stringProp name="fileEncoding"></stringProp>
                      <stringProp name="variableNames">task,verb</stringProp>
                      <boolProp name="ignoreFirstLine">false</boolProp>
                      <stringProp name="delimiter">,</stringProp>
                      <boolProp name="quotedData">false</boolProp>
                      <boolProp name="recycle">true</boolProp>
                      <boolProp name="stopThread">false</boolProp>
                      <stringProp name="shareMode">shareMode.thread</stringProp>
                    </CSVDataSet>
                    <hashTree/>
                    <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="false">
                      <intProp name="ActionProcessor.action">1</intProp>
                      <intProp name="ActionProcessor.target">0</intProp>
                      <stringProp name="ActionProcessor.duration">0</stringProp>
                    </TestAction>
                    <hashTree>
                      <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                        <stringProp name="ConstantTimer.delay">${userProgress_min_1011}</stringProp>
                        <stringProp name="RandomTimer.range">${userProgress_max_1011}</stringProp>
                      </UniformRandomTimer>
                      <hashTree/>
                    </hashTree>
                    <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add a new statement" enabled="true">
                      <stringProp name="IncludeController.includepath">Add_statements.jmx</stringProp>
                    </IncludeController>
                    <hashTree/>
                    <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="false">
                      <intProp name="ActionProcessor.action">1</intProp>
                      <intProp name="ActionProcessor.target">0</intProp>
                      <stringProp name="ActionProcessor.duration">0</stringProp>
                    </TestAction>
                    <hashTree>
                      <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                        <stringProp name="ConstantTimer.delay">${userProgress_min_1011}</stringProp>
                        <stringProp name="RandomTimer.range">${userProgress_max_1011}</stringProp>
                      </UniformRandomTimer>
                      <hashTree/>
                    </hashTree>
                    <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update user&apos;s application state for a product or class (product)" enabled="false">
                      <stringProp name="IncludeController.includepath">Update_user_application_state_for_a_product_or_class_product_.jmx</stringProp>
                    </IncludeController>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get users application state for a product or class(product) with item code" enabled="true">
            <stringProp name="IncludeController.includepath">Get_user_application_state_for_a_product_or_class_product_with_item_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller" enabled="true"/>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot;==&quot;${cat1}&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">cat1pe</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">1</stringProp>
              </ForeachController>
              <hashTree>
                <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="A Student simulating reading (Multiple pages) and post the statements" enabled="true">
                  <boolProp name="LoopController.continue_forever">true</boolProp>
                  <stringProp name="LoopController.loops">${learningprogress-ps_1012_cat1}</stringProp>
                </LoopController>
                <hashTree>
                  <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                    <stringProp name="filename">product_sections_pskills_e1_4items_cat1.csv</stringProp>
                    <stringProp name="fileEncoding"></stringProp>
                    <stringProp name="variableNames">pstask,psverb</stringProp>
                    <boolProp name="ignoreFirstLine">false</boolProp>
                    <stringProp name="delimiter">,</stringProp>
                    <boolProp name="quotedData">true</boolProp>
                    <boolProp name="recycle">true</boolProp>
                    <boolProp name="stopThread">false</boolProp>
                    <stringProp name="shareMode"></stringProp>
                  </CSVDataSet>
                  <hashTree/>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add a new statement" enabled="true">
                    <stringProp name="IncludeController.includepath">Add_statements_pskill_contributesToCompletion.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot;==&quot;${cat2}&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">perf21pe</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">1</stringProp>
              </ForeachController>
              <hashTree>
                <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="A Student simulating reading (Multiple pages) and post the statements" enabled="true">
                  <boolProp name="LoopController.continue_forever">true</boolProp>
                  <stringProp name="LoopController.loops">${learningprogress-ps_1012_cat2}</stringProp>
                </LoopController>
                <hashTree>
                  <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                    <stringProp name="filename">product_sections_pskills_e1_4items_cat2.csv</stringProp>
                    <stringProp name="fileEncoding"></stringProp>
                    <stringProp name="variableNames">pstask,psverb</stringProp>
                    <boolProp name="ignoreFirstLine">false</boolProp>
                    <stringProp name="delimiter">,</stringProp>
                    <boolProp name="quotedData">true</boolProp>
                    <boolProp name="recycle">true</boolProp>
                    <boolProp name="stopThread">false</boolProp>
                    <stringProp name="shareMode"></stringProp>
                  </CSVDataSet>
                  <hashTree/>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add a new statement" enabled="true">
                    <stringProp name="IncludeController.includepath">Add_statements_pskill_contributesToCompletion.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot;==&quot;${cat3}&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">cat3pe</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">1</stringProp>
              </ForeachController>
              <hashTree>
                <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="A Student simulating reading (Multiple pages) and post the statements" enabled="true">
                  <boolProp name="LoopController.continue_forever">true</boolProp>
                  <stringProp name="LoopController.loops">${learningprogress-ps_1012_cat3}</stringProp>
                </LoopController>
                <hashTree>
                  <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                    <stringProp name="filename">product_sections_pskills_e1_4items_cat3.csv</stringProp>
                    <stringProp name="fileEncoding"></stringProp>
                    <stringProp name="variableNames">pstask,psverb</stringProp>
                    <boolProp name="ignoreFirstLine">false</boolProp>
                    <stringProp name="delimiter">,</stringProp>
                    <boolProp name="quotedData">true</boolProp>
                    <boolProp name="recycle">true</boolProp>
                    <boolProp name="stopThread">false</boolProp>
                    <stringProp name="shareMode"></stringProp>
                  </CSVDataSet>
                  <hashTree/>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add a new statement" enabled="true">
                    <stringProp name="IncludeController.includepath">Add_statements_pskill_contributesToCompletion.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot;==&quot;${cat4}&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">cat4pe</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">3</stringProp>
              </ForeachController>
              <hashTree>
                <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="A Student simulating reading (Multiple pages) and post the statements" enabled="true">
                  <boolProp name="LoopController.continue_forever">true</boolProp>
                  <stringProp name="LoopController.loops">${learningprogress-ps_1012_cat4}</stringProp>
                </LoopController>
                <hashTree>
                  <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                    <stringProp name="filename">product_sections_pskills_e1_4items_cat4.csv</stringProp>
                    <stringProp name="fileEncoding"></stringProp>
                    <stringProp name="variableNames">pstask,psverb</stringProp>
                    <boolProp name="ignoreFirstLine">false</boolProp>
                    <stringProp name="delimiter">,</stringProp>
                    <boolProp name="quotedData">true</boolProp>
                    <boolProp name="recycle">true</boolProp>
                    <boolProp name="stopThread">false</boolProp>
                    <stringProp name="shareMode"></stringProp>
                  </CSVDataSet>
                  <hashTree/>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add a new statement" enabled="true">
                    <stringProp name="IncludeController.includepath">Add_statements_pskill_contributesToCompletion.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get users application state for a product or class(product) with item code" enabled="true">
            <stringProp name="IncludeController.includepath">Get_user_application_state_for_a_product_or_class_product_with_item_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update user&apos;s application state for a product or class (product)" enabled="true">
            <stringProp name="IncludeController.includepath">Update_user_application_state_for_a_product_or_class_product_.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>true</encoding>
            <assertions>false</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <fileName>true</fileName>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
