<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="ComproDLS Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Performance Test Data Setup" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">250</stringProp>
        <stringProp name="ThreadGroup.ramp_time">100</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - NEW Alpha" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="startTime" elementType="Argument">
              <stringProp name="Argument.name">startTime</stringProp>
              <stringProp name="Argument.value">1587361481394</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="minWait" elementType="Argument">
              <stringProp name="Argument.name">minWait</stringProp>
              <stringProp name="Argument.value">1000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="maxWait" elementType="Argument">
              <stringProp name="Argument.name">maxWait</stringProp>
              <stringProp name="Argument.value">1500</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invitationwait" elementType="Argument">
              <stringProp name="Argument.name">invitationwait</stringProp>
              <stringProp name="Argument.value">20000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="asyncWait" elementType="Argument">
              <stringProp name="Argument.name">asyncWait</stringProp>
              <stringProp name="Argument.value">8000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userProgress_max" elementType="Argument">
              <stringProp name="Argument.name">userProgress_max</stringProp>
              <stringProp name="Argument.value">2000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userProgress_max_assignedpaths" elementType="Argument">
              <stringProp name="Argument.name">userProgress_max_assignedpaths</stringProp>
              <stringProp name="Argument.value">5000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="learning_progress" elementType="Argument">
              <stringProp name="Argument.name">learning_progress</stringProp>
              <stringProp name="Argument.value">12</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assigned_path_class_count" elementType="Argument">
              <stringProp name="Argument.name">assigned_path_class_count</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="host_url" elementType="Argument">
              <stringProp name="Argument.name">host_url</stringProp>
              <stringProp name="Argument.value">${__P(auth_url,dls-cup-alpha-2093819659.us-west-2.elb.amazonaws.com)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="date" elementType="Argument">
              <stringProp name="Argument.name">date</stringProp>
              <stringProp name="Argument.value">${__time(YMDHMS)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="testrun" elementType="Argument">
              <stringProp name="Argument.name">testrun</stringProp>
              <stringProp name="Argument.value">${__P(run_id,Perf)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="accountid" elementType="Argument">
              <stringProp name="Argument.name">accountid</stringProp>
              <stringProp name="Argument.value">${__P(Account_id,cup1)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="spacecode" elementType="Argument">
              <stringProp name="Argument.name">spacecode</stringProp>
              <stringProp name="Argument.value">${__P(space_code,PRF-ALP-ONE)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="spacecode2" elementType="Argument">
              <stringProp name="Argument.name">spacecode2</stringProp>
              <stringProp name="Argument.value">${__P(space_code,PRF-ALP-TWO)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="orgid" elementType="Argument">
              <stringProp name="Argument.name">orgid</stringProp>
              <stringProp name="Argument.value">${__P(orgid,perf-test1-alpha)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="shorgid" elementType="Argument">
              <stringProp name="Argument.name">shorgid</stringProp>
              <stringProp name="Argument.value">${__P(shorgid,sh_alpha_cup1_1)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ext_product_id" elementType="Argument">
              <stringProp name="Argument.name">ext_product_id</stringProp>
              <stringProp name="Argument.value">${__P(product_code,9781108414098)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ext_product_id2" elementType="Argument">
              <stringProp name="Argument.name">ext_product_id2</stringProp>
              <stringProp name="Argument.value">${__P(product_code,9781108414142)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="productcode" elementType="Argument">
              <stringProp name="Argument.name">productcode</stringProp>
              <stringProp name="Argument.value">${__P(product_code,evpel1)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="productcode2" elementType="Argument">
              <stringProp name="Argument.name">productcode2</stringProp>
              <stringProp name="Argument.value">${__P(product_code,evpel2)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="verb" elementType="Argument">
              <stringProp name="Argument.name">verb</stringProp>
              <stringProp name="Argument.value">${__P(verb_type,launched)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="product-enddate" elementType="Argument">
              <stringProp name="Argument.name">product-enddate</stringProp>
              <stringProp name="Argument.value">${__P(end_date,1575719566000)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="classcodeinst1_DONOTUSE" elementType="Argument">
              <stringProp name="Argument.name">classcodeinst1_DONOTUSE</stringProp>
              <stringProp name="Argument.value">${__P(class_code,G4cb-UNcT)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="classcode2_DONOTUSE" elementType="Argument">
              <stringProp name="Argument.name">classcode2_DONOTUSE</stringProp>
              <stringProp name="Argument.value">${__P(class_code,YeaG-DVJZ)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="classname" elementType="Argument">
              <stringProp name="Argument.name">classname</stringProp>
              <stringProp name="Argument.value">${__P(classname,newclass)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="multipleUsersForEnrollment" elementType="Argument">
              <stringProp name="Argument.name">multipleUsersForEnrollment</stringProp>
              <stringProp name="Argument.value">${__P(userset,&quot;5caebf1b-810b-11e9-89b9-0242ac110002&quot;)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="pinstance" elementType="Argument">
              <stringProp name="Argument.name">pinstance</stringProp>
              <stringProp name="Argument.value">${__P(InstanceID,1)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bundle-code" elementType="Argument">
              <stringProp name="Argument.name">bundle-code</stringProp>
              <stringProp name="Argument.value">${__P(bundle-code,evpel1_bundle)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bundle-code2" elementType="Argument">
              <stringProp name="Argument.name">bundle-code2</stringProp>
              <stringProp name="Argument.value">${__P(bundle-code,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assignmentstartdate" elementType="Argument">
              <stringProp name="Argument.name">assignmentstartdate</stringProp>
              <stringProp name="Argument.value">${__P(Start_Date,1562938362000)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assignmentenddate" elementType="Argument">
              <stringProp name="Argument.name">assignmentenddate</stringProp>
              <stringProp name="Argument.value">${__P(End_Date,1594560762000)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assigned_path_id" elementType="Argument">
              <stringProp name="Argument.name">assigned_path_id</stringProp>
              <stringProp name="Argument.value">NOT_FOUND</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="counter" elementType="Argument">
              <stringProp name="Argument.name">counter</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assignmentlearningprogress" elementType="Argument">
              <stringProp name="Argument.name">assignmentlearningprogress</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assignmentlearningprogressscorable" elementType="Argument">
              <stringProp name="Argument.name">assignmentlearningprogressscorable</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invitationorgid" elementType="Argument">
              <stringProp name="Argument.name">invitationorgid</stringProp>
              <stringProp name="Argument.value">${__P(invitationorgid,integ-test1-alpha)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode1" elementType="Argument">
              <stringProp name="Argument.name">itemcode1</stringProp>
              <stringProp name="Argument.value">${__P(itemcode,1544521486954/1544521507623/1544521559147)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode2" elementType="Argument">
              <stringProp name="Argument.name">itemcode2</stringProp>
              <stringProp name="Argument.value">1544521486954/1544521507623/1544521594726</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode3" elementType="Argument">
              <stringProp name="Argument.name">itemcode3</stringProp>
              <stringProp name="Argument.value">1544521486954/1544521507623/1544521622470</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode4" elementType="Argument">
              <stringProp name="Argument.name">itemcode4</stringProp>
              <stringProp name="Argument.value">1544521486954/1544521507623/1544521637851</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode5" elementType="Argument">
              <stringProp name="Argument.name">itemcode5</stringProp>
              <stringProp name="Argument.value">1544521486954/1544521889598/1544522141435</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="startDate" elementType="Argument">
              <stringProp name="Argument.name">startDate</stringProp>
              <stringProp name="Argument.value">${__time(,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="endDate" elementType="Argument">
              <stringProp name="Argument.name">endDate</stringProp>
              <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="workflow_type" elementType="Argument">
              <stringProp name="Argument.name">workflow_type</stringProp>
              <stringProp name="Argument.value">institution_request</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="status" elementType="Argument">
              <stringProp name="Argument.name">status</stringProp>
              <stringProp name="Argument.value">pending</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="productGroups" elementType="Argument">
              <stringProp name="Argument.name">productGroups</stringProp>
              <stringProp name="Argument.value">false</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="productType" elementType="Argument">
              <stringProp name="Argument.name">productType</stringProp>
              <stringProp name="Argument.value">single</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="task" elementType="Argument">
              <stringProp name="Argument.name">task</stringProp>
              <stringProp name="Argument.value">1544521486954/1544521507623/1544521559147</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode" elementType="Argument">
              <stringProp name="Argument.name">itemcode</stringProp>
              <stringProp name="Argument.value">1544521486954/1544521507623/1544521559147</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="grouptask" elementType="Argument">
              <stringProp name="Argument.name">grouptask</stringProp>
              <stringProp name="Argument.value">1591682031312/1591682585541/1592290089703</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="multiproduct1" elementType="Argument">
              <stringProp name="Argument.name">multiproduct1</stringProp>
              <stringProp name="Argument.value">perf_alpha_pe1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="multiproduct2" elementType="Argument">
              <stringProp name="Argument.name">multiproduct2</stringProp>
              <stringProp name="Argument.value">perf_alpha_pw1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="group-bundle-code" elementType="Argument">
              <stringProp name="Argument.name">group-bundle-code</stringProp>
              <stringProp name="Argument.value">perfalpha_bundle1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="multiproductid1" elementType="Argument">
              <stringProp name="Argument.name">multiproductid1</stringProp>
              <stringProp name="Argument.value">perfpealpha1234</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="multiproductid2" elementType="Argument">
              <stringProp name="Argument.name">multiproductid2</stringProp>
              <stringProp name="Argument.value">perfpwalpha1234</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ielts_bundle-code" elementType="Argument">
              <stringProp name="Argument.name">ielts_bundle-code</stringProp>
              <stringProp name="Argument.value">${__P(bundle-code,ielts_bundle)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ielts_productcode" elementType="Argument">
              <stringProp name="Argument.name">ielts_productcode</stringProp>
              <stringProp name="Argument.value">${__P(product_code,ielts_pe)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ielts_ext_product_id" elementType="Argument">
              <stringProp name="Argument.name">ielts_ext_product_id</stringProp>
              <stringProp name="Argument.value">${__P(product_code,9781108414098)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ielts_itemcode" elementType="Argument">
              <stringProp name="Argument.name">ielts_itemcode</stringProp>
              <stringProp name="Argument.value">1599458729600</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - LTI ALPHA" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="host_url_lti" elementType="Argument">
              <stringProp name="Argument.name">host_url_lti</stringProp>
              <stringProp name="Argument.value">${__P(host_url,lti-alpha.cambridgeone.org)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="platformId" elementType="Argument">
              <stringProp name="Argument.name">platformId</stringProp>
              <stringProp name="Argument.value">7caa930559</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="deploymentId" elementType="Argument">
              <stringProp name="Argument.name">deploymentId</stringProp>
              <stringProp name="Argument.value">48e7869fad</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="resLinkId" elementType="Argument">
              <stringProp name="Argument.name">resLinkId</stringProp>
              <stringProp name="Argument.value">${__P(resLinkId,ielts_pe__1599458729600__1)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="targetLinkUri" elementType="Argument">
              <stringProp name="Argument.name">targetLinkUri</stringProp>
              <stringProp name="Argument.value">https://cup-lti-tool.herokuapp.com/tools/7/lti/launch</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="testId" elementType="Argument">
              <stringProp name="Argument.name">testId</stringProp>
              <stringProp name="Argument.value">IELTSi_T1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="referer" elementType="Argument">
              <stringProp name="Argument.name">referer</stringProp>
              <stringProp name="Argument.value">https://c1-alpha.cambridgeone.org</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="response_type" elementType="Argument">
              <stringProp name="Argument.name">response_type</stringProp>
              <stringProp name="Argument.value">id_token</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="response_mode" elementType="Argument">
              <stringProp name="Argument.name">response_mode</stringProp>
              <stringProp name="Argument.value">form_post</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="scope" elementType="Argument">
              <stringProp name="Argument.name">scope</stringProp>
              <stringProp name="Argument.value">openid</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="lti_log" elementType="Argument">
              <stringProp name="Argument.name">lti_log</stringProp>
              <stringProp name="Argument.value">Submitted</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="grant_type" elementType="Argument">
              <stringProp name="Argument.name">grant_type</stringProp>
              <stringProp name="Argument.value">client_credentials</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_assertion_type" elementType="Argument">
              <stringProp name="Argument.name">client_assertion_type</stringProp>
              <stringProp name="Argument.value">urn:ietf:params:oauth:client-assertion-type:jwt-bearer</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_assertion" elementType="Argument">
              <stringProp name="Argument.name">client_assertion</stringProp>
              <stringProp name="Argument.value">eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjJ3S1Y0cW1Fekk2R2xjY09NNmV4aVFfVXR3ZFk4VHFSNkM5bnlQZ2R6MEkifQ.eyJpc3MiOiJkZTBmNjVhODZjIiwic3ViIjoiZGUwZjY1YTg2YyIsImF1ZCI6Imh0dHBzOi8vbHRpLWFscGhhLmNhbWJyaWRnZW9uZS5vcmcvdjEvbHRpL3BsYXRmb3Jtcy83Y2FhOTMwNTU5L29hdXRoIiwianRpIjoiZDM2OTY1ODEzOWQ3NjlmZjE0NjA5ZjJiZmY1NjdiYTAiLCJpYXQiOjE2MDEzNzU3NDIsImV4cCI6MTYwMTQ2MjE0Mn0.WSbHiGaic6KKqYME-BxQAP1YjZUGS1jZow5zL-UCPiJ1NlsH24LRYHYcBTV7DMJcxptTUv-H9tYURxqywJyociXglyCFJwHJYsS57ov-fQiMyCVXe0o7C5fo0AlpphQUHJ2G13GlB2nFVe53ebjx6PbU9nH5zJ_wYE5dMxsS-_FyC9eolAWSPMe8DAakROkBy6mayBDnk0eEOgkDI2EfggFqq-K0qnyVVOZ-YE9p5K9HbLeNg6VhAphN2O2PV1vPVlYJMXctDzJ5stUXlWj6sYiSWobVdxBqk3H-L_DFkVTAm3KMcANPInXkBRAq9JC9yzgeSvD9dwp7LRPAdosMjQ</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="scopeOauth" elementType="Argument">
              <stringProp name="Argument.name">scopeOauth</stringProp>
              <stringProp name="Argument.value">https://purl.imsglobal.org/spec/lti-ags/scope/score</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sharedOrgId" elementType="Argument">
              <stringProp name="Argument.name">sharedOrgId</stringProp>
              <stringProp name="Argument.value">sh_alpha_cup1_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="scoreGiven" elementType="Argument">
              <stringProp name="Argument.name">scoreGiven</stringProp>
              <stringProp name="Argument.value">${__P(scoreGiven,2)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="scoreMaximum" elementType="Argument">
              <stringProp name="Argument.name">scoreMaximum</stringProp>
              <stringProp name="Argument.value">${__P(scoreMaximum,10)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="comment" elementType="Argument">
              <stringProp name="Argument.name">comment</stringProp>
              <stringProp name="Argument.value">${__P(scoreGiven,Diagnostic Score)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="activityProgress" elementType="Argument">
              <stringProp name="Argument.name">activityProgress</stringProp>
              <stringProp name="Argument.value">${__P(scoreGiven,Completed)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="gradingProgress" elementType="Argument">
              <stringProp name="Argument.name">gradingProgress</stringProp>
              <stringProp name="Argument.value">${__P(scoreGiven,FullyGraded)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="performDurationTestS1" elementType="Argument">
              <stringProp name="Argument.name">performDurationTestS1</stringProp>
              <stringProp name="Argument.value">29000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="performDurationTestS2" elementType="Argument">
              <stringProp name="Argument.name">performDurationTestS2</stringProp>
              <stringProp name="Argument.value">36400</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="MetricaWaitTime" elementType="Argument">
              <stringProp name="Argument.name">MetricaWaitTime</stringProp>
              <stringProp name="Argument.value">946</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="prompt" elementType="Argument">
              <stringProp name="Argument.name">prompt</stringProp>
              <stringProp name="Argument.value">none</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="currentTime" elementType="Argument">
              <stringProp name="Argument.name">currentTime</stringProp>
              <stringProp name="Argument.value">${__time}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="isReset" elementType="Argument">
              <stringProp name="Argument.name">isReset</stringProp>
              <stringProp name="Argument.value">False</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="env" elementType="Argument">
              <stringProp name="Argument.name">env</stringProp>
              <stringProp name="Argument.value">alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - EReader Scenarios" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="ebookproductcode" elementType="Argument">
              <stringProp name="Argument.name">ebookproductcode</stringProp>
              <stringProp name="Argument.value">cqaperftestebook</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="pageNum" elementType="Argument">
              <stringProp name="Argument.name">pageNum</stringProp>
              <stringProp name="Argument.value">14</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="documentId" elementType="Argument">
              <stringProp name="Argument.name">documentId</stringProp>
              <stringProp name="Argument.value">${__RandomString(16,abcdefghijklmnopqrstuvwxyz1234567890,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - NEW Alpha" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="startTime" elementType="Argument">
              <stringProp name="Argument.name">startTime</stringProp>
              <stringProp name="Argument.value">1587361481394</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="minWait" elementType="Argument">
              <stringProp name="Argument.name">minWait</stringProp>
              <stringProp name="Argument.value">1000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="maxWait" elementType="Argument">
              <stringProp name="Argument.name">maxWait</stringProp>
              <stringProp name="Argument.value">1500</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invitationwait" elementType="Argument">
              <stringProp name="Argument.name">invitationwait</stringProp>
              <stringProp name="Argument.value">20000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="asyncWait" elementType="Argument">
              <stringProp name="Argument.name">asyncWait</stringProp>
              <stringProp name="Argument.value">8000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userProgress_max" elementType="Argument">
              <stringProp name="Argument.name">userProgress_max</stringProp>
              <stringProp name="Argument.value">2000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userProgress_max_assignedpaths" elementType="Argument">
              <stringProp name="Argument.name">userProgress_max_assignedpaths</stringProp>
              <stringProp name="Argument.value">5000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="learning_progress" elementType="Argument">
              <stringProp name="Argument.name">learning_progress</stringProp>
              <stringProp name="Argument.value">12</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assigned_path_class_count" elementType="Argument">
              <stringProp name="Argument.name">assigned_path_class_count</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="auth_url" elementType="Argument">
              <stringProp name="Argument.name">auth_url</stringProp>
              <stringProp name="Argument.value">${__P(auth_url,dls-cup-alpha-2093819659.us-west-2.elb.amazonaws.com/lb-auth)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="product_url" elementType="Argument">
              <stringProp name="Argument.name">product_url</stringProp>
              <stringProp name="Argument.value">${__P(product_url,dls-cup-alpha-2093819659.us-west-2.elb.amazonaws.com/lb-product)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="collab_url" elementType="Argument">
              <stringProp name="Argument.name">collab_url</stringProp>
              <stringProp name="Argument.value">${__P(collab_url,dls-cup-alpha-2093819659.us-west-2.elb.amazonaws.com/lb-collab)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="xapi_url" elementType="Argument">
              <stringProp name="Argument.name">xapi_url</stringProp>
              <stringProp name="Argument.value">${__P(xapi_url,dls-cup-alpha-2093819659.us-west-2.elb.amazonaws.com/lb-xapi)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="analytics_url" elementType="Argument">
              <stringProp name="Argument.name">analytics_url</stringProp>
              <stringProp name="Argument.value">${__P(analytics_url,dls-cup-alpha-2093819659.us-west-2.elb.amazonaws.com/lb-analytics)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="activity_url" elementType="Argument">
              <stringProp name="Argument.name">activity_url</stringProp>
              <stringProp name="Argument.value">${__P(activity_url,dls-cup-alpha-2093819659.us-west-2.elb.amazonaws.com/lb-activity)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="pushx_url" elementType="Argument">
              <stringProp name="Argument.name">pushx_url</stringProp>
              <stringProp name="Argument.value">${__P(pushx_url,dls-cup-alpha-2093819659.us-west-2.elb.amazonaws.com/lb-pushx)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="date" elementType="Argument">
              <stringProp name="Argument.name">date</stringProp>
              <stringProp name="Argument.value">${__time(YMDHMS)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="testrun" elementType="Argument">
              <stringProp name="Argument.name">testrun</stringProp>
              <stringProp name="Argument.value">${__P(run_id,Perf)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="accountid" elementType="Argument">
              <stringProp name="Argument.name">accountid</stringProp>
              <stringProp name="Argument.value">${__P(Account_id,cup1)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="spacecode" elementType="Argument">
              <stringProp name="Argument.name">spacecode</stringProp>
              <stringProp name="Argument.value">${__P(space_code,PRF-ALP-ONE)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="spacecode2" elementType="Argument">
              <stringProp name="Argument.name">spacecode2</stringProp>
              <stringProp name="Argument.value">${__P(space_code,PRF-ALP-TWO)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="orgid" elementType="Argument">
              <stringProp name="Argument.name">orgid</stringProp>
              <stringProp name="Argument.value">${__P(orgid,perf-test1-alpha)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="shorgid" elementType="Argument">
              <stringProp name="Argument.name">shorgid</stringProp>
              <stringProp name="Argument.value">${__P(shorgid,sh_alpha_cup1_1)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ext_product_id" elementType="Argument">
              <stringProp name="Argument.name">ext_product_id</stringProp>
              <stringProp name="Argument.value">${__P(product_code,9781108414098)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ext_product_id2" elementType="Argument">
              <stringProp name="Argument.name">ext_product_id2</stringProp>
              <stringProp name="Argument.value">${__P(product_code,9781108414142)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="productcode" elementType="Argument">
              <stringProp name="Argument.name">productcode</stringProp>
              <stringProp name="Argument.value">${__P(product_code,evpel1)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="productcode2" elementType="Argument">
              <stringProp name="Argument.name">productcode2</stringProp>
              <stringProp name="Argument.value">${__P(product_code,evpel2)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode" elementType="Argument">
              <stringProp name="Argument.name">itemcode</stringProp>
              <stringProp name="Argument.value">${__P(itemcode,1528285334091/1528285634672/1528286714281)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode1" elementType="Argument">
              <stringProp name="Argument.name">itemcode1</stringProp>
              <stringProp name="Argument.value">${__P(itemcode,1528285346430/1528285468533/1528288508647)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="task" elementType="Argument">
              <stringProp name="Argument.name">task</stringProp>
              <stringProp name="Argument.value">${__P(task_code,1528285334091/1528285634672/1528286714281)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="verb" elementType="Argument">
              <stringProp name="Argument.name">verb</stringProp>
              <stringProp name="Argument.value">${__P(verb_type,launched)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="product-enddate" elementType="Argument">
              <stringProp name="Argument.name">product-enddate</stringProp>
              <stringProp name="Argument.value">${__P(end_date,1575719566000)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="classcodeinst1_DONOTUSE" elementType="Argument">
              <stringProp name="Argument.name">classcodeinst1_DONOTUSE</stringProp>
              <stringProp name="Argument.value">${__P(class_code,G4cb-UNcT)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="classcode2_DONOTUSE" elementType="Argument">
              <stringProp name="Argument.name">classcode2_DONOTUSE</stringProp>
              <stringProp name="Argument.value">${__P(class_code,YeaG-DVJZ)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="classname" elementType="Argument">
              <stringProp name="Argument.name">classname</stringProp>
              <stringProp name="Argument.value">${__P(classname,newclass)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="multipleUsersForEnrollment" elementType="Argument">
              <stringProp name="Argument.name">multipleUsersForEnrollment</stringProp>
              <stringProp name="Argument.value">${__P(userset,&quot;5caebf1b-810b-11e9-89b9-0242ac110002&quot;)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="pinstance" elementType="Argument">
              <stringProp name="Argument.name">pinstance</stringProp>
              <stringProp name="Argument.value">${__P(InstanceID,1)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bundle-code" elementType="Argument">
              <stringProp name="Argument.name">bundle-code</stringProp>
              <stringProp name="Argument.value">${__P(bundle-code,evpel1_bundle)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bundle-code2" elementType="Argument">
              <stringProp name="Argument.name">bundle-code2</stringProp>
              <stringProp name="Argument.value">${__P(bundle-code,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assignmentstartdate" elementType="Argument">
              <stringProp name="Argument.name">assignmentstartdate</stringProp>
              <stringProp name="Argument.value">${__P(Start_Date,1562938362000)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assignmentenddate" elementType="Argument">
              <stringProp name="Argument.name">assignmentenddate</stringProp>
              <stringProp name="Argument.value">${__P(End_Date,1594560762000)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assigned_path_id" elementType="Argument">
              <stringProp name="Argument.name">assigned_path_id</stringProp>
              <stringProp name="Argument.value">NOT_FOUND</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="counter" elementType="Argument">
              <stringProp name="Argument.name">counter</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assignmentlearningprogress" elementType="Argument">
              <stringProp name="Argument.name">assignmentlearningprogress</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assignmentlearningprogressscorable" elementType="Argument">
              <stringProp name="Argument.name">assignmentlearningprogressscorable</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invitationorgid" elementType="Argument">
              <stringProp name="Argument.name">invitationorgid</stringProp>
              <stringProp name="Argument.value">${__P(invitationorgid,integ-test1-alpha)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode2" elementType="Argument">
              <stringProp name="Argument.name">itemcode2</stringProp>
              <stringProp name="Argument.value">1528285346430/1528285468533/1528288514105</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode3" elementType="Argument">
              <stringProp name="Argument.name">itemcode3</stringProp>
              <stringProp name="Argument.value">1528285346430/1528285468533/1528288525527</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode4" elementType="Argument">
              <stringProp name="Argument.name">itemcode4</stringProp>
              <stringProp name="Argument.value">1528285346430/1528285468533/1528288536463</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode5" elementType="Argument">
              <stringProp name="Argument.name">itemcode5</stringProp>
              <stringProp name="Argument.value">1528285348662/1528285498920/1528288217995</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="startDate" elementType="Argument">
              <stringProp name="Argument.name">startDate</stringProp>
              <stringProp name="Argument.value">${__time(,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="endDate" elementType="Argument">
              <stringProp name="Argument.name">endDate</stringProp>
              <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="workflow_type" elementType="Argument">
              <stringProp name="Argument.name">workflow_type</stringProp>
              <stringProp name="Argument.value">institution_request</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="status" elementType="Argument">
              <stringProp name="Argument.name">status</stringProp>
              <stringProp name="Argument.value">pending</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="productGroups" elementType="Argument">
              <stringProp name="Argument.name">productGroups</stringProp>
              <stringProp name="Argument.value">false</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="productType" elementType="Argument">
              <stringProp name="Argument.name">productType</stringProp>
              <stringProp name="Argument.value">single</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Extract User Details from uuid" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilename" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilename</stringProp>
                <stringProp name="Argument.value">1011_details_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="extuserid" elementType="Argument">
                <stringProp name="Argument.name">extuserid</stringProp>
                <stringProp name="Argument.value">40b72b13d81b42b3a35a5d034f43233b</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">For Alpha Admin</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">trail-run-stress-test.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="variableNames">extuserid1,classcode</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_temp.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="get_classes_of_an_user_All_Details" enabled="true">
            <stringProp name="IncludeController.includepath">get_classes_of_an_user_All_Details.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_details_for_a_specific_class_All_Details" enabled="false">
            <stringProp name="IncludeController.includepath">Get_details_for_a_specific_class_All_Details.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_information_for_a_specific_user" enabled="false">
            <stringProp name="IncludeController.includepath">Get_information_for_a_specific_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_information_for_a_specific_user" enabled="false">
            <stringProp name="IncludeController.includepath">Get_information_for_a_specific_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;extuserid1&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;extractedproductcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classuuid&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Ebook Scenario - Add Notes and Drawing" enabled="false"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">scenario_tch_std_23march_1_1616493201162.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
            <collectionProp name="Arguments.arguments">
              <elementProp name="extuserid_stu" elementType="Argument">
                <stringProp name="Argument.name">extuserid_stu</stringProp>
                <stringProp name="Argument.value">a974e255d8fe4af1ac444b407562afcd</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">student extid</stringProp>
              </elementProp>
              <elementProp name="ebookproductcode_alpha" elementType="Argument">
                <stringProp name="Argument.name">ebookproductcode_alpha</stringProp>
                <stringProp name="Argument.value">cqaperftestebook</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="documentId" elementType="Argument">
                <stringProp name="Argument.name">documentId</stringProp>
                <stringProp name="Argument.value">${__RandomString(16,abcdefghijklmnopqrstuvwxyz1234567890,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageNum" elementType="Argument">
                <stringProp name="Argument.name">pageNum</stringProp>
                <stringProp name="Argument.value">44</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="host_url" elementType="Argument">
                <stringProp name="Argument.name">host_url</stringProp>
                <stringProp name="Argument.value">${__P(auth_url,dls-asgard-thor-1453383019.us-west-2.elb.amazonaws.com)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="orgid" elementType="Argument">
                <stringProp name="Argument.name">orgid</stringProp>
                <stringProp name="Argument.value">${__P(orgid,mqa-sierra-thor)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ebookproductcode" elementType="Argument">
                <stringProp name="Argument.name">ebookproductcode</stringProp>
                <stringProp name="Argument.value">tocupdatesebook1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="extuserid" elementType="Argument">
                <stringProp name="Argument.name">extuserid</stringProp>
                <stringProp name="Argument.value">b93b975f8be3474884d39cdabd6de9c4</stringProp>
                <stringProp name="Argument.desc">teacher extid</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1003: Student logs in and accesses the dashboard (Ebook)" enabled="true">
            <stringProp name="IncludeController.includepath">1003-Student_logs_in_and_accesses_the_dashboard_ebook.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1014 - Teacher logs in (and accesses dashboard)" enabled="false">
            <stringProp name="IncludeController.includepath">1014-Teacher_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="false">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller" enabled="true"/>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="-803564937">pageNum</stringProp>
                <stringProp name="-814940266">documentId</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-1474477290">
                  <stringProp name="1571">14</stringProp>
                  <stringProp name="1454846734">${__RandomString(16,abcdefghijklmnopqrstuvwxyz1234567890,)}</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add annotated verb" enabled="true">
              <stringProp name="IncludeController.includepath">Add_statements_drawing_50kB.jmx</stringProp>
              <stringProp name="TestPlan.comments">	</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller" enabled="true"/>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="-803564937">pageNum</stringProp>
                <stringProp name="-814940266">documentId</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-1474476112">
                  <stringProp name="1572">15</stringProp>
                  <stringProp name="1454846734">${__RandomString(16,abcdefghijklmnopqrstuvwxyz1234567890,)}</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add annotated verb" enabled="true">
              <stringProp name="IncludeController.includepath">Add_statements_drawing_50kB.jmx</stringProp>
              <stringProp name="TestPlan.comments">	</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller" enabled="true"/>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="-803564937">pageNum</stringProp>
                <stringProp name="-814940266">documentId</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-1474474934">
                  <stringProp name="1573">16</stringProp>
                  <stringProp name="1454846734">${__RandomString(16,abcdefghijklmnopqrstuvwxyz1234567890,)}</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add annotated verb" enabled="true">
              <stringProp name="IncludeController.includepath">Add_statements_drawing_50kB.jmx</stringProp>
              <stringProp name="TestPlan.comments">	</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller" enabled="true"/>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="-803564937">pageNum</stringProp>
                <stringProp name="-814940266">documentId</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-1474473756">
                  <stringProp name="1574">17</stringProp>
                  <stringProp name="1454846734">${__RandomString(16,abcdefghijklmnopqrstuvwxyz1234567890,)}</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add annotated verb" enabled="true">
              <stringProp name="IncludeController.includepath">Add_statements_drawing_50kB.jmx</stringProp>
              <stringProp name="TestPlan.comments">	</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller" enabled="true"/>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="-803564937">pageNum</stringProp>
                <stringProp name="-814940266">documentId</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-1474472578">
                  <stringProp name="1575">18</stringProp>
                  <stringProp name="1454846734">${__RandomString(16,abcdefghijklmnopqrstuvwxyz1234567890,)}</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add annotated verb" enabled="true">
              <stringProp name="IncludeController.includepath">Add_statements_drawing_50kB.jmx</stringProp>
              <stringProp name="TestPlan.comments">	</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller" enabled="true"/>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="-803564937">pageNum</stringProp>
                <stringProp name="-814940266">documentId</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-1474471400">
                  <stringProp name="1576">19</stringProp>
                  <stringProp name="1454846734">${__RandomString(16,abcdefghijklmnopqrstuvwxyz1234567890,)}</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add annotated verb" enabled="true">
              <stringProp name="IncludeController.includepath">Add_statements_drawing_50kB.jmx</stringProp>
              <stringProp name="TestPlan.comments">	</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
              <stringProp name="CounterConfig.start">14</stringProp>
              <stringProp name="CounterConfig.end">18</stringProp>
              <stringProp name="CounterConfig.incr">1</stringProp>
              <stringProp name="CounterConfig.name">pageNum</stringProp>
              <stringProp name="CounterConfig.format"></stringProp>
              <boolProp name="CounterConfig.per_user">true</boolProp>
              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
            </CounterConfig>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add annotated verb" enabled="true">
              <stringProp name="IncludeController.includepath">Add_statements_drawing_50kB.jmx</stringProp>
              <stringProp name="TestPlan.comments">	</stringProp>
            </IncludeController>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="-814940266">documentId</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="1084943350">
                  <stringProp name="1454846734">${__RandomString(16,abcdefghijklmnopqrstuvwxyz1234567890,)}</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="common_teacher-1class-class-product-20students" enabled="false">
          <stringProp name="TestPlan.comments">1003</stringProp>
        </GenericController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilename" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilename</stringProp>
                <stringProp name="Argument.value">scenario_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

extuserid = &quot;tch&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;extuserid&quot;, extuserid);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

classname = &quot;class&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;classname&quot;, classname);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="true">
            <stringProp name="IncludeController.includepath">join_a_space_with_space_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [60-65 sec]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">60000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class" enabled="true">
            <stringProp name="IncludeController.includepath">create_new_instructor_led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Samplerteacher" enabled="true">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(&quot;originalteachers_&quot; + vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class" enabled="true">
            <stringProp name="IncludeController.includepath">associate_a_product_with_class2.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [500-530]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">500000</stringProp>
              <stringProp name="RandomTimer.range">30000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create 20 students and join using classcode of current teacher" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">20</stringProp>
          </LoopController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.util.Date;

Date date = new Date();
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;

studentextuserid = &quot;std&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;studentextuserid&quot;, studentextuserid);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-20]" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
                <stringProp name="RandomTimer.range">10000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with product_code and class_code" enabled="true">
              <stringProp name="IncludeController.includepath">join_Spaces_with_product_code_and_class_code.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">timestamp = vars.get(&quot;date&quot;);

FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="teacher-1class-class-product-5assignments (1002)" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilename" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilename</stringProp>
                <stringProp name="Argument.value">scenario_tch_asnmt_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="teacher_name" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

extuserid = &quot;tch&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;extuserid&quot;, extuserid);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="class_name" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

classname = &quot;class&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;classname&quot;, classname);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="assignedPathList" elementType="Argument">
                <stringProp name="Argument.name">assignedPathList</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="true">
            <stringProp name="IncludeController.includepath">Join_a_space_with_space_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [60-65 sec]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">60000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class" enabled="true">
            <stringProp name="IncludeController.includepath">create_new_instructor_led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">10000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class" enabled="true">
            <stringProp name="IncludeController.includepath">associate_a_product_with_class2.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [300-330]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">300000</stringProp>
              <stringProp name="RandomTimer.range">30000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create 5 assignments" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
              <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
              <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = vars.get(&quot;assigned_path_id&quot;) + &quot;,&quot; + apList;
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time in between assignment creation [30-40 sec]" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">30000</stringProp>
                <stringProp name="RandomTimer.range">10000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1002__teacher-1class-class-product" enabled="false">
          <stringProp name="TestPlan.comments">Set number of thread count as 6</stringProp>
        </GenericController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="csvFileName" elementType="Argument">
                <stringProp name="Argument.name">csvFileName</stringProp>
                <stringProp name="Argument.value">scenario_1002_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix0 = vars.get(&quot;testrun&quot;);
prefix1 = &quot;teacher&quot;;

prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

extuserid = prefix0 + &quot;_&quot; + prefix1 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;extuserid&quot;, extuserid);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix0 = vars.get(&quot;testrun&quot;);
prefix1 = &quot;class&quot;;
prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

classname = prefix0 + &quot;_&quot; + prefix1 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;classname&quot;, classname);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__P(Start_Date,1586347804000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__P(End_Date,1659960604000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="true">
            <stringProp name="IncludeController.includepath">Join_a_space_with_space_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">11000</stringProp>
              <stringProp name="RandomTimer.range">9000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class" enabled="true">
            <stringProp name="IncludeController.includepath">create_new_instructor_led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="generate_outputfile" enabled="true">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;csvFileName&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class" enabled="true">
            <stringProp name="IncludeController.includepath">associate_a_product_with_class2.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">9000</stringProp>
              <stringProp name="RandomTimer.range">7000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">6000</stringProp>
              <stringProp name="RandomTimer.range">6000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1006_private_students" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilename" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilename</stringProp>
                <stringProp name="Argument.value">scenario_1006_std_pvt_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="private_student_name" enabled="true">
            <stringProp name="BeanShellSampler.query">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

extuserid = &quot;std_pvt&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;extuserid&quot;, extuserid);
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join_Spaces_with_product_code and_class_code_private" enabled="true">
            <stringProp name="IncludeController.includepath">join_Spaces_with_product_code_and_class_code_private.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [60-65 sec]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">60000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv" enabled="true">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String LineSEPARATOR = &quot;\n&quot;;

out.write(vars.get(&quot;extuserid&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1015_teacher_space_only" enabled="false"/>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="teacher_name" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix0 = vars.get(&quot;testrun&quot;);
prefix1 = &quot;teacher1015&quot;;
prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

extuserid = prefix0 + &quot;_&quot; + prefix1 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;extuserid&quot;, extuserid);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="true">
            <stringProp name="IncludeController.includepath">Join_a_space_with_space_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">9000</stringProp>
              <stringProp name="RandomTimer.range">7000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
            <stringProp name="BeanShellSampler.query">prefix2 = vars.get(&quot;date&quot;);
FileOutputStream out = new FileOutputStream(prefix2 + &quot;_&quot; + &quot;teacher_space_only.csv&quot;, true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;

out.write(vars.get(&quot;extuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1041__teacher_send_invitation_EXISTING_student" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="studentFilename" elementType="Argument">
                <stringProp name="Argument.name">studentFilename</stringProp>
                <stringProp name="Argument.value">${__time()}_students.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="finalOutputFilename" elementType="Argument">
                <stringProp name="Argument.name">finalOutputFilename</stringProp>
                <stringProp name="Argument.value">invitation_scenario_1041_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__P(Start_Date,1586347804000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__P(End_Date,1659960604000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor_teacher2" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix0 = vars.get(&quot;testrun&quot;);
prefix1 = &quot;teacher&quot;;

prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

extuserid = prefix0 + &quot;_&quot; + prefix1 + &quot;_teacher2_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;extuserid2&quot;, extuserid);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor_teacher2class" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix0 = vars.get(&quot;testrun&quot;);
prefix1 = &quot;class&quot;;
prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

classname = prefix0 + &quot;_&quot; + prefix1 + &quot;_teacher2class_&quot; +  prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;classname2&quot;, classname);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code_teacher2" enabled="true">
            <stringProp name="IncludeController.includepath">Join_a_space_with_space_code_teacher2.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space_teacher2" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">11000</stringProp>
              <stringProp name="RandomTimer.range">9000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces_teacher2" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces_teacher2.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user_teacher2" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_teacher2.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class_teacher2" enabled="true">
            <stringProp name="IncludeController.includepath">create_new_instructor_led_class_teacher2.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class_teacher2" enabled="true">
            <stringProp name="IncludeController.includepath">associate_a_product_with_class2_teacher2.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class_teacher2" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">9000</stringProp>
              <stringProp name="RandomTimer.range">7000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class_teacher2" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">6000</stringProp>
              <stringProp name="RandomTimer.range">6000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix0 = vars.get(&quot;testrun&quot;);
prefix1 = &quot;teacher&quot;;

prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

extuserid = prefix0 + &quot;_&quot; + prefix1 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;extuserid&quot;, extuserid);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix0 = vars.get(&quot;testrun&quot;);
prefix1 = &quot;class&quot;;
prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

classname = prefix0 + &quot;_&quot; + prefix1 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;classname&quot;, classname);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="true">
            <stringProp name="IncludeController.includepath">Join_a_space_with_space_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">11000</stringProp>
              <stringProp name="RandomTimer.range">9000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class" enabled="true">
            <stringProp name="IncludeController.includepath">create_new_instructor_led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Samplerteacher" enabled="true">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;date&quot;) + &quot;5teachers.csv&quot;, true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class" enabled="true">
            <stringProp name="IncludeController.includepath">associate_a_product_with_class2.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">9000</stringProp>
              <stringProp name="RandomTimer.range">7000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">6000</stringProp>
              <stringProp name="RandomTimer.range">6000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create 20 students and join using classcode of current teacher" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">20</stringProp>
          </LoopController>
          <hashTree>
            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
              <stringProp name="CounterConfig.start">1</stringProp>
              <stringProp name="CounterConfig.end">1</stringProp>
              <stringProp name="CounterConfig.incr">1</stringProp>
              <stringProp name="CounterConfig.name">rowid</stringProp>
              <stringProp name="CounterConfig.format"></stringProp>
              <boolProp name="CounterConfig.per_user">true</boolProp>
              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
            </CounterConfig>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.util.Date;

prefix0 = vars.get(&quot;testrun&quot;);
prefix1 = &quot;std&quot;;

Date date = new Date();
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;

studentextuserid = prefix0 + &quot;_&quot; + prefix1 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;studentextuserid&quot;, studentextuserid);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with product_code and class_code" enabled="true">
              <stringProp name="IncludeController.includepath">Join_Spaces_with_product_code_and_class_code.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
                <stringProp name="RandomTimer.range">2000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Send invitation existing" enabled="true">
              <stringProp name="IncludeController.includepath">send_invitation_to_existing_students_from_teacher2.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">6000</stringProp>
                <stringProp name="RandomTimer.range">4000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Multiple invitations" enabled="true">
              <stringProp name="IncludeController.includepath">Get_multiple_invitations_by_contextid_existing_student.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Samplerteacher" enabled="true">
              <stringProp name="BeanShellSampler.query">timestamp = vars.get(&quot;date&quot;);

FileOutputStream out = new FileOutputStream(&quot;student_origclass_&quot; + vars.get(&quot;finalOutputFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;

out.write(vars.get(&quot;extuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());


out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">timestamp = vars.get(&quot;date&quot;);

FileOutputStream out = new FileOutputStream(vars.get(&quot;finalOutputFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;

out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode2&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classid2&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;invitationid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;extuserid2&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());


out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1042__teacher_send_invitation_NEW_student" enabled="false"/>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix0 = vars.get(&quot;testrun&quot;);
prefix1 = &quot;teacher&quot;;

prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

extuserid = prefix0 + &quot;_&quot; + prefix1 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;extuserid&quot;, extuserid);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix0 = vars.get(&quot;testrun&quot;);
prefix1 = &quot;class&quot;;
prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

classname = prefix0 + &quot;_&quot; + prefix1 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;classname&quot;, classname);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__P(Start_Date,1586347804000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__P(End_Date,1659960604000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="true">
            <stringProp name="IncludeController.includepath">Join_a_space_with_space_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">11000</stringProp>
              <stringProp name="RandomTimer.range">9000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class" enabled="true">
            <stringProp name="IncludeController.includepath">create_new_instructor_led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class" enabled="true">
            <stringProp name="IncludeController.includepath">associate_a_product_with_class2.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">6000</stringProp>
              <stringProp name="RandomTimer.range">6000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">6000</stringProp>
              <stringProp name="RandomTimer.range">6000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create 20 invitation NEW students" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">20</stringProp>
          </LoopController>
          <hashTree>
            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
              <stringProp name="CounterConfig.start">1</stringProp>
              <stringProp name="CounterConfig.end">1</stringProp>
              <stringProp name="CounterConfig.incr">1</stringProp>
              <stringProp name="CounterConfig.name">rowid</stringProp>
              <stringProp name="CounterConfig.format"></stringProp>
              <boolProp name="CounterConfig.per_user">true</boolProp>
              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
            </CounterConfig>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.util.Date;

prefix0 = vars.get(&quot;testrun&quot;);
prefix1 = &quot;std&quot;;

Date date = new Date();
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;

studentextuserid = prefix0 + &quot;_&quot; + prefix1 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;studentextuserid&quot;, studentextuserid);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Send invitation NEW student" enabled="true">
              <stringProp name="IncludeController.includepath">send_invitation_to_new_students.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for invitation creation" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">9000</stringProp>
                <stringProp name="RandomTimer.range">8000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Multiple invitations" enabled="true">
              <stringProp name="IncludeController.includepath">Get_multiple_invitations_by_contextid.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">timestamp = vars.get(&quot;date&quot;);

// extuserid,class_code,classid,invitation_id,teacherextuserid


FileOutputStream out = new FileOutputStream(timestamp + &quot;_invitations_1042.csv&quot;, true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;

out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;invitationid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;extuserid&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());


out.flush();
out.close();</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1044__teacher_send_invitation_EXISTING_teacher" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="teacherFilename" elementType="Argument">
                <stringProp name="Argument.name">teacherFilename</stringProp>
                <stringProp name="Argument.value">${__time()}_teacher.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="finalOutputFilename" elementType="Argument">
                <stringProp name="Argument.name">finalOutputFilename</stringProp>
                <stringProp name="Argument.value">invitation_scenario_1044_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__P(Start_Date,1586347804000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__P(End_Date,1659960604000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix0 = vars.get(&quot;testrun&quot;);
prefix1 = &quot;teacher&quot;;

prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

extuserid = prefix0 + &quot;_&quot; + prefix1 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;extuserid&quot;, extuserid);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix0 = vars.get(&quot;testrun&quot;);
prefix1 = &quot;class&quot;;
prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

classname = prefix0 + &quot;_&quot; + prefix1 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;classname&quot;, classname);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="true">
            <stringProp name="IncludeController.includepath">Join_a_space_with_space_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">11000</stringProp>
              <stringProp name="RandomTimer.range">9000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class" enabled="true">
            <stringProp name="IncludeController.includepath">create_new_instructor_led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Samplerteacher" enabled="true">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;date&quot;) + &quot;5teachers.csv&quot;, true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class" enabled="true">
            <stringProp name="IncludeController.includepath">associate_a_product_with_class2.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">9000</stringProp>
              <stringProp name="RandomTimer.range">7000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">6000</stringProp>
              <stringProp name="RandomTimer.range">6000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create 20 teachers and send invitation to all 20 teachers" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">20</stringProp>
          </LoopController>
          <hashTree>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="extuseridInvitation" elementType="Argument">
                  <stringProp name="Argument.name">extuseridInvitation</stringProp>
                  <stringProp name="Argument.value">NOT_FOUND</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
              <stringProp name="CounterConfig.start">1</stringProp>
              <stringProp name="CounterConfig.end">20</stringProp>
              <stringProp name="CounterConfig.incr">1</stringProp>
              <stringProp name="CounterConfig.name">rowid</stringProp>
              <stringProp name="CounterConfig.format"></stringProp>
              <boolProp name="CounterConfig.per_user">true</boolProp>
              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
            </CounterConfig>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="invited_teacher_extuserid" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.util.Date;
Date date = new Date();

prefix0 = vars.get(&quot;testrun&quot;);
prefix1 = &quot;spaceTeacher&quot;;
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;

extuserid = prefix0 + &quot;_&quot; + prefix1 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;extuseridInvitation&quot;, extuserid);</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="true">
              <stringProp name="IncludeController.includepath">Join_a_space_with_space_code_invitation.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">9000</stringProp>
                <stringProp name="RandomTimer.range">7000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
              <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces_invitation.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
              <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_invitation.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Send invitation existing teacher" enabled="true">
              <stringProp name="IncludeController.includepath">send_invitation_to_existing_teacher.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">6000</stringProp>
                <stringProp name="RandomTimer.range">4000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Multiple invitations" enabled="true">
              <stringProp name="IncludeController.includepath">Get_multiple_invitations_by_contextid_existing_teacher.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Samplerteacher" enabled="true">
              <stringProp name="BeanShellSampler.query">timestamp = vars.get(&quot;date&quot;);

FileOutputStream out = new FileOutputStream(&quot;invitingTeacher_origclass_&quot; + vars.get(&quot;finalOutputFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;

out.write(vars.get(&quot;extuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classid&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());


out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler invitation list" enabled="true">
              <stringProp name="BeanShellSampler.query">timestamp = vars.get(&quot;date&quot;);

FileOutputStream out = new FileOutputStream(vars.get(&quot;finalOutputFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;

out.write(vars.get(&quot;extuseridInvitation&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;invitationid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;extuserid&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());


out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1045__teacher_send_invitation_NEW_teacher" enabled="false"/>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix0 = vars.get(&quot;testrun&quot;);
prefix1 = &quot;teacher&quot;;

prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

extuserid = prefix0 + &quot;_&quot; + prefix1 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;extuserid&quot;, extuserid);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix0 = vars.get(&quot;testrun&quot;);
prefix1 = &quot;class&quot;;
prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

classname = prefix0 + &quot;_&quot; + prefix1 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;classname&quot;, classname);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__P(Start_Date,1586347804000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__P(End_Date,1659960604000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="true">
            <stringProp name="IncludeController.includepath">Join_a_space_with_space_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">11000</stringProp>
              <stringProp name="RandomTimer.range">9000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class" enabled="true">
            <stringProp name="IncludeController.includepath">create_new_instructor_led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class" enabled="true">
            <stringProp name="IncludeController.includepath">associate_a_product_with_class2.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">6000</stringProp>
              <stringProp name="RandomTimer.range">6000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">6000</stringProp>
              <stringProp name="RandomTimer.range">6000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create 20 invitation NEW teachers" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">20</stringProp>
          </LoopController>
          <hashTree>
            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
              <stringProp name="CounterConfig.start">1</stringProp>
              <stringProp name="CounterConfig.end">1</stringProp>
              <stringProp name="CounterConfig.incr">1</stringProp>
              <stringProp name="CounterConfig.name">rowid</stringProp>
              <stringProp name="CounterConfig.format"></stringProp>
              <boolProp name="CounterConfig.per_user">true</boolProp>
              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
            </CounterConfig>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.util.Date;

prefix0 = vars.get(&quot;testrun&quot;);
prefix1 = &quot;std&quot;;

Date date = new Date();
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;

studentextuserid = prefix0 + &quot;_&quot; + prefix1 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;studentextuserid&quot;, studentextuserid);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Send invitation NEW teacher" enabled="true">
              <stringProp name="IncludeController.includepath">send_invitation_to_new_teacher.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for invitation creation" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">9000</stringProp>
                <stringProp name="RandomTimer.range">8000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Multiple invitations" enabled="true">
              <stringProp name="IncludeController.includepath">Get_multiple_invitations_by_contextid.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">timestamp = vars.get(&quot;date&quot;);

// extuserid,class_code,classid,invitation_id,teacherextuserid


FileOutputStream out = new FileOutputStream(timestamp + &quot;_invitations_1045_NEW_teachers.csv&quot;, true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;

out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;invitationid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;extuserid&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());


out.flush();
out.close();</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="create 20 students in each class" enabled="false"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">scenario_tch_asnmt_1592411099068.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">teacherextuserid,classtitle,classcode,ap1,ap2,ap3,ap4,ap5</stringProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">classcodes.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">classcode</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilename" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilename</stringProp>
                <stringProp name="Argument.value">scenario_tch_std_asnmt_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="student_name" enabled="true">
            <stringProp name="BeanShellSampler.query">import java.util.Date;

Date date = new Date();
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;

studentextuserid = &quot;std&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;studentextuserid&quot;, studentextuserid);
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="false">
            <stringProp name="BeanShellSampler.query">
System.out.println(vars.get(&quot;studentextuserid&quot;));
System.out.println(vars.get(&quot;classcode&quot;));</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with product_code and class_code" enabled="true">
            <stringProp name="IncludeController.includepath">Join_Spaces_with_product_code_and_class_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="student_output_csv_creation" enabled="true">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Student studies non-pskill in class" enabled="false"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">scriptcreation1011_1012_students.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">extuserid</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1003: Student logs in and accesses the dashboard" enabled="true">
            <stringProp name="IncludeController.includepath">1003-Student_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1009:Student accesses the learning path of a product as part of a teacher-led class " enabled="true">
            <stringProp name="IncludeController.includepath">1009-Student_accesses_the_learning_path_of_a_product_as_part_of_a_teacher-led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="A Student simulating reading (Multiple pages) and post the statements" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">${learning_progress}</stringProp>
          </LoopController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">p.csv</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="variableNames">task,verb</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.group</stringProp>
            </CSVDataSet>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add a new statement" enabled="true">
              <stringProp name="IncludeController.includepath">Add_statements.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Student studies pskills in class" enabled="false"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">scriptcreation1011_1012_students.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">extuserid</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1003: Student logs in and accesses the dashboard" enabled="true">
            <stringProp name="IncludeController.includepath">1003-Student_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1009:Student accesses the learning path of a product as part of a teacher-led class " enabled="true">
            <stringProp name="IncludeController.includepath">1009-Student_accesses_the_learning_path_of_a_product_as_part_of_a_teacher-led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="A Student simulating reading (Multiple pages) and post the statements" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">${learning_progress}</stringProp>
          </LoopController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">product_sections_pskills_e1.csv</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="variableNames">task,verb</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.thread</stringProp>
            </CSVDataSet>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add a new statement" enabled="true">
              <stringProp name="IncludeController.includepath">Add_statements_pskill.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">${userProgress_max}</stringProp>
                <stringProp name="RandomTimer.range">${userProgress_max}</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product-pskill-item-progress-analytic" enabled="true">
            <stringProp name="IncludeController.includepath">Pskill_Item_progress_analytic_progress_true.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Extract Teacher Details from class uuid" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilename" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilename</stringProp>
                <stringProp name="Argument.value">class_details_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="extuserid" elementType="Argument">
                <stringProp name="Argument.name">extuserid</stringProp>
                <stringProp name="Argument.value">40b72b13d81b42b3a35a5d034f43233b</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">classids.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="variableNames">classid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_details_for_a_specific_class_All_Details" enabled="true">
            <stringProp name="IncludeController.includepath">Get_details_for_a_specific_class_All_Details.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_information_for_a_specific_user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_information_for_a_specific_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;extuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;uuid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classuuid&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Extract User Details from uuid" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilename" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilename</stringProp>
                <stringProp name="Argument.value">details_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="extuserid" elementType="Argument">
                <stringProp name="Argument.name">extuserid</stringProp>
                <stringProp name="Argument.value">40b72b13d81b42b3a35a5d034f43233b</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">For Alpha Admin</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">uuids.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="variableNames">uuid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_information_for_a_specific_user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_information_for_a_specific_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - For student" enabled="true">
            <stringProp name="IfController.condition">&quot;${role}&quot; == &quot;student&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="get_classes_of_an_user_All_Details" enabled="true">
              <stringProp name="IncludeController.includepath">get_classes_of_an_user_All_Details.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_information_for_a_specific_user_Teacher" enabled="true">
              <stringProp name="IncludeController.includepath">Get_information_for_a_specific_user_Teacher.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
              <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;extuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;uuid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classuuid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;teacher_extid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;teacheruuid&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - For Teacher/Admin" enabled="true">
            <stringProp name="IfController.condition">&quot;${role}&quot; != &quot;student&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="get_classes_of_an_user_All_Details" enabled="true">
              <stringProp name="IncludeController.includepath">get_classes_of_an_user_All_Details.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
              <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;extuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;uuid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classuuid&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_information_for_a_specific_user" enabled="false">
            <stringProp name="IncludeController.includepath">Get_information_for_a_specific_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="false">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;name&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;extuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classuuid&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Issue fix" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilename" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilename</stringProp>
                <stringProp name="Argument.value">scenario_tch_asnmt_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="teacher_name" enabled="false">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

extuserid = &quot;tch&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;extuserid&quot;, extuserid);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="class_name" enabled="false">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

classname = &quot;class&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;classname&quot;, classname);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="assignedPathList" elementType="Argument">
                <stringProp name="Argument.name">assignedPathList</stringProp>
                <stringProp name="Argument.value">8312e65b-7c6a-440b-bee3-ac4ea4781c5d,1e16d64f-cd60-4480-9858-b6a6a609d009,0aa5961a-3541-423e-8cfb-cb30b612fff8,84038afa-4cf9-4008-8c81-2a1499f2de25,cc8045b1-b07b-4d60-84ef-a812526d7bc8,</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="teachername" elementType="Argument">
                <stringProp name="Argument.name">teachername</stringProp>
                <stringProp name="Argument.value">tch_20200520-183457_1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="classtitle" elementType="Argument">
                <stringProp name="Argument.name">classtitle</stringProp>
                <stringProp name="Argument.value">class_20200520-183457_1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="classcode" elementType="Argument">
                <stringProp name="Argument.name">classcode</stringProp>
                <stringProp name="Argument.value">oHiJ-UvRz</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="false">
            <stringProp name="IncludeController.includepath">Join_a_space_with_space_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [60-65 sec]" enabled="false">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">60000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="false">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="false">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class" enabled="false">
            <stringProp name="IncludeController.includepath">create_new_instructor_led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="false">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">10000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class" enabled="false">
            <stringProp name="IncludeController.includepath">associate_a_product_with_class2.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [300-330]" enabled="false">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">300000</stringProp>
              <stringProp name="RandomTimer.range">30000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create 5 assignments" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
              <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
              <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = vars.get(&quot;assigned_path_id&quot;) + &quot;,&quot; + apList;
vars.put(&quot;assignedPathList&quot;, apList);



//String apList = vars.get(&quot;assignedPathList&quot;);
//apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
//vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
String apl = vars.get(&quot;assignedPathList&quot;);
//apl = apl.substring(0, apl.length() - 1);
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1052 : T1-C1-GP1-GP2 GP2_A1-GP2_A5     S1-S20_entitled to GP1 and GP2 in C1" enabled="false">
          <stringProp name="TestPlan.comments">Returns Teacher External User Id along with additional info</stringProp>
        </GenericController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilename" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilename</stringProp>
                <stringProp name="Argument.value">scenario_1052_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startDate" elementType="Argument">
                <stringProp name="Argument.name">startDate</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="endDate" elementType="Argument">
                <stringProp name="Argument.name">endDate</stringProp>
                <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="assignedGroupPathList" elementType="Argument">
                <stringProp name="Argument.name">assignedGroupPathList</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_groupproduct_id" elementType="Argument">
                <stringProp name="Argument.name">ext_groupproduct_id</stringProp>
                <stringProp name="Argument.value">${__P(product_code,perfpealpha1234)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_groupproduct_id2" elementType="Argument">
                <stringProp name="Argument.name">ext_groupproduct_id2</stringProp>
                <stringProp name="Argument.value">${__P(product_code,perfpwalpha1234)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="groupproduct1" elementType="Argument">
                <stringProp name="Argument.name">groupproduct1</stringProp>
                <stringProp name="Argument.value">${__P(product_code,perf_alpha_pe1)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="groupproduct2" elementType="Argument">
                <stringProp name="Argument.name">groupproduct2</stringProp>
                <stringProp name="Argument.value">${__P(product_code,perf_alpha_pw1)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp1_itemcode1" elementType="Argument">
                <stringProp name="Argument.name">gp1_itemcode1</stringProp>
                <stringProp name="Argument.value">1591682031312/1591682043471/1591682172773</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp1_itemcode2" elementType="Argument">
                <stringProp name="Argument.name">gp1_itemcode2</stringProp>
                <stringProp name="Argument.value">1591682031312/1591682579562/1591687339198</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp1_itemcode3" elementType="Argument">
                <stringProp name="Argument.name">gp1_itemcode3</stringProp>
                <stringProp name="Argument.value">1591699076637/1591699159245/1591701334683</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">pskill</stringProp>
              </elementProp>
              <elementProp name="gp1_itemcode4" elementType="Argument">
                <stringProp name="Argument.name">gp1_itemcode4</stringProp>
                <stringProp name="Argument.value">1591696007973/1591696048196/1591696710116</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp1_itemcode5" elementType="Argument">
                <stringProp name="Argument.name">gp1_itemcode5</stringProp>
                <stringProp name="Argument.value">1591696007973/1591696663679/1591697711509</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp2_itemcode1" elementType="Argument">
                <stringProp name="Argument.name">gp2_itemcode1</stringProp>
                <stringProp name="Argument.value">1591696007973/1591696666059/1592290303751</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">pskill</stringProp>
              </elementProp>
              <elementProp name="gp2_itemcode2" elementType="Argument">
                <stringProp name="Argument.name">gp2_itemcode2</stringProp>
                <stringProp name="Argument.value">1591699076637/1591699159245/1592290677943</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">pskill</stringProp>
              </elementProp>
              <elementProp name="gp2_itemcode3" elementType="Argument">
                <stringProp name="Argument.name">gp2_itemcode3</stringProp>
                <stringProp name="Argument.value">1591682031312/1591682585541/1592290089703</stringProp>
                <stringProp name="Argument.desc">pskill</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp2_itemcode4" elementType="Argument">
                <stringProp name="Argument.name">gp2_itemcode4</stringProp>
                <stringProp name="Argument.value">1591701506515/1591701516122/1592290727442</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">pskill</stringProp>
              </elementProp>
              <elementProp name="gp2_itemcode5" elementType="Argument">
                <stringProp name="Argument.name">gp2_itemcode5</stringProp>
                <stringProp name="Argument.value">1591701928122/1591701946681/1592291282828</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">pskill</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="teacher_name" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

extuserid = &quot;tch&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;extuserid&quot;, extuserid);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="class_name" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

classname = &quot;class&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;classname&quot;, classname);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="true">
            <stringProp name="IncludeController.includepath">Join_a_space_with_space_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [60-65 sec]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">60000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class" enabled="true">
            <stringProp name="IncludeController.includepath">create_new_instructor_led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">10000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class GP1" enabled="true">
            <stringProp name="IncludeController.includepath">associate_a_product_with_class_With_GP1.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class GP2" enabled="true">
            <stringProp name="IncludeController.includepath">associate_a_product_with_class_With_GP2.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [300-330]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">300000</stringProp>
              <stringProp name="RandomTimer.range">30000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create 5 assignments for gp2" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
              <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_with_gp2.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
              <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedGroupPathList&quot;);
apList = vars.get(&quot;assigned_path_id&quot;) + &quot;,&quot; + apList;
vars.put(&quot;assignedGroupPathList&quot;, apList);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time in between assignment creation [30-40 sec]" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">30000</stringProp>
                <stringProp name="RandomTimer.range">10000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">20</stringProp>
          </LoopController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="student_name" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.util.Date;

Date date = new Date();
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;

studentextuserid = &quot;std&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;studentextuserid&quot;, studentextuserid);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="join_Spaces_with_groupproduct1_and_class_code" enabled="true">
              <stringProp name="IncludeController.includepath">join_Spaces_with_groupproduct1_and_class_code.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
                <stringProp name="RandomTimer.range">5000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Entitle User with Group Product 2" enabled="true">
              <stringProp name="IncludeController.includepath">Entitle_User_With_GP2.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
                <stringProp name="RandomTimer.range">5000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
              <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_student.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
              <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;studentuserid2&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedGroupPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="student_output_csv_creation" enabled="false">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Final Group Data Creation Script" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilename" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilename</stringProp>
                <stringProp name="Argument.value">Users_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="outputCsvFilename_all" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilename_all</stringProp>
                <stringProp name="Argument.value">All_info_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="outputCsvFilename_Tch" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilename_Tch</stringProp>
                <stringProp name="Argument.value">TchClassDetails_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="outputCsvFilename_all_group" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilename_all_group</stringProp>
                <stringProp name="Argument.value">GroupMembers_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startDate" elementType="Argument">
                <stringProp name="Argument.name">startDate</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="endDate" elementType="Argument">
                <stringProp name="Argument.name">endDate</stringProp>
                <stringProp name="Argument.value">${__timeShift(,,P1825D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="assignedGroupPathList" elementType="Argument">
                <stringProp name="Argument.name">assignedGroupPathList</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_groupproduct_id" elementType="Argument">
                <stringProp name="Argument.name">ext_groupproduct_id</stringProp>
                <stringProp name="Argument.value">${__P(product_code,perfpealpha1234)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_groupproduct_id2" elementType="Argument">
                <stringProp name="Argument.name">ext_groupproduct_id2</stringProp>
                <stringProp name="Argument.value">${__P(product_code,perfpwalpha1234)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="groupproduct1" elementType="Argument">
                <stringProp name="Argument.name">groupproduct1</stringProp>
                <stringProp name="Argument.value">${__P(product_code,perf_alpha_pe1)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="groupproduct2" elementType="Argument">
                <stringProp name="Argument.name">groupproduct2</stringProp>
                <stringProp name="Argument.value">${__P(product_code,perf_alpha_pw1)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp1_itemcode1" elementType="Argument">
                <stringProp name="Argument.name">gp1_itemcode1</stringProp>
                <stringProp name="Argument.value">1591682031312/1591682043471/1591682172773</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp1_itemcode2" elementType="Argument">
                <stringProp name="Argument.name">gp1_itemcode2</stringProp>
                <stringProp name="Argument.value">1591682031312/1591682579562/1591687339198</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp1_itemcode3" elementType="Argument">
                <stringProp name="Argument.name">gp1_itemcode3</stringProp>
                <stringProp name="Argument.value">1591699076637/1591699159245/1591701334683</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">pskill</stringProp>
              </elementProp>
              <elementProp name="gp1_itemcode4" elementType="Argument">
                <stringProp name="Argument.name">gp1_itemcode4</stringProp>
                <stringProp name="Argument.value">1591696007973/1591696048196/1591696710116</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp1_itemcode5" elementType="Argument">
                <stringProp name="Argument.name">gp1_itemcode5</stringProp>
                <stringProp name="Argument.value">1591696007973/1591696663679/1591697711509</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp2_itemcode1" elementType="Argument">
                <stringProp name="Argument.name">gp2_itemcode1</stringProp>
                <stringProp name="Argument.value">1591696007973/1591696666059/1592290303751</stringProp>
                <stringProp name="Argument.desc">pskill</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp2_itemcode2" elementType="Argument">
                <stringProp name="Argument.name">gp2_itemcode2</stringProp>
                <stringProp name="Argument.value">1591699076637/1591699159245/1592290677943</stringProp>
                <stringProp name="Argument.desc">pskill</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp2_itemcode3" elementType="Argument">
                <stringProp name="Argument.name">gp2_itemcode3</stringProp>
                <stringProp name="Argument.value">1591682031312/1591682585541/1592290089703</stringProp>
                <stringProp name="Argument.desc">pskill</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp2_itemcode4" elementType="Argument">
                <stringProp name="Argument.name">gp2_itemcode4</stringProp>
                <stringProp name="Argument.value">1591701506515/1591701516122/1592290727442</stringProp>
                <stringProp name="Argument.desc">pskill</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp2_itemcode5" elementType="Argument">
                <stringProp name="Argument.name">gp2_itemcode5</stringProp>
                <stringProp name="Argument.value">1591701928122/1591701946681/1592291282828</stringProp>
                <stringProp name="Argument.desc">pskill</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="teacher_name" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

extuserid = &quot;tch&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;extuserid&quot;, extuserid);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="class_name" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

classname = &quot;class&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;classname&quot;, classname);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="true">
            <stringProp name="IncludeController.includepath">Join_a_space_with_space_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [60-65 sec]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">10000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class" enabled="true">
            <stringProp name="IncludeController.includepath">create_new_instructor_led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">4000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename_Tch&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;extuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class GP1" enabled="true">
            <stringProp name="IncludeController.includepath">associate_a_product_with_class_With_GP1.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class GP2" enabled="true">
            <stringProp name="IncludeController.includepath">associate_a_product_with_class_With_GP2.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [300-330]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">6000</stringProp>
              <stringProp name="RandomTimer.range">4000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create 5 assignments for gp2" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
              <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_with_gp2.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
              <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedGroupPathList&quot;);
apList = vars.get(&quot;assigned_path_id&quot;) + &quot;,&quot; + apList;
vars.put(&quot;assignedGroupPathList&quot;, apList);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time in between assignment creation [30-40 sec]" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">4000</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">20</stringProp>
          </LoopController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="student_name" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.util.Date;

Date date = new Date();
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;

studentextuserid = &quot;std&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;studentextuserid&quot;, studentextuserid);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="join_Spaces_with_groupproduct1_and_class_code" enabled="true">
              <stringProp name="IncludeController.includepath">join_Spaces_with_groupproduct1_and_class_code.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
                <stringProp name="RandomTimer.range">5000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Entitle User with Group Product 2" enabled="true">
              <stringProp name="IncludeController.includepath">Entitle_User_With_GP2.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
                <stringProp name="RandomTimer.range">5000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
              <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_student.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
              <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename_all&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;extuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;studentuserid2&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedGroupPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Group 1" enabled="true"/>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new group" enabled="true">
              <stringProp name="IncludeController.includepath">Create_a_new_group.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get members of a class" enabled="true">
              <stringProp name="IncludeController.includepath">Get_members_of_a_class_All.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">5</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">0</stringProp>
                <stringProp name="CounterConfig.end">4</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">counter1</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters">${counter1}</stringProp>
                <stringProp name="script">var members = vars.get(&quot;entities&quot;);

memberObj = JSON.parse(members);

vars.put(&quot;uuid&quot;, memberObj[Parameters].dls_user_id);
vars.put(&quot;name&quot;, memberObj[Parameters].name);
vars.put(&quot;last_name&quot;, memberObj[Parameters].last_name);
vars.put(&quot;first_name&quot;, memberObj[Parameters].first_name);
vars.put(&quot;email&quot;, memberObj[Parameters].email);
</stringProp>
                <stringProp name="scriptLanguage">javascript</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_information_for_a_specific_user" enabled="true">
                <stringProp name="IncludeController.includepath">Get_information_for_a_specific_user_Group.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Enroll user in group" enabled="true">
                <stringProp name="IncludeController.includepath">Enroll_a_user_in_a_group.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Enrolling user [3-5 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">2000</stringProp>
                  <stringProp name="RandomTimer.range">1000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
                <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename_all_group&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;extuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;uuid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;groupid&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
              <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;groupid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;extuserid&quot;).getBytes());
//out.write(SEPARATOR.getBytes());
//out.write(vars.get(&quot;assignedGroupPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Between group creation [10-15 sec]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">6000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Group 2" enabled="true"/>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new group" enabled="true">
              <stringProp name="IncludeController.includepath">Create_a_new_group.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get members of a class" enabled="true">
              <stringProp name="IncludeController.includepath">Get_members_of_a_class_All.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">5</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">5</stringProp>
                <stringProp name="CounterConfig.end">9</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">counter2</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters">${counter2}</stringProp>
                <stringProp name="script">var members = vars.get(&quot;entities&quot;);

memberObj = JSON.parse(members);

vars.put(&quot;uuid&quot;, memberObj[Parameters].dls_user_id);
vars.put(&quot;name&quot;, memberObj[Parameters].name);
vars.put(&quot;last_name&quot;, memberObj[Parameters].last_name);
vars.put(&quot;first_name&quot;, memberObj[Parameters].first_name);
vars.put(&quot;email&quot;, memberObj[Parameters].email);
</stringProp>
                <stringProp name="scriptLanguage">javascript</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_information_for_a_specific_user" enabled="true">
                <stringProp name="IncludeController.includepath">Get_information_for_a_specific_user_Group.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Enroll user in group" enabled="true">
                <stringProp name="IncludeController.includepath">Enroll_a_user_in_a_group.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Enrolling user [3-5 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">2000</stringProp>
                  <stringProp name="RandomTimer.range">1000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
                <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename_all_group&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;extuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;uuid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;groupid&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
              <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;groupid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;extuserid&quot;).getBytes());
//out.write(SEPARATOR.getBytes());
//out.write(vars.get(&quot;assignedGroupPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Between group creation [10-15 sec]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">6000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Group 3" enabled="true"/>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new group" enabled="true">
              <stringProp name="IncludeController.includepath">Create_a_new_group.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get members of a class" enabled="true">
              <stringProp name="IncludeController.includepath">Get_members_of_a_class_All.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">5</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">10</stringProp>
                <stringProp name="CounterConfig.end">14</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">counter3</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters">${counter3}</stringProp>
                <stringProp name="script">var members = vars.get(&quot;entities&quot;);

memberObj = JSON.parse(members);

vars.put(&quot;uuid&quot;, memberObj[Parameters].dls_user_id);
vars.put(&quot;name&quot;, memberObj[Parameters].name);
vars.put(&quot;last_name&quot;, memberObj[Parameters].last_name);
vars.put(&quot;first_name&quot;, memberObj[Parameters].first_name);
vars.put(&quot;email&quot;, memberObj[Parameters].email);
</stringProp>
                <stringProp name="scriptLanguage">javascript</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_information_for_a_specific_user" enabled="true">
                <stringProp name="IncludeController.includepath">Get_information_for_a_specific_user_Group.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Enroll user in group" enabled="true">
                <stringProp name="IncludeController.includepath">Enroll_a_user_in_a_group.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Enrolling user [3-5 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">2000</stringProp>
                  <stringProp name="RandomTimer.range">1000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
                <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename_all_group&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;extuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;uuid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;groupid&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
              <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;groupid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;extuserid&quot;).getBytes());
//out.write(SEPARATOR.getBytes());
//out.write(vars.get(&quot;assignedGroupPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Between group creation [10-15 sec]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">6000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Group 4" enabled="true"/>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new group" enabled="true">
              <stringProp name="IncludeController.includepath">Create_a_new_group.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get members of a class" enabled="true">
              <stringProp name="IncludeController.includepath">Get_members_of_a_class_All.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">5</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">15</stringProp>
                <stringProp name="CounterConfig.end">19</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">counter4</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters">${counter4}</stringProp>
                <stringProp name="script">var members = vars.get(&quot;entities&quot;);

memberObj = JSON.parse(members);

vars.put(&quot;uuid&quot;, memberObj[Parameters].dls_user_id);
vars.put(&quot;name&quot;, memberObj[Parameters].name);
vars.put(&quot;last_name&quot;, memberObj[Parameters].last_name);
vars.put(&quot;first_name&quot;, memberObj[Parameters].first_name);
vars.put(&quot;email&quot;, memberObj[Parameters].email);
</stringProp>
                <stringProp name="scriptLanguage">javascript</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_information_for_a_specific_user" enabled="true">
                <stringProp name="IncludeController.includepath">Get_information_for_a_specific_user_Group.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Enroll user in group" enabled="true">
                <stringProp name="IncludeController.includepath">Enroll_a_user_in_a_group.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Enrolling user [3-5 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">2000</stringProp>
                  <stringProp name="RandomTimer.range">1000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
                <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename_all_group&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;extuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;uuid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;groupid&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
              <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;groupid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;extuserid&quot;).getBytes());
//out.write(SEPARATOR.getBytes());
//out.write(vars.get(&quot;assignedGroupPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Final -&gt; 1054 : 1055 + Student attempts 1 Group Pskill" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilename" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilename</stringProp>
                <stringProp name="Argument.value">scenario_grp_tch_asnmt_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startDate" elementType="Argument">
                <stringProp name="Argument.name">startDate</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="endDate" elementType="Argument">
                <stringProp name="Argument.name">endDate</stringProp>
                <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="assignedGroupPathList" elementType="Argument">
                <stringProp name="Argument.name">assignedGroupPathList</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_groupproduct_id" elementType="Argument">
                <stringProp name="Argument.name">ext_groupproduct_id</stringProp>
                <stringProp name="Argument.value">${__P(product_code,perfpealpha1234)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_groupproduct_id2" elementType="Argument">
                <stringProp name="Argument.name">ext_groupproduct_id2</stringProp>
                <stringProp name="Argument.value">${__P(product_code,perfpwalpha1234)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="groupproduct1" elementType="Argument">
                <stringProp name="Argument.name">groupproduct1</stringProp>
                <stringProp name="Argument.value">${__P(product_code,perf_alpha_pe1)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="groupproduct2" elementType="Argument">
                <stringProp name="Argument.name">groupproduct2</stringProp>
                <stringProp name="Argument.value">${__P(product_code,perf_alpha_pw1)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp1_itemcode1" elementType="Argument">
                <stringProp name="Argument.name">gp1_itemcode1</stringProp>
                <stringProp name="Argument.value">1591682031312/1591682043471/1591682172773</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp1_itemcode2" elementType="Argument">
                <stringProp name="Argument.name">gp1_itemcode2</stringProp>
                <stringProp name="Argument.value">1591682031312/1591682579562/1591687339198</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp1_itemcode3" elementType="Argument">
                <stringProp name="Argument.name">gp1_itemcode3</stringProp>
                <stringProp name="Argument.value">1591699076637/1591699159245/1591701334683</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">pskill</stringProp>
              </elementProp>
              <elementProp name="gp1_itemcode4" elementType="Argument">
                <stringProp name="Argument.name">gp1_itemcode4</stringProp>
                <stringProp name="Argument.value">1591696007973/1591696048196/1591696710116</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp1_itemcode5" elementType="Argument">
                <stringProp name="Argument.name">gp1_itemcode5</stringProp>
                <stringProp name="Argument.value">1591696007973/1591696663679/1591697711509</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp2_itemcode1" elementType="Argument">
                <stringProp name="Argument.name">gp2_itemcode1</stringProp>
                <stringProp name="Argument.value">1591696007973/1591696666059/1592290303751</stringProp>
                <stringProp name="Argument.desc">pskill</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp2_itemcode2" elementType="Argument">
                <stringProp name="Argument.name">gp2_itemcode2</stringProp>
                <stringProp name="Argument.value">1591699076637/1591699159245/1592290677943</stringProp>
                <stringProp name="Argument.desc">pskill</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp2_itemcode3" elementType="Argument">
                <stringProp name="Argument.name">gp2_itemcode3</stringProp>
                <stringProp name="Argument.value">1591682031312/1591682585541/1592290089703</stringProp>
                <stringProp name="Argument.desc">pskill</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp2_itemcode4" elementType="Argument">
                <stringProp name="Argument.name">gp2_itemcode4</stringProp>
                <stringProp name="Argument.value">1591701506515/1591701516122/1592290727442</stringProp>
                <stringProp name="Argument.desc">pskill</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp2_itemcode5" elementType="Argument">
                <stringProp name="Argument.name">gp2_itemcode5</stringProp>
                <stringProp name="Argument.value">1591701928122/1591701946681/1592291282828</stringProp>
                <stringProp name="Argument.desc">pskill</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Users_Combined.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid,groupid,tchextuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get classes of an user" enabled="true">
            <stringProp name="IncludeController.includepath">get_classes_of_an_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the memberships of the specific group" enabled="false">
            <stringProp name="IncludeController.includepath">Get_all_the_memberships_of_the_specific_group.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="A Student simulating reading (Multiple pages) and post the statements" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">4</stringProp>
          </LoopController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">group_pskills_e1.csv</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="variableNames">grouptask,verb</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.thread</stringProp>
            </CSVDataSet>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="false">
              <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add a new statement" enabled="true">
              <stringProp name="IncludeController.includepath">Add_group_statements_pskill.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">${userProgress_max}</stringProp>
                <stringProp name="RandomTimer.range">${userProgress_max}</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update user&apos;s application state for a product or class (product)" enabled="true">
              <stringProp name="IncludeController.includepath">Update_user_application_state_for_a_gp2.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="false">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;groupid&quot;).getBytes());
//out.write(SEPARATOR.getBytes());
//out.write(vars.get(&quot;classcode&quot;).getBytes());
//out.write(SEPARATOR.getBytes());
//out.write(vars.get(&quot;assignedGroupPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Final -&gt; 4 more students enrolled in class with GP1 and GP2" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilename" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilename</stringProp>
                <stringProp name="Argument.value">StdDetails_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startDate" elementType="Argument">
                <stringProp name="Argument.name">startDate</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="endDate" elementType="Argument">
                <stringProp name="Argument.name">endDate</stringProp>
                <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="assignedGroupPathList" elementType="Argument">
                <stringProp name="Argument.name">assignedGroupPathList</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_groupproduct_id" elementType="Argument">
                <stringProp name="Argument.name">ext_groupproduct_id</stringProp>
                <stringProp name="Argument.value">${__P(product_code,perfpealpha1234)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_groupproduct_id2" elementType="Argument">
                <stringProp name="Argument.name">ext_groupproduct_id2</stringProp>
                <stringProp name="Argument.value">${__P(product_code,perfpwalpha1234)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="groupproduct1" elementType="Argument">
                <stringProp name="Argument.name">groupproduct1</stringProp>
                <stringProp name="Argument.value">${__P(product_code,perf_alpha_pe1)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="groupproduct2" elementType="Argument">
                <stringProp name="Argument.name">groupproduct2</stringProp>
                <stringProp name="Argument.value">${__P(product_code,perf_alpha_pw1)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp1_itemcode1" elementType="Argument">
                <stringProp name="Argument.name">gp1_itemcode1</stringProp>
                <stringProp name="Argument.value">1591682031312/1591682043471/1591682172773</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp1_itemcode2" elementType="Argument">
                <stringProp name="Argument.name">gp1_itemcode2</stringProp>
                <stringProp name="Argument.value">1591682031312/1591682579562/1591687339198</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp1_itemcode3" elementType="Argument">
                <stringProp name="Argument.name">gp1_itemcode3</stringProp>
                <stringProp name="Argument.value">1591699076637/1591699159245/1591701334683</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">pskill</stringProp>
              </elementProp>
              <elementProp name="gp1_itemcode4" elementType="Argument">
                <stringProp name="Argument.name">gp1_itemcode4</stringProp>
                <stringProp name="Argument.value">1591696007973/1591696048196/1591696710116</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp1_itemcode5" elementType="Argument">
                <stringProp name="Argument.name">gp1_itemcode5</stringProp>
                <stringProp name="Argument.value">1591696007973/1591696663679/1591697711509</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp2_itemcode1" elementType="Argument">
                <stringProp name="Argument.name">gp2_itemcode1</stringProp>
                <stringProp name="Argument.value">1591696007973/1591696666059/1592290303751</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">pskill</stringProp>
              </elementProp>
              <elementProp name="gp2_itemcode2" elementType="Argument">
                <stringProp name="Argument.name">gp2_itemcode2</stringProp>
                <stringProp name="Argument.value">1591699076637/1591699159245/1592290677943</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">pskill</stringProp>
              </elementProp>
              <elementProp name="gp2_itemcode3" elementType="Argument">
                <stringProp name="Argument.name">gp2_itemcode3</stringProp>
                <stringProp name="Argument.value">1591682031312/1591682585541/1592290089703</stringProp>
                <stringProp name="Argument.desc">pskill</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp2_itemcode4" elementType="Argument">
                <stringProp name="Argument.name">gp2_itemcode4</stringProp>
                <stringProp name="Argument.value">1591701506515/1591701516122/1592290727442</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">pskill</stringProp>
              </elementProp>
              <elementProp name="gp2_itemcode5" elementType="Argument">
                <stringProp name="Argument.name">gp2_itemcode5</stringProp>
                <stringProp name="Argument.value">1591701928122/1591701946681/1592291282828</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">pskill</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">TchClassDetails_Combined.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">extuserid,classcode</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">4</stringProp>
          </LoopController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="student_name" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.util.Date;

Date date = new Date();
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;

studentextuserid = &quot;std&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;studentextuserid&quot;, studentextuserid);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="join_Spaces_with_groupproduct1_and_class_code" enabled="true">
              <stringProp name="IncludeController.includepath">join_Spaces_with_groupproduct1_and_class_code.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
                <stringProp name="RandomTimer.range">5000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Entitle User with Group Product 2" enabled="true">
              <stringProp name="IncludeController.includepath">Entitle_User_With_GP2.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
                <stringProp name="RandomTimer.range">5000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
              <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_student.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
              <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;extuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;studentuserid2&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="student_output_csv_creation" enabled="false">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Final -&gt; Add Showcase" enabled="false"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">TchClassDetails_Combined.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="1014 - Teacher logs in (and accesses dashboard)" enabled="true">
            <stringProp name="IncludeController.includepath">1014-Teacher_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="false">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get members of a class" enabled="true">
            <stringProp name="IncludeController.includepath">Get_members_of_a_class_teacher.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get details for a specific class" enabled="true">
            <stringProp name="IncludeController.includepath">Get_details_for_a_specific_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Class Group Recent Pending Submission" enabled="true">
            <stringProp name="IncludeController.includepath">class_group_pending_submissions_details_true_1054.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the memberships of a specific group" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_memberships_of_a_specific_group.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get group record of a class" enabled="true">
            <stringProp name="IncludeController.includepath">Get_group_record_of_a_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get details for a specific class" enabled="true">
            <stringProp name="IncludeController.includepath">Get_details_for_a_specific_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add items to showcase" enabled="false">
            <stringProp name="IncludeController.includepath">add_items_to_showcase_datacreation.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">2000</stringProp>
              <stringProp name="RandomTimer.range">500</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Showcase of a class" enabled="true">
            <stringProp name="IncludeController.includepath">get_showcase_of_a_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Data for 1062" enabled="false"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">1062.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get All the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces_no_spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get a particular bundle" enabled="true">
            <stringProp name="IncludeController.includepath">Get_a_Particular_Bundle_ielts.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Product by product code" enabled="true">
            <stringProp name="IncludeController.includepath">Get_product_by_product_code_ielts.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="API to grant authkey on refid" enabled="true">
            <stringProp name="IncludeController.includepath">API_to_grant_authkey_on_refid.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join_Spaces_with_product_code and_class_code_private" enabled="true">
            <stringProp name="IncludeController.includepath">Join_Spaces_with_product_code_and_class_code_private_ielts.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Product Activation" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${asyncWait}</stringProp>
              <stringProp name="RandomTimer.range">${asyncWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add IELTS Launched statements" enabled="true">
            <stringProp name="IncludeController.includepath">Add_ielts_statements_launched.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="LTI APIs: Launch a Test" enabled="true"/>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Invoke Launch Endpoint" enabled="true">
              <stringProp name="IncludeController.includepath">invoke.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="OIDC Launch Endpoint" enabled="true">
              <stringProp name="IncludeController.includepath">oidc.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Keyset Launch Endpoint" enabled="true">
              <stringProp name="IncludeController.includepath">keyset.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="For 1065 - common_teacher-1class-class-product-20students" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilename" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilename</stringProp>
                <stringProp name="Argument.value">scenario_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productcode" elementType="Argument">
                <stringProp name="Argument.name">productcode</stringProp>
                <stringProp name="Argument.value">evpel1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ebookproductcode" elementType="Argument">
                <stringProp name="Argument.name">ebookproductcode</stringProp>
                <stringProp name="Argument.value">cqaperftestebook</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

extuserid = &quot;tch&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;extuserid&quot;, extuserid);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

classname = &quot;class&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;classname&quot;, classname);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="true">
            <stringProp name="IncludeController.includepath">join_a_space_with_space_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [60-65 sec]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">60000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class" enabled="true">
            <stringProp name="IncludeController.includepath">create_new_instructor_led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Samplerteacher" enabled="true">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(&quot;originalteachers_&quot; + vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class" enabled="true">
            <stringProp name="IncludeController.includepath">associate_a_product_with_class2.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [500-530]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">50000</stringProp>
              <stringProp name="RandomTimer.range">30000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create 20 students and join using classcode of current teacher" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.util.Date;

Date date = new Date();
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;

studentextuserid = &quot;std&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;studentextuserid&quot;, studentextuserid);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-20]" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
                <stringProp name="RandomTimer.range">10000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with product_code and class_code" enabled="true">
              <stringProp name="IncludeController.includepath">join_Spaces_with_product_code_and_class_code_ebook.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">timestamp = vars.get(&quot;date&quot;);

FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="create 20 students in each class (with group product gp1 and gp2)" enabled="false"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">scenario_grp_tch_asnmt_1592556859419.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">teacherextuserid,classtitle,classcode,ap1,ap2,ap3,ap4,ap5</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilename" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilename</stringProp>
                <stringProp name="Argument.value">scenario_tch_std_asnmt_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="groupproduct1" elementType="Argument">
                <stringProp name="Argument.name">groupproduct1</stringProp>
                <stringProp name="Argument.value">${__P(product_code,perf_alpha_pe1)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="groupproduct2" elementType="Argument">
                <stringProp name="Argument.name">groupproduct2</stringProp>
                <stringProp name="Argument.value">${__P(product_code,perf_alpha_pw1)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="student_name" enabled="true">
            <stringProp name="BeanShellSampler.query">import java.util.Date;

Date date = new Date();
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;

studentextuserid = &quot;std&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;studentextuserid&quot;, studentextuserid);
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="false">
            <stringProp name="BeanShellSampler.query">
System.out.println(vars.get(&quot;studentextuserid&quot;));
System.out.println(vars.get(&quot;classcode&quot;));</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="join_Spaces_with_groupproduct1_and_class_code" enabled="true">
            <stringProp name="IncludeController.includepath">join_Spaces_with_groupproduct1_and_class_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="join_Spaces_with_groupproduct2_and_class_code.jmx" enabled="true">
            <stringProp name="IncludeController.includepath">join_Spaces_with_groupproduct2_and_class_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="student_output_csv_creation" enabled="true">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Group Scenario - teacher-existing class-1 new group- Add 5 existing students" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilename" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilename</stringProp>
                <stringProp name="Argument.value">scenario_new_grp_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="extuserid" elementType="Argument">
                <stringProp name="Argument.name">extuserid</stringProp>
                <stringProp name="Argument.value">tch_20200619-142419_5</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="assignedPathList" elementType="Argument">
                <stringProp name="Argument.name">assignedPathList</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_product_id" elementType="Argument">
                <stringProp name="Argument.name">ext_product_id</stringProp>
                <stringProp name="Argument.value">${__P(product_code,9781108414098)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_product_id2" elementType="Argument">
                <stringProp name="Argument.name">ext_product_id2</stringProp>
                <stringProp name="Argument.value">${__P(product_code,9781108414142)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="groupproduct1" elementType="Argument">
                <stringProp name="Argument.name">groupproduct1</stringProp>
                <stringProp name="Argument.value">${__P(product_code,perf_alpha_pe1)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="groupproduct2" elementType="Argument">
                <stringProp name="Argument.name">groupproduct2</stringProp>
                <stringProp name="Argument.value">${__P(product_code,perf_alpha_pw1)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="groupitemcode1" elementType="Argument">
                <stringProp name="Argument.name">groupitemcode1</stringProp>
                <stringProp name="Argument.value">1591682031312/1591682043471/1591682172773</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="groupitemcode2" elementType="Argument">
                <stringProp name="Argument.name">groupitemcode2</stringProp>
                <stringProp name="Argument.value">1591682031312/1591682579562/1591687339198</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="groupitemcode3" elementType="Argument">
                <stringProp name="Argument.name">groupitemcode3</stringProp>
                <stringProp name="Argument.value">1591699076637/1591699159245/1591701334683</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">pskill</stringProp>
              </elementProp>
              <elementProp name="groupitemcode4" elementType="Argument">
                <stringProp name="Argument.name">groupitemcode4</stringProp>
                <stringProp name="Argument.value">1591696007973/1591696048196/1591696710116</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="groupitemcode5" elementType="Argument">
                <stringProp name="Argument.name">groupitemcode5</stringProp>
                <stringProp name="Argument.value">1591696007973/1591696663679/1591697711509</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">teacher_ext.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get classes of an user" enabled="true">
            <stringProp name="IncludeController.includepath">get_classes_of_an_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new group" enabled="true">
            <stringProp name="IncludeController.includepath">Create_a_new_group.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get members of a class" enabled="true">
            <stringProp name="IncludeController.includepath">Get_members_of_a_class_All.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
              <stringProp name="CounterConfig.start">1</stringProp>
              <stringProp name="CounterConfig.end">5</stringProp>
              <stringProp name="CounterConfig.incr">1</stringProp>
              <stringProp name="CounterConfig.name">counter</stringProp>
              <stringProp name="CounterConfig.format"></stringProp>
              <boolProp name="CounterConfig.per_user">true</boolProp>
              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
            </CounterConfig>
            <hashTree/>
            <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters">${counter}</stringProp>
              <stringProp name="script">var members = vars.get(&quot;entities&quot;);

memberObj = JSON.parse(members);

vars.put(&quot;uuid&quot;, memberObj[Parameters].uuid);
vars.put(&quot;name&quot;, memberObj[Parameters].name);
vars.put(&quot;last_name&quot;, memberObj[Parameters].last_name);
vars.put(&quot;first_name&quot;, memberObj[Parameters].first_name);
vars.put(&quot;email&quot;, memberObj[Parameters].email);
</stringProp>
              <stringProp name="scriptLanguage">javascript</stringProp>
            </JSR223Sampler>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_information_for_a_specific_user" enabled="true">
              <stringProp name="IncludeController.includepath">Get_information_for_a_specific_user.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Enroll user in group" enabled="true">
              <stringProp name="IncludeController.includepath">Enroll_a_user_in_a_group.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="false">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Group Scenario - Get 1 student from group id - Student Attempt pskill" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilename" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilename</stringProp>
                <stringProp name="Argument.value">scenario_new_grp_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="groupid" elementType="Argument">
                <stringProp name="Argument.name">groupid</stringProp>
                <stringProp name="Argument.value">a48ac4f8-967e-48db-b97e-05c4b56f9672</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="extuserid_1" elementType="Argument">
                <stringProp name="Argument.name">extuserid_1</stringProp>
                <stringProp name="Argument.value">tch_20200619-142419_5</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="extuserid" elementType="Argument">
                <stringProp name="Argument.name">extuserid</stringProp>
                <stringProp name="Argument.value">9a18d5214e06479c912800dc3bba7c52</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="assignedPathList" elementType="Argument">
                <stringProp name="Argument.name">assignedPathList</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_product_id" elementType="Argument">
                <stringProp name="Argument.name">ext_product_id</stringProp>
                <stringProp name="Argument.value">${__P(product_code,9781108414098)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_product_id2" elementType="Argument">
                <stringProp name="Argument.name">ext_product_id2</stringProp>
                <stringProp name="Argument.value">${__P(product_code,9781108414142)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="groupproduct1" elementType="Argument">
                <stringProp name="Argument.name">groupproduct1</stringProp>
                <stringProp name="Argument.value">${__P(product_code,perf_alpha_pe1)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="groupproduct2" elementType="Argument">
                <stringProp name="Argument.name">groupproduct2</stringProp>
                <stringProp name="Argument.value">${__P(product_code,perf_alpha_pw1)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="groupitemcode1" elementType="Argument">
                <stringProp name="Argument.name">groupitemcode1</stringProp>
                <stringProp name="Argument.value">1591682031312/1591682043471/1591682172773</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="groupitemcode2" elementType="Argument">
                <stringProp name="Argument.name">groupitemcode2</stringProp>
                <stringProp name="Argument.value">1591682031312/1591682579562/1591687339198</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="groupitemcode3" elementType="Argument">
                <stringProp name="Argument.name">groupitemcode3</stringProp>
                <stringProp name="Argument.value">1591699076637/1591699159245/1591701334683</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">pskill</stringProp>
              </elementProp>
              <elementProp name="groupitemcode4" elementType="Argument">
                <stringProp name="Argument.name">groupitemcode4</stringProp>
                <stringProp name="Argument.value">1591696007973/1591696048196/1591696710116</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="groupitemcode5" elementType="Argument">
                <stringProp name="Argument.name">groupitemcode5</stringProp>
                <stringProp name="Argument.value">1591696007973/1591696663679/1591697711509</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="grouptask_gp1" elementType="Argument">
                <stringProp name="Argument.name">grouptask_gp1</stringProp>
                <stringProp name="Argument.value">1591699076637/1591699159245/1591701334683</stringProp>
                <stringProp name="Argument.desc">pskill</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="grouptask" elementType="Argument">
                <stringProp name="Argument.name">grouptask</stringProp>
                <stringProp name="Argument.value">1591682031312/1591682585541/1592290089703</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">teacher_ext.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get classes of an user" enabled="true">
            <stringProp name="IncludeController.includepath">get_classes_of_an_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the memberships of the specific group" enabled="false">
            <stringProp name="IncludeController.includepath">Get_all_the_memberships_of_the_specific_group.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="A Student simulating reading (Multiple pages) and post the statements" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">3</stringProp>
          </LoopController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">group_pskills_e1.csv</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="variableNames">grouptask,verb</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.thread</stringProp>
            </CSVDataSet>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
              <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add a new statement" enabled="true">
              <stringProp name="IncludeController.includepath">Add_group_statements_pskill.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">${userProgress_max}</stringProp>
                <stringProp name="RandomTimer.range">${userProgress_max}</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update user&apos;s application state for a product or class (product)" enabled="true">
              <stringProp name="IncludeController.includepath">Update_user_application_state_for_a_gp1.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="false">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Group Scenario - Get 1 student from group id - Student Attempt pskill - teacher mark pskill" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilename" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilename</stringProp>
                <stringProp name="Argument.value">scenario_new_grp_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="groupid" elementType="Argument">
                <stringProp name="Argument.name">groupid</stringProp>
                <stringProp name="Argument.value">a48ac4f8-967e-48db-b97e-05c4b56f9672</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="extuserid_1" elementType="Argument">
                <stringProp name="Argument.name">extuserid_1</stringProp>
                <stringProp name="Argument.value">tch_20200619-142419_5</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="extuserid" elementType="Argument">
                <stringProp name="Argument.name">extuserid</stringProp>
                <stringProp name="Argument.value">9a18d5214e06479c912800dc3bba7c52</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="assignedPathList" elementType="Argument">
                <stringProp name="Argument.name">assignedPathList</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_product_id" elementType="Argument">
                <stringProp name="Argument.name">ext_product_id</stringProp>
                <stringProp name="Argument.value">${__P(product_code,9781108414098)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_product_id2" elementType="Argument">
                <stringProp name="Argument.name">ext_product_id2</stringProp>
                <stringProp name="Argument.value">${__P(product_code,9781108414142)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="groupproduct1" elementType="Argument">
                <stringProp name="Argument.name">groupproduct1</stringProp>
                <stringProp name="Argument.value">${__P(product_code,perf_alpha_pe1)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="groupproduct2" elementType="Argument">
                <stringProp name="Argument.name">groupproduct2</stringProp>
                <stringProp name="Argument.value">${__P(product_code,perf_alpha_pw1)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="groupitemcode1" elementType="Argument">
                <stringProp name="Argument.name">groupitemcode1</stringProp>
                <stringProp name="Argument.value">1591682031312/1591682043471/1591682172773</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="groupitemcode2" elementType="Argument">
                <stringProp name="Argument.name">groupitemcode2</stringProp>
                <stringProp name="Argument.value">1591682031312/1591682579562/1591687339198</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="groupitemcode3" elementType="Argument">
                <stringProp name="Argument.name">groupitemcode3</stringProp>
                <stringProp name="Argument.value">1591699076637/1591699159245/1591701334683</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">pskill</stringProp>
              </elementProp>
              <elementProp name="groupitemcode4" elementType="Argument">
                <stringProp name="Argument.name">groupitemcode4</stringProp>
                <stringProp name="Argument.value">1591696007973/1591696048196/1591696710116</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="groupitemcode5" elementType="Argument">
                <stringProp name="Argument.name">groupitemcode5</stringProp>
                <stringProp name="Argument.value">1591696007973/1591696663679/1591697711509</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="grouptask_gp1" elementType="Argument">
                <stringProp name="Argument.name">grouptask_gp1</stringProp>
                <stringProp name="Argument.value">1591699076637/1591699159245/1591701334683</stringProp>
                <stringProp name="Argument.desc">pskill</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="grouptask" elementType="Argument">
                <stringProp name="Argument.name">grouptask</stringProp>
                <stringProp name="Argument.value">1591682031312/1591682585541/1592290089703</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="grouptask1" elementType="Argument">
                <stringProp name="Argument.name">grouptask1</stringProp>
                <stringProp name="Argument.value">1591682031312/1591682585541/1592290089703</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">teacher_ext.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get classes of an user" enabled="true">
            <stringProp name="IncludeController.includepath">get_classes_of_an_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the memberships of the specific group" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_memberships_of_the_specific_group_1056.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="A Student simulating reading (Multiple pages) and post the statements" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">3</stringProp>
          </LoopController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">group_pskills_e1.csv</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="variableNames">grouptask,verb</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.thread</stringProp>
            </CSVDataSet>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
              <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add a new statement" enabled="true">
              <stringProp name="IncludeController.includepath">Add_group_statements_pskill.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">${userProgress_max}</stringProp>
                <stringProp name="RandomTimer.range">${userProgress_max}</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update user&apos;s application state for a product or class (product)" enabled="true">
              <stringProp name="IncludeController.includepath">Update_user_application_state_for_a_gp1.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="false">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${userProgress_max}</stringProp>
              <stringProp name="RandomTimer.range">${userProgress_max}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Class Group Recent Pending Submission" enabled="true">
            <stringProp name="IncludeController.includepath">class_group_pending_submissions.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product items and their progress analytic (default)" enabled="true">
            <stringProp name="IncludeController.includepath">Product_items_and_their_progress_analytic_default_Group_True.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="teacher_view_student_pskill_Item_progress_analytics" enabled="false">
            <stringProp name="IncludeController.includepath">teacher_view_student_pskill_Item_progress_analytics.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update user&apos;s application state for a product or class (product)" enabled="true">
            <stringProp name="IncludeController.includepath">Update_user_application_state_for_a_gp2_evaluated.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Evaluate pskill - EVALUATE statement" enabled="true">
            <stringProp name="IncludeController.includepath">Add_gp2_statements_pskill_evaluated.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Enable Re-submission for student - REDO statement" enabled="true">
            <stringProp name="IncludeController.includepath">Add_gp2_statements_pskill_redo.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Deletes user&apos;s application state for a product or class (product) - By Teacher" enabled="true">
            <stringProp name="IncludeController.includepath">Deletes_user_application_state_for_a_gp2.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="false">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1055 : T1-C1-GP1-GP2 GP2_A1-GP2_A5 || S1-S20_entitled to GP1 and GP2 in C1 || G1 - S1-S5" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilename" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilename</stringProp>
                <stringProp name="Argument.value">scenario_1055_asnmt_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="outputCsvFilename_all" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilename_all</stringProp>
                <stringProp name="Argument.value">scenario_1055_info_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startDate" elementType="Argument">
                <stringProp name="Argument.name">startDate</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="endDate" elementType="Argument">
                <stringProp name="Argument.name">endDate</stringProp>
                <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="assignedGroupPathList" elementType="Argument">
                <stringProp name="Argument.name">assignedGroupPathList</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_groupproduct_id" elementType="Argument">
                <stringProp name="Argument.name">ext_groupproduct_id</stringProp>
                <stringProp name="Argument.value">${__P(product_code,perfpealpha1234)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_groupproduct_id2" elementType="Argument">
                <stringProp name="Argument.name">ext_groupproduct_id2</stringProp>
                <stringProp name="Argument.value">${__P(product_code,perfpwalpha1234)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="groupproduct1" elementType="Argument">
                <stringProp name="Argument.name">groupproduct1</stringProp>
                <stringProp name="Argument.value">${__P(product_code,perf_alpha_pe1)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="groupproduct2" elementType="Argument">
                <stringProp name="Argument.name">groupproduct2</stringProp>
                <stringProp name="Argument.value">${__P(product_code,perf_alpha_pw1)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp1_itemcode1" elementType="Argument">
                <stringProp name="Argument.name">gp1_itemcode1</stringProp>
                <stringProp name="Argument.value">1591682031312/1591682043471/1591682172773</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp1_itemcode2" elementType="Argument">
                <stringProp name="Argument.name">gp1_itemcode2</stringProp>
                <stringProp name="Argument.value">1591682031312/1591682579562/1591687339198</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp1_itemcode3" elementType="Argument">
                <stringProp name="Argument.name">gp1_itemcode3</stringProp>
                <stringProp name="Argument.value">1591699076637/1591699159245/1591701334683</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">pskill</stringProp>
              </elementProp>
              <elementProp name="gp1_itemcode4" elementType="Argument">
                <stringProp name="Argument.name">gp1_itemcode4</stringProp>
                <stringProp name="Argument.value">1591696007973/1591696048196/1591696710116</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp1_itemcode5" elementType="Argument">
                <stringProp name="Argument.name">gp1_itemcode5</stringProp>
                <stringProp name="Argument.value">1591696007973/1591696663679/1591697711509</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp2_itemcode1" elementType="Argument">
                <stringProp name="Argument.name">gp2_itemcode1</stringProp>
                <stringProp name="Argument.value">1591696007973/1591696666059/1592290303751</stringProp>
                <stringProp name="Argument.desc">pskill</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp2_itemcode2" elementType="Argument">
                <stringProp name="Argument.name">gp2_itemcode2</stringProp>
                <stringProp name="Argument.value">1591699076637/1591699159245/1592290677943</stringProp>
                <stringProp name="Argument.desc">pskill</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp2_itemcode3" elementType="Argument">
                <stringProp name="Argument.name">gp2_itemcode3</stringProp>
                <stringProp name="Argument.value">1591682031312/1591682585541/1592290089703</stringProp>
                <stringProp name="Argument.desc">pskill</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp2_itemcode4" elementType="Argument">
                <stringProp name="Argument.name">gp2_itemcode4</stringProp>
                <stringProp name="Argument.value">1591701506515/1591701516122/1592290727442</stringProp>
                <stringProp name="Argument.desc">pskill</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp2_itemcode5" elementType="Argument">
                <stringProp name="Argument.name">gp2_itemcode5</stringProp>
                <stringProp name="Argument.value">1591701928122/1591701946681/1592291282828</stringProp>
                <stringProp name="Argument.desc">pskill</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="teacher_name" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

extuserid = &quot;tch&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;extuserid&quot;, extuserid);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="class_name" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

classname = &quot;class&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;classname&quot;, classname);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="true">
            <stringProp name="IncludeController.includepath">Join_a_space_with_space_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [60-65 sec]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">60000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class" enabled="true">
            <stringProp name="IncludeController.includepath">create_new_instructor_led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="false">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">10000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class GP1" enabled="true">
            <stringProp name="IncludeController.includepath">associate_a_product_with_class_With_GP1.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class GP2" enabled="true">
            <stringProp name="IncludeController.includepath">associate_a_product_with_class_With_GP2.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [300-330]" enabled="false">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">300000</stringProp>
              <stringProp name="RandomTimer.range">30000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create 5 assignments for gp2" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
              <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_with_gp2.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
              <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedGroupPathList&quot;);
apList = vars.get(&quot;assigned_path_id&quot;) + &quot;,&quot; + apList;
vars.put(&quot;assignedGroupPathList&quot;, apList);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time in between assignment creation [30-40 sec]" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">30000</stringProp>
                <stringProp name="RandomTimer.range">10000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">12</stringProp>
          </LoopController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="student_name" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.util.Date;

Date date = new Date();
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;

studentextuserid = &quot;std&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;studentextuserid&quot;, studentextuserid);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="join_Spaces_with_groupproduct1_and_class_code" enabled="true">
              <stringProp name="IncludeController.includepath">join_Spaces_with_groupproduct1_and_class_code.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="false">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
                <stringProp name="RandomTimer.range">5000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Entitle User with Group Product 2" enabled="true">
              <stringProp name="IncludeController.includepath">Entitle_User_With_GP2.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
                <stringProp name="RandomTimer.range">5000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
              <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_student.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
              <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename_all&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;studentuserid2&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedGroupPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Group 1" enabled="true"/>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new group" enabled="true">
              <stringProp name="IncludeController.includepath">Create_a_new_group.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get members of a class" enabled="true">
              <stringProp name="IncludeController.includepath">Get_members_of_a_class_All.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">5</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end">5</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">counter1</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters">${counter1}</stringProp>
                <stringProp name="script">var members = vars.get(&quot;entities&quot;);

memberObj = JSON.parse(members);

vars.put(&quot;uuid&quot;, memberObj[Parameters].uuid);
vars.put(&quot;name&quot;, memberObj[Parameters].name);
vars.put(&quot;last_name&quot;, memberObj[Parameters].last_name);
vars.put(&quot;first_name&quot;, memberObj[Parameters].first_name);
vars.put(&quot;email&quot;, memberObj[Parameters].email);
</stringProp>
                <stringProp name="scriptLanguage">javascript</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_information_for_a_specific_user" enabled="true">
                <stringProp name="IncludeController.includepath">Get_information_for_a_specific_user_Group.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Enroll user in group" enabled="true">
                <stringProp name="IncludeController.includepath">Enroll_a_user_in_a_group.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugSampler>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
              <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;groupid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;extuserid&quot;).getBytes());
//out.write(SEPARATOR.getBytes());
//out.write(vars.get(&quot;assignedGroupPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Group 2" enabled="true"/>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new group" enabled="true">
              <stringProp name="IncludeController.includepath">Create_a_new_group.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get members of a class" enabled="true">
              <stringProp name="IncludeController.includepath">Get_members_of_a_class_All.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">5</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">6</stringProp>
                <stringProp name="CounterConfig.end">10</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">counter2</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters">${counter2}</stringProp>
                <stringProp name="script">var members = vars.get(&quot;entities&quot;);

memberObj = JSON.parse(members);

vars.put(&quot;uuid&quot;, memberObj[Parameters].uuid);
vars.put(&quot;name&quot;, memberObj[Parameters].name);
vars.put(&quot;last_name&quot;, memberObj[Parameters].last_name);
vars.put(&quot;first_name&quot;, memberObj[Parameters].first_name);
vars.put(&quot;email&quot;, memberObj[Parameters].email);
</stringProp>
                <stringProp name="scriptLanguage">javascript</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_information_for_a_specific_user" enabled="true">
                <stringProp name="IncludeController.includepath">Get_information_for_a_specific_user_Group.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Enroll user in group" enabled="true">
                <stringProp name="IncludeController.includepath">Enroll_a_user_in_a_group.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugSampler>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
              <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;groupid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;extuserid&quot;).getBytes());
//out.write(SEPARATOR.getBytes());
//out.write(vars.get(&quot;assignedGroupPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Group 3" enabled="false"/>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new group" enabled="true">
              <stringProp name="IncludeController.includepath">Create_a_new_group.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get members of a class" enabled="true">
              <stringProp name="IncludeController.includepath">Get_members_of_a_class_All.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">5</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">11</stringProp>
                <stringProp name="CounterConfig.end">15</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">counter3</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters">${counter3}</stringProp>
                <stringProp name="script">var members = vars.get(&quot;entities&quot;);

memberObj = JSON.parse(members);

vars.put(&quot;uuid&quot;, memberObj[Parameters].uuid);
vars.put(&quot;name&quot;, memberObj[Parameters].name);
vars.put(&quot;last_name&quot;, memberObj[Parameters].last_name);
vars.put(&quot;first_name&quot;, memberObj[Parameters].first_name);
vars.put(&quot;email&quot;, memberObj[Parameters].email);
</stringProp>
                <stringProp name="scriptLanguage">javascript</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_information_for_a_specific_user" enabled="true">
                <stringProp name="IncludeController.includepath">Get_information_for_a_specific_user_Group.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Enroll user in group" enabled="false">
                <stringProp name="IncludeController.includepath">Enroll_a_user_in_a_group.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
              <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;groupid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;extuserid&quot;).getBytes());
//out.write(SEPARATOR.getBytes());
//out.write(vars.get(&quot;assignedGroupPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Group 4" enabled="false"/>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new group" enabled="true">
              <stringProp name="IncludeController.includepath">Create_a_new_group.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get members of a class" enabled="true">
              <stringProp name="IncludeController.includepath">Get_members_of_a_class_All.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">5</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">16</stringProp>
                <stringProp name="CounterConfig.end">20</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">counter4</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters">${counter4}</stringProp>
                <stringProp name="script">var members = vars.get(&quot;entities&quot;);

memberObj = JSON.parse(members);

vars.put(&quot;uuid&quot;, memberObj[Parameters].uuid);
vars.put(&quot;name&quot;, memberObj[Parameters].name);
vars.put(&quot;last_name&quot;, memberObj[Parameters].last_name);
vars.put(&quot;first_name&quot;, memberObj[Parameters].first_name);
vars.put(&quot;email&quot;, memberObj[Parameters].email);
</stringProp>
                <stringProp name="scriptLanguage">javascript</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_information_for_a_specific_user" enabled="true">
                <stringProp name="IncludeController.includepath">Get_information_for_a_specific_user_Group.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Enroll user in group" enabled="false">
                <stringProp name="IncludeController.includepath">Enroll_a_user_in_a_group.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
              <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;groupid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;extuserid&quot;).getBytes());
//out.write(SEPARATOR.getBytes());
//out.write(vars.get(&quot;assignedGroupPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="class-product association" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilename" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilename</stringProp>
                <stringProp name="Argument.value">scenario_tch_asnmt_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="teacher_name" enabled="false">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

extuserid = &quot;tch&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;extuserid&quot;, extuserid);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="class_name" enabled="false">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

classname = &quot;class&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;classname&quot;, classname);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="assignedPathList" elementType="Argument">
                <stringProp name="Argument.name">assignedPathList</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="classid" elementType="Argument">
                <stringProp name="Argument.name">classid</stringProp>
                <stringProp name="Argument.value">0f0a04a9-b79b-11ea-94cc-0242ac110002</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="extuserid" elementType="Argument">
                <stringProp name="Argument.name">extuserid</stringProp>
                <stringProp name="Argument.value">d67aab06f4144d0cbd29c85dc27fdc94</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="groupproduct1" elementType="Argument">
                <stringProp name="Argument.name">groupproduct1</stringProp>
                <stringProp name="Argument.value">${__P(product_code,perf_alpha_pe1)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="groupproduct2" elementType="Argument">
                <stringProp name="Argument.name">groupproduct2</stringProp>
                <stringProp name="Argument.value">${__P(product_code,perf_alpha_pw1)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="studentextuserid" elementType="Argument">
                <stringProp name="Argument.name">studentextuserid</stringProp>
                <stringProp name="Argument.value">28bc634f81b24254bfb32ed3805e57d4</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="classcode" elementType="Argument">
                <stringProp name="Argument.name">classcode</stringProp>
                <stringProp name="Argument.value">6mwt-o78v</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_groupproduct_id" elementType="Argument">
                <stringProp name="Argument.name">ext_groupproduct_id</stringProp>
                <stringProp name="Argument.value">${__P(product_code,perfpealpha1234)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_groupproduct_id2" elementType="Argument">
                <stringProp name="Argument.name">ext_groupproduct_id2</stringProp>
                <stringProp name="Argument.value">${__P(product_code,perfpwalpha1234)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="false">
            <stringProp name="IncludeController.includepath">Join_a_space_with_space_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [60-65 sec]" enabled="false">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">60000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="false">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller" enabled="false"/>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class GP1" enabled="true">
              <stringProp name="IncludeController.includepath">associate_a_product_with_class_With_GP1.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class GP2" enabled="true">
              <stringProp name="IncludeController.includepath">associate_a_product_with_class_With_GP2.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class" enabled="false">
            <stringProp name="IncludeController.includepath">create_new_instructor_led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller" enabled="true"/>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="join_Spaces_with_groupproduct1_and_class_code" enabled="true">
              <stringProp name="IncludeController.includepath">join_Spaces_with_groupproduct1_and_class_code.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
                <stringProp name="RandomTimer.range">5000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Entitle User with Group Product 2" enabled="true">
              <stringProp name="IncludeController.includepath">Entitle_User_With_GP2.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="false">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">10000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [300-330]" enabled="false">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">300000</stringProp>
              <stringProp name="RandomTimer.range">30000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create 5 assignments" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
              <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
              <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = vars.get(&quot;assigned_path_id&quot;) + &quot;,&quot; + apList;
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time in between assignment creation [30-40 sec]" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">30000</stringProp>
                <stringProp name="RandomTimer.range">10000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="false">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Get group id of student" enabled="false"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">GrpMembers_Combined.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid,studentuserid,stuextid,classtitle,classcode,ag1,ag2,ag3,ag4,ag5</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="assignedPathList" elementType="Argument">
                <stringProp name="Argument.name">assignedPathList</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="groupproduct1" elementType="Argument">
                <stringProp name="Argument.name">groupproduct1</stringProp>
                <stringProp name="Argument.value">${__P(product_code,perf_alpha_pe1)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="groupproduct2" elementType="Argument">
                <stringProp name="Argument.name">groupproduct2</stringProp>
                <stringProp name="Argument.value">${__P(product_code,perf_alpha_pw1)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_groupproduct_id" elementType="Argument">
                <stringProp name="Argument.name">ext_groupproduct_id</stringProp>
                <stringProp name="Argument.value">${__P(product_code,perfpealpha1234)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_groupproduct_id2" elementType="Argument">
                <stringProp name="Argument.name">ext_groupproduct_id2</stringProp>
                <stringProp name="Argument.value">${__P(product_code,perfpwalpha1234)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="outputCsvFilename" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilename</stringProp>
                <stringProp name="Argument.value">10551_fix_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get classes of teacher" enabled="true">
            <stringProp name="IncludeController.includepath">get_classes_of_an_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all members of group" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_members_of_the_group.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all groups by path" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_groups_by_path_LM.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;extuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;studentuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;stuextid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;ag1&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;ag2&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;ag3&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;ag4&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;ag5&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;groupid&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Bulk Class Data Creation" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="currentdate" elementType="Argument">
                <stringProp name="Argument.name">currentdate</stringProp>
                <stringProp name="Argument.value">${__time(ddMMyyyyHHmmss,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="tomorrowdate" elementType="Argument">
                <stringProp name="Argument.name">tomorrowdate</stringProp>
                <stringProp name="Argument.value">${__timeShift(dd/MM/yyyy,,P1D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="nextyeardate" elementType="Argument">
                <stringProp name="Argument.name">nextyeardate</stringProp>
                <stringProp name="Argument.value">${__timeShift(dd/MM/yyyy,,P365D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="outputCsvFilename" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilename</stringProp>
                <stringProp name="Argument.value">BulkClass_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(&quot;Class name&quot;.getBytes());
out.write(SEPARATOR.getBytes());
out.write(&quot;Start date DD/MM/YYYY&quot;.getBytes());
out.write(SEPARATOR.getBytes());
out.write(&quot;End date DD/MM/YYYY&quot;.getBytes());
out.write(SEPARATOR.getBytes());
out.write(&quot;Teacher 1&quot;.getBytes());
out.write(SEPARATOR.getBytes());
out.write(&quot;Teacher 2 (optional)&quot;.getBytes());
out.write(SEPARATOR.getBytes());
out.write(&quot;Teacher 3 (optional)&quot;.getBytes());
out.write(SEPARATOR.getBytes());
out.write(&quot;Teacher 4 (optional)&quot;.getBytes());
out.write(SEPARATOR.getBytes());
out.write(&quot;Teacher 5 (optional)&quot;.getBytes());
out.write(SEPARATOR.getBytes());
out.write(&quot;Teacher 6 (optional)&quot;.getBytes());
out.write(SEPARATOR.getBytes());
out.write(&quot;Teacher 7 (optional)&quot;.getBytes());
out.write(SEPARATOR.getBytes());
out.write(&quot;Teacher 8 (optional)&quot;.getBytes());
out.write(SEPARATOR.getBytes());
out.write(&quot;Teacher 9 (optional)&quot;.getBytes());
out.write(SEPARATOR.getBytes());
out.write(&quot;Teacher 10 (optional)&quot;.getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">25</stringProp>
          </LoopController>
          <hashTree>
            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
              <stringProp name="CounterConfig.start">1</stringProp>
              <stringProp name="CounterConfig.end">100</stringProp>
              <stringProp name="CounterConfig.incr">1</stringProp>
              <stringProp name="CounterConfig.name">counter</stringProp>
              <stringProp name="CounterConfig.format"></stringProp>
              <boolProp name="CounterConfig.per_user">false</boolProp>
            </CounterConfig>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
              <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write((&quot;PerfClass_&quot;+vars.get(&quot;currentdate&quot;)+&quot;_&quot;+vars.get(&quot;counter&quot;)).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;tomorrowdate&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;nextyeardate&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(&quot;demo_teacher_l1@yopmail.com&quot;.getBytes());
out.write(SEPARATOR.getBytes());
out.write((&quot;dt_&quot;+vars.get(&quot;currentdate&quot;)+&quot;_&quot;+vars.get(&quot;counter&quot;)+&quot;@yopmail.com&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Bulk Invitation Data Creation" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilename" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilename</stringProp>
                <stringProp name="Argument.value">scenario_tch_asnmt_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="teacher_name" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

extuserid = &quot;tch&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;extuserid&quot;, extuserid);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="class_name" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

classname = &quot;class&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;classname&quot;, classname);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="assignedPathList" elementType="Argument">
                <stringProp name="Argument.name">assignedPathList</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="true">
            <stringProp name="IncludeController.includepath">Join_a_space_with_space_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [60-65 sec]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">60000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class" enabled="true">
            <stringProp name="IncludeController.includepath">create_new_instructor_led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">10000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class" enabled="true">
            <stringProp name="IncludeController.includepath">associate_a_product_with_class2.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [300-330]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">300000</stringProp>
              <stringProp name="RandomTimer.range">30000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create 5 assignments" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
              <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
              <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = vars.get(&quot;assigned_path_id&quot;) + &quot;,&quot; + apList;
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time in between assignment creation [30-40 sec]" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">30000</stringProp>
                <stringProp name="RandomTimer.range">10000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Entitle with gp2" enabled="false"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">studentextuserid.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">studentextuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="startDate" elementType="Argument">
                <stringProp name="Argument.name">startDate</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="endDate" elementType="Argument">
                <stringProp name="Argument.name">endDate</stringProp>
                <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_groupproduct_id" elementType="Argument">
                <stringProp name="Argument.name">ext_groupproduct_id</stringProp>
                <stringProp name="Argument.value">${__P(product_code,perfpealpha1234)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ext_groupproduct_id2" elementType="Argument">
                <stringProp name="Argument.name">ext_groupproduct_id2</stringProp>
                <stringProp name="Argument.value">${__P(product_code,perfpwalpha1234)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="groupproduct1" elementType="Argument">
                <stringProp name="Argument.name">groupproduct1</stringProp>
                <stringProp name="Argument.value">${__P(product_code,perf_alpha_pe1)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="groupproduct2" elementType="Argument">
                <stringProp name="Argument.name">groupproduct2</stringProp>
                <stringProp name="Argument.value">${__P(product_code,perf_alpha_pw1)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp1_itemcode1" elementType="Argument">
                <stringProp name="Argument.name">gp1_itemcode1</stringProp>
                <stringProp name="Argument.value">1591682031312/1591682043471/1591682172773</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp1_itemcode2" elementType="Argument">
                <stringProp name="Argument.name">gp1_itemcode2</stringProp>
                <stringProp name="Argument.value">1591682031312/1591682579562/1591687339198</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp1_itemcode3" elementType="Argument">
                <stringProp name="Argument.name">gp1_itemcode3</stringProp>
                <stringProp name="Argument.value">1591699076637/1591699159245/1591701334683</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">pskill</stringProp>
              </elementProp>
              <elementProp name="gp1_itemcode4" elementType="Argument">
                <stringProp name="Argument.name">gp1_itemcode4</stringProp>
                <stringProp name="Argument.value">1591696007973/1591696048196/1591696710116</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp1_itemcode5" elementType="Argument">
                <stringProp name="Argument.name">gp1_itemcode5</stringProp>
                <stringProp name="Argument.value">1591696007973/1591696663679/1591697711509</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp2_itemcode1" elementType="Argument">
                <stringProp name="Argument.name">gp2_itemcode1</stringProp>
                <stringProp name="Argument.value">1591696007973/1591696666059/1592290303751</stringProp>
                <stringProp name="Argument.desc">pskill</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp2_itemcode2" elementType="Argument">
                <stringProp name="Argument.name">gp2_itemcode2</stringProp>
                <stringProp name="Argument.value">1591699076637/1591699159245/1592290677943</stringProp>
                <stringProp name="Argument.desc">pskill</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp2_itemcode3" elementType="Argument">
                <stringProp name="Argument.name">gp2_itemcode3</stringProp>
                <stringProp name="Argument.value">1591682031312/1591682585541/1592290089703</stringProp>
                <stringProp name="Argument.desc">pskill</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp2_itemcode4" elementType="Argument">
                <stringProp name="Argument.name">gp2_itemcode4</stringProp>
                <stringProp name="Argument.value">1591701506515/1591701516122/1592290727442</stringProp>
                <stringProp name="Argument.desc">pskill</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gp2_itemcode5" elementType="Argument">
                <stringProp name="Argument.name">gp2_itemcode5</stringProp>
                <stringProp name="Argument.value">1591701928122/1591701946681/1592291282828</stringProp>
                <stringProp name="Argument.desc">pskill</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Entitle User with Group Product 2" enabled="true">
            <stringProp name="IncludeController.includepath">Entitle_User_With_GP2.jmx</stringProp>
          </IncludeController>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">true</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>true</encoding>
            <assertions>false</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <fileName>true</fileName>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
