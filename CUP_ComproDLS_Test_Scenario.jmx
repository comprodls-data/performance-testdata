<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.8" jmeter="2.13 r1665067">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="ComproDLS Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="orgid" elementType="Argument">
            <stringProp name="Argument.name">orgid</stringProp>
            <stringProp name="Argument.value">${__P(Organization_id,b2perf1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="appid" elementType="Argument">
            <stringProp name="Argument.name">appid</stringProp>
            <stringProp name="Argument.value">default</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="startTime" elementType="Argument">
            <stringProp name="Argument.name">startTime</stringProp>
            <stringProp name="Argument.value">1504224000000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sectionCounter" elementType="Argument">
            <stringProp name="Argument.name">sectionCounter</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="minWait" elementType="Argument">
            <stringProp name="Argument.name">minWait</stringProp>
            <stringProp name="Argument.value">2000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="productSummary_max" elementType="Argument">
            <stringProp name="Argument.name">productSummary_max</stringProp>
            <stringProp name="Argument.value">8000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="productToc_max" elementType="Argument">
            <stringProp name="Argument.name">productToc_max</stringProp>
            <stringProp name="Argument.value">3000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="productRightpane_max" elementType="Argument">
            <stringProp name="Argument.name">productRightpane_max</stringProp>
            <stringProp name="Argument.value">8000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="activityStream_max" elementType="Argument">
            <stringProp name="Argument.name">activityStream_max</stringProp>
            <stringProp name="Argument.value">3000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="reader_max" elementType="Argument">
            <stringProp name="Argument.name">reader_max</stringProp>
            <stringProp name="Argument.value">8000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="dashboard_max" elementType="Argument">
            <stringProp name="Argument.name">dashboard_max</stringProp>
            <stringProp name="Argument.value">8000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="postComment_max" elementType="Argument">
            <stringProp name="Argument.name">postComment_max</stringProp>
            <stringProp name="Argument.value">2500</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="userProgress_max" elementType="Argument">
            <stringProp name="Argument.name">userProgress_max</stringProp>
            <stringProp name="Argument.value">30000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="auth_url" elementType="Argument">
            <stringProp name="Argument.name">auth_url</stringProp>
            <stringProp name="Argument.value">${__P(auth_url,auth.comprodls.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="product_url" elementType="Argument">
            <stringProp name="Argument.name">product_url</stringProp>
            <stringProp name="Argument.value">${__P(product_url,product.comprodls.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="collab_url" elementType="Argument">
            <stringProp name="Argument.name">collab_url</stringProp>
            <stringProp name="Argument.value">${__P(collab_url,collab.comprodls.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="xapi_url" elementType="Argument">
            <stringProp name="Argument.name">xapi_url</stringProp>
            <stringProp name="Argument.value">${__P(xapi_url,xapi.comprodls.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="analytics_url" elementType="Argument">
            <stringProp name="Argument.name">analytics_url</stringProp>
            <stringProp name="Argument.value">${__P(analytics_url,analytics.comprodls.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <kg.apc.jmeter.threads.SteppingThreadGroup guiclass="kg.apc.jmeter.threads.SteppingThreadGroupGui" testclass="kg.apc.jmeter.threads.SteppingThreadGroup" testname="DLS Reader Scenario" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="ThreadGroup.num_threads">${__P(Num_of_users)}</stringProp>
        <stringProp name="Threads initial delay">0</stringProp>
        <stringProp name="Start users count">${__P(Start_users_count,1)}</stringProp>
        <stringProp name="Start users count burst">0</stringProp>
        <stringProp name="Start users period">${__P(Start_users_period,1)}</stringProp>
        <stringProp name="Stop users count">${__P(Stop_users_count,1)}</stringProp>
        <stringProp name="Stop users period">${__P(Stop_users_period,1)}</stringProp>
        <stringProp name="flighttime">${__P(Steady_state_duration,1)}</stringProp>
        <stringProp name="rampUp">0</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
      </kg.apc.jmeter.threads.SteppingThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="A Student  logs in to Reader Compro DLS - Once per User" enabled="true"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">output_user_1.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">username,email</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Login" enabled="true">
            <stringProp name="IncludeController.includepath">Get access token for a user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
          <stringProp name="IfController.condition">&quot;${access_token}&quot; !=&quot;ACCESS_TOKEN_NOT_FOUND&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="A Student  navigates to dashboard Page" enabled="true"/>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get User By UserId" enabled="true">
              <stringProp name="IncludeController.includepath">Get user by userid.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get All Products" enabled="true">
              <stringProp name="IncludeController.includepath">Get list of all products for a user.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get My Activity" enabled="true">
              <stringProp name="IncludeController.includepath">Get time series based number of attempts made by a user in a product.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time Before Selecting a Product " enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${minWait}</stringProp>
              <stringProp name="RandomTimer.range">${productSummary_max}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="A Student selects a product" enabled="true"/>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Id of Selected Product" enabled="true">
              <stringProp name="IncludeController.includepath">Get product by productid.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Reading State" enabled="true">
              <stringProp name="IncludeController.includepath">Get product analytic summary for a user.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get analytics for learning_objective" enabled="true">
              <stringProp name="IncludeController.includepath">Get analytic for product learning-objectives for a user.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get analytics for tag" enabled="true">
              <stringProp name="IncludeController.includepath">Get analytic for product tags for a user.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time Before Start/Resume Reading a Product " enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${minWait}</stringProp>
              <stringProp name="RandomTimer.range">${productToc_max}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="A Student start/resume reading the selected product" enabled="true"/>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Product TOC and User Progress" enabled="true">
              <stringProp name="IncludeController.includepath">Get analytic for product items for a user.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time Before Opening Right Pane" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${minWait}</stringProp>
              <stringProp name="RandomTimer.range">${productRightpane_max}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="A Student opens right pane of the selected product" enabled="true"/>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get analytics for Activity present in progress tab of right pane" enabled="true">
              <stringProp name="IncludeController.includepath">Get time series based timespent by a user on a product.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get analytics for Tags present in progress tab of right pane" enabled="true">
              <stringProp name="IncludeController.includepath">Get analytic for product tags for a user.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get analytics for Learning Objectives present in progress tab of right pane" enabled="true">
              <stringProp name="IncludeController.includepath">Get analytic for product learning-objectives for a user.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Wait time before going to Activity stream" enabled="true">
              <stringProp name="ConstantTimer.delay">${minWait}</stringProp>
              <stringProp name="RandomTimer.range">${activityStream_max}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all post of selected product present in Activity Stream tab of right pane" enabled="true">
              <stringProp name="IncludeController.includepath">Get post by productId.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think time before going to Reader" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${minWait}</stringProp>
              <stringProp name="RandomTimer.range">${reader_max}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="A Student simulate reading (multiple page) of 30sec and post the progress" enabled="true"/>
          <hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Post student&apos;s progress" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">10</stringProp>
            </LoopController>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="delimiter">,</stringProp>
                <stringProp name="fileEncoding"></stringProp>
                <stringProp name="filename">product_sections.csv</stringProp>
                <boolProp name="quotedData">true</boolProp>
                <boolProp name="recycle">true</boolProp>
                <stringProp name="shareMode">shareMode.thread</stringProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="variableNames">task</stringProp>
              </CSVDataSet>
              <hashTree/>
              <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="false">
                <stringProp name="cacheKey"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">if(Integer.parseInt(vars.get(&quot;sectionCounter&quot;))==Integer.parseInt(vars.get(&quot;code_matchNr&quot;))){
  vars.put(&quot;sectionCounter&quot;, Integer.toString(0));
} 
vars.put(&quot;sectionCounter&quot;, Integer.toString(Integer.parseInt(vars.get(&quot;sectionCounter&quot;))+1));

   </stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PreProcessor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Wait Time Before Posting TimeSpent" enabled="true">
                <stringProp name="ConstantTimer.delay">${userProgress_max}</stringProp>
              </ConstantTimer>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Post student&apos;s reading progress" enabled="true">
                <stringProp name="IncludeController.includepath">Add a new statement.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time Before Opening Right Pane of Selected Product To Check the Progress" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${minWait}</stringProp>
              <stringProp name="RandomTimer.range">${productRightpane_max}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="A Student again opens right pane to check the progress and post multiple message for selected product" enabled="true"/>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get analytics for Activity present in progress tab of right pane" enabled="true">
              <stringProp name="IncludeController.includepath">Get time series based timespent by a user on a product.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get analytics for Tags present in progress tab of right pane" enabled="true">
              <stringProp name="IncludeController.includepath">Get analytic for product tags for a user.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get analytics for Learning Objectives present in progress tab of right pane" enabled="true">
              <stringProp name="IncludeController.includepath">Get analytic for product learning-objectives for a user.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Wait time before posting comments in a product" enabled="false">
              <stringProp name="ConstantTimer.delay">${minWait}</stringProp>
              <stringProp name="RandomTimer.range">${activityStream_max}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Post message in product" enabled="false">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">1</stringProp>
            </LoopController>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Wait before posting comment" enabled="true">
                <stringProp name="ConstantTimer.delay">${postComment_max}</stringProp>
              </ConstantTimer>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Post message in product using Activity Stream of right pane" enabled="true">
                <stringProp name="IncludeController.includepath">Post in a product.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time Before Going Back To Dashboard" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${minWait}</stringProp>
              <stringProp name="RandomTimer.range">${dashboard_max}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="A Student again navigates to Dashboard Page" enabled="true"/>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get User By UserId" enabled="true">
              <stringProp name="IncludeController.includepath">Get user by userid.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get All Products" enabled="true">
              <stringProp name="IncludeController.includepath">Get list of all products for a user.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get My Activity" enabled="true">
              <stringProp name="IncludeController.includepath">Get time series based number of attempts made by a user in a product.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
