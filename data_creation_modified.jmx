<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="ComproDLS Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Performance Test Data Setup" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - NEW Alpha" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="startTime" elementType="Argument">
              <stringProp name="Argument.name">startTime</stringProp>
              <stringProp name="Argument.value">1587361481394</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="minWait" elementType="Argument">
              <stringProp name="Argument.name">minWait</stringProp>
              <stringProp name="Argument.value">1000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="maxWait" elementType="Argument">
              <stringProp name="Argument.name">maxWait</stringProp>
              <stringProp name="Argument.value">1500</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invitationwait" elementType="Argument">
              <stringProp name="Argument.name">invitationwait</stringProp>
              <stringProp name="Argument.value">20000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="asyncWait" elementType="Argument">
              <stringProp name="Argument.name">asyncWait</stringProp>
              <stringProp name="Argument.value">8000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userProgress_max" elementType="Argument">
              <stringProp name="Argument.name">userProgress_max</stringProp>
              <stringProp name="Argument.value">2000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userProgress_max_assignedpaths" elementType="Argument">
              <stringProp name="Argument.name">userProgress_max_assignedpaths</stringProp>
              <stringProp name="Argument.value">5000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="learning_progress" elementType="Argument">
              <stringProp name="Argument.name">learning_progress</stringProp>
              <stringProp name="Argument.value">12</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assigned_path_class_count" elementType="Argument">
              <stringProp name="Argument.name">assigned_path_class_count</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="host_url" elementType="Argument">
              <stringProp name="Argument.name">host_url</stringProp>
              <stringProp name="Argument.value">${__P(auth_url,dls-cup-alpha-2093819659.us-west-2.elb.amazonaws.com)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="date" elementType="Argument">
              <stringProp name="Argument.name">date</stringProp>
              <stringProp name="Argument.value">${__time(YMDHMS)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="testrun" elementType="Argument">
              <stringProp name="Argument.name">testrun</stringProp>
              <stringProp name="Argument.value">${__P(run_id,Perf)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="accountid" elementType="Argument">
              <stringProp name="Argument.name">accountid</stringProp>
              <stringProp name="Argument.value">${__P(Account_id,cup1)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="spacecode" elementType="Argument">
              <stringProp name="Argument.name">spacecode</stringProp>
              <stringProp name="Argument.value">${__P(space_code,PRF-ALP-ONE)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="spacecode2" elementType="Argument">
              <stringProp name="Argument.name">spacecode2</stringProp>
              <stringProp name="Argument.value">${__P(space_code,PRF-ALP-TWO)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="orgid" elementType="Argument">
              <stringProp name="Argument.name">orgid</stringProp>
              <stringProp name="Argument.value">${__P(orgid,perf-test1-alpha)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="shorgid" elementType="Argument">
              <stringProp name="Argument.name">shorgid</stringProp>
              <stringProp name="Argument.value">${__P(shorgid,sh_alpha_cup1_1)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ext_product_id" elementType="Argument">
              <stringProp name="Argument.name">ext_product_id</stringProp>
              <stringProp name="Argument.value">${__P(product_code,9781108414098)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ext_product_id2" elementType="Argument">
              <stringProp name="Argument.name">ext_product_id2</stringProp>
              <stringProp name="Argument.value">${__P(product_code,9781108414142)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="productcode" elementType="Argument">
              <stringProp name="Argument.name">productcode</stringProp>
              <stringProp name="Argument.value">${__P(product_code,evpel1)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="productcode2" elementType="Argument">
              <stringProp name="Argument.name">productcode2</stringProp>
              <stringProp name="Argument.value">${__P(product_code,evpel2)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="verb" elementType="Argument">
              <stringProp name="Argument.name">verb</stringProp>
              <stringProp name="Argument.value">${__P(verb_type,launched)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="product-enddate" elementType="Argument">
              <stringProp name="Argument.name">product-enddate</stringProp>
              <stringProp name="Argument.value">${__P(end_date,1575719566000)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="classcodeinst1_DONOTUSE" elementType="Argument">
              <stringProp name="Argument.name">classcodeinst1_DONOTUSE</stringProp>
              <stringProp name="Argument.value">${__P(class_code,G4cb-UNcT)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="classcode2_DONOTUSE" elementType="Argument">
              <stringProp name="Argument.name">classcode2_DONOTUSE</stringProp>
              <stringProp name="Argument.value">${__P(class_code,YeaG-DVJZ)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="classname" elementType="Argument">
              <stringProp name="Argument.name">classname</stringProp>
              <stringProp name="Argument.value">${__P(classname,newclass)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="multipleUsersForEnrollment" elementType="Argument">
              <stringProp name="Argument.name">multipleUsersForEnrollment</stringProp>
              <stringProp name="Argument.value">${__P(userset,&quot;5caebf1b-810b-11e9-89b9-0242ac110002&quot;)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="pinstance" elementType="Argument">
              <stringProp name="Argument.name">pinstance</stringProp>
              <stringProp name="Argument.value">${__P(InstanceID,1)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bundle-code" elementType="Argument">
              <stringProp name="Argument.name">bundle-code</stringProp>
              <stringProp name="Argument.value">${__P(bundle-code,evpel1_bundle)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bundle-code2" elementType="Argument">
              <stringProp name="Argument.name">bundle-code2</stringProp>
              <stringProp name="Argument.value">${__P(bundle-code,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assignmentstartdate" elementType="Argument">
              <stringProp name="Argument.name">assignmentstartdate</stringProp>
              <stringProp name="Argument.value">${__time(,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assignmentenddate" elementType="Argument">
              <stringProp name="Argument.name">assignmentenddate</stringProp>
              <stringProp name="Argument.value">${__timeShift(,,P180D,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assigned_path_id" elementType="Argument">
              <stringProp name="Argument.name">assigned_path_id</stringProp>
              <stringProp name="Argument.value">NOT_FOUND</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="counter" elementType="Argument">
              <stringProp name="Argument.name">counter</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assignmentlearningprogress" elementType="Argument">
              <stringProp name="Argument.name">assignmentlearningprogress</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assignmentlearningprogressscorable" elementType="Argument">
              <stringProp name="Argument.name">assignmentlearningprogressscorable</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invitationorgid" elementType="Argument">
              <stringProp name="Argument.name">invitationorgid</stringProp>
              <stringProp name="Argument.value">${__P(invitationorgid,integ-test1-alpha)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode1" elementType="Argument">
              <stringProp name="Argument.name">itemcode1</stringProp>
              <stringProp name="Argument.value">${__P(itemcode,1544521486954/1544521507623/1544521559147)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode2" elementType="Argument">
              <stringProp name="Argument.name">itemcode2</stringProp>
              <stringProp name="Argument.value">1544521486954/1544521507623/1544521594726</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode3" elementType="Argument">
              <stringProp name="Argument.name">itemcode3</stringProp>
              <stringProp name="Argument.value">1544521486954/1544521507623/1544521622470</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode4" elementType="Argument">
              <stringProp name="Argument.name">itemcode4</stringProp>
              <stringProp name="Argument.value">1544521486954/1544521507623/1544521637851</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode5" elementType="Argument">
              <stringProp name="Argument.name">itemcode5</stringProp>
              <stringProp name="Argument.value">1544521486954/1544521889598/1544522141435</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="startDate" elementType="Argument">
              <stringProp name="Argument.name">startDate</stringProp>
              <stringProp name="Argument.value">${__time(,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="endDate" elementType="Argument">
              <stringProp name="Argument.name">endDate</stringProp>
              <stringProp name="Argument.value">${__timeShift(,,P999D,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="workflow_type" elementType="Argument">
              <stringProp name="Argument.name">workflow_type</stringProp>
              <stringProp name="Argument.value">institution_request</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="status" elementType="Argument">
              <stringProp name="Argument.name">status</stringProp>
              <stringProp name="Argument.value">pending</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="productGroups" elementType="Argument">
              <stringProp name="Argument.name">productGroups</stringProp>
              <stringProp name="Argument.value">false</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="productType" elementType="Argument">
              <stringProp name="Argument.name">productType</stringProp>
              <stringProp name="Argument.value">single</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="task" elementType="Argument">
              <stringProp name="Argument.name">task</stringProp>
              <stringProp name="Argument.value">1544521486954/1544521507623/1544521559147</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - NEW Alpha" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="startTime" elementType="Argument">
              <stringProp name="Argument.name">startTime</stringProp>
              <stringProp name="Argument.value">1587361481394</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="minWait" elementType="Argument">
              <stringProp name="Argument.name">minWait</stringProp>
              <stringProp name="Argument.value">1000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="maxWait" elementType="Argument">
              <stringProp name="Argument.name">maxWait</stringProp>
              <stringProp name="Argument.value">1500</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invitationwait" elementType="Argument">
              <stringProp name="Argument.name">invitationwait</stringProp>
              <stringProp name="Argument.value">20000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invitationwait1" elementType="Argument">
              <stringProp name="Argument.name">invitationwait1</stringProp>
              <stringProp name="Argument.value">10000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="asyncWait" elementType="Argument">
              <stringProp name="Argument.name">asyncWait</stringProp>
              <stringProp name="Argument.value">8000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="asyncWait1" elementType="Argument">
              <stringProp name="Argument.name">asyncWait1</stringProp>
              <stringProp name="Argument.value">6000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userProgress_max" elementType="Argument">
              <stringProp name="Argument.name">userProgress_max</stringProp>
              <stringProp name="Argument.value">2000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userProgress_max_assignedpaths" elementType="Argument">
              <stringProp name="Argument.name">userProgress_max_assignedpaths</stringProp>
              <stringProp name="Argument.value">5000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="learningprogressnps" elementType="Argument">
              <stringProp name="Argument.name">learningprogressnps</stringProp>
              <stringProp name="Argument.value">12</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="learning_progress" elementType="Argument">
              <stringProp name="Argument.name">learning_progress</stringProp>
              <stringProp name="Argument.value">16</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="group_learning_progress" elementType="Argument">
              <stringProp name="Argument.name">group_learning_progress</stringProp>
              <stringProp name="Argument.value">12</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="group_learning_progressps" elementType="Argument">
              <stringProp name="Argument.name">group_learning_progressps</stringProp>
              <stringProp name="Argument.value">16</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assignmentlearningprogressscorable" elementType="Argument">
              <stringProp name="Argument.name">assignmentlearningprogressscorable</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assignmentlearningprogress" elementType="Argument">
              <stringProp name="Argument.name">assignmentlearningprogress</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assigned_path_class_count" elementType="Argument">
              <stringProp name="Argument.name">assigned_path_class_count</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="host_url" elementType="Argument">
              <stringProp name="Argument.name">host_url</stringProp>
              <stringProp name="Argument.value">${__P(auth_url,dls-cup-alpha-2093819659.us-west-2.elb.amazonaws.com)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="date" elementType="Argument">
              <stringProp name="Argument.name">date</stringProp>
              <stringProp name="Argument.value">${__time(YMDHMS)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="testrun" elementType="Argument">
              <stringProp name="Argument.name">testrun</stringProp>
              <stringProp name="Argument.value">${__P(run_id,Perf)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="accountid" elementType="Argument">
              <stringProp name="Argument.name">accountid</stringProp>
              <stringProp name="Argument.value">${__P(Account_id,cup1)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="spacecode" elementType="Argument">
              <stringProp name="Argument.name">spacecode</stringProp>
              <stringProp name="Argument.value">${__P(space_code,PRF-ALP-ONE)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="spacecode2" elementType="Argument">
              <stringProp name="Argument.name">spacecode2</stringProp>
              <stringProp name="Argument.value">${__P(space_code,PRF-ALP-TWO)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="spacekey" elementType="Argument">
              <stringProp name="Argument.name">spacekey</stringProp>
              <stringProp name="Argument.value">org_perf-test1-alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="orgid" elementType="Argument">
              <stringProp name="Argument.name">orgid</stringProp>
              <stringProp name="Argument.value">${__P(orgid,perf-test1-alpha)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="shorgid" elementType="Argument">
              <stringProp name="Argument.name">shorgid</stringProp>
              <stringProp name="Argument.value">${__P(shorgid,sh_alpha_cup1_1)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ext_product_id" elementType="Argument">
              <stringProp name="Argument.name">ext_product_id</stringProp>
              <stringProp name="Argument.value">${__P(product_code,9781108414098)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ext_product_id2" elementType="Argument">
              <stringProp name="Argument.name">ext_product_id2</stringProp>
              <stringProp name="Argument.value">${__P(product_code,9781108414142)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="productcode" elementType="Argument">
              <stringProp name="Argument.name">productcode</stringProp>
              <stringProp name="Argument.value">${__P(product_code,evpel1)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="productcode2" elementType="Argument">
              <stringProp name="Argument.name">productcode2</stringProp>
              <stringProp name="Argument.value">${__P(product_code,evpel2)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="verb" elementType="Argument">
              <stringProp name="Argument.name">verb</stringProp>
              <stringProp name="Argument.value">${__P(verb_type,launched)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="product-enddate" elementType="Argument">
              <stringProp name="Argument.name">product-enddate</stringProp>
              <stringProp name="Argument.value">${__P(end_date,1575719566000)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="classcodeinst1_DONOTUSE" elementType="Argument">
              <stringProp name="Argument.name">classcodeinst1_DONOTUSE</stringProp>
              <stringProp name="Argument.value">${__P(class_code,G4cb-UNcT)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="classcode2_DONOTUSE" elementType="Argument">
              <stringProp name="Argument.name">classcode2_DONOTUSE</stringProp>
              <stringProp name="Argument.value">${__P(class_code,YeaG-DVJZ)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="classname" elementType="Argument">
              <stringProp name="Argument.name">classname</stringProp>
              <stringProp name="Argument.value">${__P(classname,newclass)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="multipleUsersForEnrollment" elementType="Argument">
              <stringProp name="Argument.name">multipleUsersForEnrollment</stringProp>
              <stringProp name="Argument.value">${__P(userset,&quot;762d9ca7-363d-4be7-8e6f-d9ec9cf196ff&quot;)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="pinstance" elementType="Argument">
              <stringProp name="Argument.name">pinstance</stringProp>
              <stringProp name="Argument.value">${__P(InstanceID,1)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bundle-code" elementType="Argument">
              <stringProp name="Argument.name">bundle-code</stringProp>
              <stringProp name="Argument.value">${__P(bundle-code,evpel1_bundle)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bundle-code2" elementType="Argument">
              <stringProp name="Argument.name">bundle-code2</stringProp>
              <stringProp name="Argument.value">${__P(bundle-code,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assignmentstartdate" elementType="Argument">
              <stringProp name="Argument.name">assignmentstartdate</stringProp>
              <stringProp name="Argument.value">${__time(,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assignmentenddate" elementType="Argument">
              <stringProp name="Argument.name">assignmentenddate</stringProp>
              <stringProp name="Argument.value">${__timeShift(,,P1820D,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assigned_path_id" elementType="Argument">
              <stringProp name="Argument.name">assigned_path_id</stringProp>
              <stringProp name="Argument.value">NOT_FOUND</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="counter" elementType="Argument">
              <stringProp name="Argument.name">counter</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invitationorgid" elementType="Argument">
              <stringProp name="Argument.name">invitationorgid</stringProp>
              <stringProp name="Argument.value">${__P(invitationorgid,perf-test1-alpha)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode1" elementType="Argument">
              <stringProp name="Argument.name">itemcode1</stringProp>
              <stringProp name="Argument.value">${__P(itemcode,1544521486954/1544521507623/1544521559147)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode2" elementType="Argument">
              <stringProp name="Argument.name">itemcode2</stringProp>
              <stringProp name="Argument.value">1544521486954/1544521507623/1544521594726</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode3" elementType="Argument">
              <stringProp name="Argument.name">itemcode3</stringProp>
              <stringProp name="Argument.value">1544521486954/1544521507623/1544521622470</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode4" elementType="Argument">
              <stringProp name="Argument.name">itemcode4</stringProp>
              <stringProp name="Argument.value">1544521486954/1544521507623/1544521637851</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode5" elementType="Argument">
              <stringProp name="Argument.name">itemcode5</stringProp>
              <stringProp name="Argument.value">1544521486954/1544521889598/1544522141435</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="startDate" elementType="Argument">
              <stringProp name="Argument.name">startDate</stringProp>
              <stringProp name="Argument.value">${__time(,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="endDate" elementType="Argument">
              <stringProp name="Argument.name">endDate</stringProp>
              <stringProp name="Argument.value">${__timeShift(,,P1825D,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="workflow_type" elementType="Argument">
              <stringProp name="Argument.name">workflow_type</stringProp>
              <stringProp name="Argument.value">institution_request</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="status" elementType="Argument">
              <stringProp name="Argument.name">status</stringProp>
              <stringProp name="Argument.value">pending</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="productGroups" elementType="Argument">
              <stringProp name="Argument.name">productGroups</stringProp>
              <stringProp name="Argument.value">false</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="productType" elementType="Argument">
              <stringProp name="Argument.name">productType</stringProp>
              <stringProp name="Argument.value">single</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="task" elementType="Argument">
              <stringProp name="Argument.name">task</stringProp>
              <stringProp name="Argument.value">1544521486954/1544521507623/1544521559147</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode" elementType="Argument">
              <stringProp name="Argument.name">itemcode</stringProp>
              <stringProp name="Argument.value">1544521486954/1544521507623/1544521559147</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="grouptask" elementType="Argument">
              <stringProp name="Argument.name">grouptask</stringProp>
              <stringProp name="Argument.value">1591701928122/1591701946681/1592291282828</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="multiproduct1" elementType="Argument">
              <stringProp name="Argument.name">multiproduct1</stringProp>
              <stringProp name="Argument.value">perf_alpha_pe1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="multiproduct2" elementType="Argument">
              <stringProp name="Argument.name">multiproduct2</stringProp>
              <stringProp name="Argument.value">perf_alpha_pw1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="group-bundle-code" elementType="Argument">
              <stringProp name="Argument.name">group-bundle-code</stringProp>
              <stringProp name="Argument.value">perfalpha_bundle1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="multiproductid1" elementType="Argument">
              <stringProp name="Argument.name">multiproductid1</stringProp>
              <stringProp name="Argument.value">perfpealpha1234</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="multiproductid2" elementType="Argument">
              <stringProp name="Argument.name">multiproductid2</stringProp>
              <stringProp name="Argument.value">perfpwalpha1234</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ielts_bundle-code" elementType="Argument">
              <stringProp name="Argument.name">ielts_bundle-code</stringProp>
              <stringProp name="Argument.value">${__P(bundle-code,ielts_bundle)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ielts_productcode" elementType="Argument">
              <stringProp name="Argument.name">ielts_productcode</stringProp>
              <stringProp name="Argument.value">${__P(product_code,ielts_pe)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ielts_ext_product_id" elementType="Argument">
              <stringProp name="Argument.name">ielts_ext_product_id</stringProp>
              <stringProp name="Argument.value">${__P(product_code,9781108414098)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ielts_itemcode" elementType="Argument">
              <stringProp name="Argument.name">ielts_itemcode</stringProp>
              <stringProp name="Argument.value">1599458729600</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="task1038" elementType="Argument">
              <stringProp name="Argument.name">task1038</stringProp>
              <stringProp name="Argument.value">1544521486954/1544521507623/1544521559147</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ebookproductcode" elementType="Argument">
              <stringProp name="Argument.name">ebookproductcode</stringProp>
              <stringProp name="Argument.value">${__P(product_code,cqaperftestebook)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ebook_bundle-code" elementType="Argument">
              <stringProp name="Argument.name">ebook_bundle-code</stringProp>
              <stringProp name="Argument.value">${__P(bundle-code,evpel1_bundle)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="pageNum" elementType="Argument">
              <stringProp name="Argument.name">pageNum</stringProp>
              <stringProp name="Argument.value">14</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="pageNum_read" elementType="Argument">
              <stringProp name="Argument.name">pageNum_read</stringProp>
              <stringProp name="Argument.value">14</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="pageNavigationPause" elementType="Argument">
              <stringProp name="Argument.name">pageNavigationPause</stringProp>
              <stringProp name="Argument.value">100</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="pageNavigationLoopCount" elementType="Argument">
              <stringProp name="Argument.name">pageNavigationLoopCount</stringProp>
              <stringProp name="Argument.value">5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="AddNotesLoopCount" elementType="Argument">
              <stringProp name="Argument.name">AddNotesLoopCount</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="AddDrawingLoopCount" elementType="Argument">
              <stringProp name="Argument.name">AddDrawingLoopCount</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="record_size" elementType="Argument">
              <stringProp name="Argument.name">record_size</stringProp>
              <stringProp name="Argument.value">20</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="orgid_es" elementType="Argument">
              <stringProp name="Argument.name">orgid_es</stringProp>
              <stringProp name="Argument.value">${__P(orgid_es,perf-test1-alpha)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="extuseridGetDocument" elementType="Argument">
              <stringProp name="Argument.name">extuseridGetDocument</stringProp>
              <stringProp name="Argument.value">tch_20200602-104742_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="folderid_alldocs" elementType="Argument">
              <stringProp name="Argument.name">folderid_alldocs</stringProp>
              <stringProp name="Argument.value">library/umbrella</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="classidGetDocument" elementType="Argument">
              <stringProp name="Argument.name">classidGetDocument</stringProp>
              <stringProp name="Argument.value">7388dde7-8eac-11ea-840b-0242ac110002</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="extUserIdHideToc" elementType="Argument">
              <stringProp name="Argument.name">extUserIdHideToc</stringProp>
              <stringProp name="Argument.value">std_1616493208993_6</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userProgress_min_1011" elementType="Argument">
              <stringProp name="Argument.name">userProgress_min_1011</stringProp>
              <stringProp name="Argument.value">1500</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userProgress_max_1011" elementType="Argument">
              <stringProp name="Argument.name">userProgress_max_1011</stringProp>
              <stringProp name="Argument.value">1000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="learningprogressnps_1011" elementType="Argument">
              <stringProp name="Argument.name">learningprogressnps_1011</stringProp>
              <stringProp name="Argument.value">16</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userProgress_min_1038nps" elementType="Argument">
              <stringProp name="Argument.name">userProgress_min_1038nps</stringProp>
              <stringProp name="Argument.value">1700</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userProgress_max_1038nps" elementType="Argument">
              <stringProp name="Argument.name">userProgress_max_1038nps</stringProp>
              <stringProp name="Argument.value">800</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ruleType" elementType="Argument">
              <stringProp name="Argument.name">ruleType</stringProp>
              <stringProp name="Argument.value">content-access</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="endTimeForRule" elementType="Argument">
              <stringProp name="Argument.name">endTimeForRule</stringProp>
              <stringProp name="Argument.value">${__timeShift(,,PT9M,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - Multi Umbrella" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="multiProduct1" elementType="Argument">
              <stringProp name="Argument.name">multiProduct1</stringProp>
              <stringProp name="Argument.value">perfb1pe1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="multiProduct2" elementType="Argument">
              <stringProp name="Argument.name">multiProduct2</stringProp>
              <stringProp name="Argument.value">perfb1pe2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="multiProduct3" elementType="Argument">
              <stringProp name="Argument.name">multiProduct3</stringProp>
              <stringProp name="Argument.value">perfb1test</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="multiProduct4" elementType="Argument">
              <stringProp name="Argument.name">multiProduct4</stringProp>
              <stringProp name="Argument.value">perfb2pe2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="multiProduct5" elementType="Argument">
              <stringProp name="Argument.name">multiProduct5</stringProp>
              <stringProp name="Argument.value">perfb2pe1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="multiProduct6" elementType="Argument">
              <stringProp name="Argument.name">multiProduct6</stringProp>
              <stringProp name="Argument.value">perfb3pe1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="multiProduct7" elementType="Argument">
              <stringProp name="Argument.name">multiProduct7</stringProp>
              <stringProp name="Argument.value">perfb3pe2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="multiProduct8" elementType="Argument">
              <stringProp name="Argument.name">multiProduct8</stringProp>
              <stringProp name="Argument.value">perfb3test</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="multiProduct9" elementType="Argument">
              <stringProp name="Argument.name">multiProduct9</stringProp>
              <stringProp name="Argument.value">perfb4pe1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="multiProduct10" elementType="Argument">
              <stringProp name="Argument.name">multiProduct10</stringProp>
              <stringProp name="Argument.value">perfb4pe2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="multiProduct12-DNU" elementType="Argument">
              <stringProp name="Argument.name">multiProduct12-DNU</stringProp>
              <stringProp name="Argument.value">perfb3rb</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="multiProduct13-DNU" elementType="Argument">
              <stringProp name="Argument.name">multiProduct13-DNU</stringProp>
              <stringProp name="Argument.value">perfb3pplus</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="multiProduct4-DNU" elementType="Argument">
              <stringProp name="Argument.name">multiProduct4-DNU</stringProp>
              <stringProp name="Argument.value">perfb1rb</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="multiProduct8-DNU" elementType="Argument">
              <stringProp name="Argument.name">multiProduct8-DNU</stringProp>
              <stringProp name="Argument.value">perfb2rb</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="multiProduct7--DNU" elementType="Argument">
              <stringProp name="Argument.name">multiProduct7--DNU</stringProp>
              <stringProp name="Argument.value">perfb2ebook</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="multiProduct16-DNU" elementType="Argument">
              <stringProp name="Argument.name">multiProduct16-DNU</stringProp>
              <stringProp name="Argument.value">perfb4ebook</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="multiProduct17-DNU" elementType="Argument">
              <stringProp name="Argument.name">multiProduct17-DNU</stringProp>
              <stringProp name="Argument.value">perfb4rb</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="multiProduct18-DNU" elementType="Argument">
              <stringProp name="Argument.name">multiProduct18-DNU</stringProp>
              <stringProp name="Argument.value">perfb4pplus</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - NEW Alpha" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="startTime" elementType="Argument">
              <stringProp name="Argument.name">startTime</stringProp>
              <stringProp name="Argument.value">1587361481394</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="minWait" elementType="Argument">
              <stringProp name="Argument.name">minWait</stringProp>
              <stringProp name="Argument.value">1000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="maxWait" elementType="Argument">
              <stringProp name="Argument.name">maxWait</stringProp>
              <stringProp name="Argument.value">1500</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invitationwait" elementType="Argument">
              <stringProp name="Argument.name">invitationwait</stringProp>
              <stringProp name="Argument.value">20000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="asyncWait" elementType="Argument">
              <stringProp name="Argument.name">asyncWait</stringProp>
              <stringProp name="Argument.value">8000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userProgress_max" elementType="Argument">
              <stringProp name="Argument.name">userProgress_max</stringProp>
              <stringProp name="Argument.value">2000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userProgress_max_assignedpaths" elementType="Argument">
              <stringProp name="Argument.name">userProgress_max_assignedpaths</stringProp>
              <stringProp name="Argument.value">5000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="learning_progress" elementType="Argument">
              <stringProp name="Argument.name">learning_progress</stringProp>
              <stringProp name="Argument.value">12</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assigned_path_class_count" elementType="Argument">
              <stringProp name="Argument.name">assigned_path_class_count</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="auth_url" elementType="Argument">
              <stringProp name="Argument.name">auth_url</stringProp>
              <stringProp name="Argument.value">${__P(auth_url,dls-cup-alpha-2093819659.us-west-2.elb.amazonaws.com/lb-auth)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="product_url" elementType="Argument">
              <stringProp name="Argument.name">product_url</stringProp>
              <stringProp name="Argument.value">${__P(product_url,dls-cup-alpha-2093819659.us-west-2.elb.amazonaws.com/lb-product)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="collab_url" elementType="Argument">
              <stringProp name="Argument.name">collab_url</stringProp>
              <stringProp name="Argument.value">${__P(collab_url,dls-cup-alpha-2093819659.us-west-2.elb.amazonaws.com/lb-collab)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="xapi_url" elementType="Argument">
              <stringProp name="Argument.name">xapi_url</stringProp>
              <stringProp name="Argument.value">${__P(xapi_url,dls-cup-alpha-2093819659.us-west-2.elb.amazonaws.com/lb-xapi)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="analytics_url" elementType="Argument">
              <stringProp name="Argument.name">analytics_url</stringProp>
              <stringProp name="Argument.value">${__P(analytics_url,dls-cup-alpha-2093819659.us-west-2.elb.amazonaws.com/lb-analytics)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="activity_url" elementType="Argument">
              <stringProp name="Argument.name">activity_url</stringProp>
              <stringProp name="Argument.value">${__P(activity_url,dls-cup-alpha-2093819659.us-west-2.elb.amazonaws.com/lb-activity)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="pushx_url" elementType="Argument">
              <stringProp name="Argument.name">pushx_url</stringProp>
              <stringProp name="Argument.value">${__P(pushx_url,dls-cup-alpha-2093819659.us-west-2.elb.amazonaws.com/lb-pushx)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="date" elementType="Argument">
              <stringProp name="Argument.name">date</stringProp>
              <stringProp name="Argument.value">${__time(YMDHMS)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="testrun" elementType="Argument">
              <stringProp name="Argument.name">testrun</stringProp>
              <stringProp name="Argument.value">${__P(run_id,Perf)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="accountid" elementType="Argument">
              <stringProp name="Argument.name">accountid</stringProp>
              <stringProp name="Argument.value">${__P(Account_id,cup1)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="spacecode" elementType="Argument">
              <stringProp name="Argument.name">spacecode</stringProp>
              <stringProp name="Argument.value">${__P(space_code,PRF-ALP-ONE)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="spacecode2" elementType="Argument">
              <stringProp name="Argument.name">spacecode2</stringProp>
              <stringProp name="Argument.value">${__P(space_code,PRF-ALP-TWO)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="orgid" elementType="Argument">
              <stringProp name="Argument.name">orgid</stringProp>
              <stringProp name="Argument.value">${__P(orgid,perf-test1-alpha)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="shorgid" elementType="Argument">
              <stringProp name="Argument.name">shorgid</stringProp>
              <stringProp name="Argument.value">${__P(shorgid,sh_alpha_cup1_1)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ext_product_id" elementType="Argument">
              <stringProp name="Argument.name">ext_product_id</stringProp>
              <stringProp name="Argument.value">${__P(product_code,9781108414098)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ext_product_id2" elementType="Argument">
              <stringProp name="Argument.name">ext_product_id2</stringProp>
              <stringProp name="Argument.value">${__P(product_code,9781108414142)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="productcode" elementType="Argument">
              <stringProp name="Argument.name">productcode</stringProp>
              <stringProp name="Argument.value">${__P(product_code,evpel1)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="productcode2" elementType="Argument">
              <stringProp name="Argument.name">productcode2</stringProp>
              <stringProp name="Argument.value">${__P(product_code,evpel2)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode" elementType="Argument">
              <stringProp name="Argument.name">itemcode</stringProp>
              <stringProp name="Argument.value">${__P(itemcode,1528285334091/1528285634672/1528286714281)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode1" elementType="Argument">
              <stringProp name="Argument.name">itemcode1</stringProp>
              <stringProp name="Argument.value">${__P(itemcode,1528285346430/1528285468533/1528288508647)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="task" elementType="Argument">
              <stringProp name="Argument.name">task</stringProp>
              <stringProp name="Argument.value">${__P(task_code,1528285334091/1528285634672/1528286714281)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="verb" elementType="Argument">
              <stringProp name="Argument.name">verb</stringProp>
              <stringProp name="Argument.value">${__P(verb_type,launched)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="product-enddate" elementType="Argument">
              <stringProp name="Argument.name">product-enddate</stringProp>
              <stringProp name="Argument.value">${__P(end_date,1575719566000)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="classcodeinst1_DONOTUSE" elementType="Argument">
              <stringProp name="Argument.name">classcodeinst1_DONOTUSE</stringProp>
              <stringProp name="Argument.value">${__P(class_code,G4cb-UNcT)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="classcode2_DONOTUSE" elementType="Argument">
              <stringProp name="Argument.name">classcode2_DONOTUSE</stringProp>
              <stringProp name="Argument.value">${__P(class_code,YeaG-DVJZ)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="classname" elementType="Argument">
              <stringProp name="Argument.name">classname</stringProp>
              <stringProp name="Argument.value">${__P(classname,newclass)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="multipleUsersForEnrollment" elementType="Argument">
              <stringProp name="Argument.name">multipleUsersForEnrollment</stringProp>
              <stringProp name="Argument.value">${__P(userset,&quot;5caebf1b-810b-11e9-89b9-0242ac110002&quot;)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="pinstance" elementType="Argument">
              <stringProp name="Argument.name">pinstance</stringProp>
              <stringProp name="Argument.value">${__P(InstanceID,1)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bundle-code" elementType="Argument">
              <stringProp name="Argument.name">bundle-code</stringProp>
              <stringProp name="Argument.value">${__P(bundle-code,evpel1_bundle)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bundle-code2" elementType="Argument">
              <stringProp name="Argument.name">bundle-code2</stringProp>
              <stringProp name="Argument.value">${__P(bundle-code,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assignmentstartdate" elementType="Argument">
              <stringProp name="Argument.name">assignmentstartdate</stringProp>
              <stringProp name="Argument.value">${__P(Start_Date,1562938362000)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assignmentenddate" elementType="Argument">
              <stringProp name="Argument.name">assignmentenddate</stringProp>
              <stringProp name="Argument.value">${__P(End_Date,1594560762000)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assigned_path_id" elementType="Argument">
              <stringProp name="Argument.name">assigned_path_id</stringProp>
              <stringProp name="Argument.value">NOT_FOUND</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="counter" elementType="Argument">
              <stringProp name="Argument.name">counter</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assignmentlearningprogress" elementType="Argument">
              <stringProp name="Argument.name">assignmentlearningprogress</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="assignmentlearningprogressscorable" elementType="Argument">
              <stringProp name="Argument.name">assignmentlearningprogressscorable</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="invitationorgid" elementType="Argument">
              <stringProp name="Argument.name">invitationorgid</stringProp>
              <stringProp name="Argument.value">${__P(invitationorgid,integ-test1-alpha)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode2" elementType="Argument">
              <stringProp name="Argument.name">itemcode2</stringProp>
              <stringProp name="Argument.value">1528285346430/1528285468533/1528288514105</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode3" elementType="Argument">
              <stringProp name="Argument.name">itemcode3</stringProp>
              <stringProp name="Argument.value">1528285346430/1528285468533/1528288525527</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode4" elementType="Argument">
              <stringProp name="Argument.name">itemcode4</stringProp>
              <stringProp name="Argument.value">1528285346430/1528285468533/1528288536463</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemcode5" elementType="Argument">
              <stringProp name="Argument.name">itemcode5</stringProp>
              <stringProp name="Argument.value">1528285348662/1528285498920/1528288217995</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="startDate" elementType="Argument">
              <stringProp name="Argument.name">startDate</stringProp>
              <stringProp name="Argument.value">${__time(,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="endDate" elementType="Argument">
              <stringProp name="Argument.name">endDate</stringProp>
              <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="workflow_type" elementType="Argument">
              <stringProp name="Argument.name">workflow_type</stringProp>
              <stringProp name="Argument.value">institution_request</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="status" elementType="Argument">
              <stringProp name="Argument.name">status</stringProp>
              <stringProp name="Argument.value">pending</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="productGroups" elementType="Argument">
              <stringProp name="Argument.name">productGroups</stringProp>
              <stringProp name="Argument.value">false</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="productType" elementType="Argument">
              <stringProp name="Argument.name">productType</stringProp>
              <stringProp name="Argument.value">single</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="UDV - Product Category Details" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="cat1pe1" elementType="Argument">
              <stringProp name="Argument.name">cat1pe1</stringProp>
              <stringProp name="Argument.value">evpel1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat1pe2" elementType="Argument">
              <stringProp name="Argument.name">cat1pe2</stringProp>
              <stringProp name="Argument.value">perfb1pe1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat1pe3" elementType="Argument">
              <stringProp name="Argument.name">cat1pe3</stringProp>
              <stringProp name="Argument.value">perfb1pe2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat1pe4" elementType="Argument">
              <stringProp name="Argument.name">cat1pe4</stringProp>
              <stringProp name="Argument.value">perfprod21</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat1pe5" elementType="Argument">
              <stringProp name="Argument.name">cat1pe5</stringProp>
              <stringProp name="Argument.value">perfprod22</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat1pe6" elementType="Argument">
              <stringProp name="Argument.name">cat1pe6</stringProp>
              <stringProp name="Argument.value">perfprod23</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat1pe7" elementType="Argument">
              <stringProp name="Argument.name">cat1pe7</stringProp>
              <stringProp name="Argument.value">perfprod24</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat1pe8" elementType="Argument">
              <stringProp name="Argument.name">cat1pe8</stringProp>
              <stringProp name="Argument.value">perfprod25</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat2pe1" elementType="Argument">
              <stringProp name="Argument.name">cat2pe1</stringProp>
              <stringProp name="Argument.value">perfprod3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat2pe2" elementType="Argument">
              <stringProp name="Argument.name">cat2pe2</stringProp>
              <stringProp name="Argument.value">perfprod4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat2pe3" elementType="Argument">
              <stringProp name="Argument.name">cat2pe3</stringProp>
              <stringProp name="Argument.value">perfprod5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat2pe4" elementType="Argument">
              <stringProp name="Argument.name">cat2pe4</stringProp>
              <stringProp name="Argument.value">perfprod6</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat2pe5" elementType="Argument">
              <stringProp name="Argument.name">cat2pe5</stringProp>
              <stringProp name="Argument.value">perfprod7</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat2pe6" elementType="Argument">
              <stringProp name="Argument.name">cat2pe6</stringProp>
              <stringProp name="Argument.value">perfprod8</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat2pe7" elementType="Argument">
              <stringProp name="Argument.name">cat2pe7</stringProp>
              <stringProp name="Argument.value">perfprod9</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat2pe8" elementType="Argument">
              <stringProp name="Argument.name">cat2pe8</stringProp>
              <stringProp name="Argument.value">perfprod10</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat2pe9" elementType="Argument">
              <stringProp name="Argument.name">cat2pe9</stringProp>
              <stringProp name="Argument.value">perfprod11</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat2pe10" elementType="Argument">
              <stringProp name="Argument.name">cat2pe10</stringProp>
              <stringProp name="Argument.value">perfprod12</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3pe1" elementType="Argument">
              <stringProp name="Argument.name">cat3pe1</stringProp>
              <stringProp name="Argument.value">perfprod5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3pe2" elementType="Argument">
              <stringProp name="Argument.name">cat3pe2</stringProp>
              <stringProp name="Argument.value">perfprod6</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3pe3" elementType="Argument">
              <stringProp name="Argument.name">cat3pe3</stringProp>
              <stringProp name="Argument.value">perfprod7</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3pe4" elementType="Argument">
              <stringProp name="Argument.name">cat3pe4</stringProp>
              <stringProp name="Argument.value">perfprod8</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3pe5" elementType="Argument">
              <stringProp name="Argument.name">cat3pe5</stringProp>
              <stringProp name="Argument.value">perfprod9</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3pe6" elementType="Argument">
              <stringProp name="Argument.name">cat3pe6</stringProp>
              <stringProp name="Argument.value">perfprod10</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3pe7" elementType="Argument">
              <stringProp name="Argument.name">cat3pe7</stringProp>
              <stringProp name="Argument.value">perfprod11</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3pe8" elementType="Argument">
              <stringProp name="Argument.name">cat3pe8</stringProp>
              <stringProp name="Argument.value">perfprod12</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3pe9" elementType="Argument">
              <stringProp name="Argument.name">cat3pe9</stringProp>
              <stringProp name="Argument.value">perfprod86</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3pe10" elementType="Argument">
              <stringProp name="Argument.name">cat3pe10</stringProp>
              <stringProp name="Argument.value">perfprod87</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3pe11" elementType="Argument">
              <stringProp name="Argument.name">cat3pe11</stringProp>
              <stringProp name="Argument.value">perfprod88</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3pe12" elementType="Argument">
              <stringProp name="Argument.name">cat3pe12</stringProp>
              <stringProp name="Argument.value">perfprod89</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3pe13" elementType="Argument">
              <stringProp name="Argument.name">cat3pe13</stringProp>
              <stringProp name="Argument.value">perfprod90</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3pe14" elementType="Argument">
              <stringProp name="Argument.name">cat3pe14</stringProp>
              <stringProp name="Argument.value">perfprod91</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3pe15" elementType="Argument">
              <stringProp name="Argument.name">cat3pe15</stringProp>
              <stringProp name="Argument.value">perfprod92</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4pe1" elementType="Argument">
              <stringProp name="Argument.name">cat4pe1</stringProp>
              <stringProp name="Argument.value">perfprod41</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4pe2" elementType="Argument">
              <stringProp name="Argument.name">cat4pe2</stringProp>
              <stringProp name="Argument.value">perfprod42</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4pe3" elementType="Argument">
              <stringProp name="Argument.name">cat4pe3</stringProp>
              <stringProp name="Argument.value">perfprod43</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4pe4" elementType="Argument">
              <stringProp name="Argument.name">cat4pe4</stringProp>
              <stringProp name="Argument.value">perfprod44</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4pe5" elementType="Argument">
              <stringProp name="Argument.name">cat4pe5</stringProp>
              <stringProp name="Argument.value">perfprod45</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4pe6" elementType="Argument">
              <stringProp name="Argument.name">cat4pe6</stringProp>
              <stringProp name="Argument.value">perfprod46</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4pe7" elementType="Argument">
              <stringProp name="Argument.name">cat4pe7</stringProp>
              <stringProp name="Argument.value">perfprod47</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4pe8" elementType="Argument">
              <stringProp name="Argument.name">cat4pe8</stringProp>
              <stringProp name="Argument.value">perfprod48</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4pe9" elementType="Argument">
              <stringProp name="Argument.name">cat4pe9</stringProp>
              <stringProp name="Argument.value">perfprod49</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4pe10" elementType="Argument">
              <stringProp name="Argument.name">cat4pe10</stringProp>
              <stringProp name="Argument.value">perfprod50</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4pe11" elementType="Argument">
              <stringProp name="Argument.name">cat4pe11</stringProp>
              <stringProp name="Argument.value">perfprod101</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4pe12" elementType="Argument">
              <stringProp name="Argument.name">cat4pe12</stringProp>
              <stringProp name="Argument.value">perfprod102</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4pe13" elementType="Argument">
              <stringProp name="Argument.name">cat4pe13</stringProp>
              <stringProp name="Argument.value">perfprod103</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4pe14" elementType="Argument">
              <stringProp name="Argument.name">cat4pe14</stringProp>
              <stringProp name="Argument.value">perfprod104</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4pe15" elementType="Argument">
              <stringProp name="Argument.name">cat4pe15</stringProp>
              <stringProp name="Argument.value">perfprod105</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat1" elementType="Argument">
              <stringProp name="Argument.name">cat1</stringProp>
              <stringProp name="Argument.value">3B8PE</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat2" elementType="Argument">
              <stringProp name="Argument.name">cat2</stringProp>
              <stringProp name="Argument.value">3B10PE</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat3" elementType="Argument">
              <stringProp name="Argument.name">cat3</stringProp>
              <stringProp name="Argument.value">3B15PE</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cat4" elementType="Argument">
              <stringProp name="Argument.name">cat4</stringProp>
              <stringProp name="Argument.value">2B15PE</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="learningprogressnps_1011_cat1" elementType="Argument">
              <stringProp name="Argument.name">learningprogressnps_1011_cat1</stringProp>
              <stringProp name="Argument.value">40</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="learningprogressnps_1011_cat2" elementType="Argument">
              <stringProp name="Argument.name">learningprogressnps_1011_cat2</stringProp>
              <stringProp name="Argument.value">80</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="learningprogressnps_1011_cat3" elementType="Argument">
              <stringProp name="Argument.name">learningprogressnps_1011_cat3</stringProp>
              <stringProp name="Argument.value">80</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="learningprogressnps_1011_cat4" elementType="Argument">
              <stringProp name="Argument.name">learningprogressnps_1011_cat4</stringProp>
              <stringProp name="Argument.value">800</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="learningprogressnps_1011_cat4_pe1" elementType="Argument">
              <stringProp name="Argument.name">learningprogressnps_1011_cat4_pe1</stringProp>
              <stringProp name="Argument.value">400</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="learningprogressnps_1011_cat4_pe2" elementType="Argument">
              <stringProp name="Argument.name">learningprogressnps_1011_cat4_pe2</stringProp>
              <stringProp name="Argument.value">80</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="common_teacher-1class-class-product-20students" enabled="false">
          <stringProp name="TestPlan.comments">1003</stringProp>
        </GenericController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilename" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilename</stringProp>
                <stringProp name="Argument.value">scenario_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

extuserid = &quot;tch&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;extuserid&quot;, extuserid);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

classname = &quot;class&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;classname&quot;, classname);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="true">
            <stringProp name="IncludeController.includepath">join_a_space_with_space_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [60-65 sec]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">60000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class" enabled="true">
            <stringProp name="IncludeController.includepath">create_new_instructor_led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Samplerteacher" enabled="true">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(&quot;originalteachers_&quot; + vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class" enabled="true">
            <stringProp name="IncludeController.includepath">associate_a_product_with_class2.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [500-530]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">500000</stringProp>
              <stringProp name="RandomTimer.range">30000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create 20 students and join using classcode of current teacher" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">20</stringProp>
          </LoopController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.util.Date;

Date date = new Date();
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;

studentextuserid = &quot;std&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;studentextuserid&quot;, studentextuserid);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-20]" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
                <stringProp name="RandomTimer.range">10000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with product_code and class_code" enabled="true">
              <stringProp name="IncludeController.includepath">join_Spaces_with_product_code_and_class_code.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">timestamp = vars.get(&quot;date&quot;);

FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="teacher-1class-class-product-5assignments" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilename" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilename</stringProp>
                <stringProp name="Argument.value">scenario_tch_asnmt_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="teacher_name" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

extuserid = &quot;tch&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;extuserid&quot;, extuserid);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="class_name" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

classname = &quot;class&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;classname&quot;, classname);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="assignedPathList" elementType="Argument">
                <stringProp name="Argument.name">assignedPathList</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="true">
            <stringProp name="IncludeController.includepath">Join_a_space_with_space_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [60-65 sec]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">60000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class" enabled="true">
            <stringProp name="IncludeController.includepath">create_new_instructor_led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">10000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class" enabled="true">
            <stringProp name="IncludeController.includepath">associate_a_product_with_class2.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [300-330]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">300000</stringProp>
              <stringProp name="RandomTimer.range">30000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create 5 assignments" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
              <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
              <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation_For T1-C1-P1" enabled="false">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="T1 -&gt; C1 -&gt; P1" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilename" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilename</stringProp>
                <stringProp name="Argument.value">scenario_tch_asnmt_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="teacher_name" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

extuserid = &quot;tch&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;extuserid&quot;, extuserid);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="class_name" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

classname = &quot;class&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;classname&quot;, classname);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="assignedPathList" elementType="Argument">
                <stringProp name="Argument.name">assignedPathList</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="true">
            <stringProp name="IncludeController.includepath">Join_a_space_with_space_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [60-65 sec]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">60000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class" enabled="true">
            <stringProp name="IncludeController.includepath">create_new_instructor_led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">10000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class" enabled="true">
            <stringProp name="IncludeController.includepath">associate_a_product_with_class2.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [300-330]" enabled="false">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">300000</stringProp>
              <stringProp name="RandomTimer.range">30000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create 5 assignments" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
              <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
              <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="false">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation_For T1-C1-P1" enabled="true">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="T2 -&gt; C2 -&gt; P2" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilename" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilename</stringProp>
                <stringProp name="Argument.value">scenario_tch_asnmt_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="teacher_name" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

extuserid = &quot;tch&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;extuserid&quot;, extuserid);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="class_name" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

classname = &quot;class&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;classname&quot;, classname);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="assignedPathList" elementType="Argument">
                <stringProp name="Argument.name">assignedPathList</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="true">
            <stringProp name="IncludeController.includepath">Join_a_space_with_space_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [60-65 sec]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">60000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class" enabled="true">
            <stringProp name="IncludeController.includepath">create_new_instructor_led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">10000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class" enabled="true">
            <stringProp name="IncludeController.includepath">associate_a_product_with_class_Product2.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [300-330]" enabled="false">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">300000</stringProp>
              <stringProp name="RandomTimer.range">30000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create 5 assignments" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
              <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
              <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="false">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation_For T1-C1-P1" enabled="true">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="T2 -&gt; C2 -&gt; P2 (Multi Umbrella)" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilename" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilename</stringProp>
                <stringProp name="Argument.value">scenario_tch_asnmt_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="teacher_name" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

extuserid = &quot;tch&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;extuserid&quot;, extuserid);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="class_name" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

classname = &quot;class&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;classname&quot;, classname);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="assignedPathList" elementType="Argument">
                <stringProp name="Argument.name">assignedPathList</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="true">
            <stringProp name="IncludeController.includepath">Join_a_space_with_space_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [60-65 sec]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">60000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class" enabled="true">
            <stringProp name="IncludeController.includepath">create_new_instructor_led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">10000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class" enabled="true">
            <stringProp name="IncludeController.includepath">associate_a_product_with_class2.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">10000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
            <stringProp name="ForeachController.inputVal">multiProduct</stringProp>
            <stringProp name="ForeachController.returnVal">multiProduct</stringProp>
            <boolProp name="ForeachController.useSeparator">false</boolProp>
            <stringProp name="ForeachController.startIndex">0</stringProp>
            <stringProp name="ForeachController.endIndex">10</stringProp>
          </ForeachController>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class" enabled="true">
              <stringProp name="IncludeController.includepath">associate_a_product_with_class_MultiProduct.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
                <stringProp name="RandomTimer.range">5000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [300-330]" enabled="false">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">300000</stringProp>
              <stringProp name="RandomTimer.range">30000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create 5 assignments" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
              <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
              <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="false">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation_For T1-C1-P1" enabled="true">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="T1 -&gt; C1" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilename" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilename</stringProp>
                <stringProp name="Argument.value">scenario_tch_asnmt_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="teacher_name" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

extuserid = &quot;tch&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;extuserid&quot;, extuserid);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="class_name" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

classname = &quot;class&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;classname&quot;, classname);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="assignedPathList" elementType="Argument">
                <stringProp name="Argument.name">assignedPathList</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="true">
            <stringProp name="IncludeController.includepath">Join_a_space_with_space_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [60-65 sec]" enabled="false">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">60000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class" enabled="true">
            <stringProp name="IncludeController.includepath">create_new_instructor_led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="false">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">10000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class" enabled="false">
            <stringProp name="IncludeController.includepath">associate_a_product_with_class2.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [300-330]" enabled="false">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">300000</stringProp>
              <stringProp name="RandomTimer.range">30000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create 5 assignments" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
              <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
              <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="false">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation_For T1-C1" enabled="true">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="T1_C1_B1(1PE)_B2(2PE)_A10_S30" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilenameTch" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilenameTch</stringProp>
                <stringProp name="Argument.value">scenario_tch_asnmt_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="outputCsvFilenameStd" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilenameStd</stringProp>
                <stringProp name="Argument.value">student_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="teacher_name" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

extuserid = &quot;tch&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;extuserid&quot;, extuserid);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="class_name" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

classname = &quot;class&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;classname&quot;, classname);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="assignedPathList" elementType="Argument">
                <stringProp name="Argument.name">assignedPathList</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productcode" elementType="Argument">
                <stringProp name="Argument.name">productcode</stringProp>
                <stringProp name="Argument.value">evpel1</stringProp>
                <stringProp name="Argument.desc">used in assignment creation</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="itemcode1" elementType="Argument">
                <stringProp name="Argument.name">itemcode1</stringProp>
                <stringProp name="Argument.value">1544521486954/1544521507623/1544521559147</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="itemcode2" elementType="Argument">
                <stringProp name="Argument.name">itemcode2</stringProp>
                <stringProp name="Argument.value">1544522366063/1544522528807/1544522568979</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="itemcode3" elementType="Argument">
                <stringProp name="Argument.name">itemcode3</stringProp>
                <stringProp name="Argument.value">1544525043137/1544525159358/1544525217177</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="itemcode4" elementType="Argument">
                <stringProp name="Argument.name">itemcode4</stringProp>
                <stringProp name="Argument.value">1544526345845/1544526961740/1544526994099</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="itemcode5" elementType="Argument">
                <stringProp name="Argument.name">itemcode5</stringProp>
                <stringProp name="Argument.value">1544591751639/1544591859950/1544591889129</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="itemcode6" elementType="Argument">
                <stringProp name="Argument.name">itemcode6</stringProp>
                <stringProp name="Argument.value">1544591751639/1544591859950/1544591895035</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="itemcode7" elementType="Argument">
                <stringProp name="Argument.name">itemcode7</stringProp>
                <stringProp name="Argument.value">1544591751639/1544592145731/1544592165309</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="itemcode8" elementType="Argument">
                <stringProp name="Argument.name">itemcode8</stringProp>
                <stringProp name="Argument.value">1544592286221/1544592291887/1544592314873</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="itemcode9" elementType="Argument">
                <stringProp name="Argument.name">itemcode9</stringProp>
                <stringProp name="Argument.value">1544592857014/1544593585947/1544593620647</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="itemcode10" elementType="Argument">
                <stringProp name="Argument.name">itemcode10</stringProp>
                <stringProp name="Argument.value">1544596644314/1544597008306/1544597032165</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="itemcode11" elementType="Argument">
                <stringProp name="Argument.name">itemcode11</stringProp>
                <stringProp name="Argument.value">1544596644314/1544597091060/1544597104557</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="itemcode12" elementType="Argument">
                <stringProp name="Argument.name">itemcode12</stringProp>
                <stringProp name="Argument.value">1544596644314/1544597091060/1544597121860</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="itemcode13" elementType="Argument">
                <stringProp name="Argument.name">itemcode13</stringProp>
                <stringProp name="Argument.value">1544596644314/1544597220792/1544597245750</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="itemcode14" elementType="Argument">
                <stringProp name="Argument.name">itemcode14</stringProp>
                <stringProp name="Argument.value">1544596644314/1544597220792/1544597262426</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="itemcode15" elementType="Argument">
                <stringProp name="Argument.name">itemcode15</stringProp>
                <stringProp name="Argument.value">1544596644314/1544597220792/1544597275965</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - Multi Umbrella" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="bundleCount" elementType="Argument">
                <stringProp name="Argument.name">bundleCount</stringProp>
                <stringProp name="Argument.value">2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="PE_count_in_bundle1" elementType="Argument">
                <stringProp name="Argument.name">PE_count_in_bundle1</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="PE_count_in_bundle2" elementType="Argument">
                <stringProp name="Argument.name">PE_count_in_bundle2</stringProp>
                <stringProp name="Argument.value">2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="bundleName1" elementType="Argument">
                <stringProp name="Argument.name">bundleName1</stringProp>
                <stringProp name="Argument.value">evpel1_bundle</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="bundleName2" elementType="Argument">
                <stringProp name="Argument.name">bundleName2</stringProp>
                <stringProp name="Argument.value">perf_bundle_1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct1" elementType="Argument">
                <stringProp name="Argument.name">multiProduct1</stringProp>
                <stringProp name="Argument.value">evpel1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct2" elementType="Argument">
                <stringProp name="Argument.name">multiProduct2</stringProp>
                <stringProp name="Argument.value">perfb1pe1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct3" elementType="Argument">
                <stringProp name="Argument.name">multiProduct3</stringProp>
                <stringProp name="Argument.value">perfb1pe2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="totalPECount" elementType="Argument">
                <stringProp name="Argument.name">totalPECount</stringProp>
                <stringProp name="Argument.value">3</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="true">
            <stringProp name="IncludeController.includepath">Join_a_space_with_space_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [60-65 sec]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">60000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class" enabled="true">
            <stringProp name="IncludeController.includepath">create_new_instructor_led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">10000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="Bundle Association Count - ForEach Controller" enabled="true">
            <stringProp name="ForeachController.inputVal">multiProduct</stringProp>
            <stringProp name="ForeachController.returnVal">multiProduct</stringProp>
            <boolProp name="ForeachController.useSeparator">false</boolProp>
            <stringProp name="ForeachController.startIndex">0</stringProp>
            <stringProp name="ForeachController.endIndex">${totalPECount}</stringProp>
          </ForeachController>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class" enabled="true">
              <stringProp name="IncludeController.includepath">associate_a_product_with_class_MultiProduct.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [300-330]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">300000</stringProp>
              <stringProp name="RandomTimer.range">30000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create 10 assignments" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">10</stringProp>
          </LoopController>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
              <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
              <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
                <stringProp name="RandomTimer.range">5000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create 20 students and join using classcode of current teacher" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">20</stringProp>
          </LoopController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.util.Date;

Date date = new Date();
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;

studentextuserid = &quot;std&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;studentextuserid&quot;, studentextuserid);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-20]" enabled="false">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
                <stringProp name="RandomTimer.range">10000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with product_code and class_code" enabled="true">
              <stringProp name="IncludeController.includepath">join_Spaces_with_product_code_and_class_code.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
                <stringProp name="RandomTimer.range">5000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
              <stringProp name="ForeachController.inputVal">multiProduct</stringProp>
              <stringProp name="ForeachController.returnVal">multiProduct</stringProp>
              <boolProp name="ForeachController.useSeparator">false</boolProp>
              <stringProp name="ForeachController.startIndex">1</stringProp>
              <stringProp name="ForeachController.endIndex">${totalPECount}</stringProp>
            </ForeachController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Entitle User with Product" enabled="true">
                <stringProp name="IncludeController.includepath">Entitle_User_With_Product.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
              <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_student.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">timestamp = vars.get(&quot;date&quot;);

FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameStd&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameTch&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="T1 -&gt; C1 -&gt; 800 LO bundle -&gt; 100 Students" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilenameTch" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilenameTch</stringProp>
                <stringProp name="Argument.value">scenario_tch_asnmt_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="outputCsvFilenameStd" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilenameStd</stringProp>
                <stringProp name="Argument.value">student_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="teacher_name" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

extuserid = &quot;tch&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;extuserid&quot;, extuserid);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="class_name" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

classname = &quot;class&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;classname&quot;, classname);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="assignedPathList" elementType="Argument">
                <stringProp name="Argument.name">assignedPathList</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productcode" elementType="Argument">
                <stringProp name="Argument.name">productcode</stringProp>
                <stringProp name="Argument.value">perfprod2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="true">
            <stringProp name="IncludeController.includepath">Join_a_space_with_space_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [60-65 sec]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">60000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class" enabled="true">
            <stringProp name="IncludeController.includepath">create_new_instructor_led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">10000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class" enabled="true">
            <stringProp name="IncludeController.includepath">associate_a_product_with_class2.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [300-330]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">300000</stringProp>
              <stringProp name="RandomTimer.range">30000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create {x number} students and join using classcode of current teacher" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">100</stringProp>
          </LoopController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.util.Date;

Date date = new Date();
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;

studentextuserid = &quot;std&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;studentextuserid&quot;, studentextuserid);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-20]" enabled="false">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
                <stringProp name="RandomTimer.range">10000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with product_code and class_code" enabled="true">
              <stringProp name="IncludeController.includepath">join_Spaces_with_product_code_and_class_code.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
                <stringProp name="RandomTimer.range">5000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
              <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_student.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">timestamp = vars.get(&quot;date&quot;);

FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameStd&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation_For T1-C1" enabled="true">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameTch&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="T1 -&gt; C1(Context) -&gt; S100 -&gt; 800 LO product -&gt; A20 (30 LOs -&gt; 15 Pskill + 15 Scoreable)" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilenameTch" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilenameTch</stringProp>
                <stringProp name="Argument.value">scenario_tch_asnmt_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="outputCsvFilenameStd" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilenameStd</stringProp>
                <stringProp name="Argument.value">student_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="teacher_name" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

extuserid = &quot;tch&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;extuserid&quot;, extuserid);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="class_name" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

classname = &quot;contextclass&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;classname&quot;, classname);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="assignedPathList" elementType="Argument">
                <stringProp name="Argument.name">assignedPathList</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productcode" elementType="Argument">
                <stringProp name="Argument.name">productcode</stringProp>
                <stringProp name="Argument.value">perfprod2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="itemcode1" elementType="Argument">
                <stringProp name="Argument.name">itemcode1</stringProp>
                <stringProp name="Argument.value">1676462274557/1676462274558/1676462274559</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="itemcode2" elementType="Argument">
                <stringProp name="Argument.name">itemcode2</stringProp>
                <stringProp name="Argument.value">1676462274557/1676462274558/1676462274560</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="itemcode3" elementType="Argument">
                <stringProp name="Argument.name">itemcode3</stringProp>
                <stringProp name="Argument.value">1676462274557/1676462274558/1676462274561</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="itemcode4" elementType="Argument">
                <stringProp name="Argument.name">itemcode4</stringProp>
                <stringProp name="Argument.value">1676462274557/1676462274558/1676462274562</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="itemcode5" elementType="Argument">
                <stringProp name="Argument.name">itemcode5</stringProp>
                <stringProp name="Argument.value">1676462274557/1676462274558/1676462274563</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="itemcode6" elementType="Argument">
                <stringProp name="Argument.name">itemcode6</stringProp>
                <stringProp name="Argument.value">1676462274557/1676462274558/1676462274564</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="itemcode7" elementType="Argument">
                <stringProp name="Argument.name">itemcode7</stringProp>
                <stringProp name="Argument.value">1676462274557/1676462274558/1676462274565</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="itemcode8" elementType="Argument">
                <stringProp name="Argument.name">itemcode8</stringProp>
                <stringProp name="Argument.value">1676462274557/1676462274558/1676462274566</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="itemcode9" elementType="Argument">
                <stringProp name="Argument.name">itemcode9</stringProp>
                <stringProp name="Argument.value">1676462274557/1676462274558/1676462274567</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="itemcode10" elementType="Argument">
                <stringProp name="Argument.name">itemcode10</stringProp>
                <stringProp name="Argument.value">1676462274557/1676462274558/1676462274568</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="itemcode11" elementType="Argument">
                <stringProp name="Argument.name">itemcode11</stringProp>
                <stringProp name="Argument.value">1676462274557/1676462274558/1676462274569</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="itemcode12" elementType="Argument">
                <stringProp name="Argument.name">itemcode12</stringProp>
                <stringProp name="Argument.value">1676462274557/1676462274558/1676462274570</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="itemcode13" elementType="Argument">
                <stringProp name="Argument.name">itemcode13</stringProp>
                <stringProp name="Argument.value">1676462274557/1676462274558/1676462274571</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="itemcode14" elementType="Argument">
                <stringProp name="Argument.name">itemcode14</stringProp>
                <stringProp name="Argument.value">1676462274557/1676462274558/1676462274572</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="itemcode15" elementType="Argument">
                <stringProp name="Argument.name">itemcode15</stringProp>
                <stringProp name="Argument.value">1676462274557/1676462274558/1676462274573</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="itemcode16" elementType="Argument">
                <stringProp name="Argument.name">itemcode16</stringProp>
                <stringProp name="Argument.value">1676462274659/1676462274660/1676462274661</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="itemcode17" elementType="Argument">
                <stringProp name="Argument.name">itemcode17</stringProp>
                <stringProp name="Argument.value">1676462274659/1676462274660/1676462274662</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="itemcode18" elementType="Argument">
                <stringProp name="Argument.name">itemcode18</stringProp>
                <stringProp name="Argument.value">1676462274659/1676462274660/1676462274663</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="itemcode19" elementType="Argument">
                <stringProp name="Argument.name">itemcode19</stringProp>
                <stringProp name="Argument.value">1676462274659/1676462274660/1676462274664</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="itemcode20" elementType="Argument">
                <stringProp name="Argument.name">itemcode20</stringProp>
                <stringProp name="Argument.value">1676462274659/1676462274660/1676462274665</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="itemcode21" elementType="Argument">
                <stringProp name="Argument.name">itemcode21</stringProp>
                <stringProp name="Argument.value">1676462274659/1676462274660/1676462274666</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="itemcode22" elementType="Argument">
                <stringProp name="Argument.name">itemcode22</stringProp>
                <stringProp name="Argument.value">1676462274659/1676462274660/1676462274667</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="itemcode23" elementType="Argument">
                <stringProp name="Argument.name">itemcode23</stringProp>
                <stringProp name="Argument.value">1676462274659/1676462274660/1676462274668</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="itemcode24" elementType="Argument">
                <stringProp name="Argument.name">itemcode24</stringProp>
                <stringProp name="Argument.value">1676462274659/1676462274660/1676462274669</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="itemcode25" elementType="Argument">
                <stringProp name="Argument.name">itemcode25</stringProp>
                <stringProp name="Argument.value">1676462274659/1676462274660/1676462274670</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="itemcode26" elementType="Argument">
                <stringProp name="Argument.name">itemcode26</stringProp>
                <stringProp name="Argument.value">1676462274659/1676462274660/1676462274671</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="itemcode27" elementType="Argument">
                <stringProp name="Argument.name">itemcode27</stringProp>
                <stringProp name="Argument.value">1676462274659/1676462274660/1676462274672</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="itemcode28" elementType="Argument">
                <stringProp name="Argument.name">itemcode28</stringProp>
                <stringProp name="Argument.value">1676462274659/1676462274660/1676462274673</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="itemcode29" elementType="Argument">
                <stringProp name="Argument.name">itemcode29</stringProp>
                <stringProp name="Argument.value">1676462274659/1676462274660/1676462274674</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="itemcode30" elementType="Argument">
                <stringProp name="Argument.name">itemcode30</stringProp>
                <stringProp name="Argument.value">1676462274659/1676462274660/1676462274675</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="true">
            <stringProp name="IncludeController.includepath">Join_a_space_with_space_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [60-65 sec]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">60000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led Context class" enabled="true">
            <stringProp name="IncludeController.includepath">create_new_instructor_led_class_context.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">10000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class" enabled="true">
            <stringProp name="IncludeController.includepath">associate_a_product_with_class2.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [300-330]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">300000</stringProp>
              <stringProp name="RandomTimer.range">30000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create 20 assignments" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">20</stringProp>
          </LoopController>
          <hashTree>
            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
              <stringProp name="CounterConfig.start">1</stringProp>
              <stringProp name="CounterConfig.end">20</stringProp>
              <stringProp name="CounterConfig.incr">1</stringProp>
              <stringProp name="CounterConfig.name">assignmentCount</stringProp>
              <stringProp name="CounterConfig.format"></stringProp>
              <boolProp name="CounterConfig.per_user">true</boolProp>
              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
            </CounterConfig>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
              <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_30LOs.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
              <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
                <stringProp name="RandomTimer.range">5000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create 100 students and join using classcode of current teacher" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">100</stringProp>
          </LoopController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.util.Date;

Date date = new Date();
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;

studentextuserid = &quot;std&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;studentextuserid&quot;, studentextuserid);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-20]" enabled="false">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
                <stringProp name="RandomTimer.range">10000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with product_code and class_code" enabled="true">
              <stringProp name="IncludeController.includepath">join_Spaces_with_product_code_and_class_code.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
                <stringProp name="RandomTimer.range">5000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
              <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_student.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">timestamp = vars.get(&quot;date&quot;);

FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameStd&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation_For T1-C1" enabled="true">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameTch&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Template" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilenameTch" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilenameTch</stringProp>
                <stringProp name="Argument.value">scenario_tch_asnmt_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="outputCsvFilenameStd" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilenameStd</stringProp>
                <stringProp name="Argument.value">student_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">template.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">category,noOfAssignmentsInClass-1,noOfLOsInAssignment-1,noOfAssignmentsInClass-2,noOfLOsInAssignment-2,noOfAssignmentsInClass-3,noOfLOsInAssignment-3,noOfStudentsInClass</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="teacher_name" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

extuserid = &quot;tch&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;extuserid&quot;, extuserid);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="class_name" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

classname = &quot;cntxt_class&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;classname&quot;, classname);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="assignedPathList" elementType="Argument">
                <stringProp name="Argument.name">assignedPathList</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="true">
            <stringProp name="IncludeController.includepath">Join_a_space_with_space_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [60-65 sec]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">60000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class" enabled="false">
            <stringProp name="IncludeController.includepath">create_new_instructor_led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class - CONTEXT" enabled="true">
            <stringProp name="IncludeController.includepath">create_new_instructor_led_class_context.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">10000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - 3B8PE - 300LOs" enabled="true">
            <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;3B8PE&quot;;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">String[] multiProducts = {
    &quot;evpel1&quot;, &quot;perfb1pe1&quot;, &quot;perfb1pe2&quot;, &quot;perfprod21&quot;, &quot;perfprod22&quot;,
    &quot;perfprod23&quot;, &quot;perfprod24&quot;, &quot;perfprod25&quot;
};

String multiProductsAsString = &quot;\&quot;evpel1\&quot;, \&quot;perfb1pe1\&quot;, \&quot;perfb1pe2\&quot;, \&quot;perfprod21\&quot;, \&quot;perfprod22\&quot;,\&quot;perfprod23\&quot;, \&quot;perfprod24\&quot;, \&quot;perfprod25\&quot;&quot;;

for (int i = 0; i &lt; multiProducts.length; i++) {
    vars.put(&quot;multiProduct&quot; + (i + 1), multiProducts[i]);
}

vars.put(&quot;productArrayString&quot;, multiProductsAsString);
vars.put(&quot;productcode&quot;, multiProducts[0]);
vars.put(&quot;peCount&quot;, String.valueOf(multiProducts.length));</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate multi products with a class" enabled="true">
              <stringProp name="IncludeController.includepath">associate_multi_products_with_class.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [300-330]" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">300000</stringProp>
                <stringProp name="RandomTimer.range">30000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x assignments" enabled="false">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfAssignmentsInClass-1}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end">${noOfAssignmentsInClass}</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">assignmentCount</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix5 = vars.get(&quot;noOfLOsInAssignment&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix5 + &quot;LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <InterleaveControl guiclass="InterleaveControlGui" testclass="InterleaveControl" testname="Interleave Controller" enabled="true">
                <intProp name="InterleaveControl.style">1</intProp>
                <boolProp name="InterleaveControl.accrossThreads">false</boolProp>
              </InterleaveControl>
              <hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;evpel1&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfb1pe1&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfb1pe2&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod21&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod22&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod23&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod24&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod25&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment}&quot; == &quot;20&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_20LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment}&quot; == &quot;30&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_30LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment}&quot; == &quot;50&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_50LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
                <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x assignments - 1" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfAssignmentsInClass-1}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end">${noOfAssignmentsInClass-1}</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">assignmentCount</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix5 = vars.get(&quot;noOfLOsInAssignment-1&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix5 + &quot;LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544524003551/1544524304922/1544524359136&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544524003551/1544524012478/1544524057691&quot;,&quot;1544524003551/1544524012478/1544524030068&quot;,&quot;1544525043137/1544525058289/1544525097148&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544525043137/1544525058289/1544525137957&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1544524003551/1544524304922/1544524324762&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544525043137/1544525058289/1544525090848&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1544524003551/1544524012478/1544524071582&quot;,&quot;1544524003551/1544524304922/1544524341184&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544525043137/1544525058289/1544525125172&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1544524003551/1544524304922/1544524313700&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544524003551/1544524012478/1544524084276&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544524003551/1544524304922/1544524387792&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1544524003551/1544524012478/1544524099346&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1544525043137/1544525058289/1544525114886&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544524003551/1544524012478/1544524044427&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544524003551/1544524304922/1544524376121&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] stringArray = {&quot;evpel1&quot;, &quot;perfb1pe1&quot;, &quot;perfb1pe2&quot;, &quot;perfprod21&quot;, &quot;perfprod22&quot;,
    &quot;perfprod23&quot;, &quot;perfprod24&quot;, &quot;perfprod25&quot;};

int randomIndex = (int) (Math.random() * stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;20&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_20LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;30&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_30LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;50&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_50LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
                <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x rules" enabled="false">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfAccessRulesInClass}</stringProp>
            </LoopController>
            <hashTree>
              <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
                <stringProp name="maximumValue">9999</stringProp>
                <stringProp name="minimumValue">0000</stringProp>
                <stringProp name="outputFormat">0000</stringProp>
                <boolProp name="perThread">true</boolProp>
                <stringProp name="randomSeed"></stringProp>
                <stringProp name="variableName">randomNo</stringProp>
              </RandomVariableConfig>
              <hashTree/>
              <InterleaveControl guiclass="InterleaveControlGui" testclass="InterleaveControl" testname="Interleave Controller" enabled="true">
                <intProp name="InterleaveControl.style">1</intProp>
                <boolProp name="InterleaveControl.accrossThreads">false</boolProp>
              </InterleaveControl>
              <hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;evpel1&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfb1pe1&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfb1pe2&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod21&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod22&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod23&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod24&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod25&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAccessRule}&quot; == &quot;50&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a rule" enabled="true">
                  <stringProp name="IncludeController.includepath">Create_a_rule_100LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAccessRule}&quot; == &quot;100&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a rule" enabled="true">
                  <stringProp name="IncludeController.includepath">Create_a_rule_100LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x students and join using classcode of current teacher" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfStudentsInClass}</stringProp>
            </LoopController>
            <hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">import java.util.Date;

Date date = new Date();
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;classcode&quot;);

studentextuserid = &quot;std&quot; + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;studentextuserid&quot;, studentextuserid);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] multiProducts = {
    &quot;evpel1&quot;, &quot;perfb1pe1&quot;, &quot;perfb1pe2&quot;, &quot;perfprod21&quot;, &quot;perfprod22&quot;,
    &quot;perfprod23&quot;, &quot;perfprod24&quot;, &quot;perfprod25&quot;
};

for (int i = 0; i &lt; multiProducts.length; i++) {
    vars.put(&quot;multiProduct&quot; + (i + 1), multiProducts[i]);
}

vars.put(&quot;productcode&quot;, multiProducts[0]);
vars.put(&quot;peCount&quot;, String.valueOf(multiProducts.length));</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with product_code and class_code" enabled="true">
                <stringProp name="IncludeController.includepath">join_Spaces_with_product_code_and_class_code.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [20-30 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">20000</stringProp>
                  <stringProp name="RandomTimer.range">10000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">multiProduct</stringProp>
                <stringProp name="ForeachController.returnVal">multiProduct</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">1</stringProp>
                <stringProp name="ForeachController.endIndex">${peCount}</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Entitle User with Product" enabled="true">
                  <stringProp name="IncludeController.includepath">Entitle_User_With_Product.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [15-25 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">15000</stringProp>
                  <stringProp name="RandomTimer.range">10000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="false">
                <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_student.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">timestamp = vars.get(&quot;date&quot;);

FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameStd&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
              <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameTch&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - 3B10PE - 500LOs" enabled="true">
            <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;3B10PE&quot;;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">String[] multiProducts = {
    &quot;perfprod3&quot;, &quot;perfprod4&quot;, &quot;perfprod5&quot;, &quot;perfprod6&quot;, &quot;perfprod7&quot;,
    &quot;perfprod8&quot;, &quot;perfprod9&quot;, &quot;perfprod10&quot;, &quot;perfprod11&quot;, &quot;perfprod12&quot;
};

String multiProductsAsString = &quot;\&quot;perfprod3\&quot;, \&quot;perfprod4\&quot;, \&quot;perfprod5\&quot;, \&quot;perfprod6\&quot;, \&quot;perfprod7\&quot;,\&quot;perfprod8\&quot;, \&quot;perfprod9\&quot;, \&quot;perfprod10\&quot;, \&quot;perfprod11\&quot;, \&quot;perfprod12\&quot;&quot;;

for (int i = 0; i &lt; multiProducts.length; i++) {
    vars.put(&quot;multiProduct&quot; + (i + 1), multiProducts[i]);
}

vars.put(&quot;productArrayString&quot;, multiProductsAsString);
vars.put(&quot;productcode&quot;, multiProducts[0]);
vars.put(&quot;peCount&quot;, String.valueOf(multiProducts.length));</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate multi products with a class" enabled="true">
              <stringProp name="IncludeController.includepath">associate_multi_products_with_class.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [300-330]" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">300000</stringProp>
                <stringProp name="RandomTimer.range">30000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x assignments" enabled="false">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfAssignmentsInClass}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end">${noOfAssignmentsInClass}</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">assignmentCount</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix5 = vars.get(&quot;noOfLOsInAssignment&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix5 + &quot;LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <InterleaveControl guiclass="InterleaveControlGui" testclass="InterleaveControl" testname="Interleave Controller" enabled="true">
                <intProp name="InterleaveControl.style">1</intProp>
                <boolProp name="InterleaveControl.accrossThreads">false</boolProp>
              </InterleaveControl>
              <hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod3&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod4&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod5&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod6&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod7&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod8&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod9&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod10&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod11&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod12&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment}&quot; == &quot;20&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_20LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment}&quot; == &quot;30&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_30LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment}&quot; == &quot;50&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_50LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
                <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x assignments - 1" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfAssignmentsInClass-1}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end">${noOfAssignmentsInClass-1}</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">assignmentCount</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix5 = vars.get(&quot;noOfLOsInAssignment-1&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix5 + &quot;LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544524003551/1544524304922/1544524359136&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544524003551/1544524012478/1544524057691&quot;,&quot;1544524003551/1544524012478/1544524030068&quot;,&quot;1544525043137/1544525058289/1544525097148&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544525043137/1544525058289/1544525137957&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1544524003551/1544524304922/1544524324762&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544525043137/1544525058289/1544525090848&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1544524003551/1544524012478/1544524071582&quot;,&quot;1544524003551/1544524304922/1544524341184&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544525043137/1544525058289/1544525125172&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1544524003551/1544524304922/1544524313700&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544524003551/1544524012478/1544524084276&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544524003551/1544524304922/1544524387792&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1544524003551/1544524012478/1544524099346&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1544525043137/1544525058289/1544525114886&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544524003551/1544524012478/1544524044427&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544524003551/1544524304922/1544524376121&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] stringArray = {&quot;perfprod3&quot;, &quot;perfprod4&quot;, &quot;perfprod5&quot;, &quot;perfprod6&quot;, &quot;perfprod7&quot;,
    &quot;perfprod8&quot;, &quot;perfprod9&quot;, &quot;perfprod10&quot;, &quot;perfprod11&quot;, &quot;perfprod12&quot;};

int randomIndex = (int) (Math.random() * stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;20&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_20LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;30&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_30LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;50&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_50LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
                <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x students and join using classcode of current teacher" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfStudentsInClass}</stringProp>
            </LoopController>
            <hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">import java.util.Date;

Date date = new Date();
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;classcode&quot;);

studentextuserid = &quot;std&quot; + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;studentextuserid&quot;, studentextuserid);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] multiProducts = {
    &quot;perfprod3&quot;, &quot;perfprod4&quot;, &quot;perfprod5&quot;, &quot;perfprod6&quot;, &quot;perfprod7&quot;,
    &quot;perfprod8&quot;, &quot;perfprod9&quot;, &quot;perfprod10&quot;, &quot;perfprod11&quot;, &quot;perfprod12&quot;
};

for (int i = 0; i &lt; multiProducts.length; i++) {
    vars.put(&quot;multiProduct&quot; + (i + 1), multiProducts[i]);
}

vars.put(&quot;productcode&quot;, multiProducts[0]);
vars.put(&quot;peCount&quot;, String.valueOf(multiProducts.length));</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with product_code and class_code" enabled="true">
                <stringProp name="IncludeController.includepath">join_Spaces_with_product_code_and_class_code.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">multiProduct</stringProp>
                <stringProp name="ForeachController.returnVal">multiProduct</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">1</stringProp>
                <stringProp name="ForeachController.endIndex">${peCount}</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Entitle User with Product" enabled="true">
                  <stringProp name="IncludeController.includepath">Entitle_User_With_Product.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="false">
                <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_student.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">timestamp = vars.get(&quot;date&quot;);

FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameStd&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
              <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameTch&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - 3B15PE - 500LOs" enabled="true">
            <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;3B15PE&quot;;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">String[] multiProducts = {
    &quot;perfprod5&quot;, &quot;perfprod6&quot;, &quot;perfprod7&quot;,
    &quot;perfprod8&quot;, &quot;perfprod9&quot;, &quot;perfprod10&quot;, &quot;perfprod11&quot;, &quot;perfprod12&quot;, 
    &quot;perfprod86&quot;, &quot;perfprod87&quot;, &quot;perfprod88&quot;, &quot;perfprod89&quot;, &quot;perfprod90&quot;, 
    &quot;perfprod91&quot;, &quot;perfprod92&quot; 
};

String multiProductsAsString = &quot;\&quot;perfprod5\&quot;, \&quot;perfprod6\&quot;, \&quot;perfprod7\&quot;, \&quot;perfprod8\&quot;, \&quot;perfprod9\&quot;, \&quot;perfprod10\&quot;, \&quot;perfprod11\&quot;, \&quot;perfprod12\&quot;, \&quot;perfprod86\&quot;, \&quot;perfprod87\&quot;, \&quot;perfprod88\&quot;, \&quot;perfprod89\&quot;, \&quot;perfprod90\&quot;, \&quot;perfprod91\&quot;, \&quot;perfprod92\&quot;&quot;;

for (int i = 0; i &lt; multiProducts.length; i++) {
    vars.put(&quot;multiProduct&quot; + (i + 1), multiProducts[i]);
}

vars.put(&quot;productArrayString&quot;, multiProductsAsString);
vars.put(&quot;productcode&quot;, multiProducts[0]);
vars.put(&quot;peCount&quot;, String.valueOf(multiProducts.length));</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate multi products with a class" enabled="true">
              <stringProp name="IncludeController.includepath">associate_multi_products_with_class.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [300-330]" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">300000</stringProp>
                <stringProp name="RandomTimer.range">30000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x assignments" enabled="false">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfAssignmentsInClass}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end">${noOfAssignmentsInClass}</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">assignmentCount</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix5 = vars.get(&quot;noOfLOsInAssignment&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix5 + &quot;LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <InterleaveControl guiclass="InterleaveControlGui" testclass="InterleaveControl" testname="Interleave Controller" enabled="true">
                <intProp name="InterleaveControl.style">1</intProp>
                <boolProp name="InterleaveControl.accrossThreads">false</boolProp>
              </InterleaveControl>
              <hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod5&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod6&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod7&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod8&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod9&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod10&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod11&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod12&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod86&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod87&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod88&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod89&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod90&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod91&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod92&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment}&quot; == &quot;20&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_20LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment}&quot; == &quot;30&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_30LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment}&quot; == &quot;50&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_50LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
                <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x assignments - 1" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfAssignmentsInClass-1}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end">${noOfAssignmentsInClass-1}</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">assignmentCount</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix5 = vars.get(&quot;noOfLOsInAssignment-1&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix5 + &quot;LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544524003551/1544524304922/1544524359136&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544524003551/1544524012478/1544524057691&quot;,&quot;1544524003551/1544524012478/1544524030068&quot;,&quot;1544525043137/1544525058289/1544525097148&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544525043137/1544525058289/1544525137957&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1544524003551/1544524304922/1544524324762&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544525043137/1544525058289/1544525090848&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1544524003551/1544524012478/1544524071582&quot;,&quot;1544524003551/1544524304922/1544524341184&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544525043137/1544525058289/1544525125172&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1544524003551/1544524304922/1544524313700&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544524003551/1544524012478/1544524084276&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544524003551/1544524304922/1544524387792&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1544524003551/1544524012478/1544524099346&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1544525043137/1544525058289/1544525114886&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544524003551/1544524012478/1544524044427&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544524003551/1544524304922/1544524376121&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] stringArray = {&quot;perfprod5&quot;, &quot;perfprod6&quot;, &quot;perfprod7&quot;,
    &quot;perfprod8&quot;, &quot;perfprod9&quot;, &quot;perfprod10&quot;, &quot;perfprod11&quot;, &quot;perfprod12&quot;, 
    &quot;perfprod86&quot;, &quot;perfprod87&quot;, &quot;perfprod88&quot;, &quot;perfprod89&quot;, &quot;perfprod90&quot;, 
    &quot;perfprod91&quot;, &quot;perfprod92&quot;};

int randomIndex = (int) (Math.random() * stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;20&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_20LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;30&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_30LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;50&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_50LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
                <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x students and join using classcode of current teacher" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfStudentsInClass}</stringProp>
            </LoopController>
            <hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">import java.util.Date;

Date date = new Date();
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;classcode&quot;);

studentextuserid = &quot;std&quot; + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;studentextuserid&quot;, studentextuserid);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] multiProducts = {
    &quot;perfprod5&quot;, &quot;perfprod6&quot;, &quot;perfprod7&quot;,
    &quot;perfprod8&quot;, &quot;perfprod9&quot;, &quot;perfprod10&quot;, &quot;perfprod11&quot;, &quot;perfprod12&quot;, 
    &quot;perfprod86&quot;, &quot;perfprod87&quot;, &quot;perfprod88&quot;, &quot;perfprod89&quot;, &quot;perfprod90&quot;, 
    &quot;perfprod91&quot;, &quot;perfprod92&quot;
};

for (int i = 0; i &lt; multiProducts.length; i++) {
    vars.put(&quot;multiProduct&quot; + (i + 1), multiProducts[i]);
}

vars.put(&quot;productcode&quot;, multiProducts[0]);
vars.put(&quot;peCount&quot;, String.valueOf(multiProducts.length));</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with product_code and class_code" enabled="true">
                <stringProp name="IncludeController.includepath">join_Spaces_with_product_code_and_class_code.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">multiProduct</stringProp>
                <stringProp name="ForeachController.returnVal">multiProduct</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">1</stringProp>
                <stringProp name="ForeachController.endIndex">${peCount}</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Entitle User with Product" enabled="true">
                  <stringProp name="IncludeController.includepath">Entitle_User_With_Product.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="false">
                <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_student.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">timestamp = vars.get(&quot;date&quot;);

FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameStd&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
              <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameTch&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - 2B15PE - 650LOs" enabled="true">
            <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;2B15PE&quot;;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">String[] multiProducts = {
    &quot;perfprod41&quot;, &quot;perfprod42&quot;, &quot;perfprod43&quot;, &quot;perfprod44&quot;, &quot;perfprod45&quot;,
    &quot;perfprod46&quot;, &quot;perfprod47&quot;, &quot;perfprod48&quot;, &quot;perfprod49&quot;, &quot;perfprod50&quot;,
    &quot;perfprod101&quot;, &quot;perfprod102&quot;, &quot;perfprod103&quot;, &quot;perfprod104&quot;, &quot;perfprod105&quot;
};

String multiProductsAsString = &quot;\&quot;perfprod41\&quot;, \&quot;perfprod42\&quot;, \&quot;perfprod43\&quot;, \&quot;perfprod44\&quot;, \&quot;perfprod45\&quot;, \&quot;perfprod46\&quot;, \&quot;perfprod47\&quot;, \&quot;perfprod48\&quot;, \&quot;perfprod49\&quot;, \&quot;perfprod50\&quot;, \&quot;perfprod101\&quot;, \&quot;perfprod102\&quot;, \&quot;perfprod103\&quot;, \&quot;perfprod104\&quot;, \&quot;perfprod105\&quot;&quot;;

for (int i = 0; i &lt; multiProducts.length; i++) {
    vars.put(&quot;multiProduct&quot; + (i + 1), multiProducts[i]);
}

vars.put(&quot;productArrayString&quot;, multiProductsAsString);
vars.put(&quot;productcode&quot;, multiProducts[0]);
vars.put(&quot;peCount&quot;, String.valueOf(multiProducts.length));</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate multi products with a class" enabled="true">
              <stringProp name="IncludeController.includepath">associate_multi_products_with_class.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [300-330]" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">300000</stringProp>
                <stringProp name="RandomTimer.range">30000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x assignments" enabled="false">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfAssignmentsInClass}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end">${noOfAssignmentsInClass}</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">assignmentCount</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix5 = vars.get(&quot;noOfLOsInAssignment&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix5 + &quot;LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <InterleaveControl guiclass="InterleaveControlGui" testclass="InterleaveControl" testname="Interleave Controller" enabled="true">
                <intProp name="InterleaveControl.style">1</intProp>
                <boolProp name="InterleaveControl.accrossThreads">false</boolProp>
              </InterleaveControl>
              <hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod41&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod42&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod43&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod44&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod45&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod46&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod47&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod48&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod49&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod50&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod101&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod102&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod103&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod104&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod105&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment}&quot; == &quot;20&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_20LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment}&quot; == &quot;30&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_30LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment}&quot; == &quot;50&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_50LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
                <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x assignments - 1" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfAssignmentsInClass-1}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end">${noOfAssignmentsInClass-1}</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">assignmentCount</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix5 = vars.get(&quot;noOfLOsInAssignment-1&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix5 + &quot;LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544593830881/1544593964252/1544594102416&quot;,&quot;1676462274659/1676462274660/1676462274700&quot;,&quot;1676462274557/1676462274558/1676462274576&quot;,&quot;1676462274659/1676462274660/1676462274713&quot;,&quot;1544592857014/1544592865722/1544593072380&quot;,&quot;1676462274557/1676462274558/1676462274571&quot;,&quot;1544592857014/1544592865722/1544593123201&quot;,&quot;1544593830881/1544593842258/1544593905062&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1676462274659/1676462274660/1676462274755&quot;,&quot;1676462274557/1676462274558/1676462274588&quot;,&quot;1676462274557/1676462274558/1676462274585&quot;,&quot;1544593830881/1544596291616/1544596322099&quot;,&quot;1676462274659/1676462274660/1676462274729&quot;,&quot;1544596644314/1544596678647/1544596745950&quot;,&quot;1544593830881/1544593842258/1544593925051&quot;,&quot;1676462274659/1676462274660/1676462274863&quot;,&quot;1544524003551/1544524012478/1544524084276&quot;,&quot;1676462274659/1676462274660/1676462274719&quot;,&quot;1544524003551/1544524304922/1544524313700&quot;,&quot;1676462274659/1676462274660/1676462274862&quot;,&quot;1544592286221/1544592379241/1544592438186&quot;,&quot;1676462274557/1676462274558/1676462274602&quot;,&quot;1676462274659/1676462274660/1676462274689&quot;,&quot;1676462274659/1676462274660/1676462274724&quot;,&quot;1544591089661/1544591260222/1544591284840&quot;,&quot;1676462274659/1676462274660/1676462274858&quot;,&quot;1676462274557/1676462274558/1676462274590&quot;,&quot;1544592857014/1544593139545/1544593488247&quot;,&quot;1676462274659/1676462274660/1676462274733&quot;,&quot;1544596644314/1544596802487/1544596921860&quot;,&quot;1676462274659/1676462274660/1676462274759&quot;,&quot;1676462274557/1676462274558/1676462274614&quot;,&quot;1676462274557/1676462274558/1676462274560&quot;,&quot;1544526345845/1544526671965/1544526688230&quot;,&quot;1544593830881/1544593964252/1544594177257&quot;,&quot;1676462274659/1676462274660/1676462274753&quot;,&quot;1676462274659/1676462274660/1676462274672&quot;,&quot;1676462274659/1676462274660/1676462274747&quot;,&quot;1544525590768/1544525595533/1544525649026&quot;,&quot;1676462274659/1676462274660/1676462274848&quot;,&quot;1544591089661/1544591260222/1544591363137&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1676462274659/1676462274660/1676462274756&quot;,&quot;1676462274659/1676462274660/1676462274860&quot;,&quot;1544593830881/1544596494652/1544596529922&quot;,&quot;1676462274659/1676462274660/1676462274857&quot;,&quot;1676462274557/1676462274558/1676462274615&quot;,&quot;1676462274659/1676462274660/1676462274851&quot;,&quot;1544592286221/1544592474205/1544592491253&quot;,&quot;1544591751639/1544591756584/1544591852005&quot;,&quot;1676462274659/1676462274660/1676462274715&quot;,&quot;1544525043137/1544525159358/1544525175677&quot;,&quot;1676462274557/1676462274558/1676462274568&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592857014/1544592865722/1544593093552&quot;,&quot;1676462274557/1676462274558/1676462274570&quot;,&quot;1676462274659/1676462274660/1676462274866&quot;,&quot;1544525590768/1544525595533/1544525627465&quot;,&quot;1544525590768/1544525683364/1544525729515&quot;,&quot;1544525043137/1544525058289/1544525090848&quot;,&quot;1676462274659/1676462274660/1676462274701&quot;,&quot;1544591751639/1544592145731/1544592176780&quot;,&quot;1676462274659/1676462274660/1676462274859&quot;,&quot;1676462274557/1676462274558/1676462274609&quot;,&quot;1676462274659/1676462274660/1676462274718&quot;,&quot;1676462274557/1676462274558/1676462274580&quot;,&quot;1544525590768/1544525595533/1544525635696&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544525043137/1544525058289/1544525137957&quot;,&quot;1676462274659/1676462274660/1676462274855&quot;,&quot;1544592286221/1544592379241/1544592404760&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544591751639/1544591989858/1544592034736&quot;,&quot;1544592286221/1544592379241/1544592422449&quot;,&quot;1676462274659/1676462274660/1676462274699&quot;,&quot;1544592857014/1544592865722/1544593104748&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1544525043137/1544525159358/1544525239184&quot;,&quot;1676462274659/1676462274660/1676462274717&quot;,&quot;1676462274659/1676462274660/1676462274728&quot;,&quot;1676462274557/1676462274558/1676462274610&quot;,&quot;1676462274557/1676462274558/1676462274598&quot;,&quot;1544524003551/1544524012478/1544524057691&quot;,&quot;1544524003551/1544524304922/1544524359136&quot;,&quot;1676462274659/1676462274660/1676462274870&quot;,&quot;1676462274659/1676462274660/1676462274704&quot;,&quot;1544526345845/1544526589100/1544526657285&quot;,&quot;1544526345845/1544526589100/1544526610825&quot;,&quot;1544524003551/1544524012478/1544524099346&quot;,&quot;1544526345845/1544526589100/1544526623799&quot;,&quot;1544591751639/1544591859950/1544591895035&quot;,&quot;1676462274659/1676462274660/1676462274708&quot;,&quot;1676462274659/1676462274660/1676462274838&quot;,&quot;1676462274557/1676462274558/1676462274608&quot;,&quot;1544525043137/1544525058289/1544525114886&quot;,&quot;1676462274659/1676462274660/1676462274836&quot;,&quot;1544592286221/1544592520233/1544592540334&quot;,&quot;1544591089661/1544591364773/1544591392809&quot;,&quot;1544526345845/1544528319371/1544528345283&quot;,&quot;1676462274557/1676462274558/1676462274578&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544593830881/1544593842258/1544593889640&quot;,&quot;1676462274557/1676462274558/1676462274566&quot;,&quot;1544591089661/1544591099675/1544591237488&quot;,&quot;1676462274659/1676462274660/1676462274853&quot;,&quot;1544526345845/1544526671965/1544526721801&quot;,&quot;1544596644314/1544596802487/1544596845016&quot;,&quot;1676462274659/1676462274660/1676462274842&quot;,&quot;1544525590768/1544525595533/1544525663048&quot;,&quot;1544592857014/1544593139545/1544593476327&quot;,&quot;1544591089661/1544591602655/1544591636888&quot;,&quot;1544526345845/1544528319371/1544528334775&quot;,&quot;1544592286221/1544592291887/1544592370486&quot;,&quot;1544591089661/1544591260222/1544591295680&quot;,&quot;1676462274659/1676462274660/1676462274844&quot;,&quot;1676462274557/1676462274558/1676462274589&quot;,&quot;1544592857014/1544593529004/1544593551477&quot;,&quot;1544526345845/1544526671965/1544526695320&quot;,&quot;1676462274557/1676462274558/1676462274601&quot;,&quot;1544526345845/1544526589100/1544526638110&quot;,&quot;1676462274659/1676462274660/1676462274692&quot;,&quot;1544525043137/1544525159358/1544525217177&quot;,&quot;1676462274557/1676462274558/1676462274599&quot;,&quot;1676462274659/1676462274660/1676462274730&quot;,&quot;1676462274659/1676462274660/1676462274745&quot;,&quot;1676462274557/1676462274558/1676462274569&quot;,&quot;1676462274557/1676462274558/1676462274572&quot;,&quot;1544596644314/1544597091060/1544597121860&quot;,&quot;1544596644314/1544596678647/1544596768254&quot;,&quot;1544596644314/1544596678647/1544596792897&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544596678647/1544596761923&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1676462274659/1676462274660/1676462274738&quot;,&quot;1544592286221/1544592520233/1544592555974&quot;,&quot;1544592857014/1544593139545/1544593187008&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544596644314/1544597220792/1544597275965&quot;,&quot;1676462274659/1676462274660/1676462274839&quot;,&quot;1676462274659/1676462274660/1676462274749&quot;,&quot;1544524003551/1544524304922/1544524324762&quot;,&quot;1544591751639/1544591937229/1544591951092&quot;,&quot;1676462274659/1676462274660/1676462274869&quot;,&quot;1544525043137/1544525159358/1544525263160&quot;,&quot;1676462274557/1676462274558/1676462274582&quot;,&quot;1544593830881/1544593964252/1544594135462&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544526345845/1544526589100/1544526606750&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1676462274557/1676462274558/1676462274607&quot;,&quot;1676462274557/1676462274558/1676462274603&quot;,&quot;1676462274659/1676462274660/1676462274723&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544592286221/1544592623523/1544592658543&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274557/1676462274558/1676462274596&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1544596644314/1544597008306/1544597032165&quot;,&quot;1544525590768/1544525683364/1544525756801&quot;,&quot;1544591089661/1544591412698/1544591455780&quot;,&quot;1544591751639/1544591756584/1544591814105&quot;,&quot;1676462274659/1676462274660/1676462274673&quot;,&quot;1676462274659/1676462274660/1676462274694&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1544526345845/1544526671965/1544526710051&quot;,&quot;1676462274659/1676462274660/1676462274681&quot;,&quot;1544596644314/1544596802487/1544596877787&quot;,&quot;1676462274659/1676462274660/1676462274711&quot;,&quot;1676462274557/1676462274558/1676462274613&quot;,&quot;1544525590768/1544525683364/1544525709799&quot;,&quot;1676462274659/1676462274660/1676462274685&quot;,&quot;1544526345845/1544526961740/1544527008225&quot;,&quot;1676462274659/1676462274660/1676462274714&quot;,&quot;1544525043137/1544525058289/1544525125172&quot;,&quot;1544525043137/1544525159358/1544525192972&quot;,&quot;1544525590768/1544525683364/1544525720457&quot;,&quot;1676462274659/1676462274660/1676462274748&quot;,&quot;1544524003551/1544524012478/1544524030068&quot;,&quot;1676462274659/1676462274660/1676462274757&quot;,&quot;1544524003551/1544524304922/1544524387792&quot;,&quot;1676462274659/1676462274660/1676462274840&quot;,&quot;1676462274557/1676462274558/1676462274561&quot;,&quot;1544591751639/1544591756584/1544591786410&quot;,&quot;1544526345845/1544526671965/1544526763389&quot;,&quot;1544596644314/1544596678647/1544596731689&quot;,&quot;1676462274659/1676462274660/1676462274852&quot;,&quot;1676462274659/1676462274660/1676462274677&quot;,&quot;1544525590768/1544525595533/1544525611432&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1544591751639/1544591756584/1544591842867&quot;,&quot;1544593830881/1544596291616/1544596327463&quot;,&quot;1676462274659/1676462274660/1676462274712&quot;,&quot;1676462274659/1676462274660/1676462274845&quot;,&quot;1544592286221/1544592379241/1544592448263&quot;,&quot;1544593830881/1544593964252/1544594078882&quot;,&quot;1676462274557/1676462274558/1676462274562&quot;,&quot;1544524003551/1544524304922/1544524376121&quot;,&quot;1676462274659/1676462274660/1676462274735&quot;,&quot;1544592857014/1544593139545/1544593454057&quot;,&quot;1676462274659/1676462274660/1676462274850&quot;,&quot;1544592857014/1544593585947/1544593632079&quot;,&quot;1544592286221/1544592379241/1544592415158&quot;,&quot;1544592286221/1544592623523/1544592648386&quot;,&quot;1676462274557/1676462274558/1676462274586&quot;,&quot;1676462274659/1676462274660/1676462274740&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593585947/1544593606215&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1544591751639/1544591859950/1544591923488&quot;,&quot;1676462274659/1676462274660/1676462274725&quot;,&quot;1544592857014/1544593703192/1544593752239&quot;,&quot;1676462274659/1676462274660/1676462274710&quot;,&quot;1544593830881/1544596494652/1544596513093&quot;,&quot;1544525590768/1544525683364/1544525734676&quot;,&quot;1544593830881/1544593842258/1544593932560&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1544592857014/1544593703192/1544593743725&quot;,&quot;1544525043137/1544525058289/1544525097148&quot;,&quot;1544596644314/1544597220792/1544597245750&quot;,&quot;1676462274557/1676462274558/1676462274573&quot;,&quot;1544592857014/1544592865722/1544593079694&quot;,&quot;1544591751639/1544591756584/1544591792950&quot;,&quot;1676462274659/1676462274660/1676462274736&quot;,&quot;1676462274659/1676462274660/1676462274691&quot;,&quot;1676462274659/1676462274660/1676462274837&quot;,&quot;1676462274557/1676462274558/1676462274584&quot;,&quot;1676462274659/1676462274660/1676462274695&quot;,&quot;1676462274659/1676462274660/1676462274679&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1676462274557/1676462274558/1676462274612&quot;,&quot;1676462274659/1676462274660/1676462274737&quot;,&quot;1676462274659/1676462274660/1676462274849&quot;,&quot;1544525590768/1544525595533/1544525679427&quot;,&quot;1544524003551/1544524304922/1544524341184&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1676462274659/1676462274660/1676462274758&quot;,&quot;1676462274659/1676462274660/1676462274854&quot;,&quot;1676462274659/1676462274660/1676462274690&quot;,&quot;1544596644314/1544597220792/1544597262426&quot;,&quot;1676462274557/1676462274558/1676462274591&quot;,&quot;1676462274659/1676462274660/1676462274846&quot;,&quot;1676462274659/1676462274660/1676462274856&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1676462274557/1676462274558/1676462274611&quot;,&quot;1676462274659/1676462274660/1676462274703&quot;,&quot;1676462274557/1676462274558/1676462274593&quot;,&quot;1676462274659/1676462274660/1676462274702&quot;,&quot;1676462274557/1676462274558/1676462274605&quot;,&quot;1676462274659/1676462274660/1676462274843&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544593830881/1544593964252/1544594113782&quot;,&quot;1544593830881/1544593964252/1544594194047&quot;,&quot;1676462274659/1676462274660/1676462274671&quot;,&quot;1676462274557/1676462274558/1676462274604&quot;,&quot;1676462274659/1676462274660/1676462274721&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544591089661/1544591260222/1544591320423&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544591751639/1544591989858/1544592017149&quot;,&quot;1676462274557/1676462274558/1676462274581&quot;,&quot;1676462274659/1676462274660/1676462274680&quot;,&quot;1544592857014/1544593585947/1544593620647&quot;,&quot;1676462274659/1676462274660/1676462274746&quot;,&quot;1544596644314/1544596802487/1544596858389&quot;,&quot;1544526345845/1544526961740/1544526994099&quot;,&quot;1676462274659/1676462274660/1676462274697&quot;,&quot;1544591089661/1544591412698/1544591439057&quot;,&quot;1544592286221/1544592379241/1544592466092&quot;,&quot;1544593830881/1544596494652/1544596545929&quot;,&quot;1676462274557/1676462274558/1676462274592&quot;,&quot;1676462274659/1676462274660/1676462274865&quot;,&quot;1676462274557/1676462274558/1676462274565&quot;,&quot;1676462274659/1676462274660/1676462274741&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544592286221/1544592291887/1544592347743&quot;,&quot;1544596644314/1544597091060/1544597104557&quot;,&quot;1544524003551/1544524012478/1544524044427&quot;,&quot;1676462274557/1676462274558/1676462274564&quot;,&quot;1676462274659/1676462274660/1676462274727&quot;,&quot;1676462274659/1676462274660/1676462274705&quot;,&quot;1544591751639/1544591859950/1544591889129&quot;,&quot;1676462274659/1676462274660/1676462274744&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1676462274659/1676462274660/1676462274696&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1676462274557/1676462274558/1676462274583&quot;,&quot;1544526345845/1544526589100/1544526644717&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1676462274557/1676462274558/1676462274616&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1676462274659/1676462274660/1676462274693&quot;,&quot;1544592286221/1544592291887/1544592333414&quot;,&quot;1676462274659/1676462274660/1676462274739&quot;,&quot;1676462274659/1676462274660/1676462274707&quot;,&quot;1544591089661/1544591602655/1544591649137&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1676462274557/1676462274558/1676462274563&quot;,&quot;1544596644314/1544596802487/1544596904838&quot;,&quot;1676462274557/1676462274558/1676462274600&quot;,&quot;1676462274659/1676462274660/1676462274720&quot;,&quot;1544591089661/1544591412698/1544591428190&quot;,&quot;1676462274557/1676462274558/1676462274594&quot;,&quot;1676462274557/1676462274558/1676462274567&quot;,&quot;1676462274659/1676462274660/1676462274678&quot;,&quot;1544592857014/1544593703192/1544593728070&quot;,&quot;1544593830881/1544596248781/1544596271349&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1676462274659/1676462274660/1676462274754&quot;,&quot;1544593830881/1544593842258/1544593874472&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1676462274659/1676462274660/1676462274698&quot;,&quot;1544593830881/1544596291616/1544596347700&quot;,&quot;1544592286221/1544592291887/1544592314873&quot;,&quot;1544524003551/1544524012478/1544524071582&quot;,&quot;1676462274659/1676462274660/1676462274687&quot;,&quot;1544592857014/1544593139545/1544593471128&quot;,&quot;1676462274659/1676462274660/1676462274847&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544591751639/1544591859950/1544591913490&quot;,&quot;1544592857014/1544592865722/1544593053271&quot;,&quot;1676462274557/1676462274558/1676462274606&quot;,&quot;1676462274659/1676462274660/1676462274726&quot;,&quot;1676462274659/1676462274660/1676462274709&quot;,&quot;1676462274659/1676462274660/1676462274722&quot;,&quot;1544591751639/1544591989858/1544592010989&quot;,&quot;1544593830881/1544593842258/1544593949312&quot;,&quot;1544591751639/1544591756584/1544591826125&quot;,&quot;1676462274659/1676462274660/1676462274867&quot;,&quot;1544526345845/1544526961740/1544526980657&quot;,&quot;1676462274659/1676462274660/1676462274674&quot;,&quot;1544592857014/1544593139545/1544593173865&quot;,&quot;1676462274659/1676462274660/1676462274731&quot;,&quot;1676462274659/1676462274660/1676462274732&quot;,&quot;1544596644314/1544596802487/1544596890399&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274686&quot;,&quot;1676462274557/1676462274558/1676462274579&quot;,&quot;1676462274659/1676462274660/1676462274751&quot;,&quot;1544591089661/1544591099675/1544591198772&quot;,&quot;1544591089661/1544591260222/1544591341221&quot;,&quot;1544596644314/1544596678647/1544596711546&quot;,&quot;1544591089661/1544591099675/1544591219876&quot;,&quot;1544525043137/1544525159358/1544525246748&quot;,&quot;1544591089661/1544591099675/1544591247402&quot;,&quot;1676462274659/1676462274660/1676462274682&quot;,&quot;1676462274557/1676462274558/1676462274597&quot;,&quot;1676462274557/1676462274558/1676462274577&quot;,&quot;1676462274557/1676462274558/1676462274595&quot;,&quot;1676462274659/1676462274660/1676462274752&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544592286221/1544592291887/1544592322911&quot;,&quot;1676462274659/1676462274660/1676462274688&quot;,&quot;1676462274659/1676462274660/1676462274760&quot;,&quot;1544591089661/1544591260222/1544591334581&quot;,&quot;1544591751639/1544592145731/1544592165309&quot;,&quot;1544592286221/1544592623523/1544592671565&quot;,&quot;1676462274659/1676462274660/1676462274706&quot;,&quot;1676462274557/1676462274558/1676462274575&quot;,&quot;1544525043137/1544525058289/1544525143762&quot;,&quot;1544525590768/1544525683364/1544525778291&quot;,&quot;1676462274659/1676462274660/1676462274861&quot;,&quot;1676462274659/1676462274660/1676462274716&quot;,&quot;1676462274557/1676462274558/1676462274574&quot;,&quot;1676462274659/1676462274660/1676462274676&quot;,&quot;1676462274557/1676462274558/1676462274559&quot;,&quot;1544596644314/1544597091060/1544597149347&quot;,&quot;1544526345845/1544526671965/1544526728620&quot;,&quot;1676462274659/1676462274660/1676462274734&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1676462274659/1676462274660/1676462274868&quot;,&quot;1544526345845/1544528319371/1544528367998&quot;,&quot;1676462274659/1676462274660/1676462274864&quot;,&quot;1676462274557/1676462274558/1676462274587&quot;,&quot;1544591089661/1544591099675/1544591181584&quot;,&quot;1676462274659/1676462274660/1676462274742&quot;,&quot;1676462274659/1676462274660/1676462274683&quot;,&quot;1676462274659/1676462274660/1676462274675&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274750&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544591751639/1544592145731/1544592194540&quot;,&quot;1544592286221/1544592520233/1544592561671&quot;,&quot;1676462274659/1676462274660/1676462274841&quot;,&quot;1544525043137/1544525280855/1544525289279&quot;,&quot;1544591089661/1544591099675/1544591165699&quot;,&quot;1544592286221/1544592291887/1544592363784&quot;,&quot;1676462274659/1676462274660/1676462274684&quot;,&quot;1544591089661/1544591602655/1544591669971&quot;,&quot;1676462274659/1676462274660/1676462274743&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] stringArray = {&quot;perfprod41&quot;, &quot;perfprod42&quot;, &quot;perfprod43&quot;, &quot;perfprod44&quot;, &quot;perfprod45&quot;,
    &quot;perfprod46&quot;, &quot;perfprod47&quot;, &quot;perfprod48&quot;, &quot;perfprod49&quot;, &quot;perfprod50&quot;,
    &quot;perfprod101&quot;, &quot;perfprod102&quot;, &quot;perfprod103&quot;, &quot;perfprod104&quot;, &quot;perfprod105&quot;};

int randomIndex = (int) (Math.random() * stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;20&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_20LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;30&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_30LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;50&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_50LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;200&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_200LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;400&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_400LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
                <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x students and join using classcode of current teacher" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfStudentsInClass}</stringProp>
            </LoopController>
            <hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">import java.util.Date;

Date date = new Date();
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;classcode&quot;);

studentextuserid = &quot;std&quot; + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;studentextuserid&quot;, studentextuserid);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] multiProducts = {
    &quot;perfprod41&quot;, &quot;perfprod42&quot;, &quot;perfprod43&quot;, &quot;perfprod44&quot;, &quot;perfprod45&quot;,
    &quot;perfprod46&quot;, &quot;perfprod47&quot;, &quot;perfprod48&quot;, &quot;perfprod49&quot;, &quot;perfprod50&quot;,
    &quot;perfprod101&quot;, &quot;perfprod102&quot;, &quot;perfprod103&quot;, &quot;perfprod104&quot;, &quot;perfprod105&quot;
};

for (int i = 0; i &lt; multiProducts.length; i++) {
    vars.put(&quot;multiProduct&quot; + (i + 1), multiProducts[i]);
}

vars.put(&quot;productcode&quot;, multiProducts[0]);
vars.put(&quot;peCount&quot;, String.valueOf(multiProducts.length));</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with product_code and class_code" enabled="true">
                <stringProp name="IncludeController.includepath">join_Spaces_with_product_code_and_class_code.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">multiProduct</stringProp>
                <stringProp name="ForeachController.returnVal">multiProduct</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">1</stringProp>
                <stringProp name="ForeachController.endIndex">${peCount}</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Entitle User with Product" enabled="true">
                  <stringProp name="IncludeController.includepath">Entitle_User_With_Product.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="false">
                <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_student.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">timestamp = vars.get(&quot;date&quot;);

FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameStd&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
              <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameTch&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - 5B15PE - 300-650LOs" enabled="false">
            <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;5B15PE&quot;;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">String[] multiProducts = {
    &quot;evpel1&quot;, &quot;perfb1pe1&quot;, &quot;perfb1pe2&quot;, &quot;perfprod3&quot;, &quot;perfprod4&quot;, &quot;perfprod5&quot;, &quot;perfprod6&quot;, &quot;perfprod7&quot;, &quot;perfprod8&quot;, &quot;perfprod101&quot;, &quot;perfprod102&quot;, &quot;perfprod103&quot;, &quot;perfprod104&quot;, &quot;perfprod105&quot;, &quot;perfprodct3&quot;
};

String multiProductsAsString = &quot;\&quot;evpel1\&quot;, \&quot;perfb1pe1\&quot;, \&quot;perfb1pe2\&quot;, \&quot;perfprod3\&quot;, \&quot;perfprod4\&quot;, \&quot;perfprod5\&quot;, \&quot;perfprod6\&quot;, \&quot;perfprod7\&quot;, \&quot;perfprod8\&quot;, \&quot;perfprod101\&quot;, \&quot;perfprod102\&quot;, \&quot;perfprod103\&quot;, \&quot;perfprod104\&quot;, \&quot;perfprod105\&quot;, \&quot;perfprodct3\&quot;&quot;;

for (int i = 0; i &lt; multiProducts.length; i++) {
    vars.put(&quot;multiProduct&quot; + (i + 1), multiProducts[i]);
}

vars.put(&quot;productArrayString&quot;, multiProductsAsString);
vars.put(&quot;productcode&quot;, multiProducts[0]);
vars.put(&quot;peCount&quot;, String.valueOf(multiProducts.length));</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate multi products with a class" enabled="true">
              <stringProp name="IncludeController.includepath">associate_multi_products_with_class.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
                <stringProp name="RandomTimer.range">5000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [300-330]" enabled="false">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">300000</stringProp>
                <stringProp name="RandomTimer.range">30000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x assignments - 1" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfAssignmentsInClass-1}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end">${noOfAssignmentsInClass-1}</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">assignmentCount</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix5 = vars.get(&quot;noOfLOsInAssignment-1&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix5 + &quot;LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544524003551/1544524304922/1544524359136&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544524003551/1544524012478/1544524057691&quot;,&quot;1544524003551/1544524012478/1544524030068&quot;,&quot;1544525043137/1544525058289/1544525097148&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544525043137/1544525058289/1544525137957&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1544524003551/1544524304922/1544524324762&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544525043137/1544525058289/1544525090848&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1544524003551/1544524012478/1544524071582&quot;,&quot;1544524003551/1544524304922/1544524341184&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544525043137/1544525058289/1544525125172&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1544524003551/1544524304922/1544524313700&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544524003551/1544524012478/1544524084276&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544524003551/1544524304922/1544524387792&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1544524003551/1544524012478/1544524099346&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1544525043137/1544525058289/1544525114886&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544524003551/1544524012478/1544524044427&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544524003551/1544524304922/1544524376121&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] stringArray = {&quot;evpel1&quot;, &quot;perfb1pe1&quot;, &quot;perfb1pe2&quot;, &quot;perfprod3&quot;, &quot;perfprod4&quot;, &quot;perfprod5&quot;, &quot;perfprod6&quot;, &quot;perfprod7&quot;, &quot;perfprod8&quot;, &quot;perfprod101&quot;, &quot;perfprod102&quot;, &quot;perfprod103&quot;, &quot;perfprod104&quot;, &quot;perfprod105&quot;};

int randomIndex = (int) (Math.random() * stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;20&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_20LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;30&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_30LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-1}&quot; == &quot;50&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_50LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
                <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x assignments - 2" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfAssignmentsInClass-2}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end">${noOfAssignmentsInClass-2}</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">assignmentCount</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix5 = vars.get(&quot;noOfLOsInAssignment-2&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix5 + &quot;LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1676462274659/1676462274660/1676462274741&quot;,&quot;1676462274659/1676462274660/1676462274707&quot;,&quot;1676462274659/1676462274660/1676462274744&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544591089661/1544591260222/1544591363137&quot;,&quot;1676462274659/1676462274660/1676462274671&quot;,&quot;1676462274659/1676462274660/1676462274732&quot;,&quot;1544524003551/1544524012478/1544524071582&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1676462274659/1676462274660/1676462274676&quot;,&quot;1676462274659/1676462274660/1676462274683&quot;,&quot;1544591089661/1544591602655/1544591669971&quot;,&quot;1544525590768/1544525683364/1544525729515&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1676462274659/1676462274660/1676462274701&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544525043137/1544525058289/1544525137957&quot;,&quot;1544591089661/1544591099675/1544591198772&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1676462274659/1676462274660/1676462274703&quot;,&quot;1544525043137/1544525159358/1544525192972&quot;,&quot;1676462274659/1676462274660/1676462274711&quot;,&quot;1544591089661/1544591099675/1544591165699&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544525043137/1544525159358/1544525175677&quot;,&quot;1544591089661/1544591364773/1544591392809&quot;,&quot;1676462274659/1676462274660/1676462274677&quot;,&quot;1544524003551/1544524304922/1544524324762&quot;,&quot;1676462274659/1676462274660/1676462274684&quot;,&quot;1544526345845/1544526671965/1544526695320&quot;,&quot;1676462274659/1676462274660/1676462274731&quot;,&quot;1544591089661/1544591602655/1544591649137&quot;,&quot;1676462274659/1676462274660/1676462274728&quot;,&quot;1544524003551/1544524012478/1544524030068&quot;,&quot;1676462274659/1676462274660/1676462274737&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1544526345845/1544526589100/1544526657285&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1676462274659/1676462274660/1676462274700&quot;,&quot;1544525043137/1544525159358/1544525263160&quot;,&quot;1544591089661/1544591260222/1544591320423&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1676462274659/1676462274660/1676462274723&quot;,&quot;1676462274659/1676462274660/1676462274724&quot;,&quot;1544525590768/1544525595533/1544525627465&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1676462274659/1676462274660/1676462274691&quot;,&quot;1676462274659/1676462274660/1676462274733&quot;,&quot;1676462274659/1676462274660/1676462274678&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1676462274659/1676462274660/1676462274705&quot;,&quot;1544526345845/1544526961740/1544527008225&quot;,&quot;1544524003551/1544524012478/1544524044427&quot;,&quot;1676462274659/1676462274660/1676462274714&quot;,&quot;1544591089661/1544591099675/1544591237488&quot;,&quot;1676462274659/1676462274660/1676462274713&quot;,&quot;1676462274659/1676462274660/1676462274740&quot;,&quot;1676462274659/1676462274660/1676462274729&quot;,&quot;1676462274659/1676462274660/1676462274699&quot;,&quot;1676462274659/1676462274660/1676462274693&quot;,&quot;1676462274659/1676462274660/1676462274687&quot;,&quot;1544591089661/1544591099675/1544591219876&quot;,&quot;1544526345845/1544526589100/1544526606750&quot;,&quot;1544525043137/1544525280855/1544525289279&quot;,&quot;1676462274659/1676462274660/1676462274719&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274715&quot;,&quot;1676462274659/1676462274660/1676462274708&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1676462274659/1676462274660/1676462274702&quot;,&quot;1544525590768/1544525683364/1544525720457&quot;,&quot;1676462274659/1676462274660/1676462274675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544526345845/1544526589100/1544526638110&quot;,&quot;1676462274659/1676462274660/1676462274709&quot;,&quot;1676462274659/1676462274660/1676462274672&quot;,&quot;1676462274659/1676462274660/1676462274685&quot;,&quot;1544525590768/1544525595533/1544525635696&quot;,&quot;1676462274659/1676462274660/1676462274743&quot;,&quot;1676462274659/1676462274660/1676462274690&quot;,&quot;1676462274659/1676462274660/1676462274712&quot;,&quot;1544524003551/1544524304922/1544524313700&quot;,&quot;1544526345845/1544528319371/1544528367998&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544525590768/1544525683364/1544525756801&quot;,&quot;1676462274659/1676462274660/1676462274688&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1676462274659/1676462274660/1676462274745&quot;,&quot;1544525590768/1544525683364/1544525778291&quot;,&quot;1544525043137/1544525159358/1544525246748&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1676462274659/1676462274660/1676462274730&quot;,&quot;1676462274659/1676462274660/1676462274726&quot;,&quot;1676462274659/1676462274660/1676462274686&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274742&quot;,&quot;1544524003551/1544524304922/1544524359136&quot;,&quot;1544524003551/1544524304922/1544524376121&quot;,&quot;1676462274659/1676462274660/1676462274698&quot;,&quot;1676462274659/1676462274660/1676462274697&quot;,&quot;1676462274659/1676462274660/1676462274682&quot;,&quot;1544591089661/1544591260222/1544591334581&quot;,&quot;1676462274659/1676462274660/1676462274673&quot;,&quot;1544525043137/1544525159358/1544525217177&quot;,&quot;1544591089661/1544591260222/1544591341221&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274704&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1676462274659/1676462274660/1676462274717&quot;,&quot;1544526345845/1544526589100/1544526610825&quot;,&quot;1544591089661/1544591099675/1544591181584&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1676462274659/1676462274660/1676462274694&quot;,&quot;1676462274659/1676462274660/1676462274722&quot;,&quot;1544526345845/1544526671965/1544526721801&quot;,&quot;1544591089661/1544591412698/1544591455780&quot;,&quot;1544525043137/1544525159358/1544525239184&quot;,&quot;1676462274659/1676462274660/1676462274692&quot;,&quot;1676462274659/1676462274660/1676462274738&quot;,&quot;1676462274659/1676462274660/1676462274716&quot;,&quot;1544526345845/1544526671965/1544526728620&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544591089661/1544591412698/1544591428190&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1676462274659/1676462274660/1676462274734&quot;,&quot;1676462274659/1676462274660/1676462274736&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1544525590768/1544525595533/1544525679427&quot;,&quot;1676462274659/1676462274660/1676462274718&quot;,&quot;1544526345845/1544526671965/1544526763389&quot;,&quot;1676462274659/1676462274660/1676462274679&quot;,&quot;1676462274659/1676462274660/1676462274689&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544591089661/1544591412698/1544591439057&quot;,&quot;1676462274659/1676462274660/1676462274706&quot;,&quot;1544591089661/1544591099675/1544591247402&quot;,&quot;1676462274659/1676462274660/1676462274680&quot;,&quot;1544591089661/1544591260222/1544591295680&quot;,&quot;1544524003551/1544524304922/1544524341184&quot;,&quot;1544525590768/1544525683364/1544525734676&quot;,&quot;1676462274659/1676462274660/1676462274735&quot;,&quot;1676462274659/1676462274660/1676462274721&quot;,&quot;1544524003551/1544524012478/1544524084276&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1676462274659/1676462274660/1676462274696&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274739&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544526345845/1544526589100/1544526644717&quot;,&quot;1676462274659/1676462274660/1676462274727&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544525590768/1544525683364/1544525709799&quot;,&quot;1544524003551/1544524012478/1544524099346&quot;,&quot;1544526345845/1544526589100/1544526623799&quot;,&quot;1544525590768/1544525595533/1544525649026&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1676462274659/1676462274660/1676462274725&quot;,&quot;1544525590768/1544525595533/1544525611432&quot;,&quot;1544524003551/1544524012478/1544524057691&quot;,&quot;1544525043137/1544525058289/1544525125172&quot;,&quot;1544591089661/1544591260222/1544591284840&quot;,&quot;1544525590768/1544525595533/1544525663048&quot;,&quot;1544526345845/1544526671965/1544526710051&quot;,&quot;1544525043137/1544525058289/1544525143762&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544525043137/1544525058289/1544525114886&quot;,&quot;1544591089661/1544591602655/1544591636888&quot;,&quot;1544526345845/1544528319371/1544528345283&quot;,&quot;1544591751639/1544591756584/1544591786410&quot;,&quot;1544526345845/1544526961740/1544526980657&quot;,&quot;1676462274659/1676462274660/1676462274674&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1676462274659/1676462274660/1676462274720&quot;,&quot;1544524003551/1544524304922/1544524387792&quot;,&quot;1544525043137/1544525058289/1544525097148&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544526345845/1544528319371/1544528334775&quot;,&quot;1676462274659/1676462274660/1676462274695&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274710&quot;,&quot;1676462274659/1676462274660/1676462274681&quot;,&quot;1544526345845/1544526961740/1544526994099&quot;,&quot;1544526345845/1544526671965/1544526688230&quot;,&quot;1544525043137/1544525058289/1544525090848&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] stringArray = {&quot;perfprod3&quot;, &quot;perfprod4&quot;, &quot;perfprod5&quot;, &quot;perfprod6&quot;, &quot;perfprod7&quot;, &quot;perfprod8&quot;, &quot;perfprod101&quot;, &quot;perfprod102&quot;, &quot;perfprod103&quot;, &quot;perfprod104&quot;, &quot;perfprod105&quot;};

int randomIndex = (int) (Math.random() * stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="false">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">def variableNames = [&quot;perfprod3&quot;, &quot;perfprod4&quot;, &quot;perfprod5&quot;, &quot;perfprod6&quot;, &quot;perfprod7&quot;, &quot;perfprod8&quot;, &quot;perfprod101&quot;, &quot;perfprod102&quot;, &quot;perfprod103&quot;, &quot;perfprod104&quot;, &quot;perfprod105&quot;];

def randomIndex = (int) (Math.random() * variableNames.size());

def randomVariableName = variableNames[randomIndex];

def randomValue = vars.get(randomVariableName);

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <InterleaveControl guiclass="InterleaveControlGui" testclass="InterleaveControl" testname="Interleave Controller" enabled="false">
                <intProp name="InterleaveControl.style">1</intProp>
                <boolProp name="InterleaveControl.accrossThreads">false</boolProp>
              </InterleaveControl>
              <hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfb1pe1&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfb1pe2&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod21&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod22&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod23&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod24&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod25&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-2}&quot; == &quot;100&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_100LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-2}&quot; == &quot;200&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_200LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
                <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x assignments - 3" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfAssignmentsInClass-3}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end">${noOfAssignmentsInClass-3}</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">assignmentCount</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
                <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
              </CounterConfig>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;assignmentCount&quot;);
prefix5 = vars.get(&quot;noOfLOsInAssignment-3&quot;);
prefix6 = vars.get(&quot;classcode&quot;);

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix6 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix5 + &quot;LOs&quot;;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544593830881/1544593964252/1544594102416&quot;,&quot;1676462274659/1676462274660/1676462274700&quot;,&quot;1676462274557/1676462274558/1676462274576&quot;,&quot;1676462274659/1676462274660/1676462274713&quot;,&quot;1544592857014/1544592865722/1544593072380&quot;,&quot;1676462274557/1676462274558/1676462274571&quot;,&quot;1544592857014/1544592865722/1544593123201&quot;,&quot;1544593830881/1544593842258/1544593905062&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1676462274659/1676462274660/1676462274755&quot;,&quot;1676462274557/1676462274558/1676462274588&quot;,&quot;1676462274557/1676462274558/1676462274585&quot;,&quot;1544593830881/1544596291616/1544596322099&quot;,&quot;1676462274659/1676462274660/1676462274729&quot;,&quot;1544596644314/1544596678647/1544596745950&quot;,&quot;1544593830881/1544593842258/1544593925051&quot;,&quot;1676462274659/1676462274660/1676462274863&quot;,&quot;1544524003551/1544524012478/1544524084276&quot;,&quot;1676462274659/1676462274660/1676462274719&quot;,&quot;1544524003551/1544524304922/1544524313700&quot;,&quot;1676462274659/1676462274660/1676462274862&quot;,&quot;1544592286221/1544592379241/1544592438186&quot;,&quot;1676462274557/1676462274558/1676462274602&quot;,&quot;1676462274659/1676462274660/1676462274689&quot;,&quot;1676462274659/1676462274660/1676462274724&quot;,&quot;1544591089661/1544591260222/1544591284840&quot;,&quot;1676462274659/1676462274660/1676462274858&quot;,&quot;1676462274557/1676462274558/1676462274590&quot;,&quot;1544592857014/1544593139545/1544593488247&quot;,&quot;1676462274659/1676462274660/1676462274733&quot;,&quot;1544596644314/1544596802487/1544596921860&quot;,&quot;1676462274659/1676462274660/1676462274759&quot;,&quot;1676462274557/1676462274558/1676462274614&quot;,&quot;1676462274557/1676462274558/1676462274560&quot;,&quot;1544526345845/1544526671965/1544526688230&quot;,&quot;1544593830881/1544593964252/1544594177257&quot;,&quot;1676462274659/1676462274660/1676462274753&quot;,&quot;1676462274659/1676462274660/1676462274672&quot;,&quot;1676462274659/1676462274660/1676462274747&quot;,&quot;1544525590768/1544525595533/1544525649026&quot;,&quot;1676462274659/1676462274660/1676462274848&quot;,&quot;1544591089661/1544591260222/1544591363137&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1676462274659/1676462274660/1676462274756&quot;,&quot;1676462274659/1676462274660/1676462274860&quot;,&quot;1544593830881/1544596494652/1544596529922&quot;,&quot;1676462274659/1676462274660/1676462274857&quot;,&quot;1676462274557/1676462274558/1676462274615&quot;,&quot;1676462274659/1676462274660/1676462274851&quot;,&quot;1544592286221/1544592474205/1544592491253&quot;,&quot;1544591751639/1544591756584/1544591852005&quot;,&quot;1676462274659/1676462274660/1676462274715&quot;,&quot;1544525043137/1544525159358/1544525175677&quot;,&quot;1676462274557/1676462274558/1676462274568&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592857014/1544592865722/1544593093552&quot;,&quot;1676462274557/1676462274558/1676462274570&quot;,&quot;1676462274659/1676462274660/1676462274866&quot;,&quot;1544525590768/1544525595533/1544525627465&quot;,&quot;1544525590768/1544525683364/1544525729515&quot;,&quot;1544525043137/1544525058289/1544525090848&quot;,&quot;1676462274659/1676462274660/1676462274701&quot;,&quot;1544591751639/1544592145731/1544592176780&quot;,&quot;1676462274659/1676462274660/1676462274859&quot;,&quot;1676462274557/1676462274558/1676462274609&quot;,&quot;1676462274659/1676462274660/1676462274718&quot;,&quot;1676462274557/1676462274558/1676462274580&quot;,&quot;1544525590768/1544525595533/1544525635696&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544525043137/1544525058289/1544525137957&quot;,&quot;1676462274659/1676462274660/1676462274855&quot;,&quot;1544592286221/1544592379241/1544592404760&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544591751639/1544591989858/1544592034736&quot;,&quot;1544592286221/1544592379241/1544592422449&quot;,&quot;1676462274659/1676462274660/1676462274699&quot;,&quot;1544592857014/1544592865722/1544593104748&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1544525043137/1544525159358/1544525239184&quot;,&quot;1676462274659/1676462274660/1676462274717&quot;,&quot;1676462274659/1676462274660/1676462274728&quot;,&quot;1676462274557/1676462274558/1676462274610&quot;,&quot;1676462274557/1676462274558/1676462274598&quot;,&quot;1544524003551/1544524012478/1544524057691&quot;,&quot;1544524003551/1544524304922/1544524359136&quot;,&quot;1676462274659/1676462274660/1676462274870&quot;,&quot;1676462274659/1676462274660/1676462274704&quot;,&quot;1544526345845/1544526589100/1544526657285&quot;,&quot;1544526345845/1544526589100/1544526610825&quot;,&quot;1544524003551/1544524012478/1544524099346&quot;,&quot;1544526345845/1544526589100/1544526623799&quot;,&quot;1544591751639/1544591859950/1544591895035&quot;,&quot;1676462274659/1676462274660/1676462274708&quot;,&quot;1676462274659/1676462274660/1676462274838&quot;,&quot;1676462274557/1676462274558/1676462274608&quot;,&quot;1544525043137/1544525058289/1544525114886&quot;,&quot;1676462274659/1676462274660/1676462274836&quot;,&quot;1544592286221/1544592520233/1544592540334&quot;,&quot;1544591089661/1544591364773/1544591392809&quot;,&quot;1544526345845/1544528319371/1544528345283&quot;,&quot;1676462274557/1676462274558/1676462274578&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544593830881/1544593842258/1544593889640&quot;,&quot;1676462274557/1676462274558/1676462274566&quot;,&quot;1544591089661/1544591099675/1544591237488&quot;,&quot;1676462274659/1676462274660/1676462274853&quot;,&quot;1544526345845/1544526671965/1544526721801&quot;,&quot;1544596644314/1544596802487/1544596845016&quot;,&quot;1676462274659/1676462274660/1676462274842&quot;,&quot;1544525590768/1544525595533/1544525663048&quot;,&quot;1544592857014/1544593139545/1544593476327&quot;,&quot;1544591089661/1544591602655/1544591636888&quot;,&quot;1544526345845/1544528319371/1544528334775&quot;,&quot;1544592286221/1544592291887/1544592370486&quot;,&quot;1544591089661/1544591260222/1544591295680&quot;,&quot;1676462274659/1676462274660/1676462274844&quot;,&quot;1676462274557/1676462274558/1676462274589&quot;,&quot;1544592857014/1544593529004/1544593551477&quot;,&quot;1544526345845/1544526671965/1544526695320&quot;,&quot;1676462274557/1676462274558/1676462274601&quot;,&quot;1544526345845/1544526589100/1544526638110&quot;,&quot;1676462274659/1676462274660/1676462274692&quot;,&quot;1544525043137/1544525159358/1544525217177&quot;,&quot;1676462274557/1676462274558/1676462274599&quot;,&quot;1676462274659/1676462274660/1676462274730&quot;,&quot;1676462274659/1676462274660/1676462274745&quot;,&quot;1676462274557/1676462274558/1676462274569&quot;,&quot;1676462274557/1676462274558/1676462274572&quot;,&quot;1544596644314/1544597091060/1544597121860&quot;,&quot;1544596644314/1544596678647/1544596768254&quot;,&quot;1544596644314/1544596678647/1544596792897&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544596644314/1544596678647/1544596761923&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1676462274659/1676462274660/1676462274738&quot;,&quot;1544592286221/1544592520233/1544592555974&quot;,&quot;1544592857014/1544593139545/1544593187008&quot;,&quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544596644314/1544597220792/1544597275965&quot;,&quot;1676462274659/1676462274660/1676462274839&quot;,&quot;1676462274659/1676462274660/1676462274749&quot;,&quot;1544524003551/1544524304922/1544524324762&quot;,&quot;1544591751639/1544591937229/1544591951092&quot;,&quot;1676462274659/1676462274660/1676462274869&quot;,&quot;1544525043137/1544525159358/1544525263160&quot;,&quot;1676462274557/1676462274558/1676462274582&quot;,&quot;1544593830881/1544593964252/1544594135462&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544526345845/1544526589100/1544526606750&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1676462274557/1676462274558/1676462274607&quot;,&quot;1676462274557/1676462274558/1676462274603&quot;,&quot;1676462274659/1676462274660/1676462274723&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544592286221/1544592623523/1544592658543&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274557/1676462274558/1676462274596&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1544596644314/1544597008306/1544597032165&quot;,&quot;1544525590768/1544525683364/1544525756801&quot;,&quot;1544591089661/1544591412698/1544591455780&quot;,&quot;1544591751639/1544591756584/1544591814105&quot;,&quot;1676462274659/1676462274660/1676462274673&quot;,&quot;1676462274659/1676462274660/1676462274694&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1544526345845/1544526671965/1544526710051&quot;,&quot;1676462274659/1676462274660/1676462274681&quot;,&quot;1544596644314/1544596802487/1544596877787&quot;,&quot;1676462274659/1676462274660/1676462274711&quot;,&quot;1676462274557/1676462274558/1676462274613&quot;,&quot;1544525590768/1544525683364/1544525709799&quot;,&quot;1676462274659/1676462274660/1676462274685&quot;,&quot;1544526345845/1544526961740/1544527008225&quot;,&quot;1676462274659/1676462274660/1676462274714&quot;,&quot;1544525043137/1544525058289/1544525125172&quot;,&quot;1544525043137/1544525159358/1544525192972&quot;,&quot;1544525590768/1544525683364/1544525720457&quot;,&quot;1676462274659/1676462274660/1676462274748&quot;,&quot;1544524003551/1544524012478/1544524030068&quot;,&quot;1676462274659/1676462274660/1676462274757&quot;,&quot;1544524003551/1544524304922/1544524387792&quot;,&quot;1676462274659/1676462274660/1676462274840&quot;,&quot;1676462274557/1676462274558/1676462274561&quot;,&quot;1544591751639/1544591756584/1544591786410&quot;,&quot;1544526345845/1544526671965/1544526763389&quot;,&quot;1544596644314/1544596678647/1544596731689&quot;,&quot;1676462274659/1676462274660/1676462274852&quot;,&quot;1676462274659/1676462274660/1676462274677&quot;,&quot;1544525590768/1544525595533/1544525611432&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1544591751639/1544591756584/1544591842867&quot;,&quot;1544593830881/1544596291616/1544596327463&quot;,&quot;1676462274659/1676462274660/1676462274712&quot;,&quot;1676462274659/1676462274660/1676462274845&quot;,&quot;1544592286221/1544592379241/1544592448263&quot;,&quot;1544593830881/1544593964252/1544594078882&quot;,&quot;1676462274557/1676462274558/1676462274562&quot;,&quot;1544524003551/1544524304922/1544524376121&quot;,&quot;1676462274659/1676462274660/1676462274735&quot;,&quot;1544592857014/1544593139545/1544593454057&quot;,&quot;1676462274659/1676462274660/1676462274850&quot;,&quot;1544592857014/1544593585947/1544593632079&quot;,&quot;1544592286221/1544592379241/1544592415158&quot;,&quot;1544592286221/1544592623523/1544592648386&quot;,&quot;1676462274557/1676462274558/1676462274586&quot;,&quot;1676462274659/1676462274660/1676462274740&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593585947/1544593606215&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1544591751639/1544591859950/1544591923488&quot;,&quot;1676462274659/1676462274660/1676462274725&quot;,&quot;1544592857014/1544593703192/1544593752239&quot;,&quot;1676462274659/1676462274660/1676462274710&quot;,&quot;1544593830881/1544596494652/1544596513093&quot;,&quot;1544525590768/1544525683364/1544525734676&quot;,&quot;1544593830881/1544593842258/1544593932560&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1544592857014/1544593703192/1544593743725&quot;,&quot;1544525043137/1544525058289/1544525097148&quot;,&quot;1544596644314/1544597220792/1544597245750&quot;,&quot;1676462274557/1676462274558/1676462274573&quot;,&quot;1544592857014/1544592865722/1544593079694&quot;,&quot;1544591751639/1544591756584/1544591792950&quot;,&quot;1676462274659/1676462274660/1676462274736&quot;,&quot;1676462274659/1676462274660/1676462274691&quot;,&quot;1676462274659/1676462274660/1676462274837&quot;,&quot;1676462274557/1676462274558/1676462274584&quot;,&quot;1676462274659/1676462274660/1676462274695&quot;,&quot;1676462274659/1676462274660/1676462274679&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;,&quot;1676462274557/1676462274558/1676462274612&quot;,&quot;1676462274659/1676462274660/1676462274737&quot;,&quot;1676462274659/1676462274660/1676462274849&quot;,&quot;1544525590768/1544525595533/1544525679427&quot;,&quot;1544524003551/1544524304922/1544524341184&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1676462274659/1676462274660/1676462274758&quot;,&quot;1676462274659/1676462274660/1676462274854&quot;,&quot;1676462274659/1676462274660/1676462274690&quot;,&quot;1544596644314/1544597220792/1544597262426&quot;,&quot;1676462274557/1676462274558/1676462274591&quot;,&quot;1676462274659/1676462274660/1676462274846&quot;,&quot;1676462274659/1676462274660/1676462274856&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1676462274557/1676462274558/1676462274611&quot;,&quot;1676462274659/1676462274660/1676462274703&quot;,&quot;1676462274557/1676462274558/1676462274593&quot;,&quot;1676462274659/1676462274660/1676462274702&quot;,&quot;1676462274557/1676462274558/1676462274605&quot;,&quot;1676462274659/1676462274660/1676462274843&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544593830881/1544593964252/1544594113782&quot;,&quot;1544593830881/1544593964252/1544594194047&quot;,&quot;1676462274659/1676462274660/1676462274671&quot;,&quot;1676462274557/1676462274558/1676462274604&quot;,&quot;1676462274659/1676462274660/1676462274721&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544591089661/1544591260222/1544591320423&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544591751639/1544591989858/1544592017149&quot;,&quot;1676462274557/1676462274558/1676462274581&quot;,&quot;1676462274659/1676462274660/1676462274680&quot;,&quot;1544592857014/1544593585947/1544593620647&quot;,&quot;1676462274659/1676462274660/1676462274746&quot;,&quot;1544596644314/1544596802487/1544596858389&quot;,&quot;1544526345845/1544526961740/1544526994099&quot;,&quot;1676462274659/1676462274660/1676462274697&quot;,&quot;1544591089661/1544591412698/1544591439057&quot;,&quot;1544592286221/1544592379241/1544592466092&quot;,&quot;1544593830881/1544596494652/1544596545929&quot;,&quot;1676462274557/1676462274558/1676462274592&quot;,&quot;1676462274659/1676462274660/1676462274865&quot;,&quot;1676462274557/1676462274558/1676462274565&quot;,&quot;1676462274659/1676462274660/1676462274741&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544592286221/1544592291887/1544592347743&quot;,&quot;1544596644314/1544597091060/1544597104557&quot;,&quot;1544524003551/1544524012478/1544524044427&quot;,&quot;1676462274557/1676462274558/1676462274564&quot;,&quot;1676462274659/1676462274660/1676462274727&quot;,&quot;1676462274659/1676462274660/1676462274705&quot;,&quot;1544591751639/1544591859950/1544591889129&quot;,&quot;1676462274659/1676462274660/1676462274744&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1676462274659/1676462274660/1676462274696&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1676462274557/1676462274558/1676462274583&quot;,&quot;1544526345845/1544526589100/1544526644717&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1676462274557/1676462274558/1676462274616&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1676462274659/1676462274660/1676462274693&quot;,&quot;1544592286221/1544592291887/1544592333414&quot;,&quot;1676462274659/1676462274660/1676462274739&quot;,&quot;1676462274659/1676462274660/1676462274707&quot;,&quot;1544591089661/1544591602655/1544591649137&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1676462274557/1676462274558/1676462274563&quot;,&quot;1544596644314/1544596802487/1544596904838&quot;,&quot;1676462274557/1676462274558/1676462274600&quot;,&quot;1676462274659/1676462274660/1676462274720&quot;,&quot;1544591089661/1544591412698/1544591428190&quot;,&quot;1676462274557/1676462274558/1676462274594&quot;,&quot;1676462274557/1676462274558/1676462274567&quot;,&quot;1676462274659/1676462274660/1676462274678&quot;,&quot;1544592857014/1544593703192/1544593728070&quot;,&quot;1544593830881/1544596248781/1544596271349&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1676462274659/1676462274660/1676462274754&quot;,&quot;1544593830881/1544593842258/1544593874472&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1676462274659/1676462274660/1676462274698&quot;,&quot;1544593830881/1544596291616/1544596347700&quot;,&quot;1544592286221/1544592291887/1544592314873&quot;,&quot;1544524003551/1544524012478/1544524071582&quot;,&quot;1676462274659/1676462274660/1676462274687&quot;,&quot;1544592857014/1544593139545/1544593471128&quot;,&quot;1676462274659/1676462274660/1676462274847&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544591751639/1544591859950/1544591913490&quot;,&quot;1544592857014/1544592865722/1544593053271&quot;,&quot;1676462274557/1676462274558/1676462274606&quot;,&quot;1676462274659/1676462274660/1676462274726&quot;,&quot;1676462274659/1676462274660/1676462274709&quot;,&quot;1676462274659/1676462274660/1676462274722&quot;,&quot;1544591751639/1544591989858/1544592010989&quot;,&quot;1544593830881/1544593842258/1544593949312&quot;,&quot;1544591751639/1544591756584/1544591826125&quot;,&quot;1676462274659/1676462274660/1676462274867&quot;,&quot;1544526345845/1544526961740/1544526980657&quot;,&quot;1676462274659/1676462274660/1676462274674&quot;,&quot;1544592857014/1544593139545/1544593173865&quot;,&quot;1676462274659/1676462274660/1676462274731&quot;,&quot;1676462274659/1676462274660/1676462274732&quot;,&quot;1544596644314/1544596802487/1544596890399&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274686&quot;,&quot;1676462274557/1676462274558/1676462274579&quot;,&quot;1676462274659/1676462274660/1676462274751&quot;,&quot;1544591089661/1544591099675/1544591198772&quot;,&quot;1544591089661/1544591260222/1544591341221&quot;,&quot;1544596644314/1544596678647/1544596711546&quot;,&quot;1544591089661/1544591099675/1544591219876&quot;,&quot;1544525043137/1544525159358/1544525246748&quot;,&quot;1544591089661/1544591099675/1544591247402&quot;,&quot;1676462274659/1676462274660/1676462274682&quot;,&quot;1676462274557/1676462274558/1676462274597&quot;,&quot;1676462274557/1676462274558/1676462274577&quot;,&quot;1676462274557/1676462274558/1676462274595&quot;,&quot;1676462274659/1676462274660/1676462274752&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544592286221/1544592291887/1544592322911&quot;,&quot;1676462274659/1676462274660/1676462274688&quot;,&quot;1676462274659/1676462274660/1676462274760&quot;,&quot;1544591089661/1544591260222/1544591334581&quot;,&quot;1544591751639/1544592145731/1544592165309&quot;,&quot;1544592286221/1544592623523/1544592671565&quot;,&quot;1676462274659/1676462274660/1676462274706&quot;,&quot;1676462274557/1676462274558/1676462274575&quot;,&quot;1544525043137/1544525058289/1544525143762&quot;,&quot;1544525590768/1544525683364/1544525778291&quot;,&quot;1676462274659/1676462274660/1676462274861&quot;,&quot;1676462274659/1676462274660/1676462274716&quot;,&quot;1676462274557/1676462274558/1676462274574&quot;,&quot;1676462274659/1676462274660/1676462274676&quot;,&quot;1676462274557/1676462274558/1676462274559&quot;,&quot;1544596644314/1544597091060/1544597149347&quot;,&quot;1544526345845/1544526671965/1544526728620&quot;,&quot;1676462274659/1676462274660/1676462274734&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1676462274659/1676462274660/1676462274868&quot;,&quot;1544526345845/1544528319371/1544528367998&quot;,&quot;1676462274659/1676462274660/1676462274864&quot;,&quot;1676462274557/1676462274558/1676462274587&quot;,&quot;1544591089661/1544591099675/1544591181584&quot;,&quot;1676462274659/1676462274660/1676462274742&quot;,&quot;1676462274659/1676462274660/1676462274683&quot;,&quot;1676462274659/1676462274660/1676462274675&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274750&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544591751639/1544592145731/1544592194540&quot;,&quot;1544592286221/1544592520233/1544592561671&quot;,&quot;1676462274659/1676462274660/1676462274841&quot;,&quot;1544525043137/1544525280855/1544525289279&quot;,&quot;1544591089661/1544591099675/1544591165699&quot;,&quot;1544592286221/1544592291887/1544592363784&quot;,&quot;1676462274659/1676462274660/1676462274684&quot;,&quot;1544591089661/1544591602655/1544591669971&quot;,&quot;1676462274659/1676462274660/1676462274743&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;
};

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] stringArray = {&quot;perfprod101&quot;, &quot;perfprod102&quot;, &quot;perfprod103&quot;, &quot;perfprod104&quot;, &quot;perfprod105&quot;};

int randomIndex = (int) (Math.random() * stringArray.length);

String randomValue = stringArray[randomIndex];

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="false">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">def variableNames = [&quot;perfprod101&quot;, &quot;perfprod102&quot;, &quot;perfprod103&quot;, &quot;perfprod104&quot;, &quot;perfprod105&quot;];

def randomIndex = (int) (Math.random() * variableNames.size());

def randomVariableName = variableNames[randomIndex];

def randomValue = vars.get(randomVariableName);

vars.put(&quot;productcode&quot;, randomValue);</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <InterleaveControl guiclass="InterleaveControlGui" testclass="InterleaveControl" testname="Interleave Controller" enabled="false">
                <intProp name="InterleaveControl.style">1</intProp>
                <boolProp name="InterleaveControl.accrossThreads">false</boolProp>
              </InterleaveControl>
              <hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfb1pe1&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfb1pe2&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod21&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod22&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod23&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod24&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod25&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAssignment-3}&quot; == &quot;400&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class_400LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
                <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x rules" enabled="false">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfAccessRulesInClass}</stringProp>
            </LoopController>
            <hashTree>
              <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
                <stringProp name="maximumValue">9999</stringProp>
                <stringProp name="minimumValue">0000</stringProp>
                <stringProp name="outputFormat">0000</stringProp>
                <boolProp name="perThread">true</boolProp>
                <stringProp name="randomSeed"></stringProp>
                <stringProp name="variableName">randomNo</stringProp>
              </RandomVariableConfig>
              <hashTree/>
              <InterleaveControl guiclass="InterleaveControlGui" testclass="InterleaveControl" testname="Interleave Controller" enabled="true">
                <intProp name="InterleaveControl.style">1</intProp>
                <boolProp name="InterleaveControl.accrossThreads">false</boolProp>
              </InterleaveControl>
              <hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;evpel1&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfb1pe1&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfb1pe2&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod21&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod22&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod23&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod24&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544526345845/1544526961740/1544527585431&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544526345845/1544528319371/1544528402616&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544591089661/1544591412698/1544591582869&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544591089661/1544591602655/1544591685696&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544591751639/1544591989858/1544592139063&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544591751639/1544592145731/1544592236677&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544592286221/1544592520233/1544592607117&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544592286221/1544592623523/1544592695775&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544592857014/1544593585947/1544593695538&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544592857014/1544593703192/1544593783453&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544593830881/1544596291616/1544596481675&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544593830881/1544596494652/1544596565260&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544596644314/1544597091060/1544597193850&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544596644314/1544597220792/1544597309385&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1564112332682/1564112347344/1564112375692&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1676462274659/1676462274660/1676462274661&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1676462274659/1676462274660/1676462274662&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1676462274659/1676462274660/1676462274663&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1676462274659/1676462274660/1676462274664&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1676462274659/1676462274660/1676462274665&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1676462274659/1676462274660/1676462274666&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1676462274659/1676462274660/1676462274667&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1676462274659/1676462274660/1676462274668&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1676462274659/1676462274660/1676462274669&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1676462274659/1676462274660/1676462274670&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod25&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAccessRule}&quot; == &quot;50&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a rule" enabled="true">
                  <stringProp name="IncludeController.includepath">Create_a_rule_100LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${noOfLOsInAccessRule}&quot; == &quot;100&quot;;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a rule" enabled="true">
                  <stringProp name="IncludeController.includepath">Create_a_rule_100LOs.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x students and join using classcode of current teacher" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${noOfStudentsInClass}</stringProp>
            </LoopController>
            <hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">import java.util.Date;

Date date = new Date();
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;classcode&quot;);

studentextuserid = &quot;std&quot; + &quot;_&quot; + prefix4 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;studentextuserid&quot;, studentextuserid);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">String[] multiProducts = {
    &quot;evpel1&quot;, &quot;perfb1pe1&quot;, &quot;perfb1pe2&quot;, &quot;perfprod3&quot;, &quot;perfprod4&quot;, &quot;perfprod5&quot;, &quot;perfprod6&quot;, &quot;perfprod7&quot;, &quot;perfprod8&quot;, &quot;perfprod101&quot;, &quot;perfprod102&quot;, &quot;perfprod103&quot;, &quot;perfprod104&quot;, &quot;perfprod105&quot;, &quot;perfprodct3&quot;
};

for (int i = 0; i &lt; multiProducts.length; i++) {
    vars.put(&quot;multiProduct&quot; + (i + 1), multiProducts[i]);
}

vars.put(&quot;productcode&quot;, multiProducts[0]);
vars.put(&quot;peCount&quot;, String.valueOf(multiProducts.length));</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with product_code and class_code" enabled="true">
                <stringProp name="IncludeController.includepath">join_Spaces_with_product_code_and_class_code.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">multiProduct</stringProp>
                <stringProp name="ForeachController.returnVal">multiProduct</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">1</stringProp>
                <stringProp name="ForeachController.endIndex">${peCount}</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Entitle User with Product" enabled="true">
                  <stringProp name="IncludeController.includepath">Entitle_User_With_Product.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                  <stringProp name="RandomTimer.range">5000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="false">
                <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_student.jmx</stringProp>
              </IncludeController>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">timestamp = vars.get(&quot;date&quot;);

FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameStd&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
              <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameTch&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Template - Manish sir" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilenameTch" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilenameTch</stringProp>
                <stringProp name="Argument.value">scenario_tch_asnmt_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="outputCsvFilenameStd" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilenameStd</stringProp>
                <stringProp name="Argument.value">student_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">template.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">noOfClasses,category,noOfAssignmentsInClass,noOfStudentsInClass</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="teacher_name" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

extuserid = &quot;tch&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;extuserid&quot;, extuserid);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="true">
            <stringProp name="IncludeController.includepath">Join_a_space_with_space_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [60-65 sec]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">60000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">${noOfClasses}</stringProp>
          </LoopController>
          <hashTree>
            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
              <stringProp name="CounterConfig.start">1</stringProp>
              <stringProp name="CounterConfig.end">${noOfClasses}</stringProp>
              <stringProp name="CounterConfig.incr">1</stringProp>
              <stringProp name="CounterConfig.name">count</stringProp>
              <stringProp name="CounterConfig.format"></stringProp>
              <boolProp name="CounterConfig.per_user">true</boolProp>
              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
            </CounterConfig>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="class_name" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;
prefix4 = vars.get(&quot;count&quot;);

classname = &quot;class&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3 + &quot;_&quot; + prefix4;
vars.put(&quot;classname&quot;, classname);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="startdate" elementType="Argument">
                  <stringProp name="Argument.name">startdate</stringProp>
                  <stringProp name="Argument.value">${__time(,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="enddate" elementType="Argument">
                  <stringProp name="Argument.name">enddate</stringProp>
                  <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="assignedPathList" elementType="Argument">
                  <stringProp name="Argument.name">assignedPathList</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class" enabled="true">
              <stringProp name="IncludeController.includepath">create_new_instructor_led_class.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
                <stringProp name="RandomTimer.range">5000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - 2B3PE" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;2B3PE&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - Multi Umbrella" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="bundleCount" elementType="Argument">
                    <stringProp name="Argument.name">bundleCount</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="PE_count_in_bundle1" elementType="Argument">
                    <stringProp name="Argument.name">PE_count_in_bundle1</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="PE_count_in_bundle2" elementType="Argument">
                    <stringProp name="Argument.name">PE_count_in_bundle2</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="totalPECount" elementType="Argument">
                    <stringProp name="Argument.name">totalPECount</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="bundleName1" elementType="Argument">
                    <stringProp name="Argument.name">bundleName1</stringProp>
                    <stringProp name="Argument.value">evpel1_bundle</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="bundleName2" elementType="Argument">
                    <stringProp name="Argument.name">bundleName2</stringProp>
                    <stringProp name="Argument.value">perf_bundle_1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct1" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct1</stringProp>
                    <stringProp name="Argument.value">evpel1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct2" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct2</stringProp>
                    <stringProp name="Argument.value">perfb1pe1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct3" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct3</stringProp>
                    <stringProp name="Argument.value">perfb1pe2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="productcode" elementType="Argument">
                    <stringProp name="Argument.name">productcode</stringProp>
                    <stringProp name="Argument.value">evpel1</stringProp>
                    <stringProp name="Argument.desc">used in assignment creation</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="itemcode1" elementType="Argument">
                    <stringProp name="Argument.name">itemcode1</stringProp>
                    <stringProp name="Argument.value">1544521486954/1544521507623/1544521559147</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="itemcode2" elementType="Argument">
                    <stringProp name="Argument.name">itemcode2</stringProp>
                    <stringProp name="Argument.value">1544522366063/1544522528807/1544522568979</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="itemcode3" elementType="Argument">
                    <stringProp name="Argument.name">itemcode3</stringProp>
                    <stringProp name="Argument.value">1544525043137/1544525159358/1544525217177</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="itemcode4" elementType="Argument">
                    <stringProp name="Argument.name">itemcode4</stringProp>
                    <stringProp name="Argument.value">1544526345845/1544526961740/1544526994099</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="itemcode5" elementType="Argument">
                    <stringProp name="Argument.name">itemcode5</stringProp>
                    <stringProp name="Argument.value">1544591751639/1544591859950/1544591889129</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="itemcode6" elementType="Argument">
                    <stringProp name="Argument.name">itemcode6</stringProp>
                    <stringProp name="Argument.value">1544591751639/1544591859950/1544591895035</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="itemcode7" elementType="Argument">
                    <stringProp name="Argument.name">itemcode7</stringProp>
                    <stringProp name="Argument.value">1544591751639/1544592145731/1544592165309</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="itemcode8" elementType="Argument">
                    <stringProp name="Argument.name">itemcode8</stringProp>
                    <stringProp name="Argument.value">1544592286221/1544592291887/1544592314873</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="itemcode9" elementType="Argument">
                    <stringProp name="Argument.name">itemcode9</stringProp>
                    <stringProp name="Argument.value">1544592857014/1544593585947/1544593620647</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="itemcode10" elementType="Argument">
                    <stringProp name="Argument.name">itemcode10</stringProp>
                    <stringProp name="Argument.value">1544596644314/1544597008306/1544597032165</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="itemcode11" elementType="Argument">
                    <stringProp name="Argument.name">itemcode11</stringProp>
                    <stringProp name="Argument.value">1544596644314/1544597091060/1544597104557</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="itemcode12" elementType="Argument">
                    <stringProp name="Argument.name">itemcode12</stringProp>
                    <stringProp name="Argument.value">1544596644314/1544597091060/1544597121860</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="itemcode13" elementType="Argument">
                    <stringProp name="Argument.name">itemcode13</stringProp>
                    <stringProp name="Argument.value">1544596644314/1544597220792/1544597245750</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="itemcode14" elementType="Argument">
                    <stringProp name="Argument.name">itemcode14</stringProp>
                    <stringProp name="Argument.value">1544596644314/1544597220792/1544597262426</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="itemcode15" elementType="Argument">
                    <stringProp name="Argument.name">itemcode15</stringProp>
                    <stringProp name="Argument.value">1544596644314/1544597220792/1544597275965</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </Arguments>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="Bundle Association Count - ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">multiProduct</stringProp>
                <stringProp name="ForeachController.returnVal">multiProduct</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">${totalPECount}</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class" enabled="true">
                  <stringProp name="IncludeController.includepath">associate_a_product_with_class_MultiProduct.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [300-330]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">300000</stringProp>
                  <stringProp name="RandomTimer.range">30000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x assignments" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">${noOfAssignmentsInClass}</stringProp>
              </LoopController>
              <hashTree>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
                  <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                  <intProp name="ActionProcessor.action">1</intProp>
                  <intProp name="ActionProcessor.target">0</intProp>
                  <stringProp name="ActionProcessor.duration">0</stringProp>
                </TestAction>
                <hashTree>
                  <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                    <stringProp name="ConstantTimer.delay">10000</stringProp>
                    <stringProp name="RandomTimer.range">5000</stringProp>
                  </UniformRandomTimer>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x students and join using classcode of current teacher" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">${noOfStudentsInClass}</stringProp>
              </LoopController>
              <hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.util.Date;

Date date = new Date();
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;

studentextuserid = &quot;std&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;studentextuserid&quot;, studentextuserid);
</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-20]" enabled="false">
                  <intProp name="ActionProcessor.action">1</intProp>
                  <intProp name="ActionProcessor.target">0</intProp>
                  <stringProp name="ActionProcessor.duration">0</stringProp>
                </TestAction>
                <hashTree>
                  <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                    <stringProp name="ConstantTimer.delay">10000</stringProp>
                    <stringProp name="RandomTimer.range">10000</stringProp>
                  </UniformRandomTimer>
                  <hashTree/>
                </hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with product_code and class_code" enabled="true">
                  <stringProp name="IncludeController.includepath">join_Spaces_with_product_code_and_class_code.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                  <intProp name="ActionProcessor.action">1</intProp>
                  <intProp name="ActionProcessor.target">0</intProp>
                  <stringProp name="ActionProcessor.duration">0</stringProp>
                </TestAction>
                <hashTree>
                  <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                    <stringProp name="ConstantTimer.delay">10000</stringProp>
                    <stringProp name="RandomTimer.range">5000</stringProp>
                  </UniformRandomTimer>
                  <hashTree/>
                </hashTree>
                <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                  <stringProp name="ForeachController.inputVal">multiProduct</stringProp>
                  <stringProp name="ForeachController.returnVal">multiProduct</stringProp>
                  <boolProp name="ForeachController.useSeparator">false</boolProp>
                  <stringProp name="ForeachController.startIndex">1</stringProp>
                  <stringProp name="ForeachController.endIndex">${totalPECount}</stringProp>
                </ForeachController>
                <hashTree>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Entitle User with Product" enabled="true">
                    <stringProp name="IncludeController.includepath">Entitle_User_With_Product.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                  <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                    <intProp name="ActionProcessor.action">1</intProp>
                    <intProp name="ActionProcessor.target">0</intProp>
                    <stringProp name="ActionProcessor.duration">0</stringProp>
                  </TestAction>
                  <hashTree>
                    <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                      <stringProp name="ConstantTimer.delay">10000</stringProp>
                      <stringProp name="RandomTimer.range">5000</stringProp>
                    </UniformRandomTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_student.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">timestamp = vars.get(&quot;date&quot;);

FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameStd&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
                <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameTch&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - 2B5PE" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;2B5PE&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - Multi Umbrella" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="bundleCount" elementType="Argument">
                    <stringProp name="Argument.name">bundleCount</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="totalPECount" elementType="Argument">
                    <stringProp name="Argument.name">totalPECount</stringProp>
                    <stringProp name="Argument.value">5</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="bundleName1" elementType="Argument">
                    <stringProp name="Argument.name">bundleName1</stringProp>
                    <stringProp name="Argument.value">perf_bundle_1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="bundleName2" elementType="Argument">
                    <stringProp name="Argument.name">bundleName2</stringProp>
                    <stringProp name="Argument.value">perf_bundle_6</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct1" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct1</stringProp>
                    <stringProp name="Argument.value">perfb1pe1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct2" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct2</stringProp>
                    <stringProp name="Argument.value">perfb1pe2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct3" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct3</stringProp>
                    <stringProp name="Argument.value">perfprod15</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct4" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct4</stringProp>
                    <stringProp name="Argument.value">perfprod16</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct5" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct5</stringProp>
                    <stringProp name="Argument.value">perfprod17</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="productcode" elementType="Argument">
                    <stringProp name="Argument.name">productcode</stringProp>
                    <stringProp name="Argument.value">perfb1pe1</stringProp>
                    <stringProp name="Argument.desc">used in assignment creation</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="itemcode1" elementType="Argument">
                    <stringProp name="Argument.name">itemcode1</stringProp>
                    <stringProp name="Argument.value">1544521486954/1544521507623/1544521559147</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="itemcode2" elementType="Argument">
                    <stringProp name="Argument.name">itemcode2</stringProp>
                    <stringProp name="Argument.value">1544522366063/1544522528807/1544522568979</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="itemcode3" elementType="Argument">
                    <stringProp name="Argument.name">itemcode3</stringProp>
                    <stringProp name="Argument.value">1544525043137/1544525159358/1544525217177</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="itemcode4" elementType="Argument">
                    <stringProp name="Argument.name">itemcode4</stringProp>
                    <stringProp name="Argument.value">1544526345845/1544526961740/1544526994099</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="itemcode5" elementType="Argument">
                    <stringProp name="Argument.name">itemcode5</stringProp>
                    <stringProp name="Argument.value">1544591751639/1544591859950/1544591889129</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="itemcode6" elementType="Argument">
                    <stringProp name="Argument.name">itemcode6</stringProp>
                    <stringProp name="Argument.value">1544591751639/1544591859950/1544591895035</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="itemcode7" elementType="Argument">
                    <stringProp name="Argument.name">itemcode7</stringProp>
                    <stringProp name="Argument.value">1544591751639/1544592145731/1544592165309</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="itemcode8" elementType="Argument">
                    <stringProp name="Argument.name">itemcode8</stringProp>
                    <stringProp name="Argument.value">1544592286221/1544592291887/1544592314873</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="itemcode9" elementType="Argument">
                    <stringProp name="Argument.name">itemcode9</stringProp>
                    <stringProp name="Argument.value">1544592857014/1544593585947/1544593620647</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="itemcode10" elementType="Argument">
                    <stringProp name="Argument.name">itemcode10</stringProp>
                    <stringProp name="Argument.value">1544596644314/1544597008306/1544597032165</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="itemcode11" elementType="Argument">
                    <stringProp name="Argument.name">itemcode11</stringProp>
                    <stringProp name="Argument.value">1544596644314/1544597091060/1544597104557</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="itemcode12" elementType="Argument">
                    <stringProp name="Argument.name">itemcode12</stringProp>
                    <stringProp name="Argument.value">1544596644314/1544597091060/1544597121860</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="itemcode13" elementType="Argument">
                    <stringProp name="Argument.name">itemcode13</stringProp>
                    <stringProp name="Argument.value">1544596644314/1544597220792/1544597245750</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="itemcode14" elementType="Argument">
                    <stringProp name="Argument.name">itemcode14</stringProp>
                    <stringProp name="Argument.value">1544596644314/1544597220792/1544597262426</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="itemcode15" elementType="Argument">
                    <stringProp name="Argument.name">itemcode15</stringProp>
                    <stringProp name="Argument.value">1544596644314/1544597220792/1544597275965</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </Arguments>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="Bundle Association Count - ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">multiProduct</stringProp>
                <stringProp name="ForeachController.returnVal">multiProduct</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">${totalPECount}</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class" enabled="true">
                  <stringProp name="IncludeController.includepath">associate_a_product_with_class_MultiProduct.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [300-330]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">300000</stringProp>
                  <stringProp name="RandomTimer.range">30000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x assignments" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">${noOfAssignmentsInClass}</stringProp>
              </LoopController>
              <hashTree>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
                  <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                  <intProp name="ActionProcessor.action">1</intProp>
                  <intProp name="ActionProcessor.target">0</intProp>
                  <stringProp name="ActionProcessor.duration">0</stringProp>
                </TestAction>
                <hashTree>
                  <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                    <stringProp name="ConstantTimer.delay">10000</stringProp>
                    <stringProp name="RandomTimer.range">5000</stringProp>
                  </UniformRandomTimer>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x students and join using classcode of current teacher" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">${noOfStudentsInClass}</stringProp>
              </LoopController>
              <hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.util.Date;

Date date = new Date();
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;

studentextuserid = &quot;std&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;studentextuserid&quot;, studentextuserid);
</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-20]" enabled="false">
                  <intProp name="ActionProcessor.action">1</intProp>
                  <intProp name="ActionProcessor.target">0</intProp>
                  <stringProp name="ActionProcessor.duration">0</stringProp>
                </TestAction>
                <hashTree>
                  <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                    <stringProp name="ConstantTimer.delay">10000</stringProp>
                    <stringProp name="RandomTimer.range">10000</stringProp>
                  </UniformRandomTimer>
                  <hashTree/>
                </hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with product_code and class_code" enabled="true">
                  <stringProp name="IncludeController.includepath">join_Spaces_with_product_code_and_class_code.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                  <intProp name="ActionProcessor.action">1</intProp>
                  <intProp name="ActionProcessor.target">0</intProp>
                  <stringProp name="ActionProcessor.duration">0</stringProp>
                </TestAction>
                <hashTree>
                  <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                    <stringProp name="ConstantTimer.delay">10000</stringProp>
                    <stringProp name="RandomTimer.range">5000</stringProp>
                  </UniformRandomTimer>
                  <hashTree/>
                </hashTree>
                <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                  <stringProp name="ForeachController.inputVal">multiProduct</stringProp>
                  <stringProp name="ForeachController.returnVal">multiProduct</stringProp>
                  <boolProp name="ForeachController.useSeparator">false</boolProp>
                  <stringProp name="ForeachController.startIndex">1</stringProp>
                  <stringProp name="ForeachController.endIndex">${totalPECount}</stringProp>
                </ForeachController>
                <hashTree>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Entitle User with Product" enabled="true">
                    <stringProp name="IncludeController.includepath">Entitle_User_With_Product.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                  <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                    <intProp name="ActionProcessor.action">1</intProp>
                    <intProp name="ActionProcessor.target">0</intProp>
                    <stringProp name="ActionProcessor.duration">0</stringProp>
                  </TestAction>
                  <hashTree>
                    <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                      <stringProp name="ConstantTimer.delay">10000</stringProp>
                      <stringProp name="RandomTimer.range">5000</stringProp>
                    </UniformRandomTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_student.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">timestamp = vars.get(&quot;date&quot;);

FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameStd&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
                <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameTch&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - 2B8PE" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;2B8PE&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - Multi Umbrella" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="bundleCount" elementType="Argument">
                    <stringProp name="Argument.name">bundleCount</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="totalPECount" elementType="Argument">
                    <stringProp name="Argument.name">totalPECount</stringProp>
                    <stringProp name="Argument.value">8</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="bundleName1" elementType="Argument">
                    <stringProp name="Argument.name">bundleName1</stringProp>
                    <stringProp name="Argument.value">perf_bundle_6</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="bundleName2" elementType="Argument">
                    <stringProp name="Argument.name">bundleName2</stringProp>
                    <stringProp name="Argument.value">perf_bundle_8</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="productcode" elementType="Argument">
                    <stringProp name="Argument.name">productcode</stringProp>
                    <stringProp name="Argument.value">perfprod15</stringProp>
                    <stringProp name="Argument.desc">used in assignment creation</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct1" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct1</stringProp>
                    <stringProp name="Argument.value">perfprod15</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct2" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct2</stringProp>
                    <stringProp name="Argument.value">perfprod16</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct3" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct3</stringProp>
                    <stringProp name="Argument.value">perfprod17</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct4" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct4</stringProp>
                    <stringProp name="Argument.value">perfprod21</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct5" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct5</stringProp>
                    <stringProp name="Argument.value">perfprod22</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct6" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct6</stringProp>
                    <stringProp name="Argument.value">perfprod23</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct7" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct7</stringProp>
                    <stringProp name="Argument.value">perfprod24</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct8" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct8</stringProp>
                    <stringProp name="Argument.value">perfprod25</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </Arguments>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="Bundle Association Count - ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">multiProduct</stringProp>
                <stringProp name="ForeachController.returnVal">multiProduct</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">${totalPECount}</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class" enabled="true">
                  <stringProp name="IncludeController.includepath">associate_a_product_with_class_MultiProduct.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [300-330]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">300000</stringProp>
                  <stringProp name="RandomTimer.range">30000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x assignments" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">${noOfAssignmentsInClass}</stringProp>
              </LoopController>
              <hashTree>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
                  <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                  <intProp name="ActionProcessor.action">1</intProp>
                  <intProp name="ActionProcessor.target">0</intProp>
                  <stringProp name="ActionProcessor.duration">0</stringProp>
                </TestAction>
                <hashTree>
                  <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                    <stringProp name="ConstantTimer.delay">10000</stringProp>
                    <stringProp name="RandomTimer.range">5000</stringProp>
                  </UniformRandomTimer>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x students and join using classcode of current teacher" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">${noOfStudentsInClass}</stringProp>
              </LoopController>
              <hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.util.Date;

Date date = new Date();
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;

studentextuserid = &quot;std&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;studentextuserid&quot;, studentextuserid);
</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-20]" enabled="false">
                  <intProp name="ActionProcessor.action">1</intProp>
                  <intProp name="ActionProcessor.target">0</intProp>
                  <stringProp name="ActionProcessor.duration">0</stringProp>
                </TestAction>
                <hashTree>
                  <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                    <stringProp name="ConstantTimer.delay">10000</stringProp>
                    <stringProp name="RandomTimer.range">10000</stringProp>
                  </UniformRandomTimer>
                  <hashTree/>
                </hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with product_code and class_code" enabled="true">
                  <stringProp name="IncludeController.includepath">join_Spaces_with_product_code_and_class_code.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                  <intProp name="ActionProcessor.action">1</intProp>
                  <intProp name="ActionProcessor.target">0</intProp>
                  <stringProp name="ActionProcessor.duration">0</stringProp>
                </TestAction>
                <hashTree>
                  <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                    <stringProp name="ConstantTimer.delay">10000</stringProp>
                    <stringProp name="RandomTimer.range">5000</stringProp>
                  </UniformRandomTimer>
                  <hashTree/>
                </hashTree>
                <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                  <stringProp name="ForeachController.inputVal">multiProduct</stringProp>
                  <stringProp name="ForeachController.returnVal">multiProduct</stringProp>
                  <boolProp name="ForeachController.useSeparator">false</boolProp>
                  <stringProp name="ForeachController.startIndex">1</stringProp>
                  <stringProp name="ForeachController.endIndex">${totalPECount}</stringProp>
                </ForeachController>
                <hashTree>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Entitle User with Product" enabled="true">
                    <stringProp name="IncludeController.includepath">Entitle_User_With_Product.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                  <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                    <intProp name="ActionProcessor.action">1</intProp>
                    <intProp name="ActionProcessor.target">0</intProp>
                    <stringProp name="ActionProcessor.duration">0</stringProp>
                  </TestAction>
                  <hashTree>
                    <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                      <stringProp name="ConstantTimer.delay">10000</stringProp>
                      <stringProp name="RandomTimer.range">5000</stringProp>
                    </UniformRandomTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_student.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">timestamp = vars.get(&quot;date&quot;);

FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameStd&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
                <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameTch&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - 3B10PE" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;3B10PE&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - Multi Umbrella" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="bundleCount" elementType="Argument">
                    <stringProp name="Argument.name">bundleCount</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="totalPECount" elementType="Argument">
                    <stringProp name="Argument.name">totalPECount</stringProp>
                    <stringProp name="Argument.value">10</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="bundleName1" elementType="Argument">
                    <stringProp name="Argument.name">bundleName1</stringProp>
                    <stringProp name="Argument.value">perf_bundle_6</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="bundleName2" elementType="Argument">
                    <stringProp name="Argument.name">bundleName2</stringProp>
                    <stringProp name="Argument.value">perf_bundle_15</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="bundleName3" elementType="Argument">
                    <stringProp name="Argument.name">bundleName3</stringProp>
                    <stringProp name="Argument.value">perf_bundle_16</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="productcode" elementType="Argument">
                    <stringProp name="Argument.name">productcode</stringProp>
                    <stringProp name="Argument.value">perfprod15</stringProp>
                    <stringProp name="Argument.desc">used in assignment creation</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct1" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct1</stringProp>
                    <stringProp name="Argument.value">perfprod15</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct2" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct2</stringProp>
                    <stringProp name="Argument.value">perfprod16</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct3" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct3</stringProp>
                    <stringProp name="Argument.value">perfprod17</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct4" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct4</stringProp>
                    <stringProp name="Argument.value">perfprod71</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct5" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct5</stringProp>
                    <stringProp name="Argument.value">perfprod72</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct6" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct6</stringProp>
                    <stringProp name="Argument.value">perfprod73</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct7" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct7</stringProp>
                    <stringProp name="Argument.value">perfprod74</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct8" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct8</stringProp>
                    <stringProp name="Argument.value">perfprod75</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct9" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct9</stringProp>
                    <stringProp name="Argument.value">perfprod76</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct10" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct10</stringProp>
                    <stringProp name="Argument.value">perfprod77</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </Arguments>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="Bundle Association Count - ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">multiProduct</stringProp>
                <stringProp name="ForeachController.returnVal">multiProduct</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">${totalPECount}</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class" enabled="true">
                  <stringProp name="IncludeController.includepath">associate_a_product_with_class_MultiProduct.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [300-330]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">300000</stringProp>
                  <stringProp name="RandomTimer.range">30000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x assignments" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">${noOfAssignmentsInClass}</stringProp>
              </LoopController>
              <hashTree>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
                  <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                  <intProp name="ActionProcessor.action">1</intProp>
                  <intProp name="ActionProcessor.target">0</intProp>
                  <stringProp name="ActionProcessor.duration">0</stringProp>
                </TestAction>
                <hashTree>
                  <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                    <stringProp name="ConstantTimer.delay">10000</stringProp>
                    <stringProp name="RandomTimer.range">5000</stringProp>
                  </UniformRandomTimer>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x students and join using classcode of current teacher" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">${noOfStudentsInClass}</stringProp>
              </LoopController>
              <hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.util.Date;

Date date = new Date();
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;

studentextuserid = &quot;std&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;studentextuserid&quot;, studentextuserid);
</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-20]" enabled="false">
                  <intProp name="ActionProcessor.action">1</intProp>
                  <intProp name="ActionProcessor.target">0</intProp>
                  <stringProp name="ActionProcessor.duration">0</stringProp>
                </TestAction>
                <hashTree>
                  <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                    <stringProp name="ConstantTimer.delay">10000</stringProp>
                    <stringProp name="RandomTimer.range">10000</stringProp>
                  </UniformRandomTimer>
                  <hashTree/>
                </hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with product_code and class_code" enabled="true">
                  <stringProp name="IncludeController.includepath">join_Spaces_with_product_code_and_class_code.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                  <intProp name="ActionProcessor.action">1</intProp>
                  <intProp name="ActionProcessor.target">0</intProp>
                  <stringProp name="ActionProcessor.duration">0</stringProp>
                </TestAction>
                <hashTree>
                  <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                    <stringProp name="ConstantTimer.delay">10000</stringProp>
                    <stringProp name="RandomTimer.range">5000</stringProp>
                  </UniformRandomTimer>
                  <hashTree/>
                </hashTree>
                <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                  <stringProp name="ForeachController.inputVal">multiProduct</stringProp>
                  <stringProp name="ForeachController.returnVal">multiProduct</stringProp>
                  <boolProp name="ForeachController.useSeparator">false</boolProp>
                  <stringProp name="ForeachController.startIndex">1</stringProp>
                  <stringProp name="ForeachController.endIndex">${totalPECount}</stringProp>
                </ForeachController>
                <hashTree>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Entitle User with Product" enabled="true">
                    <stringProp name="IncludeController.includepath">Entitle_User_With_Product.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                  <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                    <intProp name="ActionProcessor.action">1</intProp>
                    <intProp name="ActionProcessor.target">0</intProp>
                    <stringProp name="ActionProcessor.duration">0</stringProp>
                  </TestAction>
                  <hashTree>
                    <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                      <stringProp name="ConstantTimer.delay">10000</stringProp>
                      <stringProp name="RandomTimer.range">5000</stringProp>
                    </UniformRandomTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_student.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">timestamp = vars.get(&quot;date&quot;);

FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameStd&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
                <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameTch&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - 4B15PE" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;4B15PE&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - Multi Umbrella" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="bundleCount" elementType="Argument">
                    <stringProp name="Argument.name">bundleCount</stringProp>
                    <stringProp name="Argument.value">4</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="totalPECount" elementType="Argument">
                    <stringProp name="Argument.name">totalPECount</stringProp>
                    <stringProp name="Argument.value">15</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="bundleName1" elementType="Argument">
                    <stringProp name="Argument.name">bundleName1</stringProp>
                    <stringProp name="Argument.value">perf_bundle_17</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="bundleName2" elementType="Argument">
                    <stringProp name="Argument.name">bundleName2</stringProp>
                    <stringProp name="Argument.value">perf_bundle_18</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="bundleName3" elementType="Argument">
                    <stringProp name="Argument.name">bundleName3</stringProp>
                    <stringProp name="Argument.value">perf_bundle_19</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="bundleName4" elementType="Argument">
                    <stringProp name="Argument.name">bundleName4</stringProp>
                    <stringProp name="Argument.value">perf_bundle_20</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="productcode" elementType="Argument">
                    <stringProp name="Argument.name">productcode</stringProp>
                    <stringProp name="Argument.value">perfprod3</stringProp>
                    <stringProp name="Argument.desc">used in assignment creation</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct1" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct1</stringProp>
                    <stringProp name="Argument.value">perfprod3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct2" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct2</stringProp>
                    <stringProp name="Argument.value">perfprod4</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct3" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct3</stringProp>
                    <stringProp name="Argument.value">perfprod5</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct4" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct4</stringProp>
                    <stringProp name="Argument.value">perfprod6</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct5" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct5</stringProp>
                    <stringProp name="Argument.value">perfprod7</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct6" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct6</stringProp>
                    <stringProp name="Argument.value">perfprod8</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct7" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct7</stringProp>
                    <stringProp name="Argument.value">perfprod9</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct8" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct8</stringProp>
                    <stringProp name="Argument.value">perfprod10</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct9" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct9</stringProp>
                    <stringProp name="Argument.value">perfprod11</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct10" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct10</stringProp>
                    <stringProp name="Argument.value">perfprod12</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct11" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct11</stringProp>
                    <stringProp name="Argument.value">perfprod13</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct12" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct12</stringProp>
                    <stringProp name="Argument.value">perfprod14</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct13" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct13</stringProp>
                    <stringProp name="Argument.value">perfprod78</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct14" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct14</stringProp>
                    <stringProp name="Argument.value">perfprod79</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct15" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct15</stringProp>
                    <stringProp name="Argument.value">perfprod80</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </Arguments>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="Bundle Association Count - ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">multiProduct</stringProp>
                <stringProp name="ForeachController.returnVal">multiProduct</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">${totalPECount}</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class" enabled="true">
                  <stringProp name="IncludeController.includepath">associate_a_product_with_class_MultiProduct.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [300-330]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">300000</stringProp>
                  <stringProp name="RandomTimer.range">30000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x assignments" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">${noOfAssignmentsInClass}</stringProp>
              </LoopController>
              <hashTree>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
                  <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                  <intProp name="ActionProcessor.action">1</intProp>
                  <intProp name="ActionProcessor.target">0</intProp>
                  <stringProp name="ActionProcessor.duration">0</stringProp>
                </TestAction>
                <hashTree>
                  <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                    <stringProp name="ConstantTimer.delay">10000</stringProp>
                    <stringProp name="RandomTimer.range">5000</stringProp>
                  </UniformRandomTimer>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x students and join using classcode of current teacher" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">${noOfStudentsInClass}</stringProp>
              </LoopController>
              <hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.util.Date;

Date date = new Date();
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;

studentextuserid = &quot;std&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;studentextuserid&quot;, studentextuserid);
</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-20]" enabled="false">
                  <intProp name="ActionProcessor.action">1</intProp>
                  <intProp name="ActionProcessor.target">0</intProp>
                  <stringProp name="ActionProcessor.duration">0</stringProp>
                </TestAction>
                <hashTree>
                  <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                    <stringProp name="ConstantTimer.delay">10000</stringProp>
                    <stringProp name="RandomTimer.range">10000</stringProp>
                  </UniformRandomTimer>
                  <hashTree/>
                </hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with product_code and class_code" enabled="true">
                  <stringProp name="IncludeController.includepath">join_Spaces_with_product_code_and_class_code.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                  <intProp name="ActionProcessor.action">1</intProp>
                  <intProp name="ActionProcessor.target">0</intProp>
                  <stringProp name="ActionProcessor.duration">0</stringProp>
                </TestAction>
                <hashTree>
                  <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                    <stringProp name="ConstantTimer.delay">10000</stringProp>
                    <stringProp name="RandomTimer.range">5000</stringProp>
                  </UniformRandomTimer>
                  <hashTree/>
                </hashTree>
                <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                  <stringProp name="ForeachController.inputVal">multiProduct</stringProp>
                  <stringProp name="ForeachController.returnVal">multiProduct</stringProp>
                  <boolProp name="ForeachController.useSeparator">false</boolProp>
                  <stringProp name="ForeachController.startIndex">1</stringProp>
                  <stringProp name="ForeachController.endIndex">${totalPECount}</stringProp>
                </ForeachController>
                <hashTree>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Entitle User with Product" enabled="true">
                    <stringProp name="IncludeController.includepath">Entitle_User_With_Product.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                  <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                    <intProp name="ActionProcessor.action">1</intProp>
                    <intProp name="ActionProcessor.target">0</intProp>
                    <stringProp name="ActionProcessor.duration">0</stringProp>
                  </TestAction>
                  <hashTree>
                    <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                      <stringProp name="ConstantTimer.delay">10000</stringProp>
                      <stringProp name="RandomTimer.range">5000</stringProp>
                    </UniformRandomTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_student.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">timestamp = vars.get(&quot;date&quot;);

FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameStd&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
                <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameTch&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - 4B25PE" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;4B25PE&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - Multi Umbrella" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="bundleCount" elementType="Argument">
                    <stringProp name="Argument.name">bundleCount</stringProp>
                    <stringProp name="Argument.value">4</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="totalPECount" elementType="Argument">
                    <stringProp name="Argument.name">totalPECount</stringProp>
                    <stringProp name="Argument.value">25</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="bundleName1" elementType="Argument">
                    <stringProp name="Argument.name">bundleName1</stringProp>
                    <stringProp name="Argument.value">perf_bundle_20</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="bundleName2" elementType="Argument">
                    <stringProp name="Argument.name">bundleName2</stringProp>
                    <stringProp name="Argument.value">perf_bundle_21</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="bundleName3" elementType="Argument">
                    <stringProp name="Argument.name">bundleName3</stringProp>
                    <stringProp name="Argument.value">perf_bundle_22</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="bundleName4" elementType="Argument">
                    <stringProp name="Argument.name">bundleName4</stringProp>
                    <stringProp name="Argument.value">perf_bundle_23</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="productcode" elementType="Argument">
                    <stringProp name="Argument.name">productcode</stringProp>
                    <stringProp name="Argument.value">perfprod13</stringProp>
                    <stringProp name="Argument.desc">used in assignment creation</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct1" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct1</stringProp>
                    <stringProp name="Argument.value">perfprod13</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct2" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct2</stringProp>
                    <stringProp name="Argument.value">perfprod14</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct3" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct3</stringProp>
                    <stringProp name="Argument.value">perfprod78</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct4" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct4</stringProp>
                    <stringProp name="Argument.value">perfprod79</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct5" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct5</stringProp>
                    <stringProp name="Argument.value">perfprod80</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct6" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct6</stringProp>
                    <stringProp name="Argument.value">perfprod81</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct7" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct7</stringProp>
                    <stringProp name="Argument.value">perfprod82</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct8" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct8</stringProp>
                    <stringProp name="Argument.value">perfprod83</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct9" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct9</stringProp>
                    <stringProp name="Argument.value">perfprod84</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct10" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct10</stringProp>
                    <stringProp name="Argument.value">perfprod85</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct11" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct11</stringProp>
                    <stringProp name="Argument.value">perfprod86</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct12" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct12</stringProp>
                    <stringProp name="Argument.value">perfprod87</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct13" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct13</stringProp>
                    <stringProp name="Argument.value">perfprod88</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct14" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct14</stringProp>
                    <stringProp name="Argument.value">perfprod89</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct15" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct15</stringProp>
                    <stringProp name="Argument.value">perfprod90</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct16" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct16</stringProp>
                    <stringProp name="Argument.value">perfprod91</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct17" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct17</stringProp>
                    <stringProp name="Argument.value">perfprod92</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct18" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct18</stringProp>
                    <stringProp name="Argument.value">perfprod93</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct19" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct19</stringProp>
                    <stringProp name="Argument.value">perfprod94</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct20" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct20</stringProp>
                    <stringProp name="Argument.value">perfprod95</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct21" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct21</stringProp>
                    <stringProp name="Argument.value">perfprod96</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct22" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct22</stringProp>
                    <stringProp name="Argument.value">perfprod97</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct23" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct23</stringProp>
                    <stringProp name="Argument.value">perfprod98</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct24" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct24</stringProp>
                    <stringProp name="Argument.value">perfprod99</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct25" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct25</stringProp>
                    <stringProp name="Argument.value">perfprod100</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </Arguments>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="Bundle Association Count - ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">multiProduct</stringProp>
                <stringProp name="ForeachController.returnVal">multiProduct</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">${totalPECount}</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class" enabled="true">
                  <stringProp name="IncludeController.includepath">associate_a_product_with_class_MultiProduct.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [300-330]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">300000</stringProp>
                  <stringProp name="RandomTimer.range">30000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x assignments" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">${noOfAssignmentsInClass}</stringProp>
              </LoopController>
              <hashTree>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
                  <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                  <intProp name="ActionProcessor.action">1</intProp>
                  <intProp name="ActionProcessor.target">0</intProp>
                  <stringProp name="ActionProcessor.duration">0</stringProp>
                </TestAction>
                <hashTree>
                  <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                    <stringProp name="ConstantTimer.delay">10000</stringProp>
                    <stringProp name="RandomTimer.range">5000</stringProp>
                  </UniformRandomTimer>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x students and join using classcode of current teacher" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">${noOfStudentsInClass}</stringProp>
              </LoopController>
              <hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.util.Date;

Date date = new Date();
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;

studentextuserid = &quot;std&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;studentextuserid&quot;, studentextuserid);
</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-20]" enabled="false">
                  <intProp name="ActionProcessor.action">1</intProp>
                  <intProp name="ActionProcessor.target">0</intProp>
                  <stringProp name="ActionProcessor.duration">0</stringProp>
                </TestAction>
                <hashTree>
                  <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                    <stringProp name="ConstantTimer.delay">10000</stringProp>
                    <stringProp name="RandomTimer.range">10000</stringProp>
                  </UniformRandomTimer>
                  <hashTree/>
                </hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with product_code and class_code" enabled="true">
                  <stringProp name="IncludeController.includepath">join_Spaces_with_product_code_and_class_code.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                  <intProp name="ActionProcessor.action">1</intProp>
                  <intProp name="ActionProcessor.target">0</intProp>
                  <stringProp name="ActionProcessor.duration">0</stringProp>
                </TestAction>
                <hashTree>
                  <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                    <stringProp name="ConstantTimer.delay">10000</stringProp>
                    <stringProp name="RandomTimer.range">5000</stringProp>
                  </UniformRandomTimer>
                  <hashTree/>
                </hashTree>
                <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                  <stringProp name="ForeachController.inputVal">multiProduct</stringProp>
                  <stringProp name="ForeachController.returnVal">multiProduct</stringProp>
                  <boolProp name="ForeachController.useSeparator">false</boolProp>
                  <stringProp name="ForeachController.startIndex">1</stringProp>
                  <stringProp name="ForeachController.endIndex">${totalPECount}</stringProp>
                </ForeachController>
                <hashTree>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Entitle User with Product" enabled="true">
                    <stringProp name="IncludeController.includepath">Entitle_User_With_Product.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                  <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                    <intProp name="ActionProcessor.action">1</intProp>
                    <intProp name="ActionProcessor.target">0</intProp>
                    <stringProp name="ActionProcessor.duration">0</stringProp>
                  </TestAction>
                  <hashTree>
                    <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                      <stringProp name="ConstantTimer.delay">10000</stringProp>
                      <stringProp name="RandomTimer.range">5000</stringProp>
                    </UniformRandomTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_student.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">timestamp = vars.get(&quot;date&quot;);

FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameStd&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
                <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameTch&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - 5B45PE" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot; == &quot;5B45PE&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - Multi Umbrella" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="bundleCount" elementType="Argument">
                    <stringProp name="Argument.name">bundleCount</stringProp>
                    <stringProp name="Argument.value">5</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="totalPECount" elementType="Argument">
                    <stringProp name="Argument.name">totalPECount</stringProp>
                    <stringProp name="Argument.value">45</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="bundleName1" elementType="Argument">
                    <stringProp name="Argument.name">bundleName1</stringProp>
                    <stringProp name="Argument.value">perf_bundle_10</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="bundleName2" elementType="Argument">
                    <stringProp name="Argument.name">bundleName2</stringProp>
                    <stringProp name="Argument.value">perf_bundle_11</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="bundleName3" elementType="Argument">
                    <stringProp name="Argument.name">bundleName3</stringProp>
                    <stringProp name="Argument.value">perf_bundle_12</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="bundleName4" elementType="Argument">
                    <stringProp name="Argument.name">bundleName4</stringProp>
                    <stringProp name="Argument.value">perf_bundle_13</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="bundleName5" elementType="Argument">
                    <stringProp name="Argument.name">bundleName5</stringProp>
                    <stringProp name="Argument.value">perf_bundle_14</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="productcode" elementType="Argument">
                    <stringProp name="Argument.name">productcode</stringProp>
                    <stringProp name="Argument.value">perfprod26</stringProp>
                    <stringProp name="Argument.desc">used in assignment creation</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct1" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct1</stringProp>
                    <stringProp name="Argument.value">perfprod26</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct2" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct2</stringProp>
                    <stringProp name="Argument.value">perfprod27</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct3" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct3</stringProp>
                    <stringProp name="Argument.value">perfprod28</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct4" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct4</stringProp>
                    <stringProp name="Argument.value">perfprod29</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct5" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct5</stringProp>
                    <stringProp name="Argument.value">perfprod30</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct6" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct6</stringProp>
                    <stringProp name="Argument.value">perfprod31</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct7" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct7</stringProp>
                    <stringProp name="Argument.value">perfprod32</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct8" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct8</stringProp>
                    <stringProp name="Argument.value">perfprod33</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct9" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct9</stringProp>
                    <stringProp name="Argument.value">perfprod34</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct10" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct10</stringProp>
                    <stringProp name="Argument.value">perfprod35</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct11" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct11</stringProp>
                    <stringProp name="Argument.value">perfprod36</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct12" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct12</stringProp>
                    <stringProp name="Argument.value">perfprod37</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct13" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct13</stringProp>
                    <stringProp name="Argument.value">perfprod38</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct14" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct14</stringProp>
                    <stringProp name="Argument.value">perfprod39</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct15" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct15</stringProp>
                    <stringProp name="Argument.value">perfprod40</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct16" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct16</stringProp>
                    <stringProp name="Argument.value">perfprod41</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct17" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct17</stringProp>
                    <stringProp name="Argument.value">perfprod42</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct18" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct18</stringProp>
                    <stringProp name="Argument.value">perfprod43</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct19" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct19</stringProp>
                    <stringProp name="Argument.value">perfprod44</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct20" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct20</stringProp>
                    <stringProp name="Argument.value">perfprod45</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct21" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct21</stringProp>
                    <stringProp name="Argument.value">perfprod46</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct22" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct22</stringProp>
                    <stringProp name="Argument.value">perfprod47</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct23" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct23</stringProp>
                    <stringProp name="Argument.value">perfprod48</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct24" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct24</stringProp>
                    <stringProp name="Argument.value">perfprod49</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct25" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct25</stringProp>
                    <stringProp name="Argument.value">perfprod50</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct26" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct26</stringProp>
                    <stringProp name="Argument.value">perfprod51</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct27" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct27</stringProp>
                    <stringProp name="Argument.value">perfprod52</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct28" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct28</stringProp>
                    <stringProp name="Argument.value">perfprod53</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct29" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct29</stringProp>
                    <stringProp name="Argument.value">perfprod54</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct30" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct30</stringProp>
                    <stringProp name="Argument.value">perfprod55</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct31" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct31</stringProp>
                    <stringProp name="Argument.value">perfprod56</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct32" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct32</stringProp>
                    <stringProp name="Argument.value">perfprod57</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct33" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct33</stringProp>
                    <stringProp name="Argument.value">perfprod58</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct34" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct34</stringProp>
                    <stringProp name="Argument.value">perfprod59</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct35" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct35</stringProp>
                    <stringProp name="Argument.value">perfprod60</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct36" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct36</stringProp>
                    <stringProp name="Argument.value">perfprod61</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct37" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct37</stringProp>
                    <stringProp name="Argument.value">perfprod62</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct38" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct38</stringProp>
                    <stringProp name="Argument.value">perfprod63</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct39" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct39</stringProp>
                    <stringProp name="Argument.value">perfprod64</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct40" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct40</stringProp>
                    <stringProp name="Argument.value">perfprod65</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct41" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct41</stringProp>
                    <stringProp name="Argument.value">perfprod66</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct42" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct42</stringProp>
                    <stringProp name="Argument.value">perfprod67</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct43" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct43</stringProp>
                    <stringProp name="Argument.value">perfprod68</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct44" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct44</stringProp>
                    <stringProp name="Argument.value">perfprod69</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="multiProduct45" elementType="Argument">
                    <stringProp name="Argument.name">multiProduct45</stringProp>
                    <stringProp name="Argument.value">perfprod70</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </Arguments>
              <hashTree/>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="Bundle Association Count - ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">multiProduct</stringProp>
                <stringProp name="ForeachController.returnVal">multiProduct</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">${totalPECount}</stringProp>
              </ForeachController>
              <hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class" enabled="true">
                  <stringProp name="IncludeController.includepath">associate_a_product_with_class_MultiProduct.jmx</stringProp>
                </IncludeController>
                <hashTree/>
              </hashTree>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [300-330]" enabled="true">
                <intProp name="ActionProcessor.action">1</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree>
                <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                  <stringProp name="ConstantTimer.delay">300000</stringProp>
                  <stringProp name="RandomTimer.range">30000</stringProp>
                </UniformRandomTimer>
                <hashTree/>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x assignments" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">${noOfAssignmentsInClass}</stringProp>
              </LoopController>
              <hashTree>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
                  <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
                  <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                  <intProp name="ActionProcessor.action">1</intProp>
                  <intProp name="ActionProcessor.target">0</intProp>
                  <stringProp name="ActionProcessor.duration">0</stringProp>
                </TestAction>
                <hashTree>
                  <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                    <stringProp name="ConstantTimer.delay">10000</stringProp>
                    <stringProp name="RandomTimer.range">5000</stringProp>
                  </UniformRandomTimer>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create x students and join using classcode of current teacher" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">${noOfStudentsInClass}</stringProp>
              </LoopController>
              <hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.util.Date;

Date date = new Date();
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;

studentextuserid = &quot;std&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;studentextuserid&quot;, studentextuserid);
</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-20]" enabled="false">
                  <intProp name="ActionProcessor.action">1</intProp>
                  <intProp name="ActionProcessor.target">0</intProp>
                  <stringProp name="ActionProcessor.duration">0</stringProp>
                </TestAction>
                <hashTree>
                  <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                    <stringProp name="ConstantTimer.delay">10000</stringProp>
                    <stringProp name="RandomTimer.range">10000</stringProp>
                  </UniformRandomTimer>
                  <hashTree/>
                </hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with product_code and class_code" enabled="true">
                  <stringProp name="IncludeController.includepath">join_Spaces_with_product_code_and_class_code.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                  <intProp name="ActionProcessor.action">1</intProp>
                  <intProp name="ActionProcessor.target">0</intProp>
                  <stringProp name="ActionProcessor.duration">0</stringProp>
                </TestAction>
                <hashTree>
                  <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                    <stringProp name="ConstantTimer.delay">10000</stringProp>
                    <stringProp name="RandomTimer.range">5000</stringProp>
                  </UniformRandomTimer>
                  <hashTree/>
                </hashTree>
                <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                  <stringProp name="ForeachController.inputVal">multiProduct</stringProp>
                  <stringProp name="ForeachController.returnVal">multiProduct</stringProp>
                  <boolProp name="ForeachController.useSeparator">false</boolProp>
                  <stringProp name="ForeachController.startIndex">1</stringProp>
                  <stringProp name="ForeachController.endIndex">${totalPECount}</stringProp>
                </ForeachController>
                <hashTree>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Entitle User with Product" enabled="true">
                    <stringProp name="IncludeController.includepath">Entitle_User_With_Product.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                  <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
                    <intProp name="ActionProcessor.action">1</intProp>
                    <intProp name="ActionProcessor.target">0</intProp>
                    <stringProp name="ActionProcessor.duration">0</stringProp>
                  </TestAction>
                  <hashTree>
                    <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                      <stringProp name="ConstantTimer.delay">10000</stringProp>
                      <stringProp name="RandomTimer.range">5000</stringProp>
                    </UniformRandomTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
                  <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_student.jmx</stringProp>
                </IncludeController>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                  <stringProp name="BeanShellSampler.query">timestamp = vars.get(&quot;date&quot;);

FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameStd&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
                <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilenameTch&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;category&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1002__teacher-1class-class-product" enabled="false">
          <stringProp name="TestPlan.comments">Set number of thread count as 6</stringProp>
        </GenericController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="csvFileName" elementType="Argument">
                <stringProp name="Argument.name">csvFileName</stringProp>
                <stringProp name="Argument.value">scenario_1002_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix0 = vars.get(&quot;testrun&quot;);
prefix1 = &quot;teacher&quot;;

prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

extuserid = prefix0 + &quot;_&quot; + prefix1 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;extuserid&quot;, extuserid);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix0 = vars.get(&quot;testrun&quot;);
prefix1 = &quot;class&quot;;
prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

classname = prefix0 + &quot;_&quot; + prefix1 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;classname&quot;, classname);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__P(Start_Date,1586347804000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__P(End_Date,1659960604000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="true">
            <stringProp name="IncludeController.includepath">Join_a_space_with_space_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">11000</stringProp>
              <stringProp name="RandomTimer.range">9000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class" enabled="true">
            <stringProp name="IncludeController.includepath">create_new_instructor_led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="generate_outputfile" enabled="true">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;csvFileName&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class" enabled="true">
            <stringProp name="IncludeController.includepath">associate_a_product_with_class2.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">9000</stringProp>
              <stringProp name="RandomTimer.range">7000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">6000</stringProp>
              <stringProp name="RandomTimer.range">6000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1006_private_students" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilename" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilename</stringProp>
                <stringProp name="Argument.value">scenario_1006_std_pvt_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="private_student_name" enabled="true">
            <stringProp name="BeanShellSampler.query">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

extuserid = &quot;std_pvt&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;extuserid&quot;, extuserid);
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join_Spaces_with_product_code and_class_code_private" enabled="true">
            <stringProp name="IncludeController.includepath">join_Spaces_with_product_code_and_class_code_private.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [60-65 sec]" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">60000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv" enabled="true">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String LineSEPARATOR = &quot;\n&quot;;

out.write(vars.get(&quot;extuserid&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1015_teacher_space_only" enabled="false"/>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="teacher_name" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix0 = vars.get(&quot;testrun&quot;);
prefix1 = &quot;teacher1015&quot;;
prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

extuserid = prefix0 + &quot;_&quot; + prefix1 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;extuserid&quot;, extuserid);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="true">
            <stringProp name="IncludeController.includepath">Join_a_space_with_space_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">9000</stringProp>
              <stringProp name="RandomTimer.range">7000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
            <stringProp name="BeanShellSampler.query">prefix2 = vars.get(&quot;date&quot;);
FileOutputStream out = new FileOutputStream(prefix2 + &quot;_&quot; + &quot;teacher_space_only.csv&quot;, true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;

out.write(vars.get(&quot;extuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1041__teacher_send_invitation_EXISTING_student" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="studentFilename" elementType="Argument">
                <stringProp name="Argument.name">studentFilename</stringProp>
                <stringProp name="Argument.value">${__time()}_students.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="finalOutputFilename" elementType="Argument">
                <stringProp name="Argument.name">finalOutputFilename</stringProp>
                <stringProp name="Argument.value">invitation_scenario_1041_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__P(Start_Date,1586347804000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__P(End_Date,1659960604000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor_teacher2" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix0 = vars.get(&quot;testrun&quot;);
prefix1 = &quot;teacher&quot;;

prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

extuserid = prefix0 + &quot;_&quot; + prefix1 + &quot;_teacher2_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;extuserid2&quot;, extuserid);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor_teacher2class" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix0 = vars.get(&quot;testrun&quot;);
prefix1 = &quot;class&quot;;
prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

classname = prefix0 + &quot;_&quot; + prefix1 + &quot;_teacher2class_&quot; +  prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;classname2&quot;, classname);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code_teacher2" enabled="true">
            <stringProp name="IncludeController.includepath">Join_a_space_with_space_code_teacher2.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space_teacher2" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">11000</stringProp>
              <stringProp name="RandomTimer.range">9000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces_teacher2" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces_teacher2.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user_teacher2" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_teacher2.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class_teacher2" enabled="true">
            <stringProp name="IncludeController.includepath">create_new_instructor_led_class_teacher2.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class_teacher2" enabled="true">
            <stringProp name="IncludeController.includepath">associate_a_product_with_class2_teacher2.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class_teacher2" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">9000</stringProp>
              <stringProp name="RandomTimer.range">7000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class_teacher2" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">6000</stringProp>
              <stringProp name="RandomTimer.range">6000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix0 = vars.get(&quot;testrun&quot;);
prefix1 = &quot;teacher&quot;;

prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

extuserid = prefix0 + &quot;_&quot; + prefix1 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;extuserid&quot;, extuserid);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix0 = vars.get(&quot;testrun&quot;);
prefix1 = &quot;class&quot;;
prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

classname = prefix0 + &quot;_&quot; + prefix1 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;classname&quot;, classname);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="true">
            <stringProp name="IncludeController.includepath">Join_a_space_with_space_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">11000</stringProp>
              <stringProp name="RandomTimer.range">9000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class" enabled="true">
            <stringProp name="IncludeController.includepath">create_new_instructor_led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Samplerteacher" enabled="true">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;date&quot;) + &quot;5teachers.csv&quot;, true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class" enabled="true">
            <stringProp name="IncludeController.includepath">associate_a_product_with_class2.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">9000</stringProp>
              <stringProp name="RandomTimer.range">7000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">6000</stringProp>
              <stringProp name="RandomTimer.range">6000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create 20 students and join using classcode of current teacher" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">20</stringProp>
          </LoopController>
          <hashTree>
            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
              <stringProp name="CounterConfig.start">1</stringProp>
              <stringProp name="CounterConfig.end">1</stringProp>
              <stringProp name="CounterConfig.incr">1</stringProp>
              <stringProp name="CounterConfig.name">rowid</stringProp>
              <stringProp name="CounterConfig.format"></stringProp>
              <boolProp name="CounterConfig.per_user">true</boolProp>
              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
            </CounterConfig>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.util.Date;

prefix0 = vars.get(&quot;testrun&quot;);
prefix1 = &quot;std&quot;;

Date date = new Date();
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;

studentextuserid = prefix0 + &quot;_&quot; + prefix1 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;studentextuserid&quot;, studentextuserid);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with product_code and class_code" enabled="true">
              <stringProp name="IncludeController.includepath">Join_Spaces_with_product_code_and_class_code.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
                <stringProp name="RandomTimer.range">2000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Send invitation existing" enabled="true">
              <stringProp name="IncludeController.includepath">send_invitation_to_existing_students_from_teacher2.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">6000</stringProp>
                <stringProp name="RandomTimer.range">4000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Multiple invitations" enabled="true">
              <stringProp name="IncludeController.includepath">Get_multiple_invitations_by_contextid_existing_student.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Samplerteacher" enabled="true">
              <stringProp name="BeanShellSampler.query">timestamp = vars.get(&quot;date&quot;);

FileOutputStream out = new FileOutputStream(&quot;student_origclass_&quot; + vars.get(&quot;finalOutputFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;

out.write(vars.get(&quot;extuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());


out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">timestamp = vars.get(&quot;date&quot;);

FileOutputStream out = new FileOutputStream(vars.get(&quot;finalOutputFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;

out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode2&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classid2&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;invitationid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;extuserid2&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());


out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1042__teacher_send_invitation_NEW_student" enabled="false"/>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix0 = vars.get(&quot;testrun&quot;);
prefix1 = &quot;teacher&quot;;

prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

extuserid = prefix0 + &quot;_&quot; + prefix1 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;extuserid&quot;, extuserid);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix0 = vars.get(&quot;testrun&quot;);
prefix1 = &quot;class&quot;;
prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

classname = prefix0 + &quot;_&quot; + prefix1 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;classname&quot;, classname);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__P(Start_Date,1586347804000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__P(End_Date,1659960604000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="true">
            <stringProp name="IncludeController.includepath">Join_a_space_with_space_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">11000</stringProp>
              <stringProp name="RandomTimer.range">9000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class" enabled="true">
            <stringProp name="IncludeController.includepath">create_new_instructor_led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class" enabled="true">
            <stringProp name="IncludeController.includepath">associate_a_product_with_class2.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">6000</stringProp>
              <stringProp name="RandomTimer.range">6000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">6000</stringProp>
              <stringProp name="RandomTimer.range">6000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create 20 invitation NEW students" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">20</stringProp>
          </LoopController>
          <hashTree>
            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
              <stringProp name="CounterConfig.start">1</stringProp>
              <stringProp name="CounterConfig.end">1</stringProp>
              <stringProp name="CounterConfig.incr">1</stringProp>
              <stringProp name="CounterConfig.name">rowid</stringProp>
              <stringProp name="CounterConfig.format"></stringProp>
              <boolProp name="CounterConfig.per_user">true</boolProp>
              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
            </CounterConfig>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.util.Date;

prefix0 = vars.get(&quot;testrun&quot;);
prefix1 = &quot;std&quot;;

Date date = new Date();
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;

studentextuserid = prefix0 + &quot;_&quot; + prefix1 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;studentextuserid&quot;, studentextuserid);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Send invitation NEW student" enabled="true">
              <stringProp name="IncludeController.includepath">send_invitation_to_new_students.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for invitation creation" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">9000</stringProp>
                <stringProp name="RandomTimer.range">8000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Multiple invitations" enabled="true">
              <stringProp name="IncludeController.includepath">Get_multiple_invitations_by_contextid.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">timestamp = vars.get(&quot;date&quot;);

// extuserid,class_code,classid,invitation_id,teacherextuserid


FileOutputStream out = new FileOutputStream(timestamp + &quot;_invitations_1042.csv&quot;, true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;

out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;invitationid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;extuserid&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());


out.flush();
out.close();</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1044__teacher_send_invitation_EXISTING_teacher" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="teacherFilename" elementType="Argument">
                <stringProp name="Argument.name">teacherFilename</stringProp>
                <stringProp name="Argument.value">${__time()}_teacher.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="finalOutputFilename" elementType="Argument">
                <stringProp name="Argument.name">finalOutputFilename</stringProp>
                <stringProp name="Argument.value">invitation_scenario_1044_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__P(Start_Date,1586347804000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__P(End_Date,1659960604000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix0 = vars.get(&quot;testrun&quot;);
prefix1 = &quot;teacher&quot;;

prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

extuserid = prefix0 + &quot;_&quot; + prefix1 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;extuserid&quot;, extuserid);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix0 = vars.get(&quot;testrun&quot;);
prefix1 = &quot;class&quot;;
prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

classname = prefix0 + &quot;_&quot; + prefix1 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;classname&quot;, classname);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="true">
            <stringProp name="IncludeController.includepath">Join_a_space_with_space_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">11000</stringProp>
              <stringProp name="RandomTimer.range">9000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class" enabled="true">
            <stringProp name="IncludeController.includepath">create_new_instructor_led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Samplerteacher" enabled="true">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;date&quot;) + &quot;5teachers.csv&quot;, true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class" enabled="true">
            <stringProp name="IncludeController.includepath">associate_a_product_with_class2.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">9000</stringProp>
              <stringProp name="RandomTimer.range">7000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">6000</stringProp>
              <stringProp name="RandomTimer.range">6000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create 20 teachers and send invitation to all 20 teachers" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">20</stringProp>
          </LoopController>
          <hashTree>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="extuseridInvitation" elementType="Argument">
                  <stringProp name="Argument.name">extuseridInvitation</stringProp>
                  <stringProp name="Argument.value">NOT_FOUND</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
              <stringProp name="CounterConfig.start">1</stringProp>
              <stringProp name="CounterConfig.end">20</stringProp>
              <stringProp name="CounterConfig.incr">1</stringProp>
              <stringProp name="CounterConfig.name">rowid</stringProp>
              <stringProp name="CounterConfig.format"></stringProp>
              <boolProp name="CounterConfig.per_user">true</boolProp>
              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
            </CounterConfig>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="invited_teacher_extuserid" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.util.Date;
Date date = new Date();

prefix0 = vars.get(&quot;testrun&quot;);
prefix1 = &quot;spaceTeacher&quot;;
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;

extuserid = prefix0 + &quot;_&quot; + prefix1 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;extuseridInvitation&quot;, extuserid);</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="true">
              <stringProp name="IncludeController.includepath">Join_a_space_with_space_code_invitation.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">9000</stringProp>
                <stringProp name="RandomTimer.range">7000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
              <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces_invitation.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
              <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_invitation.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Send invitation existing teacher" enabled="true">
              <stringProp name="IncludeController.includepath">send_invitation_to_existing_teacher.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">6000</stringProp>
                <stringProp name="RandomTimer.range">4000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Multiple invitations" enabled="true">
              <stringProp name="IncludeController.includepath">Get_multiple_invitations_by_contextid_existing_teacher.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Samplerteacher" enabled="true">
              <stringProp name="BeanShellSampler.query">timestamp = vars.get(&quot;date&quot;);

FileOutputStream out = new FileOutputStream(&quot;invitingTeacher_origclass_&quot; + vars.get(&quot;finalOutputFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;

out.write(vars.get(&quot;extuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classid&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());


out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler invitation list" enabled="true">
              <stringProp name="BeanShellSampler.query">timestamp = vars.get(&quot;date&quot;);

FileOutputStream out = new FileOutputStream(vars.get(&quot;finalOutputFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;

out.write(vars.get(&quot;extuseridInvitation&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;invitationid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;extuserid&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());


out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1045__teacher_send_invitation_NEW_teacher" enabled="false"/>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix0 = vars.get(&quot;testrun&quot;);
prefix1 = &quot;teacher&quot;;

prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

extuserid = prefix0 + &quot;_&quot; + prefix1 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;extuserid&quot;, extuserid);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix0 = vars.get(&quot;testrun&quot;);
prefix1 = &quot;class&quot;;
prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

classname = prefix0 + &quot;_&quot; + prefix1 + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;classname&quot;, classname);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__P(Start_Date,1586347804000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__P(End_Date,1659960604000)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="true">
            <stringProp name="IncludeController.includepath">Join_a_space_with_space_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">11000</stringProp>
              <stringProp name="RandomTimer.range">9000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class" enabled="true">
            <stringProp name="IncludeController.includepath">create_new_instructor_led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class" enabled="true">
            <stringProp name="IncludeController.includepath">associate_a_product_with_class2.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">6000</stringProp>
              <stringProp name="RandomTimer.range">6000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">6000</stringProp>
              <stringProp name="RandomTimer.range">6000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create 20 invitation NEW teachers" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">20</stringProp>
          </LoopController>
          <hashTree>
            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
              <stringProp name="CounterConfig.start">1</stringProp>
              <stringProp name="CounterConfig.end">1</stringProp>
              <stringProp name="CounterConfig.incr">1</stringProp>
              <stringProp name="CounterConfig.name">rowid</stringProp>
              <stringProp name="CounterConfig.format"></stringProp>
              <boolProp name="CounterConfig.per_user">true</boolProp>
              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
            </CounterConfig>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.util.Date;

prefix0 = vars.get(&quot;testrun&quot;);
prefix1 = &quot;std&quot;;

Date date = new Date();
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;

studentextuserid = prefix0 + &quot;_&quot; + prefix1 + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;studentextuserid&quot;, studentextuserid);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Send invitation NEW teacher" enabled="true">
              <stringProp name="IncludeController.includepath">send_invitation_to_new_teacher.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for invitation creation" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">9000</stringProp>
                <stringProp name="RandomTimer.range">8000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get Multiple invitations" enabled="true">
              <stringProp name="IncludeController.includepath">Get_multiple_invitations_by_contextid.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">timestamp = vars.get(&quot;date&quot;);

// extuserid,class_code,classid,invitation_id,teacherextuserid


FileOutputStream out = new FileOutputStream(timestamp + &quot;_invitations_1045_NEW_teachers.csv&quot;, true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;

out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;invitationid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;extuserid&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());


out.flush();
out.close();</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="create 20 students in each class" enabled="false"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">scenario_tch_asnmt_1589429956226.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">teacherextuserid,classtitle,classcode,ap1,ap2,ap3,ap4,ap5</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilename" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilename</stringProp>
                <stringProp name="Argument.value">scenario_tch_std_asnmt_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="student_name" enabled="true">
            <stringProp name="BeanShellSampler.query">import java.util.Date;

Date date = new Date();
prefix2 = date.getTime();
prefix3 = ctx.getThread().getThreadNum() + 1;

studentextuserid = &quot;std&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;

vars.put(&quot;studentextuserid&quot;, studentextuserid);
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="false">
            <stringProp name="BeanShellSampler.query">
System.out.println(vars.get(&quot;studentextuserid&quot;));
System.out.println(vars.get(&quot;classcode&quot;));</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with product_code and class_code" enabled="true">
            <stringProp name="IncludeController.includepath">Join_Spaces_with_product_code_and_class_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="student_output_csv_creation" enabled="true">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;studentextuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Student studies non-pskill in class" enabled="false"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">scriptcreation1011_1012_students.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">extuserid</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1003: Student logs in and accesses the dashboard" enabled="true">
            <stringProp name="IncludeController.includepath">1003-Student_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1009:Student accesses the learning path of a product as part of a teacher-led class " enabled="true">
            <stringProp name="IncludeController.includepath">1009-Student_accesses_the_learning_path_of_a_product_as_part_of_a_teacher-led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="A Student simulating reading (Multiple pages) and post the statements" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">${learning_progress}</stringProp>
          </LoopController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">p.csv</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="variableNames">task,verb</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.group</stringProp>
            </CSVDataSet>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add a new statement" enabled="true">
              <stringProp name="IncludeController.includepath">Add_statements.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Student studies pskills in class" enabled="false"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">scriptcreation1011_1012_students.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">extuserid</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1003: Student logs in and accesses the dashboard" enabled="true">
            <stringProp name="IncludeController.includepath">1003-Student_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1009:Student accesses the learning path of a product as part of a teacher-led class " enabled="true">
            <stringProp name="IncludeController.includepath">1009-Student_accesses_the_learning_path_of_a_product_as_part_of_a_teacher-led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="A Student simulating reading (Multiple pages) and post the statements" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">${learning_progress}</stringProp>
          </LoopController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">product_sections_pskills_e1.csv</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="variableNames">task,verb</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.thread</stringProp>
            </CSVDataSet>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add a new statement" enabled="true">
              <stringProp name="IncludeController.includepath">Add_statements_pskill.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">${userProgress_max}</stringProp>
                <stringProp name="RandomTimer.range">${userProgress_max}</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product-pskill-item-progress-analytic" enabled="true">
            <stringProp name="IncludeController.includepath">Pskill_Item_progress_analytic_progress_true.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Extract Teacher Details from class uuid" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilename" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilename</stringProp>
                <stringProp name="Argument.value">class_details_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="extuserid" elementType="Argument">
                <stringProp name="Argument.name">extuserid</stringProp>
                <stringProp name="Argument.value">40b72b13d81b42b3a35a5d034f43233b</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="classid" elementType="Argument">
                <stringProp name="Argument.name">classid</stringProp>
                <stringProp name="Argument.value">27918dc4-a238-11ea-94cc-0242ac110002</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">classids.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="variableNames">classid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_details_for_a_specific_class_All_Details" enabled="true">
            <stringProp name="IncludeController.includepath">Get_details_for_a_specific_class_All_Details.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_information_for_a_specific_user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_information_for_a_specific_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;extuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;uuid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classuuid&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Extract User Details from uuid" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilename" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilename</stringProp>
                <stringProp name="Argument.value">details_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="extuserid" elementType="Argument">
                <stringProp name="Argument.name">extuserid</stringProp>
                <stringProp name="Argument.value">40b72b13d81b42b3a35a5d034f43233b</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">For Alpha Admin</stringProp>
              </elementProp>
              <elementProp name="uuid" elementType="Argument">
                <stringProp name="Argument.name">uuid</stringProp>
                <stringProp name="Argument.value">07aa071b-178c-4b37-8651-47d3312168ce</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">uuids.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="variableNames">uuid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_information_for_a_specific_user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_information_for_a_specific_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - For student" enabled="true">
            <stringProp name="IfController.condition">&quot;${role}&quot; == &quot;student&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="get_classes_of_an_user_All_Details" enabled="true">
              <stringProp name="IncludeController.includepath">get_classes_of_an_user_All_Details.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_information_for_a_specific_user_Teacher" enabled="true">
              <stringProp name="IncludeController.includepath">Get_information_for_a_specific_user_Teacher.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
              <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;extuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;uuid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classuuid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;teacher_extid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;teacheruuid&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - For Teacher/Admin" enabled="true">
            <stringProp name="IfController.condition">&quot;${role}&quot; != &quot;student&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="get_classes_of_an_user_All_Details" enabled="true">
              <stringProp name="IncludeController.includepath">get_classes_of_an_user_All_Details.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
              <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;extuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;uuid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classuuid&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_information_for_a_specific_user" enabled="false">
            <stringProp name="IncludeController.includepath">Get_information_for_a_specific_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="false">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;name&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;extuserid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classuuid&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Extract Member count from class ids" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilename" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilename</stringProp>
                <stringProp name="Argument.value">class_count_details_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="extuserid" elementType="Argument">
                <stringProp name="Argument.name">extuserid</stringProp>
                <stringProp name="Argument.value">40b72b13d81b42b3a35a5d034f43233b</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="classid11" elementType="Argument">
                <stringProp name="Argument.name">classid11</stringProp>
                <stringProp name="Argument.value">407eb740-a426-11ea-94cc-0242ac110002</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">classids.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="variableNames">classid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get members of class" enabled="true">
            <stringProp name="IncludeController.includepath">Get_members_of_a_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="true">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;classid&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;count&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="T2 -&gt; C2 -&gt; P2 (Multi Umbrella)" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="outputCsvFilename" elementType="Argument">
                <stringProp name="Argument.name">outputCsvFilename</stringProp>
                <stringProp name="Argument.value">scenario_tch_asnmt_${__time()}.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="extuserid" elementType="Argument">
                <stringProp name="Argument.name">extuserid</stringProp>
                <stringProp name="Argument.value">tch_20220819-171647_1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="teacher_name" enabled="false">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

extuserid = &quot;tch&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;extuserid&quot;, extuserid);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="class_name" enabled="false">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

classname = &quot;class&quot; + &quot;_&quot; + prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;classname&quot;, classname);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
            <collectionProp name="Arguments.arguments">
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="assignedPathList" elementType="Argument">
                <stringProp name="Argument.name">assignedPathList</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with Space Code" enabled="false">
            <stringProp name="IncludeController.includepath">Join_a_space_with_space_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [60-65 sec]" enabled="false">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">60000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="get_classes_of_an_user" enabled="true">
            <stringProp name="IncludeController.includepath">get_classes_of_an_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get_details_for_a_specific_class_All_Details" enabled="true">
            <stringProp name="IncludeController.includepath">Get_details_for_a_specific_class_All_Details.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create a new Instructor-led class" enabled="false">
            <stringProp name="IncludeController.includepath">create_new_instructor_led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="false">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">10000</stringProp>
              <stringProp name="RandomTimer.range">5000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="false">
            <stringProp name="ForeachController.inputVal">multiProduct</stringProp>
            <stringProp name="ForeachController.returnVal">multiProduct</stringProp>
            <boolProp name="ForeachController.useSeparator">false</boolProp>
            <stringProp name="ForeachController.startIndex">0</stringProp>
            <stringProp name="ForeachController.endIndex">18</stringProp>
          </ForeachController>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class" enabled="true">
              <stringProp name="IncludeController.includepath">associate_a_product_with_class_MultiProduct.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [300-330]" enabled="false">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">300000</stringProp>
              <stringProp name="RandomTimer.range">30000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create 5 assignments" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
              <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
              <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="false">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation_For T1-C1-P1" enabled="false">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Associate 1005 classes to Evpel1" enabled="false"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">classcode2_1005.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid,classtitle,classCode</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="assignedPathList" elementType="Argument">
                <stringProp name="Argument.name">assignedPathList</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Validate Class Code" enabled="true">
            <stringProp name="IncludeController.includepath">validate_classcode.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class" enabled="true">
            <stringProp name="IncludeController.includepath">associate_a_product_with_class2.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [300-330]" enabled="false">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">300000</stringProp>
              <stringProp name="RandomTimer.range">30000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create 5 assignments" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
              <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
              <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="false">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Join Spaces with product_code and class_code" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="studentextuserid" elementType="Argument">
                <stringProp name="Argument.name">studentextuserid</stringProp>
                <stringProp name="Argument.value">ba6f53cb326a4679907937fa71dfc866</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="classcode" elementType="Argument">
                <stringProp name="Argument.name">classcode</stringProp>
                <stringProp name="Argument.value">efbJ-op7W</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Entitle_User_With_Product_Code" enabled="false">
            <stringProp name="IncludeController.includepath">Entitle_User_With_Product_Code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Join Spaces with product_code and class_code" enabled="true">
            <stringProp name="IncludeController.includepath">join_Spaces_with_product_code_and_class_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="false">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Associate Bulk classes to Perf Bundle 4" enabled="false"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">classCode.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">classCode</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - Multi Umbrella" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="multiProduct9" elementType="Argument">
                <stringProp name="Argument.name">multiProduct9</stringProp>
                <stringProp name="Argument.value">perfb4pe1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct10" elementType="Argument">
                <stringProp name="Argument.name">multiProduct10</stringProp>
                <stringProp name="Argument.value">perfb4pe2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct12-DNU" elementType="Argument">
                <stringProp name="Argument.name">multiProduct12-DNU</stringProp>
                <stringProp name="Argument.value">perfb3rb</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct13-DNU" elementType="Argument">
                <stringProp name="Argument.name">multiProduct13-DNU</stringProp>
                <stringProp name="Argument.value">perfb3pplus</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct4-DNU" elementType="Argument">
                <stringProp name="Argument.name">multiProduct4-DNU</stringProp>
                <stringProp name="Argument.value">perfb1rb</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct8-DNU" elementType="Argument">
                <stringProp name="Argument.name">multiProduct8-DNU</stringProp>
                <stringProp name="Argument.value">perfb2rb</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct7--DNU" elementType="Argument">
                <stringProp name="Argument.name">multiProduct7--DNU</stringProp>
                <stringProp name="Argument.value">perfb2ebook</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct16-DNU" elementType="Argument">
                <stringProp name="Argument.name">multiProduct16-DNU</stringProp>
                <stringProp name="Argument.value">perfb4ebook</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct17-DNU" elementType="Argument">
                <stringProp name="Argument.name">multiProduct17-DNU</stringProp>
                <stringProp name="Argument.value">perfb4rb</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct18-DNU" elementType="Argument">
                <stringProp name="Argument.name">multiProduct18-DNU</stringProp>
                <stringProp name="Argument.value">perfb4pplus</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="startdate" elementType="Argument">
                <stringProp name="Argument.name">startdate</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="enddate" elementType="Argument">
                <stringProp name="Argument.name">enddate</stringProp>
                <stringProp name="Argument.value">${__timeShift(,,P365D,,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="assignedPathList" elementType="Argument">
                <stringProp name="Argument.name">assignedPathList</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Validate Class Code" enabled="true">
            <stringProp name="IncludeController.includepath">validate_classcode.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
            <stringProp name="ForeachController.inputVal">multiProduct</stringProp>
            <stringProp name="ForeachController.returnVal">multiProduct</stringProp>
            <boolProp name="ForeachController.useSeparator">false</boolProp>
            <stringProp name="ForeachController.startIndex">8</stringProp>
            <stringProp name="ForeachController.endIndex">10</stringProp>
          </ForeachController>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Associate a product with a class" enabled="true">
              <stringProp name="IncludeController.includepath">associate_a_product_with_class_MultiProduct.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
                <stringProp name="RandomTimer.range">5000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for associating a product to a class [300-330]" enabled="false">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">300000</stringProp>
              <stringProp name="RandomTimer.range">30000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="create 5 assignments" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Create assigned paths" enabled="true">
              <stringProp name="IncludeController.includepath">create_an_assigned_path_in_a_class.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="assignment_list" enabled="true">
              <stringProp name="BeanShellSampler.query">String apList = vars.get(&quot;assignedPathList&quot;);
apList = apList + &quot;,&quot; + vars.get(&quot;assigned_path_id&quot;);
vars.put(&quot;assignedPathList&quot;, apList);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="assignment_name" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">prefix2 = vars.get(&quot;date&quot;);
prefix3 = ctx.getThread().getThreadNum() + 1;

assignmenttitle = &quot;Asgmt&quot; + &quot;_&quot; +  prefix2 + &quot;_&quot; + prefix3;
vars.put(&quot;assignmenttitle&quot;, assignmenttitle);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="false">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1011: Student works/studies  on the learning path  (teacher-led) &amp; views their grades and scores" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>100.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="productcode" elementType="Argument">
                <stringProp name="Argument.name">productcode</stringProp>
                <stringProp name="Argument.value">perfprod2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">1011.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">extuserid</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1003: Student logs in and accesses the dashboard" enabled="true">
            <stringProp name="IncludeController.includepath">1003-Student_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1009:Student accesses the learning path of a product as part of a teacher-led class " enabled="true">
            <stringProp name="IncludeController.includepath">1009-Student_accesses_the_learning_path_of_a_product_as_part_of_a_teacher-led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="A Student simulating reading (Multiple pages) and post the statements" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">200</stringProp>
          </LoopController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">p.csv</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="variableNames">task,verb</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.thread</stringProp>
            </CSVDataSet>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">${userProgress_min_1011}</stringProp>
                <stringProp name="RandomTimer.range">${userProgress_max_1011}</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add a new statement" enabled="true">
              <stringProp name="IncludeController.includepath">Add_statements.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">${userProgress_min_1011}</stringProp>
                <stringProp name="RandomTimer.range">${userProgress_max_1011}</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update user&apos;s application state for a product or class (product)" enabled="true">
              <stringProp name="IncludeController.includepath">Update_user_application_state_for_a_product_or_class_product_.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get users application state for a product or class(product) with item code" enabled="true">
            <stringProp name="IncludeController.includepath">Get_user_application_state_for_a_product_or_class_product_with_item_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update user&apos;s application state for a product or class (product)" enabled="true">
            <stringProp name="IncludeController.includepath">Update_user_application_state_for_a_product_or_class_product_.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1012: Student works/studies on productive skills" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>100.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="productcode" elementType="Argument">
                <stringProp name="Argument.name">productcode</stringProp>
                <stringProp name="Argument.value">perfprod2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">1012.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">extuserid</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1003: Student logs in and accesses the dashboard" enabled="true">
            <stringProp name="IncludeController.includepath">1003-Student_logs_in_and_accesses_the_dashboard.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Pre-requisite - 1009:Student accesses the learning path of a product as part of a teacher-led class " enabled="true">
            <stringProp name="IncludeController.includepath">1009-Student_accesses_the_learning_path_of_a_product_as_part_of_a_teacher-led_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="A Student simulating reading (Multiple pages) and post the statements" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">100</stringProp>
          </LoopController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">product_sections_pskills_e1_4items.csv</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="variableNames">pstask,psverb</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode"></stringProp>
            </CSVDataSet>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">${userProgress_max}</stringProp>
                <stringProp name="RandomTimer.range">${userProgress_max}</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add a new statement" enabled="true">
              <stringProp name="IncludeController.includepath">Add_statements_pskill_contributesToCompletion.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">${userProgress_max}</stringProp>
                <stringProp name="RandomTimer.range">${userProgress_max}</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update user&apos;s application state for a product or class (product)" enabled="true">
              <stringProp name="IncludeController.includepath">Update_user_application_state_for_a_product_or_class_product_.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get users application state for a product or class(product) with item code" enabled="true">
            <stringProp name="IncludeController.includepath">Get_user_application_state_for_a_product_or_class_product_with_item_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Product-pskill-item-progress-analytic" enabled="true">
            <stringProp name="IncludeController.includepath">Pskill_Item_progress_analytic_progress_true.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update user&apos;s application state for a product or class (product)" enabled="true">
            <stringProp name="IncludeController.includepath">Update_user_application_state_for_a_product_or_class_product_with_item_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Entitle user with product codes" enabled="false"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">studentextuserid.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">studentextuserid</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - Multi Umbrella" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="productcode" elementType="Argument">
                <stringProp name="Argument.name">productcode</stringProp>
                <stringProp name="Argument.value">evpel1</stringProp>
                <stringProp name="Argument.desc">used in assignment creation</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="totalPECount" elementType="Argument">
                <stringProp name="Argument.name">totalPECount</stringProp>
                <stringProp name="Argument.value">16</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct1" elementType="Argument">
                <stringProp name="Argument.name">multiProduct1</stringProp>
                <stringProp name="Argument.value">perfprod26</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct2" elementType="Argument">
                <stringProp name="Argument.name">multiProduct2</stringProp>
                <stringProp name="Argument.value">perfprod27</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct3" elementType="Argument">
                <stringProp name="Argument.name">multiProduct3</stringProp>
                <stringProp name="Argument.value">perfprod28</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct4" elementType="Argument">
                <stringProp name="Argument.name">multiProduct4</stringProp>
                <stringProp name="Argument.value">perfprod29</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct5" elementType="Argument">
                <stringProp name="Argument.name">multiProduct5</stringProp>
                <stringProp name="Argument.value">perfprod30</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct6" elementType="Argument">
                <stringProp name="Argument.name">multiProduct6</stringProp>
                <stringProp name="Argument.value">perfprod31</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct7" elementType="Argument">
                <stringProp name="Argument.name">multiProduct7</stringProp>
                <stringProp name="Argument.value">perfprod32</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct8" elementType="Argument">
                <stringProp name="Argument.name">multiProduct8</stringProp>
                <stringProp name="Argument.value">perfprod5</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct9" elementType="Argument">
                <stringProp name="Argument.name">multiProduct9</stringProp>
                <stringProp name="Argument.value">perfprod6</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct10" elementType="Argument">
                <stringProp name="Argument.name">multiProduct10</stringProp>
                <stringProp name="Argument.value">perfprod7</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct11" elementType="Argument">
                <stringProp name="Argument.name">multiProduct11</stringProp>
                <stringProp name="Argument.value">perfprod8</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct12" elementType="Argument">
                <stringProp name="Argument.name">multiProduct12</stringProp>
                <stringProp name="Argument.value">perfb2pe1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct13" elementType="Argument">
                <stringProp name="Argument.name">multiProduct13</stringProp>
                <stringProp name="Argument.value">perfprodct1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct14" elementType="Argument">
                <stringProp name="Argument.name">multiProduct14</stringProp>
                <stringProp name="Argument.value">perfb1pe1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct15" elementType="Argument">
                <stringProp name="Argument.name">multiProduct15</stringProp>
                <stringProp name="Argument.value">perfb1pe2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct16" elementType="Argument">
                <stringProp name="Argument.name">multiProduct16</stringProp>
                <stringProp name="Argument.value">perfb2pe2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="multiProduct17" elementType="Argument">
                <stringProp name="Argument.name">multiProduct17</stringProp>
                <stringProp name="Argument.value">perfprod2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="false">
            <stringProp name="BeanShellSampler.query">var multiProduct1;
var multiProduct2;
var multiProduct3;
var productcode;

vars.put(&quot;multiProduct1&quot;, &quot;evpel1&quot;);
vars.put(&quot;multiProduct2&quot;, &quot;perfb1pe1&quot;);
vars.put(&quot;multiProduct3&quot;, &quot;perfb1pe2&quot;);
vars.put(&quot;productcode&quot;, &quot;evpel1&quot;);</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
            <stringProp name="ForeachController.inputVal">multiProduct</stringProp>
            <stringProp name="ForeachController.returnVal">multiProduct</stringProp>
            <boolProp name="ForeachController.useSeparator">false</boolProp>
            <stringProp name="ForeachController.startIndex">1</stringProp>
            <stringProp name="ForeachController.endIndex">${totalPECount}</stringProp>
          </ForeachController>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Entitle User with Product" enabled="true">
              <stringProp name="IncludeController.includepath">Entitle_User_With_Product.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time for Joining Space [10-15 sec]" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
                <stringProp name="RandomTimer.range">5000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="create a rule" enabled="false"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">multiProductAssociation.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">extuserid,classtitle,classCode</stringProp>
          </CSVDataSet>
          <hashTree/>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
            <stringProp name="maximumValue">9999</stringProp>
            <stringProp name="minimumValue">0000</stringProp>
            <stringProp name="outputFormat">0000</stringProp>
            <boolProp name="perThread">true</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">randomNo</stringProp>
          </RandomVariableConfig>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
            <stringProp name="BeanShellSampler.query">String[] itemCodes = {
    &quot;1544521486954/1544521507623/1544521559147&quot;,&quot;1544521486954/1544521507623/1544521662149&quot;,&quot;1544521486954/1544521507623/1544521675219&quot;,&quot;1544521486954/1544521507623/1676462230045&quot;,&quot;1544521486954/1544521507623/1676462231296&quot;,&quot;1544521486954/1544521700309/1544521716919&quot;,&quot;1544521486954/1544521700309/1544521737765&quot;,&quot;1544521486954/1544521700309/1544521756511&quot;,&quot;1544521486954/1544521700309/1544521782572&quot;,&quot;1544521486954/1544521700309/1544521796490&quot;,&quot;1544521486954/1544521700309/1544521814257&quot;,&quot;1544522366063/1544522377911/1544522402777&quot;,&quot;1544522366063/1544522377911/1544522409366&quot;,&quot;1544522366063/1544522377911/1544522432187&quot;,&quot;1544522366063/1544522377911/1544522440008&quot;,&quot;1544522366063/1544522377911/1544522454993&quot;,&quot;1544522366063/1544522377911/1544522473310&quot;,&quot;1544522366063/1544522377911/1544522492959&quot;,&quot;1544522366063/1544522377911/1544522512903&quot;,&quot;1544522366063/1544522528807/1544522551328&quot;,&quot;1544522366063/1544522528807/1544522568979&quot;,&quot;1544522366063/1544522528807/1544522579684&quot;,&quot;1544522366063/1544522528807/1544522585734&quot;,&quot;1544522366063/1544522528807/1544522609573&quot;,&quot;1544522366063/1544522528807/1544522613530&quot;,&quot;1544524003551/1544524012478/1544524030068&quot;,&quot;1544524003551/1544524012478/1544524044427&quot;,&quot;1544524003551/1544524012478/1544524057691&quot;,&quot;1544524003551/1544524012478/1544524071582&quot;,&quot;1544524003551/1544524012478/1544524084276&quot;,&quot;1544524003551/1544524012478/1544524099346&quot;,&quot;1544524003551/1544524304922/1544524313700&quot;,&quot;1544524003551/1544524304922/1544524324762&quot;,&quot;1544524003551/1544524304922/1544524341184&quot;,&quot;1544524003551/1544524304922/1544524359136&quot;,&quot;1544524003551/1544524304922/1544524376121&quot;,&quot;1544524003551/1544524304922/1544524387792&quot;,&quot;1544525043137/1544525058289/1544525090848&quot;,&quot;1544525043137/1544525058289/1544525097148&quot;,&quot;1544525043137/1544525058289/1544525114886&quot;,&quot;1544525043137/1544525058289/1544525125172&quot;,&quot;1544525043137/1544525058289/1544525137957&quot;,&quot;1544525043137/1544525058289/1544525143762&quot;,&quot;1544525043137/1544525159358/1544525175677&quot;,&quot;1544525043137/1544525159358/1544525192972&quot;,&quot;1544525043137/1544525159358/1544525217177&quot;,&quot;1544525043137/1544525159358/1544525239184&quot;,&quot;1544525043137/1544525159358/1544525246748&quot;,&quot;1544525043137/1544525159358/1544525263160&quot;,&quot;1544525043137/1544525280855/1544525289279&quot;,&quot;1544525590768/1544525595533/1544525611432&quot;,&quot;1544525590768/1544525595533/1544525627465&quot;,&quot;1544525590768/1544525595533/1544525635696&quot;,&quot;1544525590768/1544525595533/1544525649026&quot;,&quot;1544525590768/1544525595533/1544525663048&quot;,&quot;1544525590768/1544525595533/1544525679427&quot;,&quot;1544525590768/1544525683364/1544525709799&quot;,&quot;1544525590768/1544525683364/1544525720457&quot;,&quot;1544525590768/1544525683364/1544525729515&quot;,&quot;1544525590768/1544525683364/1544525734676&quot;,&quot;1544525590768/1544525683364/1544525756801&quot;,&quot;1544525590768/1544525683364/1544525778291&quot;,&quot;1544526345845/1544526589100/1544526606750&quot;,&quot;1544526345845/1544526589100/1544526610825&quot;,&quot;1544526345845/1544526589100/1544526623799&quot;,&quot;1544526345845/1544526589100/1544526638110&quot;,&quot;1544526345845/1544526589100/1544526644717&quot;,&quot;1544526345845/1544526589100/1544526657285&quot;,&quot;1544526345845/1544526671965/1544526688230&quot;,&quot;1544526345845/1544526671965/1544526695320&quot;,&quot;1544526345845/1544526671965/1544526710051&quot;,&quot;1544526345845/1544526671965/1544526721801&quot;,&quot;1544526345845/1544526671965/1544526728620&quot;,&quot;1544526345845/1544526671965/1544526763389&quot;,&quot;1544526345845/1544526961740/1544526980657&quot;,&quot;1544526345845/1544526961740/1544526994099&quot;,&quot;1544526345845/1544526961740/1544527008225&quot;,&quot;1544526345845/1544528319371/1544528334775&quot;,&quot;1544526345845/1544528319371/1544528345283&quot;,&quot;1544526345845/1544528319371/1544528367998&quot;,&quot;1544591089661/1544591099675/1544591165699&quot;,&quot;1544591089661/1544591099675/1544591181584&quot;,&quot;1544591089661/1544591099675/1544591198772&quot;,&quot;1544591089661/1544591099675/1544591219876&quot;,&quot;1544591089661/1544591099675/1544591237488&quot;,&quot;1544591089661/1544591099675/1544591247402&quot;,&quot;1544591089661/1544591260222/1544591284840&quot;,&quot;1544591089661/1544591260222/1544591295680&quot;,&quot;1544591089661/1544591260222/1544591320423&quot;,&quot;1544591089661/1544591260222/1544591334581&quot;,&quot;1544591089661/1544591260222/1544591341221&quot;,&quot;1544591089661/1544591260222/1544591363137&quot;,&quot;1544591089661/1544591364773/1544591392809&quot;,&quot;1544591089661/1544591412698/1544591428190&quot;,&quot;1544591089661/1544591412698/1544591439057&quot;,&quot;1544591089661/1544591412698/1544591455780&quot;,&quot;1544591089661/1544591602655/1544591636888&quot;,&quot;1544591089661/1544591602655/1544591649137&quot;,&quot;1544591089661/1544591602655/1544591669971&quot;,&quot;1544591751639/1544591756584/1544591786410&quot;
};

vars.put(&quot;productcode&quot;, &quot;perfprod9&quot;);

for (int i = 0; i &lt; itemCodes.length; i++) {
    vars.put(&quot;itemcode&quot; + (i + 1), itemCodes[i]);
}

</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="access_token" elementType="Argument">
                <stringProp name="Argument.name">access_token</stringProp>
                <stringProp name="Argument.value">637004c5-eb6e-4a18-8cea-ab3bcf672115</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="classid" elementType="Argument">
                <stringProp name="Argument.name">classid</stringProp>
                <stringProp name="Argument.value">2ff354ba-5f0e-4c4d-9de7-78c3b66b45c9</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="extuserid" elementType="Argument">
                <stringProp name="Argument.name">extuserid</stringProp>
                <stringProp name="Argument.value">tch_20230807-140355_1_5</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="create a rule" enabled="true">
            <stringProp name="IncludeController.includepath">Create_a_rule_100LOs.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="false">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">String[] multiProducts = [
    &quot;evpel1&quot;, &quot;perfb1pe1&quot;, &quot;perfb1pe2&quot;, &quot;perfprod21&quot;, &quot;perfprod22&quot;,
    &quot;perfprod23&quot;, &quot;perfprod24&quot;, &quot;perfprod25&quot;
]

String multiProductsAsString = &quot;\&quot;evpel1\&quot;, \&quot;perfb1pe1\&quot;, \&quot;perfb1pe2\&quot;, \&quot;perfprod21\&quot;, \&quot;perfprod22\&quot;,\&quot;perfprod23\&quot;, \&quot;perfprod24\&quot;, \&quot;perfprod25\&quot;&quot;

for (int i = 0; i &lt; multiProducts.length; i++) {
    vars.put(&quot;multiProduct&quot; + (i + 1), multiProducts[i])
}

vars.put(&quot;multiProductsAsString&quot;, multiProductsAsString)
vars.put(&quot;productcode&quot;, multiProducts[0])
vars.put(&quot;peCount&quot;, String.valueOf(multiProducts.length))
</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="false">
            <stringProp name="BeanShellSampler.query">String[] multiProducts = {
    &quot;evpel1&quot;, &quot;perfb1pe1&quot;, &quot;perfb1pe2&quot;, &quot;perfprod21&quot;, &quot;perfprod22&quot;,
    &quot;perfprod23&quot;, &quot;perfprod24&quot;, &quot;perfprod25&quot;
};

for (int i = 0; i &lt; multiProducts.length; i++) {
    vars.put(&quot;multiProduct&quot; + (i + 1), multiProducts[i]);
}

var list = &quot;evpel1\&quot;, \&quot;perfb1pe1\&quot;, \&quot;perfb1pe2\&quot;, \&quot;perfprod21\&quot;, \&quot;perfprod22\&quot;, \&quot;perfprod23\&quot;, \&quot;perfprod24\&quot;, \&quot;perfprod25&quot;
vars.putObject(&quot;multiProducts&quot;, multiProducts);
vars.put(&quot;productcode&quot;, multiProducts[0]);
vars.put(&quot;peCount&quot;, String.valueOf(multiProducts.length));</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="output_csv_creation" enabled="false">
            <stringProp name="BeanShellSampler.query">FileOutputStream out = new FileOutputStream(vars.get(&quot;outputCsvFilename&quot;), true);
String SEPARATOR = &quot;,&quot;;
String LineSEPARATOR = &quot;\n&quot;;
out.write(vars.get(&quot;teachername&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classtitle&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;classcode&quot;).getBytes());
out.write(SEPARATOR.getBytes());
out.write(vars.get(&quot;assignedPathList&quot;).getBytes());
out.write(LineSEPARATOR.getBytes());

out.flush();
out.close();
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="1011_attemptActivities" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>100.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">1011.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">extuserid,cc,category</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get all the User Spaces" enabled="true">
            <stringProp name="IncludeController.includepath">Get_all_the_User_Spaces.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get an access token for an external user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_an_access_token_for_an_external_user_institution.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get classes of an user" enabled="true">
            <stringProp name="IncludeController.includepath">Get_classes_of_an_user_institution.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get details for a specific class" enabled="true">
            <stringProp name="IncludeController.includepath">Get_details_for_a_specific_class.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on dashboard" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">${maxWait}</stringProp>
              <stringProp name="RandomTimer.range">${minWait}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller" enabled="true"/>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot;==&quot;${cat1}&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">cat1pe</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">3</stringProp>
              </ForeachController>
              <hashTree>
                <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="A Student simulating reading (Multiple pages) and post the statements" enabled="true">
                  <boolProp name="LoopController.continue_forever">true</boolProp>
                  <stringProp name="LoopController.loops">${learningprogressnps_1011_cat1}</stringProp>
                </LoopController>
                <hashTree>
                  <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                    <stringProp name="filename">p_cat1.csv</stringProp>
                    <stringProp name="fileEncoding"></stringProp>
                    <stringProp name="variableNames">task,verb</stringProp>
                    <boolProp name="ignoreFirstLine">false</boolProp>
                    <stringProp name="delimiter">,</stringProp>
                    <boolProp name="quotedData">false</boolProp>
                    <boolProp name="recycle">true</boolProp>
                    <boolProp name="stopThread">false</boolProp>
                    <stringProp name="shareMode">shareMode.thread</stringProp>
                  </CSVDataSet>
                  <hashTree/>
                  <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="false">
                    <intProp name="ActionProcessor.action">1</intProp>
                    <intProp name="ActionProcessor.target">0</intProp>
                    <stringProp name="ActionProcessor.duration">0</stringProp>
                  </TestAction>
                  <hashTree>
                    <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                      <stringProp name="ConstantTimer.delay">${userProgress_min_1011}</stringProp>
                      <stringProp name="RandomTimer.range">${userProgress_max_1011}</stringProp>
                    </UniformRandomTimer>
                    <hashTree/>
                  </hashTree>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add a new statement" enabled="true">
                    <stringProp name="IncludeController.includepath">Add_statements.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                  <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="false">
                    <intProp name="ActionProcessor.action">1</intProp>
                    <intProp name="ActionProcessor.target">0</intProp>
                    <stringProp name="ActionProcessor.duration">0</stringProp>
                  </TestAction>
                  <hashTree>
                    <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                      <stringProp name="ConstantTimer.delay">${userProgress_min_1011}</stringProp>
                      <stringProp name="RandomTimer.range">${userProgress_max_1011}</stringProp>
                    </UniformRandomTimer>
                    <hashTree/>
                  </hashTree>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update user&apos;s application state for a product or class (product)" enabled="false">
                    <stringProp name="IncludeController.includepath">Update_user_application_state_for_a_product_or_class_product_.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot;==&quot;${cat2}&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">cat2pe</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">5</stringProp>
              </ForeachController>
              <hashTree>
                <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="A Student simulating reading (Multiple pages) and post the statements" enabled="true">
                  <boolProp name="LoopController.continue_forever">true</boolProp>
                  <stringProp name="LoopController.loops">${learningprogressnps_1011_cat2}</stringProp>
                </LoopController>
                <hashTree>
                  <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                    <stringProp name="filename">p_cat2.csv</stringProp>
                    <stringProp name="fileEncoding"></stringProp>
                    <stringProp name="variableNames">task,verb</stringProp>
                    <boolProp name="ignoreFirstLine">false</boolProp>
                    <stringProp name="delimiter">,</stringProp>
                    <boolProp name="quotedData">false</boolProp>
                    <boolProp name="recycle">true</boolProp>
                    <boolProp name="stopThread">false</boolProp>
                    <stringProp name="shareMode">shareMode.thread</stringProp>
                  </CSVDataSet>
                  <hashTree/>
                  <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="false">
                    <intProp name="ActionProcessor.action">1</intProp>
                    <intProp name="ActionProcessor.target">0</intProp>
                    <stringProp name="ActionProcessor.duration">0</stringProp>
                  </TestAction>
                  <hashTree>
                    <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                      <stringProp name="ConstantTimer.delay">${userProgress_min_1011}</stringProp>
                      <stringProp name="RandomTimer.range">${userProgress_max_1011}</stringProp>
                    </UniformRandomTimer>
                    <hashTree/>
                  </hashTree>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add a new statement" enabled="true">
                    <stringProp name="IncludeController.includepath">Add_statements.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                  <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="false">
                    <intProp name="ActionProcessor.action">1</intProp>
                    <intProp name="ActionProcessor.target">0</intProp>
                    <stringProp name="ActionProcessor.duration">0</stringProp>
                  </TestAction>
                  <hashTree>
                    <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                      <stringProp name="ConstantTimer.delay">${userProgress_min_1011}</stringProp>
                      <stringProp name="RandomTimer.range">${userProgress_max_1011}</stringProp>
                    </UniformRandomTimer>
                    <hashTree/>
                  </hashTree>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update user&apos;s application state for a product or class (product)" enabled="false">
                    <stringProp name="IncludeController.includepath">Update_user_application_state_for_a_product_or_class_product_.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot;==&quot;${cat3}&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">cat3pe</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">5</stringProp>
              </ForeachController>
              <hashTree>
                <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="A Student simulating reading (Multiple pages) and post the statements" enabled="true">
                  <boolProp name="LoopController.continue_forever">true</boolProp>
                  <stringProp name="LoopController.loops">${learningprogressnps_1011_cat3}</stringProp>
                </LoopController>
                <hashTree>
                  <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                    <stringProp name="filename">p_cat3.csv</stringProp>
                    <stringProp name="fileEncoding"></stringProp>
                    <stringProp name="variableNames">task,verb</stringProp>
                    <boolProp name="ignoreFirstLine">false</boolProp>
                    <stringProp name="delimiter">,</stringProp>
                    <boolProp name="quotedData">false</boolProp>
                    <boolProp name="recycle">true</boolProp>
                    <boolProp name="stopThread">false</boolProp>
                    <stringProp name="shareMode">shareMode.thread</stringProp>
                  </CSVDataSet>
                  <hashTree/>
                  <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="false">
                    <intProp name="ActionProcessor.action">1</intProp>
                    <intProp name="ActionProcessor.target">0</intProp>
                    <stringProp name="ActionProcessor.duration">0</stringProp>
                  </TestAction>
                  <hashTree>
                    <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                      <stringProp name="ConstantTimer.delay">${userProgress_min_1011}</stringProp>
                      <stringProp name="RandomTimer.range">${userProgress_max_1011}</stringProp>
                    </UniformRandomTimer>
                    <hashTree/>
                  </hashTree>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add a new statement" enabled="true">
                    <stringProp name="IncludeController.includepath">Add_statements.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                  <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="false">
                    <intProp name="ActionProcessor.action">1</intProp>
                    <intProp name="ActionProcessor.target">0</intProp>
                    <stringProp name="ActionProcessor.duration">0</stringProp>
                  </TestAction>
                  <hashTree>
                    <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                      <stringProp name="ConstantTimer.delay">${userProgress_min_1011}</stringProp>
                      <stringProp name="RandomTimer.range">${userProgress_max_1011}</stringProp>
                    </UniformRandomTimer>
                    <hashTree/>
                  </hashTree>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update user&apos;s application state for a product or class (product)" enabled="false">
                    <stringProp name="IncludeController.includepath">Update_user_application_state_for_a_product_or_class_product_.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
              <stringProp name="IfController.condition">&quot;${category}&quot;==&quot;${cat4}&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">cat4pe</stringProp>
                <stringProp name="ForeachController.returnVal">productcode</stringProp>
                <boolProp name="ForeachController.useSeparator">false</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">2</stringProp>
              </ForeachController>
              <hashTree>
                <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                  <stringProp name="IfController.condition">&quot;${productcode}&quot;==&quot;${cat4pe1}&quot;</stringProp>
                  <boolProp name="IfController.evaluateAll">false</boolProp>
                </IfController>
                <hashTree>
                  <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="A Student simulating reading (Multiple pages) and post the statements" enabled="true">
                    <boolProp name="LoopController.continue_forever">true</boolProp>
                    <stringProp name="LoopController.loops">${learningprogressnps_1011_cat4_pe1}</stringProp>
                  </LoopController>
                  <hashTree>
                    <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                      <stringProp name="filename">p_cat4.csv</stringProp>
                      <stringProp name="fileEncoding"></stringProp>
                      <stringProp name="variableNames">task,verb</stringProp>
                      <boolProp name="ignoreFirstLine">false</boolProp>
                      <stringProp name="delimiter">,</stringProp>
                      <boolProp name="quotedData">false</boolProp>
                      <boolProp name="recycle">true</boolProp>
                      <boolProp name="stopThread">false</boolProp>
                      <stringProp name="shareMode">shareMode.thread</stringProp>
                    </CSVDataSet>
                    <hashTree/>
                    <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="false">
                      <intProp name="ActionProcessor.action">1</intProp>
                      <intProp name="ActionProcessor.target">0</intProp>
                      <stringProp name="ActionProcessor.duration">0</stringProp>
                    </TestAction>
                    <hashTree>
                      <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                        <stringProp name="ConstantTimer.delay">${userProgress_min_1011}</stringProp>
                        <stringProp name="RandomTimer.range">${userProgress_max_1011}</stringProp>
                      </UniformRandomTimer>
                      <hashTree/>
                    </hashTree>
                    <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add a new statement" enabled="true">
                      <stringProp name="IncludeController.includepath">Add_statements.jmx</stringProp>
                    </IncludeController>
                    <hashTree/>
                    <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="false">
                      <intProp name="ActionProcessor.action">1</intProp>
                      <intProp name="ActionProcessor.target">0</intProp>
                      <stringProp name="ActionProcessor.duration">0</stringProp>
                    </TestAction>
                    <hashTree>
                      <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                        <stringProp name="ConstantTimer.delay">${userProgress_min_1011}</stringProp>
                        <stringProp name="RandomTimer.range">${userProgress_max_1011}</stringProp>
                      </UniformRandomTimer>
                      <hashTree/>
                    </hashTree>
                    <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update user&apos;s application state for a product or class (product)" enabled="false">
                      <stringProp name="IncludeController.includepath">Update_user_application_state_for_a_product_or_class_product_.jmx</stringProp>
                    </IncludeController>
                    <hashTree/>
                  </hashTree>
                  <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update user&apos;s application state for a product or class (product)" enabled="true">
                    <stringProp name="IncludeController.includepath">Update_user_application_state_for_a_product_or_class_product_multi_1011.jmx</stringProp>
                  </IncludeController>
                  <hashTree/>
                </hashTree>
                <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                  <stringProp name="IfController.condition">&quot;${productcode}&quot;==&quot;${cat4pe2}&quot;</stringProp>
                  <boolProp name="IfController.evaluateAll">false</boolProp>
                </IfController>
                <hashTree>
                  <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="A Student simulating reading (Multiple pages) and post the statements" enabled="true">
                    <boolProp name="LoopController.continue_forever">true</boolProp>
                    <stringProp name="LoopController.loops">${learningprogressnps_1011_cat4_pe2}</stringProp>
                  </LoopController>
                  <hashTree>
                    <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                      <stringProp name="filename">p_cat4.csv</stringProp>
                      <stringProp name="fileEncoding"></stringProp>
                      <stringProp name="variableNames">task,verb</stringProp>
                      <boolProp name="ignoreFirstLine">false</boolProp>
                      <stringProp name="delimiter">,</stringProp>
                      <boolProp name="quotedData">false</boolProp>
                      <boolProp name="recycle">true</boolProp>
                      <boolProp name="stopThread">false</boolProp>
                      <stringProp name="shareMode">shareMode.thread</stringProp>
                    </CSVDataSet>
                    <hashTree/>
                    <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="false">
                      <intProp name="ActionProcessor.action">1</intProp>
                      <intProp name="ActionProcessor.target">0</intProp>
                      <stringProp name="ActionProcessor.duration">0</stringProp>
                    </TestAction>
                    <hashTree>
                      <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                        <stringProp name="ConstantTimer.delay">${userProgress_min_1011}</stringProp>
                        <stringProp name="RandomTimer.range">${userProgress_max_1011}</stringProp>
                      </UniformRandomTimer>
                      <hashTree/>
                    </hashTree>
                    <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Add a new statement" enabled="true">
                      <stringProp name="IncludeController.includepath">Add_statements.jmx</stringProp>
                    </IncludeController>
                    <hashTree/>
                    <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Wait time on Learning Pathway" enabled="false">
                      <intProp name="ActionProcessor.action">1</intProp>
                      <intProp name="ActionProcessor.target">0</intProp>
                      <stringProp name="ActionProcessor.duration">0</stringProp>
                    </TestAction>
                    <hashTree>
                      <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                        <stringProp name="ConstantTimer.delay">${userProgress_min_1011}</stringProp>
                        <stringProp name="RandomTimer.range">${userProgress_max_1011}</stringProp>
                      </UniformRandomTimer>
                      <hashTree/>
                    </hashTree>
                    <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update user&apos;s application state for a product or class (product)" enabled="false">
                      <stringProp name="IncludeController.includepath">Update_user_application_state_for_a_product_or_class_product_.jmx</stringProp>
                    </IncludeController>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Get users application state for a product or class(product) with item code" enabled="true">
            <stringProp name="IncludeController.includepath">Get_user_application_state_for_a_product_or_class_product_with_item_code.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Update user&apos;s application state for a product or class (product)" enabled="false">
            <stringProp name="IncludeController.includepath">Update_user_application_state_for_a_product_or_class_product_.jmx</stringProp>
          </IncludeController>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>true</encoding>
            <assertions>false</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <fileName>true</fileName>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
